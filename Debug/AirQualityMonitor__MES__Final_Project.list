
AirQualityMonitor__MES__Final_Project.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001e9f4  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000039a8  0801eba4  0801eba4  0002eba4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000003da  0802254c  0802254c  0003254c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  08022928  08022928  00032928  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 ExtFlashSection 00013ec0  08022940  08022940  00032940  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 TextFlashSection 00000020  08036800  08036800  00046800  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  08036820  08036820  0007595c  2**0
                  CONTENTS
  8 .ARM          00000008  08036820  08036820  00046820  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08036828  08036828  0007595c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  08036828  08036828  00046828  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  0803683c  0803683c  0004683c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000015c  20000000  08036844  00050000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_Framebuffer 00025800  2000015c  080369a0  0005015c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 14 .ccmram       00000000  10000000  10000000  0007595c  2**0
                  CONTENTS
 15 .bss          00001848  2002595c  2002595c  0007595c  2**2
                  ALLOC
 16 ._user_heap_stack 00000604  200271a4  200271a4  0007595c  2**0
                  ALLOC
 17 .ARM.attributes 00000030  00000000  00000000  0007595c  2**0
                  CONTENTS, READONLY
 18 .debug_info   0007c12e  00000000  00000000  0007598c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 0000e72e  00000000  00000000  000f1aba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 00002ea0  00000000  00000000  001001e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 00002b30  00000000  00000000  00103088  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_macro  0002e6cb  00000000  00000000  00105bb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line   0003315d  00000000  00000000  00134283  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_str    0010094f  00000000  00000000  001673e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000cf  00000000  00000000  00267d2f  2**0
                  CONTENTS, READONLY
 26 .debug_frame  0000ce58  00000000  00000000  00267e00  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2002595c 	.word	0x2002595c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801eb8c 	.word	0x0801eb8c

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20025960 	.word	0x20025960
 80001ec:	0801eb8c 	.word	0x0801eb8c

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b974 	b.w	8000590 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	468e      	mov	lr, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14d      	bne.n	800036a <__udivmoddi4+0xaa>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4694      	mov	ip, r2
 80002d2:	d969      	bls.n	80003a8 <__udivmoddi4+0xe8>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b152      	cbz	r2, 80002f0 <__udivmoddi4+0x30>
 80002da:	fa01 f302 	lsl.w	r3, r1, r2
 80002de:	f1c2 0120 	rsb	r1, r2, #32
 80002e2:	fa20 f101 	lsr.w	r1, r0, r1
 80002e6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002ea:	ea41 0e03 	orr.w	lr, r1, r3
 80002ee:	4094      	lsls	r4, r2
 80002f0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002f4:	0c21      	lsrs	r1, r4, #16
 80002f6:	fbbe f6f8 	udiv	r6, lr, r8
 80002fa:	fa1f f78c 	uxth.w	r7, ip
 80002fe:	fb08 e316 	mls	r3, r8, r6, lr
 8000302:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000306:	fb06 f107 	mul.w	r1, r6, r7
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f106 30ff 	add.w	r0, r6, #4294967295
 8000316:	f080 811f 	bcs.w	8000558 <__udivmoddi4+0x298>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 811c 	bls.w	8000558 <__udivmoddi4+0x298>
 8000320:	3e02      	subs	r6, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a5b      	subs	r3, r3, r1
 8000326:	b2a4      	uxth	r4, r4
 8000328:	fbb3 f0f8 	udiv	r0, r3, r8
 800032c:	fb08 3310 	mls	r3, r8, r0, r3
 8000330:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000334:	fb00 f707 	mul.w	r7, r0, r7
 8000338:	42a7      	cmp	r7, r4
 800033a:	d90a      	bls.n	8000352 <__udivmoddi4+0x92>
 800033c:	eb1c 0404 	adds.w	r4, ip, r4
 8000340:	f100 33ff 	add.w	r3, r0, #4294967295
 8000344:	f080 810a 	bcs.w	800055c <__udivmoddi4+0x29c>
 8000348:	42a7      	cmp	r7, r4
 800034a:	f240 8107 	bls.w	800055c <__udivmoddi4+0x29c>
 800034e:	4464      	add	r4, ip
 8000350:	3802      	subs	r0, #2
 8000352:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000356:	1be4      	subs	r4, r4, r7
 8000358:	2600      	movs	r6, #0
 800035a:	b11d      	cbz	r5, 8000364 <__udivmoddi4+0xa4>
 800035c:	40d4      	lsrs	r4, r2
 800035e:	2300      	movs	r3, #0
 8000360:	e9c5 4300 	strd	r4, r3, [r5]
 8000364:	4631      	mov	r1, r6
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d909      	bls.n	8000382 <__udivmoddi4+0xc2>
 800036e:	2d00      	cmp	r5, #0
 8000370:	f000 80ef 	beq.w	8000552 <__udivmoddi4+0x292>
 8000374:	2600      	movs	r6, #0
 8000376:	e9c5 0100 	strd	r0, r1, [r5]
 800037a:	4630      	mov	r0, r6
 800037c:	4631      	mov	r1, r6
 800037e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000382:	fab3 f683 	clz	r6, r3
 8000386:	2e00      	cmp	r6, #0
 8000388:	d14a      	bne.n	8000420 <__udivmoddi4+0x160>
 800038a:	428b      	cmp	r3, r1
 800038c:	d302      	bcc.n	8000394 <__udivmoddi4+0xd4>
 800038e:	4282      	cmp	r2, r0
 8000390:	f200 80f9 	bhi.w	8000586 <__udivmoddi4+0x2c6>
 8000394:	1a84      	subs	r4, r0, r2
 8000396:	eb61 0303 	sbc.w	r3, r1, r3
 800039a:	2001      	movs	r0, #1
 800039c:	469e      	mov	lr, r3
 800039e:	2d00      	cmp	r5, #0
 80003a0:	d0e0      	beq.n	8000364 <__udivmoddi4+0xa4>
 80003a2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003a6:	e7dd      	b.n	8000364 <__udivmoddi4+0xa4>
 80003a8:	b902      	cbnz	r2, 80003ac <__udivmoddi4+0xec>
 80003aa:	deff      	udf	#255	; 0xff
 80003ac:	fab2 f282 	clz	r2, r2
 80003b0:	2a00      	cmp	r2, #0
 80003b2:	f040 8092 	bne.w	80004da <__udivmoddi4+0x21a>
 80003b6:	eba1 010c 	sub.w	r1, r1, ip
 80003ba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003be:	fa1f fe8c 	uxth.w	lr, ip
 80003c2:	2601      	movs	r6, #1
 80003c4:	0c20      	lsrs	r0, r4, #16
 80003c6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003ca:	fb07 1113 	mls	r1, r7, r3, r1
 80003ce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003d2:	fb0e f003 	mul.w	r0, lr, r3
 80003d6:	4288      	cmp	r0, r1
 80003d8:	d908      	bls.n	80003ec <__udivmoddi4+0x12c>
 80003da:	eb1c 0101 	adds.w	r1, ip, r1
 80003de:	f103 38ff 	add.w	r8, r3, #4294967295
 80003e2:	d202      	bcs.n	80003ea <__udivmoddi4+0x12a>
 80003e4:	4288      	cmp	r0, r1
 80003e6:	f200 80cb 	bhi.w	8000580 <__udivmoddi4+0x2c0>
 80003ea:	4643      	mov	r3, r8
 80003ec:	1a09      	subs	r1, r1, r0
 80003ee:	b2a4      	uxth	r4, r4
 80003f0:	fbb1 f0f7 	udiv	r0, r1, r7
 80003f4:	fb07 1110 	mls	r1, r7, r0, r1
 80003f8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80003fc:	fb0e fe00 	mul.w	lr, lr, r0
 8000400:	45a6      	cmp	lr, r4
 8000402:	d908      	bls.n	8000416 <__udivmoddi4+0x156>
 8000404:	eb1c 0404 	adds.w	r4, ip, r4
 8000408:	f100 31ff 	add.w	r1, r0, #4294967295
 800040c:	d202      	bcs.n	8000414 <__udivmoddi4+0x154>
 800040e:	45a6      	cmp	lr, r4
 8000410:	f200 80bb 	bhi.w	800058a <__udivmoddi4+0x2ca>
 8000414:	4608      	mov	r0, r1
 8000416:	eba4 040e 	sub.w	r4, r4, lr
 800041a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800041e:	e79c      	b.n	800035a <__udivmoddi4+0x9a>
 8000420:	f1c6 0720 	rsb	r7, r6, #32
 8000424:	40b3      	lsls	r3, r6
 8000426:	fa22 fc07 	lsr.w	ip, r2, r7
 800042a:	ea4c 0c03 	orr.w	ip, ip, r3
 800042e:	fa20 f407 	lsr.w	r4, r0, r7
 8000432:	fa01 f306 	lsl.w	r3, r1, r6
 8000436:	431c      	orrs	r4, r3
 8000438:	40f9      	lsrs	r1, r7
 800043a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800043e:	fa00 f306 	lsl.w	r3, r0, r6
 8000442:	fbb1 f8f9 	udiv	r8, r1, r9
 8000446:	0c20      	lsrs	r0, r4, #16
 8000448:	fa1f fe8c 	uxth.w	lr, ip
 800044c:	fb09 1118 	mls	r1, r9, r8, r1
 8000450:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000454:	fb08 f00e 	mul.w	r0, r8, lr
 8000458:	4288      	cmp	r0, r1
 800045a:	fa02 f206 	lsl.w	r2, r2, r6
 800045e:	d90b      	bls.n	8000478 <__udivmoddi4+0x1b8>
 8000460:	eb1c 0101 	adds.w	r1, ip, r1
 8000464:	f108 3aff 	add.w	sl, r8, #4294967295
 8000468:	f080 8088 	bcs.w	800057c <__udivmoddi4+0x2bc>
 800046c:	4288      	cmp	r0, r1
 800046e:	f240 8085 	bls.w	800057c <__udivmoddi4+0x2bc>
 8000472:	f1a8 0802 	sub.w	r8, r8, #2
 8000476:	4461      	add	r1, ip
 8000478:	1a09      	subs	r1, r1, r0
 800047a:	b2a4      	uxth	r4, r4
 800047c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000480:	fb09 1110 	mls	r1, r9, r0, r1
 8000484:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000488:	fb00 fe0e 	mul.w	lr, r0, lr
 800048c:	458e      	cmp	lr, r1
 800048e:	d908      	bls.n	80004a2 <__udivmoddi4+0x1e2>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f100 34ff 	add.w	r4, r0, #4294967295
 8000498:	d26c      	bcs.n	8000574 <__udivmoddi4+0x2b4>
 800049a:	458e      	cmp	lr, r1
 800049c:	d96a      	bls.n	8000574 <__udivmoddi4+0x2b4>
 800049e:	3802      	subs	r0, #2
 80004a0:	4461      	add	r1, ip
 80004a2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004a6:	fba0 9402 	umull	r9, r4, r0, r2
 80004aa:	eba1 010e 	sub.w	r1, r1, lr
 80004ae:	42a1      	cmp	r1, r4
 80004b0:	46c8      	mov	r8, r9
 80004b2:	46a6      	mov	lr, r4
 80004b4:	d356      	bcc.n	8000564 <__udivmoddi4+0x2a4>
 80004b6:	d053      	beq.n	8000560 <__udivmoddi4+0x2a0>
 80004b8:	b15d      	cbz	r5, 80004d2 <__udivmoddi4+0x212>
 80004ba:	ebb3 0208 	subs.w	r2, r3, r8
 80004be:	eb61 010e 	sbc.w	r1, r1, lr
 80004c2:	fa01 f707 	lsl.w	r7, r1, r7
 80004c6:	fa22 f306 	lsr.w	r3, r2, r6
 80004ca:	40f1      	lsrs	r1, r6
 80004cc:	431f      	orrs	r7, r3
 80004ce:	e9c5 7100 	strd	r7, r1, [r5]
 80004d2:	2600      	movs	r6, #0
 80004d4:	4631      	mov	r1, r6
 80004d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	40d8      	lsrs	r0, r3
 80004e0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004e4:	fa21 f303 	lsr.w	r3, r1, r3
 80004e8:	4091      	lsls	r1, r2
 80004ea:	4301      	orrs	r1, r0
 80004ec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004f0:	fa1f fe8c 	uxth.w	lr, ip
 80004f4:	fbb3 f0f7 	udiv	r0, r3, r7
 80004f8:	fb07 3610 	mls	r6, r7, r0, r3
 80004fc:	0c0b      	lsrs	r3, r1, #16
 80004fe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000502:	fb00 f60e 	mul.w	r6, r0, lr
 8000506:	429e      	cmp	r6, r3
 8000508:	fa04 f402 	lsl.w	r4, r4, r2
 800050c:	d908      	bls.n	8000520 <__udivmoddi4+0x260>
 800050e:	eb1c 0303 	adds.w	r3, ip, r3
 8000512:	f100 38ff 	add.w	r8, r0, #4294967295
 8000516:	d22f      	bcs.n	8000578 <__udivmoddi4+0x2b8>
 8000518:	429e      	cmp	r6, r3
 800051a:	d92d      	bls.n	8000578 <__udivmoddi4+0x2b8>
 800051c:	3802      	subs	r0, #2
 800051e:	4463      	add	r3, ip
 8000520:	1b9b      	subs	r3, r3, r6
 8000522:	b289      	uxth	r1, r1
 8000524:	fbb3 f6f7 	udiv	r6, r3, r7
 8000528:	fb07 3316 	mls	r3, r7, r6, r3
 800052c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000530:	fb06 f30e 	mul.w	r3, r6, lr
 8000534:	428b      	cmp	r3, r1
 8000536:	d908      	bls.n	800054a <__udivmoddi4+0x28a>
 8000538:	eb1c 0101 	adds.w	r1, ip, r1
 800053c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000540:	d216      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000542:	428b      	cmp	r3, r1
 8000544:	d914      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000546:	3e02      	subs	r6, #2
 8000548:	4461      	add	r1, ip
 800054a:	1ac9      	subs	r1, r1, r3
 800054c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000550:	e738      	b.n	80003c4 <__udivmoddi4+0x104>
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e705      	b.n	8000364 <__udivmoddi4+0xa4>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e3      	b.n	8000324 <__udivmoddi4+0x64>
 800055c:	4618      	mov	r0, r3
 800055e:	e6f8      	b.n	8000352 <__udivmoddi4+0x92>
 8000560:	454b      	cmp	r3, r9
 8000562:	d2a9      	bcs.n	80004b8 <__udivmoddi4+0x1f8>
 8000564:	ebb9 0802 	subs.w	r8, r9, r2
 8000568:	eb64 0e0c 	sbc.w	lr, r4, ip
 800056c:	3801      	subs	r0, #1
 800056e:	e7a3      	b.n	80004b8 <__udivmoddi4+0x1f8>
 8000570:	4646      	mov	r6, r8
 8000572:	e7ea      	b.n	800054a <__udivmoddi4+0x28a>
 8000574:	4620      	mov	r0, r4
 8000576:	e794      	b.n	80004a2 <__udivmoddi4+0x1e2>
 8000578:	4640      	mov	r0, r8
 800057a:	e7d1      	b.n	8000520 <__udivmoddi4+0x260>
 800057c:	46d0      	mov	r8, sl
 800057e:	e77b      	b.n	8000478 <__udivmoddi4+0x1b8>
 8000580:	3b02      	subs	r3, #2
 8000582:	4461      	add	r1, ip
 8000584:	e732      	b.n	80003ec <__udivmoddi4+0x12c>
 8000586:	4630      	mov	r0, r6
 8000588:	e709      	b.n	800039e <__udivmoddi4+0xde>
 800058a:	4464      	add	r4, ip
 800058c:	3802      	subs	r0, #2
 800058e:	e742      	b.n	8000416 <__udivmoddi4+0x156>

08000590 <__aeabi_idiv0>:
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop

08000594 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000594:	b580      	push	{r7, lr}
 8000596:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000598:	f002 f8b4 	bl	8002704 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800059c:	f000 f818 	bl	80005d0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80005a0:	f000 fa8c 	bl	8000abc <MX_GPIO_Init>
  MX_CRC_Init();
 80005a4:	f000 f87e 	bl	80006a4 <MX_CRC_Init>
  MX_DMA2D_Init();
 80005a8:	f000 f890 	bl	80006cc <MX_DMA2D_Init>
  MX_FMC_Init();
 80005ac:	f000 fa36 	bl	8000a1c <MX_FMC_Init>
  MX_I2C3_Init();
 80005b0:	f000 f8be 	bl	8000730 <MX_I2C3_Init>
  MX_LTDC_Init();
 80005b4:	f000 f8fc 	bl	80007b0 <MX_LTDC_Init>
  MX_SPI5_Init();
 80005b8:	f000 f980 	bl	80008bc <MX_SPI5_Init>
  MX_TIM1_Init();
 80005bc:	f000 f9b4 	bl	8000928 <MX_TIM1_Init>
  MX_USART1_UART_Init();
 80005c0:	f000 fa02 	bl	80009c8 <MX_USART1_UART_Init>
  MX_TouchGFX_Init();
 80005c4:	f006 ff74 	bl	80074b0 <MX_TouchGFX_Init>
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 80005c8:	f006 ff78 	bl	80074bc <MX_TouchGFX_Process>
 80005cc:	e7fc      	b.n	80005c8 <main+0x34>
	...

080005d0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80005d0:	b580      	push	{r7, lr}
 80005d2:	b094      	sub	sp, #80	; 0x50
 80005d4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80005d6:	f107 0320 	add.w	r3, r7, #32
 80005da:	2230      	movs	r2, #48	; 0x30
 80005dc:	2100      	movs	r1, #0
 80005de:	4618      	mov	r0, r3
 80005e0:	f01d fab0 	bl	801db44 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80005e4:	f107 030c 	add.w	r3, r7, #12
 80005e8:	2200      	movs	r2, #0
 80005ea:	601a      	str	r2, [r3, #0]
 80005ec:	605a      	str	r2, [r3, #4]
 80005ee:	609a      	str	r2, [r3, #8]
 80005f0:	60da      	str	r2, [r3, #12]
 80005f2:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80005f4:	2300      	movs	r3, #0
 80005f6:	60bb      	str	r3, [r7, #8]
 80005f8:	4b28      	ldr	r3, [pc, #160]	; (800069c <SystemClock_Config+0xcc>)
 80005fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80005fc:	4a27      	ldr	r2, [pc, #156]	; (800069c <SystemClock_Config+0xcc>)
 80005fe:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000602:	6413      	str	r3, [r2, #64]	; 0x40
 8000604:	4b25      	ldr	r3, [pc, #148]	; (800069c <SystemClock_Config+0xcc>)
 8000606:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000608:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800060c:	60bb      	str	r3, [r7, #8]
 800060e:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 8000610:	2300      	movs	r3, #0
 8000612:	607b      	str	r3, [r7, #4]
 8000614:	4b22      	ldr	r3, [pc, #136]	; (80006a0 <SystemClock_Config+0xd0>)
 8000616:	681b      	ldr	r3, [r3, #0]
 8000618:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 800061c:	4a20      	ldr	r2, [pc, #128]	; (80006a0 <SystemClock_Config+0xd0>)
 800061e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000622:	6013      	str	r3, [r2, #0]
 8000624:	4b1e      	ldr	r3, [pc, #120]	; (80006a0 <SystemClock_Config+0xd0>)
 8000626:	681b      	ldr	r3, [r3, #0]
 8000628:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800062c:	607b      	str	r3, [r7, #4]
 800062e:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000630:	2301      	movs	r3, #1
 8000632:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000634:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000638:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800063a:	2302      	movs	r3, #2
 800063c:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800063e:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8000642:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 4;
 8000644:	2304      	movs	r3, #4
 8000646:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 72;
 8000648:	2348      	movs	r3, #72	; 0x48
 800064a:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800064c:	2302      	movs	r3, #2
 800064e:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 3;
 8000650:	2303      	movs	r3, #3
 8000652:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000654:	f107 0320 	add.w	r3, r7, #32
 8000658:	4618      	mov	r0, r3
 800065a:	f004 fa83 	bl	8004b64 <HAL_RCC_OscConfig>
 800065e:	4603      	mov	r3, r0
 8000660:	2b00      	cmp	r3, #0
 8000662:	d001      	beq.n	8000668 <SystemClock_Config+0x98>
  {
    Error_Handler();
 8000664:	f000 fb6a 	bl	8000d3c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000668:	230f      	movs	r3, #15
 800066a:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800066c:	2302      	movs	r3, #2
 800066e:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000670:	2300      	movs	r3, #0
 8000672:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000674:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000678:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800067a:	2300      	movs	r3, #0
 800067c:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800067e:	f107 030c 	add.w	r3, r7, #12
 8000682:	2102      	movs	r1, #2
 8000684:	4618      	mov	r0, r3
 8000686:	f004 fce5 	bl	8005054 <HAL_RCC_ClockConfig>
 800068a:	4603      	mov	r3, r0
 800068c:	2b00      	cmp	r3, #0
 800068e:	d001      	beq.n	8000694 <SystemClock_Config+0xc4>
  {
    Error_Handler();
 8000690:	f000 fb54 	bl	8000d3c <Error_Handler>
  }
}
 8000694:	bf00      	nop
 8000696:	3750      	adds	r7, #80	; 0x50
 8000698:	46bd      	mov	sp, r7
 800069a:	bd80      	pop	{r7, pc}
 800069c:	40023800 	.word	0x40023800
 80006a0:	40007000 	.word	0x40007000

080006a4 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 80006a4:	b580      	push	{r7, lr}
 80006a6:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 80006a8:	4b06      	ldr	r3, [pc, #24]	; (80006c4 <MX_CRC_Init+0x20>)
 80006aa:	4a07      	ldr	r2, [pc, #28]	; (80006c8 <MX_CRC_Init+0x24>)
 80006ac:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80006ae:	4805      	ldr	r0, [pc, #20]	; (80006c4 <MX_CRC_Init+0x20>)
 80006b0:	f002 f970 	bl	8002994 <HAL_CRC_Init>
 80006b4:	4603      	mov	r3, r0
 80006b6:	2b00      	cmp	r3, #0
 80006b8:	d001      	beq.n	80006be <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 80006ba:	f000 fb3f 	bl	8000d3c <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 80006be:	bf00      	nop
 80006c0:	bd80      	pop	{r7, pc}
 80006c2:	bf00      	nop
 80006c4:	20025978 	.word	0x20025978
 80006c8:	40023000 	.word	0x40023000

080006cc <MX_DMA2D_Init>:
  * @brief DMA2D Initialization Function
  * @param None
  * @retval None
  */
static void MX_DMA2D_Init(void)
{
 80006cc:	b580      	push	{r7, lr}
 80006ce:	af00      	add	r7, sp, #0
  /* USER CODE END DMA2D_Init 0 */

  /* USER CODE BEGIN DMA2D_Init 1 */

  /* USER CODE END DMA2D_Init 1 */
  hdma2d.Instance = DMA2D;
 80006d0:	4b15      	ldr	r3, [pc, #84]	; (8000728 <MX_DMA2D_Init+0x5c>)
 80006d2:	4a16      	ldr	r2, [pc, #88]	; (800072c <MX_DMA2D_Init+0x60>)
 80006d4:	601a      	str	r2, [r3, #0]
  hdma2d.Init.Mode = DMA2D_M2M;
 80006d6:	4b14      	ldr	r3, [pc, #80]	; (8000728 <MX_DMA2D_Init+0x5c>)
 80006d8:	2200      	movs	r2, #0
 80006da:	605a      	str	r2, [r3, #4]
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 80006dc:	4b12      	ldr	r3, [pc, #72]	; (8000728 <MX_DMA2D_Init+0x5c>)
 80006de:	2200      	movs	r2, #0
 80006e0:	609a      	str	r2, [r3, #8]
  hdma2d.Init.OutputOffset = 0;
 80006e2:	4b11      	ldr	r3, [pc, #68]	; (8000728 <MX_DMA2D_Init+0x5c>)
 80006e4:	2200      	movs	r2, #0
 80006e6:	60da      	str	r2, [r3, #12]
  hdma2d.LayerCfg[1].InputOffset = 0;
 80006e8:	4b0f      	ldr	r3, [pc, #60]	; (8000728 <MX_DMA2D_Init+0x5c>)
 80006ea:	2200      	movs	r2, #0
 80006ec:	629a      	str	r2, [r3, #40]	; 0x28
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 80006ee:	4b0e      	ldr	r3, [pc, #56]	; (8000728 <MX_DMA2D_Init+0x5c>)
 80006f0:	2200      	movs	r2, #0
 80006f2:	62da      	str	r2, [r3, #44]	; 0x2c
  hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 80006f4:	4b0c      	ldr	r3, [pc, #48]	; (8000728 <MX_DMA2D_Init+0x5c>)
 80006f6:	2200      	movs	r2, #0
 80006f8:	631a      	str	r2, [r3, #48]	; 0x30
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80006fa:	4b0b      	ldr	r3, [pc, #44]	; (8000728 <MX_DMA2D_Init+0x5c>)
 80006fc:	2200      	movs	r2, #0
 80006fe:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8000700:	4809      	ldr	r0, [pc, #36]	; (8000728 <MX_DMA2D_Init+0x5c>)
 8000702:	f002 f963 	bl	80029cc <HAL_DMA2D_Init>
 8000706:	4603      	mov	r3, r0
 8000708:	2b00      	cmp	r3, #0
 800070a:	d001      	beq.n	8000710 <MX_DMA2D_Init+0x44>
  {
    Error_Handler();
 800070c:	f000 fb16 	bl	8000d3c <Error_Handler>
  }
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8000710:	2101      	movs	r1, #1
 8000712:	4805      	ldr	r0, [pc, #20]	; (8000728 <MX_DMA2D_Init+0x5c>)
 8000714:	f002 fab4 	bl	8002c80 <HAL_DMA2D_ConfigLayer>
 8000718:	4603      	mov	r3, r0
 800071a:	2b00      	cmp	r3, #0
 800071c:	d001      	beq.n	8000722 <MX_DMA2D_Init+0x56>
  {
    Error_Handler();
 800071e:	f000 fb0d 	bl	8000d3c <Error_Handler>
  }
  /* USER CODE BEGIN DMA2D_Init 2 */

  /* USER CODE END DMA2D_Init 2 */

}
 8000722:	bf00      	nop
 8000724:	bd80      	pop	{r7, pc}
 8000726:	bf00      	nop
 8000728:	20025980 	.word	0x20025980
 800072c:	4002b000 	.word	0x4002b000

08000730 <MX_I2C3_Init>:
  * @brief I2C3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C3_Init(void)
{
 8000730:	b580      	push	{r7, lr}
 8000732:	af00      	add	r7, sp, #0
  /* USER CODE END I2C3_Init 0 */

  /* USER CODE BEGIN I2C3_Init 1 */

  /* USER CODE END I2C3_Init 1 */
  hi2c3.Instance = I2C3;
 8000734:	4b1b      	ldr	r3, [pc, #108]	; (80007a4 <MX_I2C3_Init+0x74>)
 8000736:	4a1c      	ldr	r2, [pc, #112]	; (80007a8 <MX_I2C3_Init+0x78>)
 8000738:	601a      	str	r2, [r3, #0]
  hi2c3.Init.ClockSpeed = 100000;
 800073a:	4b1a      	ldr	r3, [pc, #104]	; (80007a4 <MX_I2C3_Init+0x74>)
 800073c:	4a1b      	ldr	r2, [pc, #108]	; (80007ac <MX_I2C3_Init+0x7c>)
 800073e:	605a      	str	r2, [r3, #4]
  hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000740:	4b18      	ldr	r3, [pc, #96]	; (80007a4 <MX_I2C3_Init+0x74>)
 8000742:	2200      	movs	r2, #0
 8000744:	609a      	str	r2, [r3, #8]
  hi2c3.Init.OwnAddress1 = 0;
 8000746:	4b17      	ldr	r3, [pc, #92]	; (80007a4 <MX_I2C3_Init+0x74>)
 8000748:	2200      	movs	r2, #0
 800074a:	60da      	str	r2, [r3, #12]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800074c:	4b15      	ldr	r3, [pc, #84]	; (80007a4 <MX_I2C3_Init+0x74>)
 800074e:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000752:	611a      	str	r2, [r3, #16]
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000754:	4b13      	ldr	r3, [pc, #76]	; (80007a4 <MX_I2C3_Init+0x74>)
 8000756:	2200      	movs	r2, #0
 8000758:	615a      	str	r2, [r3, #20]
  hi2c3.Init.OwnAddress2 = 0;
 800075a:	4b12      	ldr	r3, [pc, #72]	; (80007a4 <MX_I2C3_Init+0x74>)
 800075c:	2200      	movs	r2, #0
 800075e:	619a      	str	r2, [r3, #24]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000760:	4b10      	ldr	r3, [pc, #64]	; (80007a4 <MX_I2C3_Init+0x74>)
 8000762:	2200      	movs	r2, #0
 8000764:	61da      	str	r2, [r3, #28]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000766:	4b0f      	ldr	r3, [pc, #60]	; (80007a4 <MX_I2C3_Init+0x74>)
 8000768:	2200      	movs	r2, #0
 800076a:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800076c:	480d      	ldr	r0, [pc, #52]	; (80007a4 <MX_I2C3_Init+0x74>)
 800076e:	f002 fdeb 	bl	8003348 <HAL_I2C_Init>
 8000772:	4603      	mov	r3, r0
 8000774:	2b00      	cmp	r3, #0
 8000776:	d001      	beq.n	800077c <MX_I2C3_Init+0x4c>
  {
    Error_Handler();
 8000778:	f000 fae0 	bl	8000d3c <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 800077c:	2100      	movs	r1, #0
 800077e:	4809      	ldr	r0, [pc, #36]	; (80007a4 <MX_I2C3_Init+0x74>)
 8000780:	f003 fddf 	bl	8004342 <HAL_I2CEx_ConfigAnalogFilter>
 8000784:	4603      	mov	r3, r0
 8000786:	2b00      	cmp	r3, #0
 8000788:	d001      	beq.n	800078e <MX_I2C3_Init+0x5e>
  {
    Error_Handler();
 800078a:	f000 fad7 	bl	8000d3c <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 800078e:	2100      	movs	r1, #0
 8000790:	4804      	ldr	r0, [pc, #16]	; (80007a4 <MX_I2C3_Init+0x74>)
 8000792:	f003 fe12 	bl	80043ba <HAL_I2CEx_ConfigDigitalFilter>
 8000796:	4603      	mov	r3, r0
 8000798:	2b00      	cmp	r3, #0
 800079a:	d001      	beq.n	80007a0 <MX_I2C3_Init+0x70>
  {
    Error_Handler();
 800079c:	f000 face 	bl	8000d3c <Error_Handler>
  }
  /* USER CODE BEGIN I2C3_Init 2 */

  /* USER CODE END I2C3_Init 2 */

}
 80007a0:	bf00      	nop
 80007a2:	bd80      	pop	{r7, pc}
 80007a4:	200259c0 	.word	0x200259c0
 80007a8:	40005c00 	.word	0x40005c00
 80007ac:	000186a0 	.word	0x000186a0

080007b0 <MX_LTDC_Init>:
  * @brief LTDC Initialization Function
  * @param None
  * @retval None
  */
static void MX_LTDC_Init(void)
{
 80007b0:	b580      	push	{r7, lr}
 80007b2:	b08e      	sub	sp, #56	; 0x38
 80007b4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN LTDC_Init 0 */
	ili9341_drv.Init();
 80007b6:	4b3e      	ldr	r3, [pc, #248]	; (80008b0 <MX_LTDC_Init+0x100>)
 80007b8:	681b      	ldr	r3, [r3, #0]
 80007ba:	4798      	blx	r3
  /* USER CODE END LTDC_Init 0 */

  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80007bc:	1d3b      	adds	r3, r7, #4
 80007be:	2234      	movs	r2, #52	; 0x34
 80007c0:	2100      	movs	r1, #0
 80007c2:	4618      	mov	r0, r3
 80007c4:	f01d f9be 	bl	801db44 <memset>

  /* USER CODE BEGIN LTDC_Init 1 */

  /* USER CODE END LTDC_Init 1 */
  hltdc.Instance = LTDC;
 80007c8:	4b3a      	ldr	r3, [pc, #232]	; (80008b4 <MX_LTDC_Init+0x104>)
 80007ca:	4a3b      	ldr	r2, [pc, #236]	; (80008b8 <MX_LTDC_Init+0x108>)
 80007cc:	601a      	str	r2, [r3, #0]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80007ce:	4b39      	ldr	r3, [pc, #228]	; (80008b4 <MX_LTDC_Init+0x104>)
 80007d0:	2200      	movs	r2, #0
 80007d2:	605a      	str	r2, [r3, #4]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 80007d4:	4b37      	ldr	r3, [pc, #220]	; (80008b4 <MX_LTDC_Init+0x104>)
 80007d6:	2200      	movs	r2, #0
 80007d8:	609a      	str	r2, [r3, #8]
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80007da:	4b36      	ldr	r3, [pc, #216]	; (80008b4 <MX_LTDC_Init+0x104>)
 80007dc:	2200      	movs	r2, #0
 80007de:	60da      	str	r2, [r3, #12]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80007e0:	4b34      	ldr	r3, [pc, #208]	; (80008b4 <MX_LTDC_Init+0x104>)
 80007e2:	2200      	movs	r2, #0
 80007e4:	611a      	str	r2, [r3, #16]
  hltdc.Init.HorizontalSync = 9;
 80007e6:	4b33      	ldr	r3, [pc, #204]	; (80008b4 <MX_LTDC_Init+0x104>)
 80007e8:	2209      	movs	r2, #9
 80007ea:	615a      	str	r2, [r3, #20]
  hltdc.Init.VerticalSync = 1;
 80007ec:	4b31      	ldr	r3, [pc, #196]	; (80008b4 <MX_LTDC_Init+0x104>)
 80007ee:	2201      	movs	r2, #1
 80007f0:	619a      	str	r2, [r3, #24]
  hltdc.Init.AccumulatedHBP = 29;
 80007f2:	4b30      	ldr	r3, [pc, #192]	; (80008b4 <MX_LTDC_Init+0x104>)
 80007f4:	221d      	movs	r2, #29
 80007f6:	61da      	str	r2, [r3, #28]
  hltdc.Init.AccumulatedVBP = 3;
 80007f8:	4b2e      	ldr	r3, [pc, #184]	; (80008b4 <MX_LTDC_Init+0x104>)
 80007fa:	2203      	movs	r2, #3
 80007fc:	621a      	str	r2, [r3, #32]
  hltdc.Init.AccumulatedActiveW = 269;
 80007fe:	4b2d      	ldr	r3, [pc, #180]	; (80008b4 <MX_LTDC_Init+0x104>)
 8000800:	f240 120d 	movw	r2, #269	; 0x10d
 8000804:	625a      	str	r2, [r3, #36]	; 0x24
  hltdc.Init.AccumulatedActiveH = 323;
 8000806:	4b2b      	ldr	r3, [pc, #172]	; (80008b4 <MX_LTDC_Init+0x104>)
 8000808:	f240 1243 	movw	r2, #323	; 0x143
 800080c:	629a      	str	r2, [r3, #40]	; 0x28
  hltdc.Init.TotalWidth = 279;
 800080e:	4b29      	ldr	r3, [pc, #164]	; (80008b4 <MX_LTDC_Init+0x104>)
 8000810:	f240 1217 	movw	r2, #279	; 0x117
 8000814:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc.Init.TotalHeigh = 327;
 8000816:	4b27      	ldr	r3, [pc, #156]	; (80008b4 <MX_LTDC_Init+0x104>)
 8000818:	f240 1247 	movw	r2, #327	; 0x147
 800081c:	631a      	str	r2, [r3, #48]	; 0x30
  hltdc.Init.Backcolor.Blue = 0;
 800081e:	4b25      	ldr	r3, [pc, #148]	; (80008b4 <MX_LTDC_Init+0x104>)
 8000820:	2200      	movs	r2, #0
 8000822:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  hltdc.Init.Backcolor.Green = 0;
 8000826:	4b23      	ldr	r3, [pc, #140]	; (80008b4 <MX_LTDC_Init+0x104>)
 8000828:	2200      	movs	r2, #0
 800082a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
  hltdc.Init.Backcolor.Red = 0;
 800082e:	4b21      	ldr	r3, [pc, #132]	; (80008b4 <MX_LTDC_Init+0x104>)
 8000830:	2200      	movs	r2, #0
 8000832:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000836:	481f      	ldr	r0, [pc, #124]	; (80008b4 <MX_LTDC_Init+0x104>)
 8000838:	f003 fdfe 	bl	8004438 <HAL_LTDC_Init>
 800083c:	4603      	mov	r3, r0
 800083e:	2b00      	cmp	r3, #0
 8000840:	d001      	beq.n	8000846 <MX_LTDC_Init+0x96>
  {
    Error_Handler();
 8000842:	f000 fa7b 	bl	8000d3c <Error_Handler>
  }
  pLayerCfg.WindowX0 = 0;
 8000846:	2300      	movs	r3, #0
 8000848:	607b      	str	r3, [r7, #4]
  pLayerCfg.WindowX1 = 240;
 800084a:	23f0      	movs	r3, #240	; 0xf0
 800084c:	60bb      	str	r3, [r7, #8]
  pLayerCfg.WindowY0 = 0;
 800084e:	2300      	movs	r3, #0
 8000850:	60fb      	str	r3, [r7, #12]
  pLayerCfg.WindowY1 = 320;
 8000852:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8000856:	613b      	str	r3, [r7, #16]
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000858:	2302      	movs	r3, #2
 800085a:	617b      	str	r3, [r7, #20]
  pLayerCfg.Alpha = 255;
 800085c:	23ff      	movs	r3, #255	; 0xff
 800085e:	61bb      	str	r3, [r7, #24]
  pLayerCfg.Alpha0 = 0;
 8000860:	2300      	movs	r3, #0
 8000862:	61fb      	str	r3, [r7, #28]
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 8000864:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 8000868:	623b      	str	r3, [r7, #32]
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 800086a:	2307      	movs	r3, #7
 800086c:	627b      	str	r3, [r7, #36]	; 0x24
  pLayerCfg.FBStartAdress = 0xD0000000;
 800086e:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
 8000872:	62bb      	str	r3, [r7, #40]	; 0x28
  pLayerCfg.ImageWidth = 240;
 8000874:	23f0      	movs	r3, #240	; 0xf0
 8000876:	62fb      	str	r3, [r7, #44]	; 0x2c
  pLayerCfg.ImageHeight = 320;
 8000878:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800087c:	633b      	str	r3, [r7, #48]	; 0x30
  pLayerCfg.Backcolor.Blue = 0;
 800087e:	2300      	movs	r3, #0
 8000880:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
  pLayerCfg.Backcolor.Green = 0;
 8000884:	2300      	movs	r3, #0
 8000886:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
  pLayerCfg.Backcolor.Red = 0;
 800088a:	2300      	movs	r3, #0
 800088c:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000890:	1d3b      	adds	r3, r7, #4
 8000892:	2200      	movs	r2, #0
 8000894:	4619      	mov	r1, r3
 8000896:	4807      	ldr	r0, [pc, #28]	; (80008b4 <MX_LTDC_Init+0x104>)
 8000898:	f003 ff56 	bl	8004748 <HAL_LTDC_ConfigLayer>
 800089c:	4603      	mov	r3, r0
 800089e:	2b00      	cmp	r3, #0
 80008a0:	d001      	beq.n	80008a6 <MX_LTDC_Init+0xf6>
  {
    Error_Handler();
 80008a2:	f000 fa4b 	bl	8000d3c <Error_Handler>
  }
  /* USER CODE BEGIN LTDC_Init 2 */

  /* USER CODE END LTDC_Init 2 */

}
 80008a6:	bf00      	nop
 80008a8:	3738      	adds	r7, #56	; 0x38
 80008aa:	46bd      	mov	sp, r7
 80008ac:	bd80      	pop	{r7, pc}
 80008ae:	bf00      	nop
 80008b0:	20000008 	.word	0x20000008
 80008b4:	20025a14 	.word	0x20025a14
 80008b8:	40016800 	.word	0x40016800

080008bc <MX_SPI5_Init>:
  * @brief SPI5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI5_Init(void)
{
 80008bc:	b580      	push	{r7, lr}
 80008be:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI5_Init 1 */

  /* USER CODE END SPI5_Init 1 */
  /* SPI5 parameter configuration*/
  hspi5.Instance = SPI5;
 80008c0:	4b17      	ldr	r3, [pc, #92]	; (8000920 <MX_SPI5_Init+0x64>)
 80008c2:	4a18      	ldr	r2, [pc, #96]	; (8000924 <MX_SPI5_Init+0x68>)
 80008c4:	601a      	str	r2, [r3, #0]
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80008c6:	4b16      	ldr	r3, [pc, #88]	; (8000920 <MX_SPI5_Init+0x64>)
 80008c8:	f44f 7282 	mov.w	r2, #260	; 0x104
 80008cc:	605a      	str	r2, [r3, #4]
  hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 80008ce:	4b14      	ldr	r3, [pc, #80]	; (8000920 <MX_SPI5_Init+0x64>)
 80008d0:	2200      	movs	r2, #0
 80008d2:	609a      	str	r2, [r3, #8]
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 80008d4:	4b12      	ldr	r3, [pc, #72]	; (8000920 <MX_SPI5_Init+0x64>)
 80008d6:	2200      	movs	r2, #0
 80008d8:	60da      	str	r2, [r3, #12]
  hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 80008da:	4b11      	ldr	r3, [pc, #68]	; (8000920 <MX_SPI5_Init+0x64>)
 80008dc:	2200      	movs	r2, #0
 80008de:	611a      	str	r2, [r3, #16]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 80008e0:	4b0f      	ldr	r3, [pc, #60]	; (8000920 <MX_SPI5_Init+0x64>)
 80008e2:	2200      	movs	r2, #0
 80008e4:	615a      	str	r2, [r3, #20]
  hspi5.Init.NSS = SPI_NSS_SOFT;
 80008e6:	4b0e      	ldr	r3, [pc, #56]	; (8000920 <MX_SPI5_Init+0x64>)
 80008e8:	f44f 7200 	mov.w	r2, #512	; 0x200
 80008ec:	619a      	str	r2, [r3, #24]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 80008ee:	4b0c      	ldr	r3, [pc, #48]	; (8000920 <MX_SPI5_Init+0x64>)
 80008f0:	2218      	movs	r2, #24
 80008f2:	61da      	str	r2, [r3, #28]
  hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80008f4:	4b0a      	ldr	r3, [pc, #40]	; (8000920 <MX_SPI5_Init+0x64>)
 80008f6:	2200      	movs	r2, #0
 80008f8:	621a      	str	r2, [r3, #32]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 80008fa:	4b09      	ldr	r3, [pc, #36]	; (8000920 <MX_SPI5_Init+0x64>)
 80008fc:	2200      	movs	r2, #0
 80008fe:	625a      	str	r2, [r3, #36]	; 0x24
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000900:	4b07      	ldr	r3, [pc, #28]	; (8000920 <MX_SPI5_Init+0x64>)
 8000902:	2200      	movs	r2, #0
 8000904:	629a      	str	r2, [r3, #40]	; 0x28
  hspi5.Init.CRCPolynomial = 10;
 8000906:	4b06      	ldr	r3, [pc, #24]	; (8000920 <MX_SPI5_Init+0x64>)
 8000908:	220a      	movs	r2, #10
 800090a:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 800090c:	4804      	ldr	r0, [pc, #16]	; (8000920 <MX_SPI5_Init+0x64>)
 800090e:	f004 ffe7 	bl	80058e0 <HAL_SPI_Init>
 8000912:	4603      	mov	r3, r0
 8000914:	2b00      	cmp	r3, #0
 8000916:	d001      	beq.n	800091c <MX_SPI5_Init+0x60>
  {
    Error_Handler();
 8000918:	f000 fa10 	bl	8000d3c <Error_Handler>
  }
  /* USER CODE BEGIN SPI5_Init 2 */

  /* USER CODE END SPI5_Init 2 */

}
 800091c:	bf00      	nop
 800091e:	bd80      	pop	{r7, pc}
 8000920:	20025abc 	.word	0x20025abc
 8000924:	40015000 	.word	0x40015000

08000928 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8000928:	b580      	push	{r7, lr}
 800092a:	b086      	sub	sp, #24
 800092c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800092e:	f107 0308 	add.w	r3, r7, #8
 8000932:	2200      	movs	r2, #0
 8000934:	601a      	str	r2, [r3, #0]
 8000936:	605a      	str	r2, [r3, #4]
 8000938:	609a      	str	r2, [r3, #8]
 800093a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800093c:	463b      	mov	r3, r7
 800093e:	2200      	movs	r2, #0
 8000940:	601a      	str	r2, [r3, #0]
 8000942:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8000944:	4b1e      	ldr	r3, [pc, #120]	; (80009c0 <MX_TIM1_Init+0x98>)
 8000946:	4a1f      	ldr	r2, [pc, #124]	; (80009c4 <MX_TIM1_Init+0x9c>)
 8000948:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 800094a:	4b1d      	ldr	r3, [pc, #116]	; (80009c0 <MX_TIM1_Init+0x98>)
 800094c:	2200      	movs	r2, #0
 800094e:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000950:	4b1b      	ldr	r3, [pc, #108]	; (80009c0 <MX_TIM1_Init+0x98>)
 8000952:	2200      	movs	r2, #0
 8000954:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 65535;
 8000956:	4b1a      	ldr	r3, [pc, #104]	; (80009c0 <MX_TIM1_Init+0x98>)
 8000958:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800095c:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800095e:	4b18      	ldr	r3, [pc, #96]	; (80009c0 <MX_TIM1_Init+0x98>)
 8000960:	2200      	movs	r2, #0
 8000962:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8000964:	4b16      	ldr	r3, [pc, #88]	; (80009c0 <MX_TIM1_Init+0x98>)
 8000966:	2200      	movs	r2, #0
 8000968:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800096a:	4b15      	ldr	r3, [pc, #84]	; (80009c0 <MX_TIM1_Init+0x98>)
 800096c:	2200      	movs	r2, #0
 800096e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8000970:	4813      	ldr	r0, [pc, #76]	; (80009c0 <MX_TIM1_Init+0x98>)
 8000972:	f005 fd93 	bl	800649c <HAL_TIM_Base_Init>
 8000976:	4603      	mov	r3, r0
 8000978:	2b00      	cmp	r3, #0
 800097a:	d001      	beq.n	8000980 <MX_TIM1_Init+0x58>
  {
    Error_Handler();
 800097c:	f000 f9de 	bl	8000d3c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000980:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000984:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8000986:	f107 0308 	add.w	r3, r7, #8
 800098a:	4619      	mov	r1, r3
 800098c:	480c      	ldr	r0, [pc, #48]	; (80009c0 <MX_TIM1_Init+0x98>)
 800098e:	f005 ff4d 	bl	800682c <HAL_TIM_ConfigClockSource>
 8000992:	4603      	mov	r3, r0
 8000994:	2b00      	cmp	r3, #0
 8000996:	d001      	beq.n	800099c <MX_TIM1_Init+0x74>
  {
    Error_Handler();
 8000998:	f000 f9d0 	bl	8000d3c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800099c:	2300      	movs	r3, #0
 800099e:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80009a0:	2300      	movs	r3, #0
 80009a2:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 80009a4:	463b      	mov	r3, r7
 80009a6:	4619      	mov	r1, r3
 80009a8:	4805      	ldr	r0, [pc, #20]	; (80009c0 <MX_TIM1_Init+0x98>)
 80009aa:	f006 f969 	bl	8006c80 <HAL_TIMEx_MasterConfigSynchronization>
 80009ae:	4603      	mov	r3, r0
 80009b0:	2b00      	cmp	r3, #0
 80009b2:	d001      	beq.n	80009b8 <MX_TIM1_Init+0x90>
  {
    Error_Handler();
 80009b4:	f000 f9c2 	bl	8000d3c <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 80009b8:	bf00      	nop
 80009ba:	3718      	adds	r7, #24
 80009bc:	46bd      	mov	sp, r7
 80009be:	bd80      	pop	{r7, pc}
 80009c0:	20025b14 	.word	0x20025b14
 80009c4:	40010000 	.word	0x40010000

080009c8 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 80009c8:	b580      	push	{r7, lr}
 80009ca:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80009cc:	4b11      	ldr	r3, [pc, #68]	; (8000a14 <MX_USART1_UART_Init+0x4c>)
 80009ce:	4a12      	ldr	r2, [pc, #72]	; (8000a18 <MX_USART1_UART_Init+0x50>)
 80009d0:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 80009d2:	4b10      	ldr	r3, [pc, #64]	; (8000a14 <MX_USART1_UART_Init+0x4c>)
 80009d4:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80009d8:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80009da:	4b0e      	ldr	r3, [pc, #56]	; (8000a14 <MX_USART1_UART_Init+0x4c>)
 80009dc:	2200      	movs	r2, #0
 80009de:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80009e0:	4b0c      	ldr	r3, [pc, #48]	; (8000a14 <MX_USART1_UART_Init+0x4c>)
 80009e2:	2200      	movs	r2, #0
 80009e4:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80009e6:	4b0b      	ldr	r3, [pc, #44]	; (8000a14 <MX_USART1_UART_Init+0x4c>)
 80009e8:	2200      	movs	r2, #0
 80009ea:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80009ec:	4b09      	ldr	r3, [pc, #36]	; (8000a14 <MX_USART1_UART_Init+0x4c>)
 80009ee:	220c      	movs	r2, #12
 80009f0:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80009f2:	4b08      	ldr	r3, [pc, #32]	; (8000a14 <MX_USART1_UART_Init+0x4c>)
 80009f4:	2200      	movs	r2, #0
 80009f6:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80009f8:	4b06      	ldr	r3, [pc, #24]	; (8000a14 <MX_USART1_UART_Init+0x4c>)
 80009fa:	2200      	movs	r2, #0
 80009fc:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80009fe:	4805      	ldr	r0, [pc, #20]	; (8000a14 <MX_USART1_UART_Init+0x4c>)
 8000a00:	f006 f9ce 	bl	8006da0 <HAL_UART_Init>
 8000a04:	4603      	mov	r3, r0
 8000a06:	2b00      	cmp	r3, #0
 8000a08:	d001      	beq.n	8000a0e <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8000a0a:	f000 f997 	bl	8000d3c <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8000a0e:	bf00      	nop
 8000a10:	bd80      	pop	{r7, pc}
 8000a12:	bf00      	nop
 8000a14:	20025b5c 	.word	0x20025b5c
 8000a18:	40011000 	.word	0x40011000

08000a1c <MX_FMC_Init>:

/* FMC initialization function */
static void MX_FMC_Init(void)
{
 8000a1c:	b580      	push	{r7, lr}
 8000a1e:	b088      	sub	sp, #32
 8000a20:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN FMC_Init 0 */

  /* USER CODE END FMC_Init 0 */

  FMC_SDRAM_TimingTypeDef SdramTiming = {0};
 8000a22:	1d3b      	adds	r3, r7, #4
 8000a24:	2200      	movs	r2, #0
 8000a26:	601a      	str	r2, [r3, #0]
 8000a28:	605a      	str	r2, [r3, #4]
 8000a2a:	609a      	str	r2, [r3, #8]
 8000a2c:	60da      	str	r2, [r3, #12]
 8000a2e:	611a      	str	r2, [r3, #16]
 8000a30:	615a      	str	r2, [r3, #20]
 8000a32:	619a      	str	r2, [r3, #24]

  /* USER CODE END FMC_Init 1 */

  /** Perform the SDRAM1 memory initialization sequence
  */
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000a34:	4b1f      	ldr	r3, [pc, #124]	; (8000ab4 <MX_FMC_Init+0x98>)
 8000a36:	4a20      	ldr	r2, [pc, #128]	; (8000ab8 <MX_FMC_Init+0x9c>)
 8000a38:	601a      	str	r2, [r3, #0]
  /* hsdram1.Init */
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8000a3a:	4b1e      	ldr	r3, [pc, #120]	; (8000ab4 <MX_FMC_Init+0x98>)
 8000a3c:	2201      	movs	r2, #1
 8000a3e:	605a      	str	r2, [r3, #4]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8000a40:	4b1c      	ldr	r3, [pc, #112]	; (8000ab4 <MX_FMC_Init+0x98>)
 8000a42:	2200      	movs	r2, #0
 8000a44:	609a      	str	r2, [r3, #8]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8000a46:	4b1b      	ldr	r3, [pc, #108]	; (8000ab4 <MX_FMC_Init+0x98>)
 8000a48:	2204      	movs	r2, #4
 8000a4a:	60da      	str	r2, [r3, #12]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8000a4c:	4b19      	ldr	r3, [pc, #100]	; (8000ab4 <MX_FMC_Init+0x98>)
 8000a4e:	2210      	movs	r2, #16
 8000a50:	611a      	str	r2, [r3, #16]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8000a52:	4b18      	ldr	r3, [pc, #96]	; (8000ab4 <MX_FMC_Init+0x98>)
 8000a54:	2240      	movs	r2, #64	; 0x40
 8000a56:	615a      	str	r2, [r3, #20]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8000a58:	4b16      	ldr	r3, [pc, #88]	; (8000ab4 <MX_FMC_Init+0x98>)
 8000a5a:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8000a5e:	619a      	str	r2, [r3, #24]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000a60:	4b14      	ldr	r3, [pc, #80]	; (8000ab4 <MX_FMC_Init+0x98>)
 8000a62:	2200      	movs	r2, #0
 8000a64:	61da      	str	r2, [r3, #28]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8000a66:	4b13      	ldr	r3, [pc, #76]	; (8000ab4 <MX_FMC_Init+0x98>)
 8000a68:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8000a6c:	621a      	str	r2, [r3, #32]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8000a6e:	4b11      	ldr	r3, [pc, #68]	; (8000ab4 <MX_FMC_Init+0x98>)
 8000a70:	2200      	movs	r2, #0
 8000a72:	625a      	str	r2, [r3, #36]	; 0x24
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000a74:	4b0f      	ldr	r3, [pc, #60]	; (8000ab4 <MX_FMC_Init+0x98>)
 8000a76:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000a7a:	629a      	str	r2, [r3, #40]	; 0x28
  /* SdramTiming */
  SdramTiming.LoadToActiveDelay = 2;
 8000a7c:	2302      	movs	r3, #2
 8000a7e:	607b      	str	r3, [r7, #4]
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000a80:	2307      	movs	r3, #7
 8000a82:	60bb      	str	r3, [r7, #8]
  SdramTiming.SelfRefreshTime = 4;
 8000a84:	2304      	movs	r3, #4
 8000a86:	60fb      	str	r3, [r7, #12]
  SdramTiming.RowCycleDelay = 7;
 8000a88:	2307      	movs	r3, #7
 8000a8a:	613b      	str	r3, [r7, #16]
  SdramTiming.WriteRecoveryTime = 3;
 8000a8c:	2303      	movs	r3, #3
 8000a8e:	617b      	str	r3, [r7, #20]
  SdramTiming.RPDelay = 2;
 8000a90:	2302      	movs	r3, #2
 8000a92:	61bb      	str	r3, [r7, #24]
  SdramTiming.RCDDelay = 2;
 8000a94:	2302      	movs	r3, #2
 8000a96:	61fb      	str	r3, [r7, #28]

  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000a98:	1d3b      	adds	r3, r7, #4
 8000a9a:	4619      	mov	r1, r3
 8000a9c:	4805      	ldr	r0, [pc, #20]	; (8000ab4 <MX_FMC_Init+0x98>)
 8000a9e:	f004 feeb 	bl	8005878 <HAL_SDRAM_Init>
 8000aa2:	4603      	mov	r3, r0
 8000aa4:	2b00      	cmp	r3, #0
 8000aa6:	d001      	beq.n	8000aac <MX_FMC_Init+0x90>
  {
    Error_Handler( );
 8000aa8:	f000 f948 	bl	8000d3c <Error_Handler>
  }

  /* USER CODE BEGIN FMC_Init 2 */

  /* USER CODE END FMC_Init 2 */
}
 8000aac:	bf00      	nop
 8000aae:	3720      	adds	r7, #32
 8000ab0:	46bd      	mov	sp, r7
 8000ab2:	bd80      	pop	{r7, pc}
 8000ab4:	20025ba0 	.word	0x20025ba0
 8000ab8:	a0000140 	.word	0xa0000140

08000abc <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000abc:	b580      	push	{r7, lr}
 8000abe:	b08e      	sub	sp, #56	; 0x38
 8000ac0:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000ac2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000ac6:	2200      	movs	r2, #0
 8000ac8:	601a      	str	r2, [r3, #0]
 8000aca:	605a      	str	r2, [r3, #4]
 8000acc:	609a      	str	r2, [r3, #8]
 8000ace:	60da      	str	r2, [r3, #12]
 8000ad0:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000ad2:	2300      	movs	r3, #0
 8000ad4:	623b      	str	r3, [r7, #32]
 8000ad6:	4b8a      	ldr	r3, [pc, #552]	; (8000d00 <MX_GPIO_Init+0x244>)
 8000ad8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ada:	4a89      	ldr	r2, [pc, #548]	; (8000d00 <MX_GPIO_Init+0x244>)
 8000adc:	f043 0304 	orr.w	r3, r3, #4
 8000ae0:	6313      	str	r3, [r2, #48]	; 0x30
 8000ae2:	4b87      	ldr	r3, [pc, #540]	; (8000d00 <MX_GPIO_Init+0x244>)
 8000ae4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ae6:	f003 0304 	and.w	r3, r3, #4
 8000aea:	623b      	str	r3, [r7, #32]
 8000aec:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000aee:	2300      	movs	r3, #0
 8000af0:	61fb      	str	r3, [r7, #28]
 8000af2:	4b83      	ldr	r3, [pc, #524]	; (8000d00 <MX_GPIO_Init+0x244>)
 8000af4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000af6:	4a82      	ldr	r2, [pc, #520]	; (8000d00 <MX_GPIO_Init+0x244>)
 8000af8:	f043 0320 	orr.w	r3, r3, #32
 8000afc:	6313      	str	r3, [r2, #48]	; 0x30
 8000afe:	4b80      	ldr	r3, [pc, #512]	; (8000d00 <MX_GPIO_Init+0x244>)
 8000b00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000b02:	f003 0320 	and.w	r3, r3, #32
 8000b06:	61fb      	str	r3, [r7, #28]
 8000b08:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000b0a:	2300      	movs	r3, #0
 8000b0c:	61bb      	str	r3, [r7, #24]
 8000b0e:	4b7c      	ldr	r3, [pc, #496]	; (8000d00 <MX_GPIO_Init+0x244>)
 8000b10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000b12:	4a7b      	ldr	r2, [pc, #492]	; (8000d00 <MX_GPIO_Init+0x244>)
 8000b14:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000b18:	6313      	str	r3, [r2, #48]	; 0x30
 8000b1a:	4b79      	ldr	r3, [pc, #484]	; (8000d00 <MX_GPIO_Init+0x244>)
 8000b1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000b1e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000b22:	61bb      	str	r3, [r7, #24]
 8000b24:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000b26:	2300      	movs	r3, #0
 8000b28:	617b      	str	r3, [r7, #20]
 8000b2a:	4b75      	ldr	r3, [pc, #468]	; (8000d00 <MX_GPIO_Init+0x244>)
 8000b2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000b2e:	4a74      	ldr	r2, [pc, #464]	; (8000d00 <MX_GPIO_Init+0x244>)
 8000b30:	f043 0301 	orr.w	r3, r3, #1
 8000b34:	6313      	str	r3, [r2, #48]	; 0x30
 8000b36:	4b72      	ldr	r3, [pc, #456]	; (8000d00 <MX_GPIO_Init+0x244>)
 8000b38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000b3a:	f003 0301 	and.w	r3, r3, #1
 8000b3e:	617b      	str	r3, [r7, #20]
 8000b40:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000b42:	2300      	movs	r3, #0
 8000b44:	613b      	str	r3, [r7, #16]
 8000b46:	4b6e      	ldr	r3, [pc, #440]	; (8000d00 <MX_GPIO_Init+0x244>)
 8000b48:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000b4a:	4a6d      	ldr	r2, [pc, #436]	; (8000d00 <MX_GPIO_Init+0x244>)
 8000b4c:	f043 0302 	orr.w	r3, r3, #2
 8000b50:	6313      	str	r3, [r2, #48]	; 0x30
 8000b52:	4b6b      	ldr	r3, [pc, #428]	; (8000d00 <MX_GPIO_Init+0x244>)
 8000b54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000b56:	f003 0302 	and.w	r3, r3, #2
 8000b5a:	613b      	str	r3, [r7, #16]
 8000b5c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000b5e:	2300      	movs	r3, #0
 8000b60:	60fb      	str	r3, [r7, #12]
 8000b62:	4b67      	ldr	r3, [pc, #412]	; (8000d00 <MX_GPIO_Init+0x244>)
 8000b64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000b66:	4a66      	ldr	r2, [pc, #408]	; (8000d00 <MX_GPIO_Init+0x244>)
 8000b68:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000b6c:	6313      	str	r3, [r2, #48]	; 0x30
 8000b6e:	4b64      	ldr	r3, [pc, #400]	; (8000d00 <MX_GPIO_Init+0x244>)
 8000b70:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000b72:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000b76:	60fb      	str	r3, [r7, #12]
 8000b78:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b7a:	2300      	movs	r3, #0
 8000b7c:	60bb      	str	r3, [r7, #8]
 8000b7e:	4b60      	ldr	r3, [pc, #384]	; (8000d00 <MX_GPIO_Init+0x244>)
 8000b80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000b82:	4a5f      	ldr	r2, [pc, #380]	; (8000d00 <MX_GPIO_Init+0x244>)
 8000b84:	f043 0310 	orr.w	r3, r3, #16
 8000b88:	6313      	str	r3, [r2, #48]	; 0x30
 8000b8a:	4b5d      	ldr	r3, [pc, #372]	; (8000d00 <MX_GPIO_Init+0x244>)
 8000b8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000b8e:	f003 0310 	and.w	r3, r3, #16
 8000b92:	60bb      	str	r3, [r7, #8]
 8000b94:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000b96:	2300      	movs	r3, #0
 8000b98:	607b      	str	r3, [r7, #4]
 8000b9a:	4b59      	ldr	r3, [pc, #356]	; (8000d00 <MX_GPIO_Init+0x244>)
 8000b9c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000b9e:	4a58      	ldr	r2, [pc, #352]	; (8000d00 <MX_GPIO_Init+0x244>)
 8000ba0:	f043 0308 	orr.w	r3, r3, #8
 8000ba4:	6313      	str	r3, [r2, #48]	; 0x30
 8000ba6:	4b56      	ldr	r3, [pc, #344]	; (8000d00 <MX_GPIO_Init+0x244>)
 8000ba8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000baa:	f003 0308 	and.w	r3, r3, #8
 8000bae:	607b      	str	r3, [r7, #4]
 8000bb0:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, NCS_MEMS_SPI_Pin|CSX_Pin|OTG_FS_PSO_Pin, GPIO_PIN_RESET);
 8000bb2:	2200      	movs	r2, #0
 8000bb4:	2116      	movs	r1, #22
 8000bb6:	4853      	ldr	r0, [pc, #332]	; (8000d04 <MX_GPIO_Init+0x248>)
 8000bb8:	f002 fbac 	bl	8003314 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(ACP_RST_GPIO_Port, ACP_RST_Pin, GPIO_PIN_RESET);
 8000bbc:	2200      	movs	r2, #0
 8000bbe:	2180      	movs	r1, #128	; 0x80
 8000bc0:	4851      	ldr	r0, [pc, #324]	; (8000d08 <MX_GPIO_Init+0x24c>)
 8000bc2:	f002 fba7 	bl	8003314 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, RDX_Pin|WRX_DCX_Pin, GPIO_PIN_RESET);
 8000bc6:	2200      	movs	r2, #0
 8000bc8:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8000bcc:	484f      	ldr	r0, [pc, #316]	; (8000d0c <MX_GPIO_Init+0x250>)
 8000bce:	f002 fba1 	bl	8003314 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOG, LD3_Pin|LD4_Pin, GPIO_PIN_RESET);
 8000bd2:	2200      	movs	r2, #0
 8000bd4:	f44f 41c0 	mov.w	r1, #24576	; 0x6000
 8000bd8:	484d      	ldr	r0, [pc, #308]	; (8000d10 <MX_GPIO_Init+0x254>)
 8000bda:	f002 fb9b 	bl	8003314 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : NCS_MEMS_SPI_Pin CSX_Pin OTG_FS_PSO_Pin */
  GPIO_InitStruct.Pin = NCS_MEMS_SPI_Pin|CSX_Pin|OTG_FS_PSO_Pin;
 8000bde:	2316      	movs	r3, #22
 8000be0:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000be2:	2301      	movs	r3, #1
 8000be4:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000be6:	2300      	movs	r3, #0
 8000be8:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000bea:	2300      	movs	r3, #0
 8000bec:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000bee:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000bf2:	4619      	mov	r1, r3
 8000bf4:	4843      	ldr	r0, [pc, #268]	; (8000d04 <MX_GPIO_Init+0x248>)
 8000bf6:	f002 f8d5 	bl	8002da4 <HAL_GPIO_Init>

  /*Configure GPIO pins : B1_Pin MEMS_INT1_Pin MEMS_INT2_Pin TP_INT1_Pin */
  GPIO_InitStruct.Pin = B1_Pin|MEMS_INT1_Pin|MEMS_INT2_Pin|TP_INT1_Pin;
 8000bfa:	f248 0307 	movw	r3, #32775	; 0x8007
 8000bfe:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 8000c00:	f44f 1390 	mov.w	r3, #1179648	; 0x120000
 8000c04:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c06:	2300      	movs	r3, #0
 8000c08:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000c0a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000c0e:	4619      	mov	r1, r3
 8000c10:	483d      	ldr	r0, [pc, #244]	; (8000d08 <MX_GPIO_Init+0x24c>)
 8000c12:	f002 f8c7 	bl	8002da4 <HAL_GPIO_Init>

  /*Configure GPIO pin : ACP_RST_Pin */
  GPIO_InitStruct.Pin = ACP_RST_Pin;
 8000c16:	2380      	movs	r3, #128	; 0x80
 8000c18:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c1a:	2301      	movs	r3, #1
 8000c1c:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c1e:	2300      	movs	r3, #0
 8000c20:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c22:	2300      	movs	r3, #0
 8000c24:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(ACP_RST_GPIO_Port, &GPIO_InitStruct);
 8000c26:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000c2a:	4619      	mov	r1, r3
 8000c2c:	4836      	ldr	r0, [pc, #216]	; (8000d08 <MX_GPIO_Init+0x24c>)
 8000c2e:	f002 f8b9 	bl	8002da4 <HAL_GPIO_Init>

  /*Configure GPIO pin : OTG_FS_OC_Pin */
  GPIO_InitStruct.Pin = OTG_FS_OC_Pin;
 8000c32:	2320      	movs	r3, #32
 8000c34:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 8000c36:	f44f 1390 	mov.w	r3, #1179648	; 0x120000
 8000c3a:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c3c:	2300      	movs	r3, #0
 8000c3e:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(OTG_FS_OC_GPIO_Port, &GPIO_InitStruct);
 8000c40:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000c44:	4619      	mov	r1, r3
 8000c46:	482f      	ldr	r0, [pc, #188]	; (8000d04 <MX_GPIO_Init+0x248>)
 8000c48:	f002 f8ac 	bl	8002da4 <HAL_GPIO_Init>

  /*Configure GPIO pin : BOOT1_Pin */
  GPIO_InitStruct.Pin = BOOT1_Pin;
 8000c4c:	2304      	movs	r3, #4
 8000c4e:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000c50:	2300      	movs	r3, #0
 8000c52:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c54:	2300      	movs	r3, #0
 8000c56:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(BOOT1_GPIO_Port, &GPIO_InitStruct);
 8000c58:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000c5c:	4619      	mov	r1, r3
 8000c5e:	482d      	ldr	r0, [pc, #180]	; (8000d14 <MX_GPIO_Init+0x258>)
 8000c60:	f002 f8a0 	bl	8002da4 <HAL_GPIO_Init>

  /*Configure GPIO pins : OTG_HS_ID_Pin OTG_HS_DM_Pin OTG_HS_DP_Pin */
  GPIO_InitStruct.Pin = OTG_HS_ID_Pin|OTG_HS_DM_Pin|OTG_HS_DP_Pin;
 8000c64:	f44f 4350 	mov.w	r3, #53248	; 0xd000
 8000c68:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000c6a:	2302      	movs	r3, #2
 8000c6c:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c6e:	2300      	movs	r3, #0
 8000c70:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c72:	2300      	movs	r3, #0
 8000c74:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Alternate = GPIO_AF12_OTG_HS_FS;
 8000c76:	230c      	movs	r3, #12
 8000c78:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000c7a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000c7e:	4619      	mov	r1, r3
 8000c80:	4824      	ldr	r0, [pc, #144]	; (8000d14 <MX_GPIO_Init+0x258>)
 8000c82:	f002 f88f 	bl	8002da4 <HAL_GPIO_Init>

  /*Configure GPIO pin : VBUS_HS_Pin */
  GPIO_InitStruct.Pin = VBUS_HS_Pin;
 8000c86:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000c8a:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000c8c:	2300      	movs	r3, #0
 8000c8e:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c90:	2300      	movs	r3, #0
 8000c92:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(VBUS_HS_GPIO_Port, &GPIO_InitStruct);
 8000c94:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000c98:	4619      	mov	r1, r3
 8000c9a:	481e      	ldr	r0, [pc, #120]	; (8000d14 <MX_GPIO_Init+0x258>)
 8000c9c:	f002 f882 	bl	8002da4 <HAL_GPIO_Init>

  /*Configure GPIO pin : TE_Pin */
  GPIO_InitStruct.Pin = TE_Pin;
 8000ca0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8000ca4:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000ca6:	2300      	movs	r3, #0
 8000ca8:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000caa:	2300      	movs	r3, #0
 8000cac:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(TE_GPIO_Port, &GPIO_InitStruct);
 8000cae:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000cb2:	4619      	mov	r1, r3
 8000cb4:	4815      	ldr	r0, [pc, #84]	; (8000d0c <MX_GPIO_Init+0x250>)
 8000cb6:	f002 f875 	bl	8002da4 <HAL_GPIO_Init>

  /*Configure GPIO pins : RDX_Pin WRX_DCX_Pin */
  GPIO_InitStruct.Pin = RDX_Pin|WRX_DCX_Pin;
 8000cba:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8000cbe:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000cc0:	2301      	movs	r3, #1
 8000cc2:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cc4:	2300      	movs	r3, #0
 8000cc6:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cc8:	2300      	movs	r3, #0
 8000cca:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000ccc:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000cd0:	4619      	mov	r1, r3
 8000cd2:	480e      	ldr	r0, [pc, #56]	; (8000d0c <MX_GPIO_Init+0x250>)
 8000cd4:	f002 f866 	bl	8002da4 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD3_Pin LD4_Pin */
  GPIO_InitStruct.Pin = LD3_Pin|LD4_Pin;
 8000cd8:	f44f 43c0 	mov.w	r3, #24576	; 0x6000
 8000cdc:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000cde:	2301      	movs	r3, #1
 8000ce0:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ce2:	2300      	movs	r3, #0
 8000ce4:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ce6:	2300      	movs	r3, #0
 8000ce8:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000cea:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000cee:	4619      	mov	r1, r3
 8000cf0:	4807      	ldr	r0, [pc, #28]	; (8000d10 <MX_GPIO_Init+0x254>)
 8000cf2:	f002 f857 	bl	8002da4 <HAL_GPIO_Init>

}
 8000cf6:	bf00      	nop
 8000cf8:	3738      	adds	r7, #56	; 0x38
 8000cfa:	46bd      	mov	sp, r7
 8000cfc:	bd80      	pop	{r7, pc}
 8000cfe:	bf00      	nop
 8000d00:	40023800 	.word	0x40023800
 8000d04:	40020800 	.word	0x40020800
 8000d08:	40020000 	.word	0x40020000
 8000d0c:	40020c00 	.word	0x40020c00
 8000d10:	40021800 	.word	0x40021800
 8000d14:	40020400 	.word	0x40020400

08000d18 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8000d18:	b580      	push	{r7, lr}
 8000d1a:	b082      	sub	sp, #8
 8000d1c:	af00      	add	r7, sp, #0
 8000d1e:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8000d20:	687b      	ldr	r3, [r7, #4]
 8000d22:	681b      	ldr	r3, [r3, #0]
 8000d24:	4a04      	ldr	r2, [pc, #16]	; (8000d38 <HAL_TIM_PeriodElapsedCallback+0x20>)
 8000d26:	4293      	cmp	r3, r2
 8000d28:	d101      	bne.n	8000d2e <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 8000d2a:	f001 fd0d 	bl	8002748 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8000d2e:	bf00      	nop
 8000d30:	3708      	adds	r7, #8
 8000d32:	46bd      	mov	sp, r7
 8000d34:	bd80      	pop	{r7, pc}
 8000d36:	bf00      	nop
 8000d38:	40001000 	.word	0x40001000

08000d3c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000d3c:	b480      	push	{r7}
 8000d3e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000d40:	b672      	cpsid	i
}
 8000d42:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000d44:	e7fe      	b.n	8000d44 <Error_Handler+0x8>
	...

08000d48 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000d48:	b480      	push	{r7}
 8000d4a:	b083      	sub	sp, #12
 8000d4c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000d4e:	2300      	movs	r3, #0
 8000d50:	607b      	str	r3, [r7, #4]
 8000d52:	4b10      	ldr	r3, [pc, #64]	; (8000d94 <HAL_MspInit+0x4c>)
 8000d54:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000d56:	4a0f      	ldr	r2, [pc, #60]	; (8000d94 <HAL_MspInit+0x4c>)
 8000d58:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000d5c:	6453      	str	r3, [r2, #68]	; 0x44
 8000d5e:	4b0d      	ldr	r3, [pc, #52]	; (8000d94 <HAL_MspInit+0x4c>)
 8000d60:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000d62:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000d66:	607b      	str	r3, [r7, #4]
 8000d68:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000d6a:	2300      	movs	r3, #0
 8000d6c:	603b      	str	r3, [r7, #0]
 8000d6e:	4b09      	ldr	r3, [pc, #36]	; (8000d94 <HAL_MspInit+0x4c>)
 8000d70:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000d72:	4a08      	ldr	r2, [pc, #32]	; (8000d94 <HAL_MspInit+0x4c>)
 8000d74:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000d78:	6413      	str	r3, [r2, #64]	; 0x40
 8000d7a:	4b06      	ldr	r3, [pc, #24]	; (8000d94 <HAL_MspInit+0x4c>)
 8000d7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000d7e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000d82:	603b      	str	r3, [r7, #0]
 8000d84:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000d86:	bf00      	nop
 8000d88:	370c      	adds	r7, #12
 8000d8a:	46bd      	mov	sp, r7
 8000d8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d90:	4770      	bx	lr
 8000d92:	bf00      	nop
 8000d94:	40023800 	.word	0x40023800

08000d98 <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8000d98:	b480      	push	{r7}
 8000d9a:	b085      	sub	sp, #20
 8000d9c:	af00      	add	r7, sp, #0
 8000d9e:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8000da0:	687b      	ldr	r3, [r7, #4]
 8000da2:	681b      	ldr	r3, [r3, #0]
 8000da4:	4a0b      	ldr	r2, [pc, #44]	; (8000dd4 <HAL_CRC_MspInit+0x3c>)
 8000da6:	4293      	cmp	r3, r2
 8000da8:	d10d      	bne.n	8000dc6 <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000daa:	2300      	movs	r3, #0
 8000dac:	60fb      	str	r3, [r7, #12]
 8000dae:	4b0a      	ldr	r3, [pc, #40]	; (8000dd8 <HAL_CRC_MspInit+0x40>)
 8000db0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000db2:	4a09      	ldr	r2, [pc, #36]	; (8000dd8 <HAL_CRC_MspInit+0x40>)
 8000db4:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000db8:	6313      	str	r3, [r2, #48]	; 0x30
 8000dba:	4b07      	ldr	r3, [pc, #28]	; (8000dd8 <HAL_CRC_MspInit+0x40>)
 8000dbc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000dbe:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8000dc2:	60fb      	str	r3, [r7, #12]
 8000dc4:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8000dc6:	bf00      	nop
 8000dc8:	3714      	adds	r7, #20
 8000dca:	46bd      	mov	sp, r7
 8000dcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dd0:	4770      	bx	lr
 8000dd2:	bf00      	nop
 8000dd4:	40023000 	.word	0x40023000
 8000dd8:	40023800 	.word	0x40023800

08000ddc <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8000ddc:	b580      	push	{r7, lr}
 8000dde:	b084      	sub	sp, #16
 8000de0:	af00      	add	r7, sp, #0
 8000de2:	6078      	str	r0, [r7, #4]
  if(hdma2d->Instance==DMA2D)
 8000de4:	687b      	ldr	r3, [r7, #4]
 8000de6:	681b      	ldr	r3, [r3, #0]
 8000de8:	4a0e      	ldr	r2, [pc, #56]	; (8000e24 <HAL_DMA2D_MspInit+0x48>)
 8000dea:	4293      	cmp	r3, r2
 8000dec:	d115      	bne.n	8000e1a <HAL_DMA2D_MspInit+0x3e>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000dee:	2300      	movs	r3, #0
 8000df0:	60fb      	str	r3, [r7, #12]
 8000df2:	4b0d      	ldr	r3, [pc, #52]	; (8000e28 <HAL_DMA2D_MspInit+0x4c>)
 8000df4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000df6:	4a0c      	ldr	r2, [pc, #48]	; (8000e28 <HAL_DMA2D_MspInit+0x4c>)
 8000df8:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8000dfc:	6313      	str	r3, [r2, #48]	; 0x30
 8000dfe:	4b0a      	ldr	r3, [pc, #40]	; (8000e28 <HAL_DMA2D_MspInit+0x4c>)
 8000e00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e02:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8000e06:	60fb      	str	r3, [r7, #12]
 8000e08:	68fb      	ldr	r3, [r7, #12]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8000e0a:	2200      	movs	r2, #0
 8000e0c:	2105      	movs	r1, #5
 8000e0e:	205a      	movs	r0, #90	; 0x5a
 8000e10:	f001 fd96 	bl	8002940 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8000e14:	205a      	movs	r0, #90	; 0x5a
 8000e16:	f001 fdaf 	bl	8002978 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8000e1a:	bf00      	nop
 8000e1c:	3710      	adds	r7, #16
 8000e1e:	46bd      	mov	sp, r7
 8000e20:	bd80      	pop	{r7, pc}
 8000e22:	bf00      	nop
 8000e24:	4002b000 	.word	0x4002b000
 8000e28:	40023800 	.word	0x40023800

08000e2c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8000e2c:	b580      	push	{r7, lr}
 8000e2e:	b08a      	sub	sp, #40	; 0x28
 8000e30:	af00      	add	r7, sp, #0
 8000e32:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000e34:	f107 0314 	add.w	r3, r7, #20
 8000e38:	2200      	movs	r2, #0
 8000e3a:	601a      	str	r2, [r3, #0]
 8000e3c:	605a      	str	r2, [r3, #4]
 8000e3e:	609a      	str	r2, [r3, #8]
 8000e40:	60da      	str	r2, [r3, #12]
 8000e42:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C3)
 8000e44:	687b      	ldr	r3, [r7, #4]
 8000e46:	681b      	ldr	r3, [r3, #0]
 8000e48:	4a29      	ldr	r2, [pc, #164]	; (8000ef0 <HAL_I2C_MspInit+0xc4>)
 8000e4a:	4293      	cmp	r3, r2
 8000e4c:	d14b      	bne.n	8000ee6 <HAL_I2C_MspInit+0xba>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000e4e:	2300      	movs	r3, #0
 8000e50:	613b      	str	r3, [r7, #16]
 8000e52:	4b28      	ldr	r3, [pc, #160]	; (8000ef4 <HAL_I2C_MspInit+0xc8>)
 8000e54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e56:	4a27      	ldr	r2, [pc, #156]	; (8000ef4 <HAL_I2C_MspInit+0xc8>)
 8000e58:	f043 0304 	orr.w	r3, r3, #4
 8000e5c:	6313      	str	r3, [r2, #48]	; 0x30
 8000e5e:	4b25      	ldr	r3, [pc, #148]	; (8000ef4 <HAL_I2C_MspInit+0xc8>)
 8000e60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e62:	f003 0304 	and.w	r3, r3, #4
 8000e66:	613b      	str	r3, [r7, #16]
 8000e68:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000e6a:	2300      	movs	r3, #0
 8000e6c:	60fb      	str	r3, [r7, #12]
 8000e6e:	4b21      	ldr	r3, [pc, #132]	; (8000ef4 <HAL_I2C_MspInit+0xc8>)
 8000e70:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e72:	4a20      	ldr	r2, [pc, #128]	; (8000ef4 <HAL_I2C_MspInit+0xc8>)
 8000e74:	f043 0301 	orr.w	r3, r3, #1
 8000e78:	6313      	str	r3, [r2, #48]	; 0x30
 8000e7a:	4b1e      	ldr	r3, [pc, #120]	; (8000ef4 <HAL_I2C_MspInit+0xc8>)
 8000e7c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e7e:	f003 0301 	and.w	r3, r3, #1
 8000e82:	60fb      	str	r3, [r7, #12]
 8000e84:	68fb      	ldr	r3, [r7, #12]
    /**I2C3 GPIO Configuration
    PC9     ------> I2C3_SDA
    PA8     ------> I2C3_SCL
    */
    GPIO_InitStruct.Pin = I2C3_SDA_Pin;
 8000e86:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000e8a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000e8c:	2312      	movs	r3, #18
 8000e8e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000e90:	2301      	movs	r3, #1
 8000e92:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e94:	2300      	movs	r3, #0
 8000e96:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8000e98:	2304      	movs	r3, #4
 8000e9a:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(I2C3_SDA_GPIO_Port, &GPIO_InitStruct);
 8000e9c:	f107 0314 	add.w	r3, r7, #20
 8000ea0:	4619      	mov	r1, r3
 8000ea2:	4815      	ldr	r0, [pc, #84]	; (8000ef8 <HAL_I2C_MspInit+0xcc>)
 8000ea4:	f001 ff7e 	bl	8002da4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = I2C3_SCL_Pin;
 8000ea8:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000eac:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000eae:	2312      	movs	r3, #18
 8000eb0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000eb2:	2301      	movs	r3, #1
 8000eb4:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000eb6:	2300      	movs	r3, #0
 8000eb8:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8000eba:	2304      	movs	r3, #4
 8000ebc:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(I2C3_SCL_GPIO_Port, &GPIO_InitStruct);
 8000ebe:	f107 0314 	add.w	r3, r7, #20
 8000ec2:	4619      	mov	r1, r3
 8000ec4:	480d      	ldr	r0, [pc, #52]	; (8000efc <HAL_I2C_MspInit+0xd0>)
 8000ec6:	f001 ff6d 	bl	8002da4 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8000eca:	2300      	movs	r3, #0
 8000ecc:	60bb      	str	r3, [r7, #8]
 8000ece:	4b09      	ldr	r3, [pc, #36]	; (8000ef4 <HAL_I2C_MspInit+0xc8>)
 8000ed0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000ed2:	4a08      	ldr	r2, [pc, #32]	; (8000ef4 <HAL_I2C_MspInit+0xc8>)
 8000ed4:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8000ed8:	6413      	str	r3, [r2, #64]	; 0x40
 8000eda:	4b06      	ldr	r3, [pc, #24]	; (8000ef4 <HAL_I2C_MspInit+0xc8>)
 8000edc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000ede:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8000ee2:	60bb      	str	r3, [r7, #8]
 8000ee4:	68bb      	ldr	r3, [r7, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */

  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8000ee6:	bf00      	nop
 8000ee8:	3728      	adds	r7, #40	; 0x28
 8000eea:	46bd      	mov	sp, r7
 8000eec:	bd80      	pop	{r7, pc}
 8000eee:	bf00      	nop
 8000ef0:	40005c00 	.word	0x40005c00
 8000ef4:	40023800 	.word	0x40023800
 8000ef8:	40020800 	.word	0x40020800
 8000efc:	40020000 	.word	0x40020000

08000f00 <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8000f00:	b580      	push	{r7, lr}
 8000f02:	b082      	sub	sp, #8
 8000f04:	af00      	add	r7, sp, #0
 8000f06:	6078      	str	r0, [r7, #4]
  if(hi2c->Instance==I2C3)
 8000f08:	687b      	ldr	r3, [r7, #4]
 8000f0a:	681b      	ldr	r3, [r3, #0]
 8000f0c:	4a0b      	ldr	r2, [pc, #44]	; (8000f3c <HAL_I2C_MspDeInit+0x3c>)
 8000f0e:	4293      	cmp	r3, r2
 8000f10:	d10f      	bne.n	8000f32 <HAL_I2C_MspDeInit+0x32>
  {
  /* USER CODE BEGIN I2C3_MspDeInit 0 */

  /* USER CODE END I2C3_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C3_CLK_DISABLE();
 8000f12:	4b0b      	ldr	r3, [pc, #44]	; (8000f40 <HAL_I2C_MspDeInit+0x40>)
 8000f14:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000f16:	4a0a      	ldr	r2, [pc, #40]	; (8000f40 <HAL_I2C_MspDeInit+0x40>)
 8000f18:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8000f1c:	6413      	str	r3, [r2, #64]	; 0x40

    /**I2C3 GPIO Configuration
    PC9     ------> I2C3_SDA
    PA8     ------> I2C3_SCL
    */
    HAL_GPIO_DeInit(I2C3_SDA_GPIO_Port, I2C3_SDA_Pin);
 8000f1e:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000f22:	4808      	ldr	r0, [pc, #32]	; (8000f44 <HAL_I2C_MspDeInit+0x44>)
 8000f24:	f002 f8ea 	bl	80030fc <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(I2C3_SCL_GPIO_Port, I2C3_SCL_Pin);
 8000f28:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000f2c:	4806      	ldr	r0, [pc, #24]	; (8000f48 <HAL_I2C_MspDeInit+0x48>)
 8000f2e:	f002 f8e5 	bl	80030fc <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C3_MspDeInit 1 */

  /* USER CODE END I2C3_MspDeInit 1 */
  }

}
 8000f32:	bf00      	nop
 8000f34:	3708      	adds	r7, #8
 8000f36:	46bd      	mov	sp, r7
 8000f38:	bd80      	pop	{r7, pc}
 8000f3a:	bf00      	nop
 8000f3c:	40005c00 	.word	0x40005c00
 8000f40:	40023800 	.word	0x40023800
 8000f44:	40020800 	.word	0x40020800
 8000f48:	40020000 	.word	0x40020000

08000f4c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8000f4c:	b580      	push	{r7, lr}
 8000f4e:	b09a      	sub	sp, #104	; 0x68
 8000f50:	af00      	add	r7, sp, #0
 8000f52:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000f54:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8000f58:	2200      	movs	r2, #0
 8000f5a:	601a      	str	r2, [r3, #0]
 8000f5c:	605a      	str	r2, [r3, #4]
 8000f5e:	609a      	str	r2, [r3, #8]
 8000f60:	60da      	str	r2, [r3, #12]
 8000f62:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000f64:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000f68:	2230      	movs	r2, #48	; 0x30
 8000f6a:	2100      	movs	r1, #0
 8000f6c:	4618      	mov	r0, r3
 8000f6e:	f01c fde9 	bl	801db44 <memset>
  if(hltdc->Instance==LTDC)
 8000f72:	687b      	ldr	r3, [r7, #4]
 8000f74:	681b      	ldr	r3, [r3, #0]
 8000f76:	4a85      	ldr	r2, [pc, #532]	; (800118c <HAL_LTDC_MspInit+0x240>)
 8000f78:	4293      	cmp	r3, r2
 8000f7a:	f040 8103 	bne.w	8001184 <HAL_LTDC_MspInit+0x238>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000f7e:	2308      	movs	r3, #8
 8000f80:	627b      	str	r3, [r7, #36]	; 0x24
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 72;
 8000f82:	2348      	movs	r3, #72	; 0x48
 8000f84:	637b      	str	r3, [r7, #52]	; 0x34
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8000f86:	2306      	movs	r3, #6
 8000f88:	63fb      	str	r3, [r7, #60]	; 0x3c
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_4;
 8000f8a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000f8e:	64bb      	str	r3, [r7, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000f90:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000f94:	4618      	mov	r0, r3
 8000f96:	f004 faaf 	bl	80054f8 <HAL_RCCEx_PeriphCLKConfig>
 8000f9a:	4603      	mov	r3, r0
 8000f9c:	2b00      	cmp	r3, #0
 8000f9e:	d001      	beq.n	8000fa4 <HAL_LTDC_MspInit+0x58>
    {
      Error_Handler();
 8000fa0:	f7ff fecc 	bl	8000d3c <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000fa4:	2300      	movs	r3, #0
 8000fa6:	623b      	str	r3, [r7, #32]
 8000fa8:	4b79      	ldr	r3, [pc, #484]	; (8001190 <HAL_LTDC_MspInit+0x244>)
 8000faa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000fac:	4a78      	ldr	r2, [pc, #480]	; (8001190 <HAL_LTDC_MspInit+0x244>)
 8000fae:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8000fb2:	6453      	str	r3, [r2, #68]	; 0x44
 8000fb4:	4b76      	ldr	r3, [pc, #472]	; (8001190 <HAL_LTDC_MspInit+0x244>)
 8000fb6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000fb8:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8000fbc:	623b      	str	r3, [r7, #32]
 8000fbe:	6a3b      	ldr	r3, [r7, #32]

    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000fc0:	2300      	movs	r3, #0
 8000fc2:	61fb      	str	r3, [r7, #28]
 8000fc4:	4b72      	ldr	r3, [pc, #456]	; (8001190 <HAL_LTDC_MspInit+0x244>)
 8000fc6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000fc8:	4a71      	ldr	r2, [pc, #452]	; (8001190 <HAL_LTDC_MspInit+0x244>)
 8000fca:	f043 0320 	orr.w	r3, r3, #32
 8000fce:	6313      	str	r3, [r2, #48]	; 0x30
 8000fd0:	4b6f      	ldr	r3, [pc, #444]	; (8001190 <HAL_LTDC_MspInit+0x244>)
 8000fd2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000fd4:	f003 0320 	and.w	r3, r3, #32
 8000fd8:	61fb      	str	r3, [r7, #28]
 8000fda:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000fdc:	2300      	movs	r3, #0
 8000fde:	61bb      	str	r3, [r7, #24]
 8000fe0:	4b6b      	ldr	r3, [pc, #428]	; (8001190 <HAL_LTDC_MspInit+0x244>)
 8000fe2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000fe4:	4a6a      	ldr	r2, [pc, #424]	; (8001190 <HAL_LTDC_MspInit+0x244>)
 8000fe6:	f043 0301 	orr.w	r3, r3, #1
 8000fea:	6313      	str	r3, [r2, #48]	; 0x30
 8000fec:	4b68      	ldr	r3, [pc, #416]	; (8001190 <HAL_LTDC_MspInit+0x244>)
 8000fee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ff0:	f003 0301 	and.w	r3, r3, #1
 8000ff4:	61bb      	str	r3, [r7, #24]
 8000ff6:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000ff8:	2300      	movs	r3, #0
 8000ffa:	617b      	str	r3, [r7, #20]
 8000ffc:	4b64      	ldr	r3, [pc, #400]	; (8001190 <HAL_LTDC_MspInit+0x244>)
 8000ffe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001000:	4a63      	ldr	r2, [pc, #396]	; (8001190 <HAL_LTDC_MspInit+0x244>)
 8001002:	f043 0302 	orr.w	r3, r3, #2
 8001006:	6313      	str	r3, [r2, #48]	; 0x30
 8001008:	4b61      	ldr	r3, [pc, #388]	; (8001190 <HAL_LTDC_MspInit+0x244>)
 800100a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800100c:	f003 0302 	and.w	r3, r3, #2
 8001010:	617b      	str	r3, [r7, #20]
 8001012:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001014:	2300      	movs	r3, #0
 8001016:	613b      	str	r3, [r7, #16]
 8001018:	4b5d      	ldr	r3, [pc, #372]	; (8001190 <HAL_LTDC_MspInit+0x244>)
 800101a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800101c:	4a5c      	ldr	r2, [pc, #368]	; (8001190 <HAL_LTDC_MspInit+0x244>)
 800101e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001022:	6313      	str	r3, [r2, #48]	; 0x30
 8001024:	4b5a      	ldr	r3, [pc, #360]	; (8001190 <HAL_LTDC_MspInit+0x244>)
 8001026:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001028:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800102c:	613b      	str	r3, [r7, #16]
 800102e:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001030:	2300      	movs	r3, #0
 8001032:	60fb      	str	r3, [r7, #12]
 8001034:	4b56      	ldr	r3, [pc, #344]	; (8001190 <HAL_LTDC_MspInit+0x244>)
 8001036:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001038:	4a55      	ldr	r2, [pc, #340]	; (8001190 <HAL_LTDC_MspInit+0x244>)
 800103a:	f043 0304 	orr.w	r3, r3, #4
 800103e:	6313      	str	r3, [r2, #48]	; 0x30
 8001040:	4b53      	ldr	r3, [pc, #332]	; (8001190 <HAL_LTDC_MspInit+0x244>)
 8001042:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001044:	f003 0304 	and.w	r3, r3, #4
 8001048:	60fb      	str	r3, [r7, #12]
 800104a:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800104c:	2300      	movs	r3, #0
 800104e:	60bb      	str	r3, [r7, #8]
 8001050:	4b4f      	ldr	r3, [pc, #316]	; (8001190 <HAL_LTDC_MspInit+0x244>)
 8001052:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001054:	4a4e      	ldr	r2, [pc, #312]	; (8001190 <HAL_LTDC_MspInit+0x244>)
 8001056:	f043 0308 	orr.w	r3, r3, #8
 800105a:	6313      	str	r3, [r2, #48]	; 0x30
 800105c:	4b4c      	ldr	r3, [pc, #304]	; (8001190 <HAL_LTDC_MspInit+0x244>)
 800105e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001060:	f003 0308 	and.w	r3, r3, #8
 8001064:	60bb      	str	r3, [r7, #8]
 8001066:	68bb      	ldr	r3, [r7, #8]
    PG11     ------> LTDC_B3
    PG12     ------> LTDC_B4
    PB8     ------> LTDC_B6
    PB9     ------> LTDC_B7
    */
    GPIO_InitStruct.Pin = ENABLE_Pin;
 8001068:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800106c:	657b      	str	r3, [r7, #84]	; 0x54
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800106e:	2302      	movs	r3, #2
 8001070:	65bb      	str	r3, [r7, #88]	; 0x58
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001072:	2300      	movs	r3, #0
 8001074:	65fb      	str	r3, [r7, #92]	; 0x5c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001076:	2300      	movs	r3, #0
 8001078:	663b      	str	r3, [r7, #96]	; 0x60
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800107a:	230e      	movs	r3, #14
 800107c:	667b      	str	r3, [r7, #100]	; 0x64
    HAL_GPIO_Init(ENABLE_GPIO_Port, &GPIO_InitStruct);
 800107e:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8001082:	4619      	mov	r1, r3
 8001084:	4843      	ldr	r0, [pc, #268]	; (8001194 <HAL_LTDC_MspInit+0x248>)
 8001086:	f001 fe8d 	bl	8002da4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = B5_Pin|VSYNC_Pin|G2_Pin|R4_Pin
 800108a:	f641 0358 	movw	r3, #6232	; 0x1858
 800108e:	657b      	str	r3, [r7, #84]	; 0x54
                          |R5_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001090:	2302      	movs	r3, #2
 8001092:	65bb      	str	r3, [r7, #88]	; 0x58
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001094:	2300      	movs	r3, #0
 8001096:	65fb      	str	r3, [r7, #92]	; 0x5c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001098:	2300      	movs	r3, #0
 800109a:	663b      	str	r3, [r7, #96]	; 0x60
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800109c:	230e      	movs	r3, #14
 800109e:	667b      	str	r3, [r7, #100]	; 0x64
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80010a0:	f107 0354 	add.w	r3, r7, #84	; 0x54
 80010a4:	4619      	mov	r1, r3
 80010a6:	483c      	ldr	r0, [pc, #240]	; (8001198 <HAL_LTDC_MspInit+0x24c>)
 80010a8:	f001 fe7c 	bl	8002da4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = R3_Pin|R6_Pin;
 80010ac:	2303      	movs	r3, #3
 80010ae:	657b      	str	r3, [r7, #84]	; 0x54
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010b0:	2302      	movs	r3, #2
 80010b2:	65bb      	str	r3, [r7, #88]	; 0x58
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010b4:	2300      	movs	r3, #0
 80010b6:	65fb      	str	r3, [r7, #92]	; 0x5c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80010b8:	2300      	movs	r3, #0
 80010ba:	663b      	str	r3, [r7, #96]	; 0x60
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80010bc:	2309      	movs	r3, #9
 80010be:	667b      	str	r3, [r7, #100]	; 0x64
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80010c0:	f107 0354 	add.w	r3, r7, #84	; 0x54
 80010c4:	4619      	mov	r1, r3
 80010c6:	4835      	ldr	r0, [pc, #212]	; (800119c <HAL_LTDC_MspInit+0x250>)
 80010c8:	f001 fe6c 	bl	8002da4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = G4_Pin|G5_Pin|B6_Pin|B7_Pin;
 80010cc:	f44f 6370 	mov.w	r3, #3840	; 0xf00
 80010d0:	657b      	str	r3, [r7, #84]	; 0x54
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010d2:	2302      	movs	r3, #2
 80010d4:	65bb      	str	r3, [r7, #88]	; 0x58
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010d6:	2300      	movs	r3, #0
 80010d8:	65fb      	str	r3, [r7, #92]	; 0x5c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80010da:	2300      	movs	r3, #0
 80010dc:	663b      	str	r3, [r7, #96]	; 0x60
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80010de:	230e      	movs	r3, #14
 80010e0:	667b      	str	r3, [r7, #100]	; 0x64
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80010e2:	f107 0354 	add.w	r3, r7, #84	; 0x54
 80010e6:	4619      	mov	r1, r3
 80010e8:	482c      	ldr	r0, [pc, #176]	; (800119c <HAL_LTDC_MspInit+0x250>)
 80010ea:	f001 fe5b 	bl	8002da4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = R7_Pin|DOTCLK_Pin|B3_Pin;
 80010ee:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
 80010f2:	657b      	str	r3, [r7, #84]	; 0x54
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010f4:	2302      	movs	r3, #2
 80010f6:	65bb      	str	r3, [r7, #88]	; 0x58
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010f8:	2300      	movs	r3, #0
 80010fa:	65fb      	str	r3, [r7, #92]	; 0x5c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80010fc:	2300      	movs	r3, #0
 80010fe:	663b      	str	r3, [r7, #96]	; 0x60
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001100:	230e      	movs	r3, #14
 8001102:	667b      	str	r3, [r7, #100]	; 0x64
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001104:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8001108:	4619      	mov	r1, r3
 800110a:	4825      	ldr	r0, [pc, #148]	; (80011a0 <HAL_LTDC_MspInit+0x254>)
 800110c:	f001 fe4a 	bl	8002da4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = HSYNC_Pin|G6_Pin|R2_Pin;
 8001110:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
 8001114:	657b      	str	r3, [r7, #84]	; 0x54
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001116:	2302      	movs	r3, #2
 8001118:	65bb      	str	r3, [r7, #88]	; 0x58
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800111a:	2300      	movs	r3, #0
 800111c:	65fb      	str	r3, [r7, #92]	; 0x5c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800111e:	2300      	movs	r3, #0
 8001120:	663b      	str	r3, [r7, #96]	; 0x60
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001122:	230e      	movs	r3, #14
 8001124:	667b      	str	r3, [r7, #100]	; 0x64
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001126:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800112a:	4619      	mov	r1, r3
 800112c:	481d      	ldr	r0, [pc, #116]	; (80011a4 <HAL_LTDC_MspInit+0x258>)
 800112e:	f001 fe39 	bl	8002da4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = G7_Pin|B2_Pin;
 8001132:	2348      	movs	r3, #72	; 0x48
 8001134:	657b      	str	r3, [r7, #84]	; 0x54
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001136:	2302      	movs	r3, #2
 8001138:	65bb      	str	r3, [r7, #88]	; 0x58
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800113a:	2300      	movs	r3, #0
 800113c:	65fb      	str	r3, [r7, #92]	; 0x5c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800113e:	2300      	movs	r3, #0
 8001140:	663b      	str	r3, [r7, #96]	; 0x60
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001142:	230e      	movs	r3, #14
 8001144:	667b      	str	r3, [r7, #100]	; 0x64
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001146:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800114a:	4619      	mov	r1, r3
 800114c:	4816      	ldr	r0, [pc, #88]	; (80011a8 <HAL_LTDC_MspInit+0x25c>)
 800114e:	f001 fe29 	bl	8002da4 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = G3_Pin|B4_Pin;
 8001152:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8001156:	657b      	str	r3, [r7, #84]	; 0x54
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001158:	2302      	movs	r3, #2
 800115a:	65bb      	str	r3, [r7, #88]	; 0x58
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800115c:	2300      	movs	r3, #0
 800115e:	65fb      	str	r3, [r7, #92]	; 0x5c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001160:	2300      	movs	r3, #0
 8001162:	663b      	str	r3, [r7, #96]	; 0x60
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001164:	2309      	movs	r3, #9
 8001166:	667b      	str	r3, [r7, #100]	; 0x64
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001168:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800116c:	4619      	mov	r1, r3
 800116e:	480c      	ldr	r0, [pc, #48]	; (80011a0 <HAL_LTDC_MspInit+0x254>)
 8001170:	f001 fe18 	bl	8002da4 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001174:	2200      	movs	r2, #0
 8001176:	2105      	movs	r1, #5
 8001178:	2058      	movs	r0, #88	; 0x58
 800117a:	f001 fbe1 	bl	8002940 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800117e:	2058      	movs	r0, #88	; 0x58
 8001180:	f001 fbfa 	bl	8002978 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001184:	bf00      	nop
 8001186:	3768      	adds	r7, #104	; 0x68
 8001188:	46bd      	mov	sp, r7
 800118a:	bd80      	pop	{r7, pc}
 800118c:	40016800 	.word	0x40016800
 8001190:	40023800 	.word	0x40023800
 8001194:	40021400 	.word	0x40021400
 8001198:	40020000 	.word	0x40020000
 800119c:	40020400 	.word	0x40020400
 80011a0:	40021800 	.word	0x40021800
 80011a4:	40020800 	.word	0x40020800
 80011a8:	40020c00 	.word	0x40020c00

080011ac <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80011ac:	b580      	push	{r7, lr}
 80011ae:	b08a      	sub	sp, #40	; 0x28
 80011b0:	af00      	add	r7, sp, #0
 80011b2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80011b4:	f107 0314 	add.w	r3, r7, #20
 80011b8:	2200      	movs	r2, #0
 80011ba:	601a      	str	r2, [r3, #0]
 80011bc:	605a      	str	r2, [r3, #4]
 80011be:	609a      	str	r2, [r3, #8]
 80011c0:	60da      	str	r2, [r3, #12]
 80011c2:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI5)
 80011c4:	687b      	ldr	r3, [r7, #4]
 80011c6:	681b      	ldr	r3, [r3, #0]
 80011c8:	4a19      	ldr	r2, [pc, #100]	; (8001230 <HAL_SPI_MspInit+0x84>)
 80011ca:	4293      	cmp	r3, r2
 80011cc:	d12c      	bne.n	8001228 <HAL_SPI_MspInit+0x7c>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 80011ce:	2300      	movs	r3, #0
 80011d0:	613b      	str	r3, [r7, #16]
 80011d2:	4b18      	ldr	r3, [pc, #96]	; (8001234 <HAL_SPI_MspInit+0x88>)
 80011d4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80011d6:	4a17      	ldr	r2, [pc, #92]	; (8001234 <HAL_SPI_MspInit+0x88>)
 80011d8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80011dc:	6453      	str	r3, [r2, #68]	; 0x44
 80011de:	4b15      	ldr	r3, [pc, #84]	; (8001234 <HAL_SPI_MspInit+0x88>)
 80011e0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80011e2:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80011e6:	613b      	str	r3, [r7, #16]
 80011e8:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOF_CLK_ENABLE();
 80011ea:	2300      	movs	r3, #0
 80011ec:	60fb      	str	r3, [r7, #12]
 80011ee:	4b11      	ldr	r3, [pc, #68]	; (8001234 <HAL_SPI_MspInit+0x88>)
 80011f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011f2:	4a10      	ldr	r2, [pc, #64]	; (8001234 <HAL_SPI_MspInit+0x88>)
 80011f4:	f043 0320 	orr.w	r3, r3, #32
 80011f8:	6313      	str	r3, [r2, #48]	; 0x30
 80011fa:	4b0e      	ldr	r3, [pc, #56]	; (8001234 <HAL_SPI_MspInit+0x88>)
 80011fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011fe:	f003 0320 	and.w	r3, r3, #32
 8001202:	60fb      	str	r3, [r7, #12]
 8001204:	68fb      	ldr	r3, [r7, #12]
    /**SPI5 GPIO Configuration
    PF7     ------> SPI5_SCK
    PF8     ------> SPI5_MISO
    PF9     ------> SPI5_MOSI
    */
    GPIO_InitStruct.Pin = SPI5_SCK_Pin|SPI5_MISO_Pin|SPI5_MOSI_Pin;
 8001206:	f44f 7360 	mov.w	r3, #896	; 0x380
 800120a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800120c:	2302      	movs	r3, #2
 800120e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001210:	2300      	movs	r3, #0
 8001212:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001214:	2300      	movs	r3, #0
 8001216:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001218:	2305      	movs	r3, #5
 800121a:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800121c:	f107 0314 	add.w	r3, r7, #20
 8001220:	4619      	mov	r1, r3
 8001222:	4805      	ldr	r0, [pc, #20]	; (8001238 <HAL_SPI_MspInit+0x8c>)
 8001224:	f001 fdbe 	bl	8002da4 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001228:	bf00      	nop
 800122a:	3728      	adds	r7, #40	; 0x28
 800122c:	46bd      	mov	sp, r7
 800122e:	bd80      	pop	{r7, pc}
 8001230:	40015000 	.word	0x40015000
 8001234:	40023800 	.word	0x40023800
 8001238:	40021400 	.word	0x40021400

0800123c <HAL_SPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspDeInit(SPI_HandleTypeDef* hspi)
{
 800123c:	b580      	push	{r7, lr}
 800123e:	b082      	sub	sp, #8
 8001240:	af00      	add	r7, sp, #0
 8001242:	6078      	str	r0, [r7, #4]
  if(hspi->Instance==SPI5)
 8001244:	687b      	ldr	r3, [r7, #4]
 8001246:	681b      	ldr	r3, [r3, #0]
 8001248:	4a08      	ldr	r2, [pc, #32]	; (800126c <HAL_SPI_MspDeInit+0x30>)
 800124a:	4293      	cmp	r3, r2
 800124c:	d10a      	bne.n	8001264 <HAL_SPI_MspDeInit+0x28>
  {
  /* USER CODE BEGIN SPI5_MspDeInit 0 */

  /* USER CODE END SPI5_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_SPI5_CLK_DISABLE();
 800124e:	4b08      	ldr	r3, [pc, #32]	; (8001270 <HAL_SPI_MspDeInit+0x34>)
 8001250:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001252:	4a07      	ldr	r2, [pc, #28]	; (8001270 <HAL_SPI_MspDeInit+0x34>)
 8001254:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8001258:	6453      	str	r3, [r2, #68]	; 0x44
    /**SPI5 GPIO Configuration
    PF7     ------> SPI5_SCK
    PF8     ------> SPI5_MISO
    PF9     ------> SPI5_MOSI
    */
    HAL_GPIO_DeInit(GPIOF, SPI5_SCK_Pin|SPI5_MISO_Pin|SPI5_MOSI_Pin);
 800125a:	f44f 7160 	mov.w	r1, #896	; 0x380
 800125e:	4805      	ldr	r0, [pc, #20]	; (8001274 <HAL_SPI_MspDeInit+0x38>)
 8001260:	f001 ff4c 	bl	80030fc <HAL_GPIO_DeInit>
  /* USER CODE BEGIN SPI5_MspDeInit 1 */

  /* USER CODE END SPI5_MspDeInit 1 */
  }

}
 8001264:	bf00      	nop
 8001266:	3708      	adds	r7, #8
 8001268:	46bd      	mov	sp, r7
 800126a:	bd80      	pop	{r7, pc}
 800126c:	40015000 	.word	0x40015000
 8001270:	40023800 	.word	0x40023800
 8001274:	40021400 	.word	0x40021400

08001278 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001278:	b480      	push	{r7}
 800127a:	b085      	sub	sp, #20
 800127c:	af00      	add	r7, sp, #0
 800127e:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM1)
 8001280:	687b      	ldr	r3, [r7, #4]
 8001282:	681b      	ldr	r3, [r3, #0]
 8001284:	4a0b      	ldr	r2, [pc, #44]	; (80012b4 <HAL_TIM_Base_MspInit+0x3c>)
 8001286:	4293      	cmp	r3, r2
 8001288:	d10d      	bne.n	80012a6 <HAL_TIM_Base_MspInit+0x2e>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 800128a:	2300      	movs	r3, #0
 800128c:	60fb      	str	r3, [r7, #12]
 800128e:	4b0a      	ldr	r3, [pc, #40]	; (80012b8 <HAL_TIM_Base_MspInit+0x40>)
 8001290:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001292:	4a09      	ldr	r2, [pc, #36]	; (80012b8 <HAL_TIM_Base_MspInit+0x40>)
 8001294:	f043 0301 	orr.w	r3, r3, #1
 8001298:	6453      	str	r3, [r2, #68]	; 0x44
 800129a:	4b07      	ldr	r3, [pc, #28]	; (80012b8 <HAL_TIM_Base_MspInit+0x40>)
 800129c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800129e:	f003 0301 	and.w	r3, r3, #1
 80012a2:	60fb      	str	r3, [r7, #12]
 80012a4:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }

}
 80012a6:	bf00      	nop
 80012a8:	3714      	adds	r7, #20
 80012aa:	46bd      	mov	sp, r7
 80012ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012b0:	4770      	bx	lr
 80012b2:	bf00      	nop
 80012b4:	40010000 	.word	0x40010000
 80012b8:	40023800 	.word	0x40023800

080012bc <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80012bc:	b580      	push	{r7, lr}
 80012be:	b08a      	sub	sp, #40	; 0x28
 80012c0:	af00      	add	r7, sp, #0
 80012c2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80012c4:	f107 0314 	add.w	r3, r7, #20
 80012c8:	2200      	movs	r2, #0
 80012ca:	601a      	str	r2, [r3, #0]
 80012cc:	605a      	str	r2, [r3, #4]
 80012ce:	609a      	str	r2, [r3, #8]
 80012d0:	60da      	str	r2, [r3, #12]
 80012d2:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART1)
 80012d4:	687b      	ldr	r3, [r7, #4]
 80012d6:	681b      	ldr	r3, [r3, #0]
 80012d8:	4a19      	ldr	r2, [pc, #100]	; (8001340 <HAL_UART_MspInit+0x84>)
 80012da:	4293      	cmp	r3, r2
 80012dc:	d12c      	bne.n	8001338 <HAL_UART_MspInit+0x7c>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 80012de:	2300      	movs	r3, #0
 80012e0:	613b      	str	r3, [r7, #16]
 80012e2:	4b18      	ldr	r3, [pc, #96]	; (8001344 <HAL_UART_MspInit+0x88>)
 80012e4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80012e6:	4a17      	ldr	r2, [pc, #92]	; (8001344 <HAL_UART_MspInit+0x88>)
 80012e8:	f043 0310 	orr.w	r3, r3, #16
 80012ec:	6453      	str	r3, [r2, #68]	; 0x44
 80012ee:	4b15      	ldr	r3, [pc, #84]	; (8001344 <HAL_UART_MspInit+0x88>)
 80012f0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80012f2:	f003 0310 	and.w	r3, r3, #16
 80012f6:	613b      	str	r3, [r7, #16]
 80012f8:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80012fa:	2300      	movs	r3, #0
 80012fc:	60fb      	str	r3, [r7, #12]
 80012fe:	4b11      	ldr	r3, [pc, #68]	; (8001344 <HAL_UART_MspInit+0x88>)
 8001300:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001302:	4a10      	ldr	r2, [pc, #64]	; (8001344 <HAL_UART_MspInit+0x88>)
 8001304:	f043 0301 	orr.w	r3, r3, #1
 8001308:	6313      	str	r3, [r2, #48]	; 0x30
 800130a:	4b0e      	ldr	r3, [pc, #56]	; (8001344 <HAL_UART_MspInit+0x88>)
 800130c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800130e:	f003 0301 	and.w	r3, r3, #1
 8001312:	60fb      	str	r3, [r7, #12]
 8001314:	68fb      	ldr	r3, [r7, #12]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = STLINK_RX_Pin|STLINK_TX_Pin;
 8001316:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800131a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800131c:	2302      	movs	r3, #2
 800131e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001320:	2300      	movs	r3, #0
 8001322:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001324:	2303      	movs	r3, #3
 8001326:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001328:	2307      	movs	r3, #7
 800132a:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800132c:	f107 0314 	add.w	r3, r7, #20
 8001330:	4619      	mov	r1, r3
 8001332:	4805      	ldr	r0, [pc, #20]	; (8001348 <HAL_UART_MspInit+0x8c>)
 8001334:	f001 fd36 	bl	8002da4 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 8001338:	bf00      	nop
 800133a:	3728      	adds	r7, #40	; 0x28
 800133c:	46bd      	mov	sp, r7
 800133e:	bd80      	pop	{r7, pc}
 8001340:	40011000 	.word	0x40011000
 8001344:	40023800 	.word	0x40023800
 8001348:	40020000 	.word	0x40020000

0800134c <HAL_FMC_MspInit>:

}

static uint32_t FMC_Initialized = 0;

static void HAL_FMC_MspInit(void){
 800134c:	b580      	push	{r7, lr}
 800134e:	b086      	sub	sp, #24
 8001350:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001352:	1d3b      	adds	r3, r7, #4
 8001354:	2200      	movs	r2, #0
 8001356:	601a      	str	r2, [r3, #0]
 8001358:	605a      	str	r2, [r3, #4]
 800135a:	609a      	str	r2, [r3, #8]
 800135c:	60da      	str	r2, [r3, #12]
 800135e:	611a      	str	r2, [r3, #16]
  if (FMC_Initialized) {
 8001360:	4b3b      	ldr	r3, [pc, #236]	; (8001450 <HAL_FMC_MspInit+0x104>)
 8001362:	681b      	ldr	r3, [r3, #0]
 8001364:	2b00      	cmp	r3, #0
 8001366:	d16f      	bne.n	8001448 <HAL_FMC_MspInit+0xfc>
    return;
  }
  FMC_Initialized = 1;
 8001368:	4b39      	ldr	r3, [pc, #228]	; (8001450 <HAL_FMC_MspInit+0x104>)
 800136a:	2201      	movs	r2, #1
 800136c:	601a      	str	r2, [r3, #0]

  /* Peripheral clock enable */
  __HAL_RCC_FMC_CLK_ENABLE();
 800136e:	2300      	movs	r3, #0
 8001370:	603b      	str	r3, [r7, #0]
 8001372:	4b38      	ldr	r3, [pc, #224]	; (8001454 <HAL_FMC_MspInit+0x108>)
 8001374:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001376:	4a37      	ldr	r2, [pc, #220]	; (8001454 <HAL_FMC_MspInit+0x108>)
 8001378:	f043 0301 	orr.w	r3, r3, #1
 800137c:	6393      	str	r3, [r2, #56]	; 0x38
 800137e:	4b35      	ldr	r3, [pc, #212]	; (8001454 <HAL_FMC_MspInit+0x108>)
 8001380:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001382:	f003 0301 	and.w	r3, r3, #1
 8001386:	603b      	str	r3, [r7, #0]
 8001388:	683b      	ldr	r3, [r7, #0]
  PB5   ------> FMC_SDCKE1
  PB6   ------> FMC_SDNE1
  PE0   ------> FMC_NBL0
  PE1   ------> FMC_NBL1
  */
  GPIO_InitStruct.Pin = A0_Pin|A1_Pin|A2_Pin|A3_Pin
 800138a:	f64f 033f 	movw	r3, #63551	; 0xf83f
 800138e:	607b      	str	r3, [r7, #4]
                          |A4_Pin|A5_Pin|SDNRAS_Pin|A6_Pin
                          |A7_Pin|A8_Pin|A9_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001390:	2302      	movs	r3, #2
 8001392:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001394:	2300      	movs	r3, #0
 8001396:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001398:	2303      	movs	r3, #3
 800139a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800139c:	230c      	movs	r3, #12
 800139e:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80013a0:	1d3b      	adds	r3, r7, #4
 80013a2:	4619      	mov	r1, r3
 80013a4:	482c      	ldr	r0, [pc, #176]	; (8001458 <HAL_FMC_MspInit+0x10c>)
 80013a6:	f001 fcfd 	bl	8002da4 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = SDNWE_Pin;
 80013aa:	2301      	movs	r3, #1
 80013ac:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80013ae:	2302      	movs	r3, #2
 80013b0:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013b2:	2300      	movs	r3, #0
 80013b4:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80013b6:	2303      	movs	r3, #3
 80013b8:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80013ba:	230c      	movs	r3, #12
 80013bc:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(SDNWE_GPIO_Port, &GPIO_InitStruct);
 80013be:	1d3b      	adds	r3, r7, #4
 80013c0:	4619      	mov	r1, r3
 80013c2:	4826      	ldr	r0, [pc, #152]	; (800145c <HAL_FMC_MspInit+0x110>)
 80013c4:	f001 fcee 	bl	8002da4 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = A10_Pin|A11_Pin|BA0_Pin|BA1_Pin
 80013c8:	f248 1333 	movw	r3, #33075	; 0x8133
 80013cc:	607b      	str	r3, [r7, #4]
                          |SDCLK_Pin|SDNCAS_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80013ce:	2302      	movs	r3, #2
 80013d0:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013d2:	2300      	movs	r3, #0
 80013d4:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80013d6:	2303      	movs	r3, #3
 80013d8:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80013da:	230c      	movs	r3, #12
 80013dc:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80013de:	1d3b      	adds	r3, r7, #4
 80013e0:	4619      	mov	r1, r3
 80013e2:	481f      	ldr	r0, [pc, #124]	; (8001460 <HAL_FMC_MspInit+0x114>)
 80013e4:	f001 fcde 	bl	8002da4 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = D4_Pin|D5_Pin|D6_Pin|D7_Pin
 80013e8:	f64f 7383 	movw	r3, #65411	; 0xff83
 80013ec:	607b      	str	r3, [r7, #4]
                          |D8_Pin|D9_Pin|D10_Pin|D11_Pin
                          |D12_Pin|NBL0_Pin|NBL1_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80013ee:	2302      	movs	r3, #2
 80013f0:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013f2:	2300      	movs	r3, #0
 80013f4:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80013f6:	2303      	movs	r3, #3
 80013f8:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80013fa:	230c      	movs	r3, #12
 80013fc:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80013fe:	1d3b      	adds	r3, r7, #4
 8001400:	4619      	mov	r1, r3
 8001402:	4818      	ldr	r0, [pc, #96]	; (8001464 <HAL_FMC_MspInit+0x118>)
 8001404:	f001 fcce 	bl	8002da4 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = D13_Pin|D14_Pin|D15_Pin|D0_Pin
 8001408:	f24c 7303 	movw	r3, #50947	; 0xc703
 800140c:	607b      	str	r3, [r7, #4]
                          |D1_Pin|D2_Pin|D3_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800140e:	2302      	movs	r3, #2
 8001410:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001412:	2300      	movs	r3, #0
 8001414:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001416:	2303      	movs	r3, #3
 8001418:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800141a:	230c      	movs	r3, #12
 800141c:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800141e:	1d3b      	adds	r3, r7, #4
 8001420:	4619      	mov	r1, r3
 8001422:	4811      	ldr	r0, [pc, #68]	; (8001468 <HAL_FMC_MspInit+0x11c>)
 8001424:	f001 fcbe 	bl	8002da4 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = SDCKE1_Pin|SDNE1_Pin;
 8001428:	2360      	movs	r3, #96	; 0x60
 800142a:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800142c:	2302      	movs	r3, #2
 800142e:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001430:	2300      	movs	r3, #0
 8001432:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001434:	2303      	movs	r3, #3
 8001436:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001438:	230c      	movs	r3, #12
 800143a:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800143c:	1d3b      	adds	r3, r7, #4
 800143e:	4619      	mov	r1, r3
 8001440:	480a      	ldr	r0, [pc, #40]	; (800146c <HAL_FMC_MspInit+0x120>)
 8001442:	f001 fcaf 	bl	8002da4 <HAL_GPIO_Init>
 8001446:	e000      	b.n	800144a <HAL_FMC_MspInit+0xfe>
    return;
 8001448:	bf00      	nop

  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}
 800144a:	3718      	adds	r7, #24
 800144c:	46bd      	mov	sp, r7
 800144e:	bd80      	pop	{r7, pc}
 8001450:	20025bd4 	.word	0x20025bd4
 8001454:	40023800 	.word	0x40023800
 8001458:	40021400 	.word	0x40021400
 800145c:	40020800 	.word	0x40020800
 8001460:	40021800 	.word	0x40021800
 8001464:	40021000 	.word	0x40021000
 8001468:	40020c00 	.word	0x40020c00
 800146c:	40020400 	.word	0x40020400

08001470 <HAL_SDRAM_MspInit>:

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001470:	b580      	push	{r7, lr}
 8001472:	b082      	sub	sp, #8
 8001474:	af00      	add	r7, sp, #0
 8001476:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN SDRAM_MspInit 0 */

  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
 8001478:	f7ff ff68 	bl	800134c <HAL_FMC_MspInit>
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 800147c:	bf00      	nop
 800147e:	3708      	adds	r7, #8
 8001480:	46bd      	mov	sp, r7
 8001482:	bd80      	pop	{r7, pc}

08001484 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001484:	b580      	push	{r7, lr}
 8001486:	b08c      	sub	sp, #48	; 0x30
 8001488:	af00      	add	r7, sp, #0
 800148a:	6078      	str	r0, [r7, #4]
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
 800148c:	2300      	movs	r3, #0
 800148e:	62fb      	str	r3, [r7, #44]	; 0x2c
  uint32_t              uwPrescalerValue = 0;
 8001490:	2300      	movs	r3, #0
 8001492:	62bb      	str	r3, [r7, #40]	; 0x28
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001494:	2200      	movs	r2, #0
 8001496:	6879      	ldr	r1, [r7, #4]
 8001498:	2036      	movs	r0, #54	; 0x36
 800149a:	f001 fa51 	bl	8002940 <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 800149e:	2036      	movs	r0, #54	; 0x36
 80014a0:	f001 fa6a 	bl	8002978 <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 80014a4:	2300      	movs	r3, #0
 80014a6:	60fb      	str	r3, [r7, #12]
 80014a8:	4b1f      	ldr	r3, [pc, #124]	; (8001528 <HAL_InitTick+0xa4>)
 80014aa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80014ac:	4a1e      	ldr	r2, [pc, #120]	; (8001528 <HAL_InitTick+0xa4>)
 80014ae:	f043 0310 	orr.w	r3, r3, #16
 80014b2:	6413      	str	r3, [r2, #64]	; 0x40
 80014b4:	4b1c      	ldr	r3, [pc, #112]	; (8001528 <HAL_InitTick+0xa4>)
 80014b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80014b8:	f003 0310 	and.w	r3, r3, #16
 80014bc:	60fb      	str	r3, [r7, #12]
 80014be:	68fb      	ldr	r3, [r7, #12]

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80014c0:	f107 0210 	add.w	r2, r7, #16
 80014c4:	f107 0314 	add.w	r3, r7, #20
 80014c8:	4611      	mov	r1, r2
 80014ca:	4618      	mov	r0, r3
 80014cc:	f003 ffe2 	bl	8005494 <HAL_RCC_GetClockConfig>

  /* Compute TIM6 clock */
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 80014d0:	f003 ffb8 	bl	8005444 <HAL_RCC_GetPCLK1Freq>
 80014d4:	4603      	mov	r3, r0
 80014d6:	005b      	lsls	r3, r3, #1
 80014d8:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80014da:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80014dc:	4a13      	ldr	r2, [pc, #76]	; (800152c <HAL_InitTick+0xa8>)
 80014de:	fba2 2303 	umull	r2, r3, r2, r3
 80014e2:	0c9b      	lsrs	r3, r3, #18
 80014e4:	3b01      	subs	r3, #1
 80014e6:	62bb      	str	r3, [r7, #40]	; 0x28

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80014e8:	4b11      	ldr	r3, [pc, #68]	; (8001530 <HAL_InitTick+0xac>)
 80014ea:	4a12      	ldr	r2, [pc, #72]	; (8001534 <HAL_InitTick+0xb0>)
 80014ec:	601a      	str	r2, [r3, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80014ee:	4b10      	ldr	r3, [pc, #64]	; (8001530 <HAL_InitTick+0xac>)
 80014f0:	f240 32e7 	movw	r2, #999	; 0x3e7
 80014f4:	60da      	str	r2, [r3, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
 80014f6:	4a0e      	ldr	r2, [pc, #56]	; (8001530 <HAL_InitTick+0xac>)
 80014f8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80014fa:	6053      	str	r3, [r2, #4]
  htim6.Init.ClockDivision = 0;
 80014fc:	4b0c      	ldr	r3, [pc, #48]	; (8001530 <HAL_InitTick+0xac>)
 80014fe:	2200      	movs	r2, #0
 8001500:	611a      	str	r2, [r3, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001502:	4b0b      	ldr	r3, [pc, #44]	; (8001530 <HAL_InitTick+0xac>)
 8001504:	2200      	movs	r2, #0
 8001506:	609a      	str	r2, [r3, #8]

  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001508:	4809      	ldr	r0, [pc, #36]	; (8001530 <HAL_InitTick+0xac>)
 800150a:	f004 ffc7 	bl	800649c <HAL_TIM_Base_Init>
 800150e:	4603      	mov	r3, r0
 8001510:	2b00      	cmp	r3, #0
 8001512:	d104      	bne.n	800151e <HAL_InitTick+0x9a>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001514:	4806      	ldr	r0, [pc, #24]	; (8001530 <HAL_InitTick+0xac>)
 8001516:	f005 f811 	bl	800653c <HAL_TIM_Base_Start_IT>
 800151a:	4603      	mov	r3, r0
 800151c:	e000      	b.n	8001520 <HAL_InitTick+0x9c>
  }

  /* Return function status */
  return HAL_ERROR;
 800151e:	2301      	movs	r3, #1
}
 8001520:	4618      	mov	r0, r3
 8001522:	3730      	adds	r7, #48	; 0x30
 8001524:	46bd      	mov	sp, r7
 8001526:	bd80      	pop	{r7, pc}
 8001528:	40023800 	.word	0x40023800
 800152c:	431bde83 	.word	0x431bde83
 8001530:	20025bd8 	.word	0x20025bd8
 8001534:	40001000 	.word	0x40001000

08001538 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001538:	b480      	push	{r7}
 800153a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 800153c:	e7fe      	b.n	800153c <NMI_Handler+0x4>

0800153e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800153e:	b480      	push	{r7}
 8001540:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001542:	e7fe      	b.n	8001542 <HardFault_Handler+0x4>

08001544 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001544:	b480      	push	{r7}
 8001546:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001548:	e7fe      	b.n	8001548 <MemManage_Handler+0x4>

0800154a <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800154a:	b480      	push	{r7}
 800154c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800154e:	e7fe      	b.n	800154e <BusFault_Handler+0x4>

08001550 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001550:	b480      	push	{r7}
 8001552:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001554:	e7fe      	b.n	8001554 <UsageFault_Handler+0x4>

08001556 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001556:	b480      	push	{r7}
 8001558:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800155a:	bf00      	nop
 800155c:	46bd      	mov	sp, r7
 800155e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001562:	4770      	bx	lr

08001564 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001564:	b480      	push	{r7}
 8001566:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001568:	bf00      	nop
 800156a:	46bd      	mov	sp, r7
 800156c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001570:	4770      	bx	lr

08001572 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001572:	b480      	push	{r7}
 8001574:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001576:	bf00      	nop
 8001578:	46bd      	mov	sp, r7
 800157a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800157e:	4770      	bx	lr

08001580 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001580:	b480      	push	{r7}
 8001582:	af00      	add	r7, sp, #0
  /* USER CODE END SysTick_IRQn 0 */

  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001584:	bf00      	nop
 8001586:	46bd      	mov	sp, r7
 8001588:	f85d 7b04 	ldr.w	r7, [sp], #4
 800158c:	4770      	bx	lr
	...

08001590 <TIM6_DAC_IRQHandler>:

/**
  * @brief This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts.
  */
void TIM6_DAC_IRQHandler(void)
{
 8001590:	b580      	push	{r7, lr}
 8001592:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001594:	4802      	ldr	r0, [pc, #8]	; (80015a0 <TIM6_DAC_IRQHandler+0x10>)
 8001596:	f005 f841 	bl	800661c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM6_DAC_IRQn 1 */

  /* USER CODE END TIM6_DAC_IRQn 1 */
}
 800159a:	bf00      	nop
 800159c:	bd80      	pop	{r7, pc}
 800159e:	bf00      	nop
 80015a0:	20025bd8 	.word	0x20025bd8

080015a4 <LTDC_IRQHandler>:

/**
  * @brief This function handles LTDC global interrupt.
  */
void LTDC_IRQHandler(void)
{
 80015a4:	b580      	push	{r7, lr}
 80015a6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80015a8:	4802      	ldr	r0, [pc, #8]	; (80015b4 <LTDC_IRQHandler+0x10>)
 80015aa:	f003 f815 	bl	80045d8 <HAL_LTDC_IRQHandler>
  /* USER CODE BEGIN LTDC_IRQn 1 */

  /* USER CODE END LTDC_IRQn 1 */
}
 80015ae:	bf00      	nop
 80015b0:	bd80      	pop	{r7, pc}
 80015b2:	bf00      	nop
 80015b4:	20025a14 	.word	0x20025a14

080015b8 <DMA2D_IRQHandler>:

/**
  * @brief This function handles DMA2D global interrupt.
  */
void DMA2D_IRQHandler(void)
{
 80015b8:	b580      	push	{r7, lr}
 80015ba:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 80015bc:	4802      	ldr	r0, [pc, #8]	; (80015c8 <DMA2D_IRQHandler+0x10>)
 80015be:	f001 fa4e 	bl	8002a5e <HAL_DMA2D_IRQHandler>
  /* USER CODE BEGIN DMA2D_IRQn 1 */

  /* USER CODE END DMA2D_IRQn 1 */
}
 80015c2:	bf00      	nop
 80015c4:	bd80      	pop	{r7, pc}
 80015c6:	bf00      	nop
 80015c8:	20025980 	.word	0x20025980

080015cc <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80015cc:	b480      	push	{r7}
 80015ce:	af00      	add	r7, sp, #0
	return 1;
 80015d0:	2301      	movs	r3, #1
}
 80015d2:	4618      	mov	r0, r3
 80015d4:	46bd      	mov	sp, r7
 80015d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015da:	4770      	bx	lr

080015dc <_kill>:

int _kill(int pid, int sig)
{
 80015dc:	b580      	push	{r7, lr}
 80015de:	b082      	sub	sp, #8
 80015e0:	af00      	add	r7, sp, #0
 80015e2:	6078      	str	r0, [r7, #4]
 80015e4:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 80015e6:	f01c fa53 	bl	801da90 <__errno>
 80015ea:	4603      	mov	r3, r0
 80015ec:	2216      	movs	r2, #22
 80015ee:	601a      	str	r2, [r3, #0]
	return -1;
 80015f0:	f04f 33ff 	mov.w	r3, #4294967295
}
 80015f4:	4618      	mov	r0, r3
 80015f6:	3708      	adds	r7, #8
 80015f8:	46bd      	mov	sp, r7
 80015fa:	bd80      	pop	{r7, pc}

080015fc <_exit>:

void _exit (int status)
{
 80015fc:	b580      	push	{r7, lr}
 80015fe:	b082      	sub	sp, #8
 8001600:	af00      	add	r7, sp, #0
 8001602:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8001604:	f04f 31ff 	mov.w	r1, #4294967295
 8001608:	6878      	ldr	r0, [r7, #4]
 800160a:	f7ff ffe7 	bl	80015dc <_kill>
	while (1) {}		/* Make sure we hang here */
 800160e:	e7fe      	b.n	800160e <_exit+0x12>

08001610 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001610:	b580      	push	{r7, lr}
 8001612:	b086      	sub	sp, #24
 8001614:	af00      	add	r7, sp, #0
 8001616:	60f8      	str	r0, [r7, #12]
 8001618:	60b9      	str	r1, [r7, #8]
 800161a:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800161c:	2300      	movs	r3, #0
 800161e:	617b      	str	r3, [r7, #20]
 8001620:	e00a      	b.n	8001638 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8001622:	f3af 8000 	nop.w
 8001626:	4601      	mov	r1, r0
 8001628:	68bb      	ldr	r3, [r7, #8]
 800162a:	1c5a      	adds	r2, r3, #1
 800162c:	60ba      	str	r2, [r7, #8]
 800162e:	b2ca      	uxtb	r2, r1
 8001630:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001632:	697b      	ldr	r3, [r7, #20]
 8001634:	3301      	adds	r3, #1
 8001636:	617b      	str	r3, [r7, #20]
 8001638:	697a      	ldr	r2, [r7, #20]
 800163a:	687b      	ldr	r3, [r7, #4]
 800163c:	429a      	cmp	r2, r3
 800163e:	dbf0      	blt.n	8001622 <_read+0x12>
	}

return len;
 8001640:	687b      	ldr	r3, [r7, #4]
}
 8001642:	4618      	mov	r0, r3
 8001644:	3718      	adds	r7, #24
 8001646:	46bd      	mov	sp, r7
 8001648:	bd80      	pop	{r7, pc}

0800164a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800164a:	b580      	push	{r7, lr}
 800164c:	b086      	sub	sp, #24
 800164e:	af00      	add	r7, sp, #0
 8001650:	60f8      	str	r0, [r7, #12]
 8001652:	60b9      	str	r1, [r7, #8]
 8001654:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001656:	2300      	movs	r3, #0
 8001658:	617b      	str	r3, [r7, #20]
 800165a:	e009      	b.n	8001670 <_write+0x26>
	{
		__io_putchar(*ptr++);
 800165c:	68bb      	ldr	r3, [r7, #8]
 800165e:	1c5a      	adds	r2, r3, #1
 8001660:	60ba      	str	r2, [r7, #8]
 8001662:	781b      	ldrb	r3, [r3, #0]
 8001664:	4618      	mov	r0, r3
 8001666:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800166a:	697b      	ldr	r3, [r7, #20]
 800166c:	3301      	adds	r3, #1
 800166e:	617b      	str	r3, [r7, #20]
 8001670:	697a      	ldr	r2, [r7, #20]
 8001672:	687b      	ldr	r3, [r7, #4]
 8001674:	429a      	cmp	r2, r3
 8001676:	dbf1      	blt.n	800165c <_write+0x12>
	}
	return len;
 8001678:	687b      	ldr	r3, [r7, #4]
}
 800167a:	4618      	mov	r0, r3
 800167c:	3718      	adds	r7, #24
 800167e:	46bd      	mov	sp, r7
 8001680:	bd80      	pop	{r7, pc}

08001682 <_close>:

int _close(int file)
{
 8001682:	b480      	push	{r7}
 8001684:	b083      	sub	sp, #12
 8001686:	af00      	add	r7, sp, #0
 8001688:	6078      	str	r0, [r7, #4]
	return -1;
 800168a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800168e:	4618      	mov	r0, r3
 8001690:	370c      	adds	r7, #12
 8001692:	46bd      	mov	sp, r7
 8001694:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001698:	4770      	bx	lr

0800169a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800169a:	b480      	push	{r7}
 800169c:	b083      	sub	sp, #12
 800169e:	af00      	add	r7, sp, #0
 80016a0:	6078      	str	r0, [r7, #4]
 80016a2:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80016a4:	683b      	ldr	r3, [r7, #0]
 80016a6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80016aa:	605a      	str	r2, [r3, #4]
	return 0;
 80016ac:	2300      	movs	r3, #0
}
 80016ae:	4618      	mov	r0, r3
 80016b0:	370c      	adds	r7, #12
 80016b2:	46bd      	mov	sp, r7
 80016b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016b8:	4770      	bx	lr

080016ba <_isatty>:

int _isatty(int file)
{
 80016ba:	b480      	push	{r7}
 80016bc:	b083      	sub	sp, #12
 80016be:	af00      	add	r7, sp, #0
 80016c0:	6078      	str	r0, [r7, #4]
	return 1;
 80016c2:	2301      	movs	r3, #1
}
 80016c4:	4618      	mov	r0, r3
 80016c6:	370c      	adds	r7, #12
 80016c8:	46bd      	mov	sp, r7
 80016ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016ce:	4770      	bx	lr

080016d0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80016d0:	b480      	push	{r7}
 80016d2:	b085      	sub	sp, #20
 80016d4:	af00      	add	r7, sp, #0
 80016d6:	60f8      	str	r0, [r7, #12]
 80016d8:	60b9      	str	r1, [r7, #8]
 80016da:	607a      	str	r2, [r7, #4]
	return 0;
 80016dc:	2300      	movs	r3, #0
}
 80016de:	4618      	mov	r0, r3
 80016e0:	3714      	adds	r7, #20
 80016e2:	46bd      	mov	sp, r7
 80016e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016e8:	4770      	bx	lr
	...

080016ec <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80016ec:	b580      	push	{r7, lr}
 80016ee:	b086      	sub	sp, #24
 80016f0:	af00      	add	r7, sp, #0
 80016f2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80016f4:	4a14      	ldr	r2, [pc, #80]	; (8001748 <_sbrk+0x5c>)
 80016f6:	4b15      	ldr	r3, [pc, #84]	; (800174c <_sbrk+0x60>)
 80016f8:	1ad3      	subs	r3, r2, r3
 80016fa:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80016fc:	697b      	ldr	r3, [r7, #20]
 80016fe:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001700:	4b13      	ldr	r3, [pc, #76]	; (8001750 <_sbrk+0x64>)
 8001702:	681b      	ldr	r3, [r3, #0]
 8001704:	2b00      	cmp	r3, #0
 8001706:	d102      	bne.n	800170e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001708:	4b11      	ldr	r3, [pc, #68]	; (8001750 <_sbrk+0x64>)
 800170a:	4a12      	ldr	r2, [pc, #72]	; (8001754 <_sbrk+0x68>)
 800170c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800170e:	4b10      	ldr	r3, [pc, #64]	; (8001750 <_sbrk+0x64>)
 8001710:	681a      	ldr	r2, [r3, #0]
 8001712:	687b      	ldr	r3, [r7, #4]
 8001714:	4413      	add	r3, r2
 8001716:	693a      	ldr	r2, [r7, #16]
 8001718:	429a      	cmp	r2, r3
 800171a:	d207      	bcs.n	800172c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800171c:	f01c f9b8 	bl	801da90 <__errno>
 8001720:	4603      	mov	r3, r0
 8001722:	220c      	movs	r2, #12
 8001724:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001726:	f04f 33ff 	mov.w	r3, #4294967295
 800172a:	e009      	b.n	8001740 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800172c:	4b08      	ldr	r3, [pc, #32]	; (8001750 <_sbrk+0x64>)
 800172e:	681b      	ldr	r3, [r3, #0]
 8001730:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001732:	4b07      	ldr	r3, [pc, #28]	; (8001750 <_sbrk+0x64>)
 8001734:	681a      	ldr	r2, [r3, #0]
 8001736:	687b      	ldr	r3, [r7, #4]
 8001738:	4413      	add	r3, r2
 800173a:	4a05      	ldr	r2, [pc, #20]	; (8001750 <_sbrk+0x64>)
 800173c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800173e:	68fb      	ldr	r3, [r7, #12]
}
 8001740:	4618      	mov	r0, r3
 8001742:	3718      	adds	r7, #24
 8001744:	46bd      	mov	sp, r7
 8001746:	bd80      	pop	{r7, pc}
 8001748:	20030000 	.word	0x20030000
 800174c:	00000400 	.word	0x00000400
 8001750:	20025c20 	.word	0x20025c20
 8001754:	200271a8 	.word	0x200271a8

08001758 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001758:	b480      	push	{r7}
 800175a:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800175c:	4b06      	ldr	r3, [pc, #24]	; (8001778 <SystemInit+0x20>)
 800175e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001762:	4a05      	ldr	r2, [pc, #20]	; (8001778 <SystemInit+0x20>)
 8001764:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001768:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800176c:	bf00      	nop
 800176e:	46bd      	mov	sp, r7
 8001770:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001774:	4770      	bx	lr
 8001776:	bf00      	nop
 8001778:	e000ed00 	.word	0xe000ed00

0800177c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800177c:	f8df d034 	ldr.w	sp, [pc, #52]	; 80017b4 <LoopFillZerobss+0x12>
 
/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8001780:	480d      	ldr	r0, [pc, #52]	; (80017b8 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8001782:	490e      	ldr	r1, [pc, #56]	; (80017bc <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8001784:	4a0e      	ldr	r2, [pc, #56]	; (80017c0 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8001786:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001788:	e002      	b.n	8001790 <LoopCopyDataInit>

0800178a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800178a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800178c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800178e:	3304      	adds	r3, #4

08001790 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001790:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001792:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001794:	d3f9      	bcc.n	800178a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001796:	4a0b      	ldr	r2, [pc, #44]	; (80017c4 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8001798:	4c0b      	ldr	r4, [pc, #44]	; (80017c8 <LoopFillZerobss+0x26>)
  movs r3, #0
 800179a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800179c:	e001      	b.n	80017a2 <LoopFillZerobss>

0800179e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800179e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80017a0:	3204      	adds	r2, #4

080017a2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80017a2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80017a4:	d3fb      	bcc.n	800179e <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 80017a6:	f7ff ffd7 	bl	8001758 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80017aa:	f01c f989 	bl	801dac0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80017ae:	f7fe fef1 	bl	8000594 <main>
  bx  lr    
 80017b2:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80017b4:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 80017b8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80017bc:	2000015c 	.word	0x2000015c
  ldr r2, =_sidata
 80017c0:	08036844 	.word	0x08036844
  ldr r2, =_sbss
 80017c4:	2002595c 	.word	0x2002595c
  ldr r4, =_ebss
 80017c8:	200271a4 	.word	0x200271a4

080017cc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80017cc:	e7fe      	b.n	80017cc <ADC_IRQHandler>

080017ce <ili9341_Init>:
  * @brief  Power on the LCD.
  * @param  None
  * @retval None
  */
void ili9341_Init(void)
{
 80017ce:	b580      	push	{r7, lr}
 80017d0:	af00      	add	r7, sp, #0
  /* Initialize ILI9341 low level bus layer ----------------------------------*/
  LCD_IO_Init();
 80017d2:	f000 fe49 	bl	8002468 <LCD_IO_Init>
  
  /* Configure LCD */
  ili9341_WriteReg(0xCA);
 80017d6:	20ca      	movs	r0, #202	; 0xca
 80017d8:	f000 f95d 	bl	8001a96 <ili9341_WriteReg>
  ili9341_WriteData(0xC3);
 80017dc:	20c3      	movs	r0, #195	; 0xc3
 80017de:	f000 f967 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x08);
 80017e2:	2008      	movs	r0, #8
 80017e4:	f000 f964 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x50);
 80017e8:	2050      	movs	r0, #80	; 0x50
 80017ea:	f000 f961 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteReg(LCD_POWERB);
 80017ee:	20cf      	movs	r0, #207	; 0xcf
 80017f0:	f000 f951 	bl	8001a96 <ili9341_WriteReg>
  ili9341_WriteData(0x00);
 80017f4:	2000      	movs	r0, #0
 80017f6:	f000 f95b 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0xC1);
 80017fa:	20c1      	movs	r0, #193	; 0xc1
 80017fc:	f000 f958 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x30);
 8001800:	2030      	movs	r0, #48	; 0x30
 8001802:	f000 f955 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteReg(LCD_POWER_SEQ);
 8001806:	20ed      	movs	r0, #237	; 0xed
 8001808:	f000 f945 	bl	8001a96 <ili9341_WriteReg>
  ili9341_WriteData(0x64);
 800180c:	2064      	movs	r0, #100	; 0x64
 800180e:	f000 f94f 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x03);
 8001812:	2003      	movs	r0, #3
 8001814:	f000 f94c 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x12);
 8001818:	2012      	movs	r0, #18
 800181a:	f000 f949 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x81);
 800181e:	2081      	movs	r0, #129	; 0x81
 8001820:	f000 f946 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteReg(LCD_DTCA);
 8001824:	20e8      	movs	r0, #232	; 0xe8
 8001826:	f000 f936 	bl	8001a96 <ili9341_WriteReg>
  ili9341_WriteData(0x85);
 800182a:	2085      	movs	r0, #133	; 0x85
 800182c:	f000 f940 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x00);
 8001830:	2000      	movs	r0, #0
 8001832:	f000 f93d 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x78);
 8001836:	2078      	movs	r0, #120	; 0x78
 8001838:	f000 f93a 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteReg(LCD_POWERA);
 800183c:	20cb      	movs	r0, #203	; 0xcb
 800183e:	f000 f92a 	bl	8001a96 <ili9341_WriteReg>
  ili9341_WriteData(0x39);
 8001842:	2039      	movs	r0, #57	; 0x39
 8001844:	f000 f934 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x2C);
 8001848:	202c      	movs	r0, #44	; 0x2c
 800184a:	f000 f931 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x00);
 800184e:	2000      	movs	r0, #0
 8001850:	f000 f92e 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x34);
 8001854:	2034      	movs	r0, #52	; 0x34
 8001856:	f000 f92b 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x02);
 800185a:	2002      	movs	r0, #2
 800185c:	f000 f928 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteReg(LCD_PRC);
 8001860:	20f7      	movs	r0, #247	; 0xf7
 8001862:	f000 f918 	bl	8001a96 <ili9341_WriteReg>
  ili9341_WriteData(0x20);
 8001866:	2020      	movs	r0, #32
 8001868:	f000 f922 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteReg(LCD_DTCB);
 800186c:	20ea      	movs	r0, #234	; 0xea
 800186e:	f000 f912 	bl	8001a96 <ili9341_WriteReg>
  ili9341_WriteData(0x00);
 8001872:	2000      	movs	r0, #0
 8001874:	f000 f91c 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x00);
 8001878:	2000      	movs	r0, #0
 800187a:	f000 f919 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteReg(LCD_FRMCTR1);
 800187e:	20b1      	movs	r0, #177	; 0xb1
 8001880:	f000 f909 	bl	8001a96 <ili9341_WriteReg>
  ili9341_WriteData(0x00);
 8001884:	2000      	movs	r0, #0
 8001886:	f000 f913 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x1B);
 800188a:	201b      	movs	r0, #27
 800188c:	f000 f910 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteReg(LCD_DFC);
 8001890:	20b6      	movs	r0, #182	; 0xb6
 8001892:	f000 f900 	bl	8001a96 <ili9341_WriteReg>
  ili9341_WriteData(0x0A);
 8001896:	200a      	movs	r0, #10
 8001898:	f000 f90a 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0xA2);
 800189c:	20a2      	movs	r0, #162	; 0xa2
 800189e:	f000 f907 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteReg(LCD_POWER1);
 80018a2:	20c0      	movs	r0, #192	; 0xc0
 80018a4:	f000 f8f7 	bl	8001a96 <ili9341_WriteReg>
  ili9341_WriteData(0x10);
 80018a8:	2010      	movs	r0, #16
 80018aa:	f000 f901 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteReg(LCD_POWER2);
 80018ae:	20c1      	movs	r0, #193	; 0xc1
 80018b0:	f000 f8f1 	bl	8001a96 <ili9341_WriteReg>
  ili9341_WriteData(0x10);
 80018b4:	2010      	movs	r0, #16
 80018b6:	f000 f8fb 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteReg(LCD_VCOM1);
 80018ba:	20c5      	movs	r0, #197	; 0xc5
 80018bc:	f000 f8eb 	bl	8001a96 <ili9341_WriteReg>
  ili9341_WriteData(0x45);
 80018c0:	2045      	movs	r0, #69	; 0x45
 80018c2:	f000 f8f5 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x15);
 80018c6:	2015      	movs	r0, #21
 80018c8:	f000 f8f2 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteReg(LCD_VCOM2);
 80018cc:	20c7      	movs	r0, #199	; 0xc7
 80018ce:	f000 f8e2 	bl	8001a96 <ili9341_WriteReg>
  ili9341_WriteData(0x90);
 80018d2:	2090      	movs	r0, #144	; 0x90
 80018d4:	f000 f8ec 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteReg(LCD_MAC);
 80018d8:	2036      	movs	r0, #54	; 0x36
 80018da:	f000 f8dc 	bl	8001a96 <ili9341_WriteReg>
  ili9341_WriteData(0xC8);
 80018de:	20c8      	movs	r0, #200	; 0xc8
 80018e0:	f000 f8e6 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteReg(LCD_3GAMMA_EN);
 80018e4:	20f2      	movs	r0, #242	; 0xf2
 80018e6:	f000 f8d6 	bl	8001a96 <ili9341_WriteReg>
  ili9341_WriteData(0x00);
 80018ea:	2000      	movs	r0, #0
 80018ec:	f000 f8e0 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteReg(LCD_RGB_INTERFACE);
 80018f0:	20b0      	movs	r0, #176	; 0xb0
 80018f2:	f000 f8d0 	bl	8001a96 <ili9341_WriteReg>
  ili9341_WriteData(0xC2);
 80018f6:	20c2      	movs	r0, #194	; 0xc2
 80018f8:	f000 f8da 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteReg(LCD_DFC);
 80018fc:	20b6      	movs	r0, #182	; 0xb6
 80018fe:	f000 f8ca 	bl	8001a96 <ili9341_WriteReg>
  ili9341_WriteData(0x0A);
 8001902:	200a      	movs	r0, #10
 8001904:	f000 f8d4 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0xA7);
 8001908:	20a7      	movs	r0, #167	; 0xa7
 800190a:	f000 f8d1 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x27);
 800190e:	2027      	movs	r0, #39	; 0x27
 8001910:	f000 f8ce 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x04);
 8001914:	2004      	movs	r0, #4
 8001916:	f000 f8cb 	bl	8001ab0 <ili9341_WriteData>
  
  /* Colomn address set */
  ili9341_WriteReg(LCD_COLUMN_ADDR);
 800191a:	202a      	movs	r0, #42	; 0x2a
 800191c:	f000 f8bb 	bl	8001a96 <ili9341_WriteReg>
  ili9341_WriteData(0x00);
 8001920:	2000      	movs	r0, #0
 8001922:	f000 f8c5 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x00);
 8001926:	2000      	movs	r0, #0
 8001928:	f000 f8c2 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x00);
 800192c:	2000      	movs	r0, #0
 800192e:	f000 f8bf 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0xEF);
 8001932:	20ef      	movs	r0, #239	; 0xef
 8001934:	f000 f8bc 	bl	8001ab0 <ili9341_WriteData>
  /* Page address set */
  ili9341_WriteReg(LCD_PAGE_ADDR);
 8001938:	202b      	movs	r0, #43	; 0x2b
 800193a:	f000 f8ac 	bl	8001a96 <ili9341_WriteReg>
  ili9341_WriteData(0x00);
 800193e:	2000      	movs	r0, #0
 8001940:	f000 f8b6 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x00);
 8001944:	2000      	movs	r0, #0
 8001946:	f000 f8b3 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x01);
 800194a:	2001      	movs	r0, #1
 800194c:	f000 f8b0 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x3F);
 8001950:	203f      	movs	r0, #63	; 0x3f
 8001952:	f000 f8ad 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteReg(LCD_INTERFACE);
 8001956:	20f6      	movs	r0, #246	; 0xf6
 8001958:	f000 f89d 	bl	8001a96 <ili9341_WriteReg>
  ili9341_WriteData(0x01);
 800195c:	2001      	movs	r0, #1
 800195e:	f000 f8a7 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x00);
 8001962:	2000      	movs	r0, #0
 8001964:	f000 f8a4 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x06);
 8001968:	2006      	movs	r0, #6
 800196a:	f000 f8a1 	bl	8001ab0 <ili9341_WriteData>
  
  ili9341_WriteReg(LCD_GRAM);
 800196e:	202c      	movs	r0, #44	; 0x2c
 8001970:	f000 f891 	bl	8001a96 <ili9341_WriteReg>
  LCD_Delay(200);
 8001974:	20c8      	movs	r0, #200	; 0xc8
 8001976:	f000 fe65 	bl	8002644 <LCD_Delay>
  
  ili9341_WriteReg(LCD_GAMMA);
 800197a:	2026      	movs	r0, #38	; 0x26
 800197c:	f000 f88b 	bl	8001a96 <ili9341_WriteReg>
  ili9341_WriteData(0x01);
 8001980:	2001      	movs	r0, #1
 8001982:	f000 f895 	bl	8001ab0 <ili9341_WriteData>
  
  ili9341_WriteReg(LCD_PGAMMA);
 8001986:	20e0      	movs	r0, #224	; 0xe0
 8001988:	f000 f885 	bl	8001a96 <ili9341_WriteReg>
  ili9341_WriteData(0x0F);
 800198c:	200f      	movs	r0, #15
 800198e:	f000 f88f 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x29);
 8001992:	2029      	movs	r0, #41	; 0x29
 8001994:	f000 f88c 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x24);
 8001998:	2024      	movs	r0, #36	; 0x24
 800199a:	f000 f889 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x0C);
 800199e:	200c      	movs	r0, #12
 80019a0:	f000 f886 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x0E);
 80019a4:	200e      	movs	r0, #14
 80019a6:	f000 f883 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x09);
 80019aa:	2009      	movs	r0, #9
 80019ac:	f000 f880 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x4E);
 80019b0:	204e      	movs	r0, #78	; 0x4e
 80019b2:	f000 f87d 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x78);
 80019b6:	2078      	movs	r0, #120	; 0x78
 80019b8:	f000 f87a 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x3C);
 80019bc:	203c      	movs	r0, #60	; 0x3c
 80019be:	f000 f877 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x09);
 80019c2:	2009      	movs	r0, #9
 80019c4:	f000 f874 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x13);
 80019c8:	2013      	movs	r0, #19
 80019ca:	f000 f871 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x05);
 80019ce:	2005      	movs	r0, #5
 80019d0:	f000 f86e 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x17);
 80019d4:	2017      	movs	r0, #23
 80019d6:	f000 f86b 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x11);
 80019da:	2011      	movs	r0, #17
 80019dc:	f000 f868 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x00);
 80019e0:	2000      	movs	r0, #0
 80019e2:	f000 f865 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteReg(LCD_NGAMMA);
 80019e6:	20e1      	movs	r0, #225	; 0xe1
 80019e8:	f000 f855 	bl	8001a96 <ili9341_WriteReg>
  ili9341_WriteData(0x00);
 80019ec:	2000      	movs	r0, #0
 80019ee:	f000 f85f 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x16);
 80019f2:	2016      	movs	r0, #22
 80019f4:	f000 f85c 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x1B);
 80019f8:	201b      	movs	r0, #27
 80019fa:	f000 f859 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x04);
 80019fe:	2004      	movs	r0, #4
 8001a00:	f000 f856 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x11);
 8001a04:	2011      	movs	r0, #17
 8001a06:	f000 f853 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x07);
 8001a0a:	2007      	movs	r0, #7
 8001a0c:	f000 f850 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x31);
 8001a10:	2031      	movs	r0, #49	; 0x31
 8001a12:	f000 f84d 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x33);
 8001a16:	2033      	movs	r0, #51	; 0x33
 8001a18:	f000 f84a 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x42);
 8001a1c:	2042      	movs	r0, #66	; 0x42
 8001a1e:	f000 f847 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x05);
 8001a22:	2005      	movs	r0, #5
 8001a24:	f000 f844 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x0C);
 8001a28:	200c      	movs	r0, #12
 8001a2a:	f000 f841 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x0A);
 8001a2e:	200a      	movs	r0, #10
 8001a30:	f000 f83e 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x28);
 8001a34:	2028      	movs	r0, #40	; 0x28
 8001a36:	f000 f83b 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x2F);
 8001a3a:	202f      	movs	r0, #47	; 0x2f
 8001a3c:	f000 f838 	bl	8001ab0 <ili9341_WriteData>
  ili9341_WriteData(0x0F);
 8001a40:	200f      	movs	r0, #15
 8001a42:	f000 f835 	bl	8001ab0 <ili9341_WriteData>
  
  ili9341_WriteReg(LCD_SLEEP_OUT);
 8001a46:	2011      	movs	r0, #17
 8001a48:	f000 f825 	bl	8001a96 <ili9341_WriteReg>
  LCD_Delay(200);
 8001a4c:	20c8      	movs	r0, #200	; 0xc8
 8001a4e:	f000 fdf9 	bl	8002644 <LCD_Delay>
  ili9341_WriteReg(LCD_DISPLAY_ON);
 8001a52:	2029      	movs	r0, #41	; 0x29
 8001a54:	f000 f81f 	bl	8001a96 <ili9341_WriteReg>
  /* GRAM start writing */
  ili9341_WriteReg(LCD_GRAM);
 8001a58:	202c      	movs	r0, #44	; 0x2c
 8001a5a:	f000 f81c 	bl	8001a96 <ili9341_WriteReg>
}
 8001a5e:	bf00      	nop
 8001a60:	bd80      	pop	{r7, pc}

08001a62 <ili9341_ReadID>:
  * @brief  Disables the Display.
  * @param  None
  * @retval LCD Register Value.
  */
uint16_t ili9341_ReadID(void)
{
 8001a62:	b580      	push	{r7, lr}
 8001a64:	af00      	add	r7, sp, #0
  LCD_IO_Init();
 8001a66:	f000 fcff 	bl	8002468 <LCD_IO_Init>
  return ((uint16_t)ili9341_ReadData(LCD_READ_ID4, LCD_READ_ID4_SIZE));
 8001a6a:	2103      	movs	r1, #3
 8001a6c:	20d3      	movs	r0, #211	; 0xd3
 8001a6e:	f000 f82c 	bl	8001aca <ili9341_ReadData>
 8001a72:	4603      	mov	r3, r0
 8001a74:	b29b      	uxth	r3, r3
}
 8001a76:	4618      	mov	r0, r3
 8001a78:	bd80      	pop	{r7, pc}

08001a7a <ili9341_DisplayOn>:
  * @brief  Enables the Display.
  * @param  None
  * @retval None
  */
void ili9341_DisplayOn(void)
{
 8001a7a:	b580      	push	{r7, lr}
 8001a7c:	af00      	add	r7, sp, #0
  /* Display On */
  ili9341_WriteReg(LCD_DISPLAY_ON);
 8001a7e:	2029      	movs	r0, #41	; 0x29
 8001a80:	f000 f809 	bl	8001a96 <ili9341_WriteReg>
}
 8001a84:	bf00      	nop
 8001a86:	bd80      	pop	{r7, pc}

08001a88 <ili9341_DisplayOff>:
  * @brief  Disables the Display.
  * @param  None
  * @retval None
  */
void ili9341_DisplayOff(void)
{
 8001a88:	b580      	push	{r7, lr}
 8001a8a:	af00      	add	r7, sp, #0
  /* Display Off */
  ili9341_WriteReg(LCD_DISPLAY_OFF);
 8001a8c:	2028      	movs	r0, #40	; 0x28
 8001a8e:	f000 f802 	bl	8001a96 <ili9341_WriteReg>
}
 8001a92:	bf00      	nop
 8001a94:	bd80      	pop	{r7, pc}

08001a96 <ili9341_WriteReg>:
  * @brief  Writes  to the selected LCD register.
  * @param  LCD_Reg: address of the selected register.
  * @retval None
  */
void ili9341_WriteReg(uint8_t LCD_Reg)
{
 8001a96:	b580      	push	{r7, lr}
 8001a98:	b082      	sub	sp, #8
 8001a9a:	af00      	add	r7, sp, #0
 8001a9c:	4603      	mov	r3, r0
 8001a9e:	71fb      	strb	r3, [r7, #7]
  LCD_IO_WriteReg(LCD_Reg);
 8001aa0:	79fb      	ldrb	r3, [r7, #7]
 8001aa2:	4618      	mov	r0, r3
 8001aa4:	f000 fd7a 	bl	800259c <LCD_IO_WriteReg>
}
 8001aa8:	bf00      	nop
 8001aaa:	3708      	adds	r7, #8
 8001aac:	46bd      	mov	sp, r7
 8001aae:	bd80      	pop	{r7, pc}

08001ab0 <ili9341_WriteData>:
  * @brief  Writes data to the selected LCD register.
  * @param  LCD_Reg: address of the selected register.
  * @retval None
  */
void ili9341_WriteData(uint16_t RegValue)
{
 8001ab0:	b580      	push	{r7, lr}
 8001ab2:	b082      	sub	sp, #8
 8001ab4:	af00      	add	r7, sp, #0
 8001ab6:	4603      	mov	r3, r0
 8001ab8:	80fb      	strh	r3, [r7, #6]
  LCD_IO_WriteData(RegValue);
 8001aba:	88fb      	ldrh	r3, [r7, #6]
 8001abc:	4618      	mov	r0, r3
 8001abe:	f000 fd4b 	bl	8002558 <LCD_IO_WriteData>
}
 8001ac2:	bf00      	nop
 8001ac4:	3708      	adds	r7, #8
 8001ac6:	46bd      	mov	sp, r7
 8001ac8:	bd80      	pop	{r7, pc}

08001aca <ili9341_ReadData>:
  * @param  RegValue: Address of the register to read
  * @param  ReadSize: Number of bytes to read
  * @retval LCD Register Value.
  */
uint32_t ili9341_ReadData(uint16_t RegValue, uint8_t ReadSize)
{
 8001aca:	b580      	push	{r7, lr}
 8001acc:	b082      	sub	sp, #8
 8001ace:	af00      	add	r7, sp, #0
 8001ad0:	4603      	mov	r3, r0
 8001ad2:	460a      	mov	r2, r1
 8001ad4:	80fb      	strh	r3, [r7, #6]
 8001ad6:	4613      	mov	r3, r2
 8001ad8:	717b      	strb	r3, [r7, #5]
  /* Read a max of 4 bytes */
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8001ada:	797a      	ldrb	r2, [r7, #5]
 8001adc:	88fb      	ldrh	r3, [r7, #6]
 8001ade:	4611      	mov	r1, r2
 8001ae0:	4618      	mov	r0, r3
 8001ae2:	f000 fd7d 	bl	80025e0 <LCD_IO_ReadData>
 8001ae6:	4603      	mov	r3, r0
}
 8001ae8:	4618      	mov	r0, r3
 8001aea:	3708      	adds	r7, #8
 8001aec:	46bd      	mov	sp, r7
 8001aee:	bd80      	pop	{r7, pc}

08001af0 <ili9341_GetLcdPixelWidth>:
  * @brief  Get LCD PIXEL WIDTH.
  * @param  None
  * @retval LCD PIXEL WIDTH.
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
 8001af0:	b480      	push	{r7}
 8001af2:	af00      	add	r7, sp, #0
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
 8001af4:	23f0      	movs	r3, #240	; 0xf0
}
 8001af6:	4618      	mov	r0, r3
 8001af8:	46bd      	mov	sp, r7
 8001afa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001afe:	4770      	bx	lr

08001b00 <ili9341_GetLcdPixelHeight>:
  * @brief  Get LCD PIXEL HEIGHT.
  * @param  None
  * @retval LCD PIXEL HEIGHT.
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
 8001b00:	b480      	push	{r7}
 8001b02:	af00      	add	r7, sp, #0
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
 8001b04:	f44f 73a0 	mov.w	r3, #320	; 0x140
}
 8001b08:	4618      	mov	r0, r3
 8001b0a:	46bd      	mov	sp, r7
 8001b0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b10:	4770      	bx	lr
	...

08001b14 <stmpe811_Init>:
  * @brief  Initialize the stmpe811 and configure the needed hardware resources
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval None
  */
void stmpe811_Init(uint16_t DeviceAddr)
{
 8001b14:	b580      	push	{r7, lr}
 8001b16:	b084      	sub	sp, #16
 8001b18:	af00      	add	r7, sp, #0
 8001b1a:	4603      	mov	r3, r0
 8001b1c:	80fb      	strh	r3, [r7, #6]
  uint8_t instance;
  uint8_t empty;
  
  /* Check if device instance already exists */
  instance = stmpe811_GetInstance(DeviceAddr);
 8001b1e:	88fb      	ldrh	r3, [r7, #6]
 8001b20:	4618      	mov	r0, r3
 8001b22:	f000 fa59 	bl	8001fd8 <stmpe811_GetInstance>
 8001b26:	4603      	mov	r3, r0
 8001b28:	73fb      	strb	r3, [r7, #15]
  
  /* To prevent double initialization */
  if(instance == 0xFF)
 8001b2a:	7bfb      	ldrb	r3, [r7, #15]
 8001b2c:	2bff      	cmp	r3, #255	; 0xff
 8001b2e:	d112      	bne.n	8001b56 <stmpe811_Init+0x42>
  {
    /* Look for empty instance */
    empty = stmpe811_GetInstance(0);
 8001b30:	2000      	movs	r0, #0
 8001b32:	f000 fa51 	bl	8001fd8 <stmpe811_GetInstance>
 8001b36:	4603      	mov	r3, r0
 8001b38:	73bb      	strb	r3, [r7, #14]
    
    if(empty < STMPE811_MAX_INSTANCE)
 8001b3a:	7bbb      	ldrb	r3, [r7, #14]
 8001b3c:	2b01      	cmp	r3, #1
 8001b3e:	d80a      	bhi.n	8001b56 <stmpe811_Init+0x42>
    {
      /* Register the current device instance */
      stmpe811[empty] = DeviceAddr;
 8001b40:	7bbb      	ldrb	r3, [r7, #14]
 8001b42:	88fa      	ldrh	r2, [r7, #6]
 8001b44:	b2d1      	uxtb	r1, r2
 8001b46:	4a06      	ldr	r2, [pc, #24]	; (8001b60 <stmpe811_Init+0x4c>)
 8001b48:	54d1      	strb	r1, [r2, r3]
      
      /* Initialize IO BUS layer */
      IOE_Init(); 
 8001b4a:	f000 fd86 	bl	800265a <IOE_Init>
      
      /* Generate stmpe811 Software reset */
      stmpe811_Reset(DeviceAddr);
 8001b4e:	88fb      	ldrh	r3, [r7, #6]
 8001b50:	4618      	mov	r0, r3
 8001b52:	f000 f807 	bl	8001b64 <stmpe811_Reset>
    }
  }
}
 8001b56:	bf00      	nop
 8001b58:	3710      	adds	r7, #16
 8001b5a:	46bd      	mov	sp, r7
 8001b5c:	bd80      	pop	{r7, pc}
 8001b5e:	bf00      	nop
 8001b60:	20025c24 	.word	0x20025c24

08001b64 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8001b64:	b580      	push	{r7, lr}
 8001b66:	b082      	sub	sp, #8
 8001b68:	af00      	add	r7, sp, #0
 8001b6a:	4603      	mov	r3, r0
 8001b6c:	80fb      	strh	r3, [r7, #6]
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8001b6e:	88fb      	ldrh	r3, [r7, #6]
 8001b70:	b2db      	uxtb	r3, r3
 8001b72:	2202      	movs	r2, #2
 8001b74:	2103      	movs	r1, #3
 8001b76:	4618      	mov	r0, r3
 8001b78:	f000 fd7b 	bl	8002672 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8001b7c:	200a      	movs	r0, #10
 8001b7e:	f000 fdb5 	bl	80026ec <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8001b82:	88fb      	ldrh	r3, [r7, #6]
 8001b84:	b2db      	uxtb	r3, r3
 8001b86:	2200      	movs	r2, #0
 8001b88:	2103      	movs	r1, #3
 8001b8a:	4618      	mov	r0, r3
 8001b8c:	f000 fd71 	bl	8002672 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
 8001b90:	2002      	movs	r0, #2
 8001b92:	f000 fdab 	bl	80026ec <IOE_Delay>
}
 8001b96:	bf00      	nop
 8001b98:	3708      	adds	r7, #8
 8001b9a:	46bd      	mov	sp, r7
 8001b9c:	bd80      	pop	{r7, pc}

08001b9e <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8001b9e:	b590      	push	{r4, r7, lr}
 8001ba0:	b083      	sub	sp, #12
 8001ba2:	af00      	add	r7, sp, #0
 8001ba4:	4603      	mov	r3, r0
 8001ba6:	80fb      	strh	r3, [r7, #6]
  /* Initialize IO BUS layer */
  IOE_Init(); 
 8001ba8:	f000 fd57 	bl	800265a <IOE_Init>
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8001bac:	88fb      	ldrh	r3, [r7, #6]
 8001bae:	b2db      	uxtb	r3, r3
 8001bb0:	2100      	movs	r1, #0
 8001bb2:	4618      	mov	r0, r3
 8001bb4:	f000 fd70 	bl	8002698 <IOE_Read>
 8001bb8:	4603      	mov	r3, r0
 8001bba:	021b      	lsls	r3, r3, #8
 8001bbc:	b21c      	sxth	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8001bbe:	88fb      	ldrh	r3, [r7, #6]
 8001bc0:	b2db      	uxtb	r3, r3
 8001bc2:	2101      	movs	r1, #1
 8001bc4:	4618      	mov	r0, r3
 8001bc6:	f000 fd67 	bl	8002698 <IOE_Read>
 8001bca:	4603      	mov	r3, r0
 8001bcc:	b21b      	sxth	r3, r3
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8001bce:	4323      	orrs	r3, r4
 8001bd0:	b21b      	sxth	r3, r3
 8001bd2:	b29b      	uxth	r3, r3
}
 8001bd4:	4618      	mov	r0, r3
 8001bd6:	370c      	adds	r7, #12
 8001bd8:	46bd      	mov	sp, r7
 8001bda:	bd90      	pop	{r4, r7, pc}

08001bdc <stmpe811_EnableGlobalIT>:
  * @brief  Enable the Global interrupt.
  * @param  DeviceAddr: Device address on communication Bus.       
  * @retval None
  */
void stmpe811_EnableGlobalIT(uint16_t DeviceAddr)
{
 8001bdc:	b580      	push	{r7, lr}
 8001bde:	b084      	sub	sp, #16
 8001be0:	af00      	add	r7, sp, #0
 8001be2:	4603      	mov	r3, r0
 8001be4:	80fb      	strh	r3, [r7, #6]
  uint8_t tmp = 0;
 8001be6:	2300      	movs	r3, #0
 8001be8:	73fb      	strb	r3, [r7, #15]
  
  /* Read the Interrupt Control register  */
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8001bea:	88fb      	ldrh	r3, [r7, #6]
 8001bec:	b2db      	uxtb	r3, r3
 8001bee:	2109      	movs	r1, #9
 8001bf0:	4618      	mov	r0, r3
 8001bf2:	f000 fd51 	bl	8002698 <IOE_Read>
 8001bf6:	4603      	mov	r3, r0
 8001bf8:	73fb      	strb	r3, [r7, #15]
  
  /* Set the global interrupts to be Enabled */    
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8001bfa:	7bfb      	ldrb	r3, [r7, #15]
 8001bfc:	f043 0301 	orr.w	r3, r3, #1
 8001c00:	73fb      	strb	r3, [r7, #15]
  
  /* Write Back the Interrupt Control register */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8001c02:	88fb      	ldrh	r3, [r7, #6]
 8001c04:	b2db      	uxtb	r3, r3
 8001c06:	7bfa      	ldrb	r2, [r7, #15]
 8001c08:	2109      	movs	r1, #9
 8001c0a:	4618      	mov	r0, r3
 8001c0c:	f000 fd31 	bl	8002672 <IOE_Write>
}
 8001c10:	bf00      	nop
 8001c12:	3710      	adds	r7, #16
 8001c14:	46bd      	mov	sp, r7
 8001c16:	bd80      	pop	{r7, pc}

08001c18 <stmpe811_DisableGlobalIT>:
  * @brief  Disable the Global interrupt.
  * @param  DeviceAddr: Device address on communication Bus.      
  * @retval None
  */
void stmpe811_DisableGlobalIT(uint16_t DeviceAddr)
{
 8001c18:	b580      	push	{r7, lr}
 8001c1a:	b084      	sub	sp, #16
 8001c1c:	af00      	add	r7, sp, #0
 8001c1e:	4603      	mov	r3, r0
 8001c20:	80fb      	strh	r3, [r7, #6]
  uint8_t tmp = 0;
 8001c22:	2300      	movs	r3, #0
 8001c24:	73fb      	strb	r3, [r7, #15]
  
  /* Read the Interrupt Control register  */
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8001c26:	88fb      	ldrh	r3, [r7, #6]
 8001c28:	b2db      	uxtb	r3, r3
 8001c2a:	2109      	movs	r1, #9
 8001c2c:	4618      	mov	r0, r3
 8001c2e:	f000 fd33 	bl	8002698 <IOE_Read>
 8001c32:	4603      	mov	r3, r0
 8001c34:	73fb      	strb	r3, [r7, #15]

  /* Set the global interrupts to be Disabled */    
  tmp &= ~(uint8_t)STMPE811_GIT_EN;
 8001c36:	7bfb      	ldrb	r3, [r7, #15]
 8001c38:	f023 0301 	bic.w	r3, r3, #1
 8001c3c:	73fb      	strb	r3, [r7, #15]
 
  /* Write Back the Interrupt Control register */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8001c3e:	88fb      	ldrh	r3, [r7, #6]
 8001c40:	b2db      	uxtb	r3, r3
 8001c42:	7bfa      	ldrb	r2, [r7, #15]
 8001c44:	2109      	movs	r1, #9
 8001c46:	4618      	mov	r0, r3
 8001c48:	f000 fd13 	bl	8002672 <IOE_Write>
    
}
 8001c4c:	bf00      	nop
 8001c4e:	3710      	adds	r7, #16
 8001c50:	46bd      	mov	sp, r7
 8001c52:	bd80      	pop	{r7, pc}

08001c54 <stmpe811_EnableITSource>:
  *   @arg  STMPE811_GIT_FTH : Touch Screen Controller FIFO Threshold interrupt   
  *   @arg  STMPE811_GIT_TOUCH : Touch Screen Controller Touch Detected interrupt  
  * @retval None
  */
void stmpe811_EnableITSource(uint16_t DeviceAddr, uint8_t Source)
{
 8001c54:	b580      	push	{r7, lr}
 8001c56:	b084      	sub	sp, #16
 8001c58:	af00      	add	r7, sp, #0
 8001c5a:	4603      	mov	r3, r0
 8001c5c:	460a      	mov	r2, r1
 8001c5e:	80fb      	strh	r3, [r7, #6]
 8001c60:	4613      	mov	r3, r2
 8001c62:	717b      	strb	r3, [r7, #5]
  uint8_t tmp = 0;
 8001c64:	2300      	movs	r3, #0
 8001c66:	73fb      	strb	r3, [r7, #15]
  
  /* Get the current value of the INT_EN register */
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8001c68:	88fb      	ldrh	r3, [r7, #6]
 8001c6a:	b2db      	uxtb	r3, r3
 8001c6c:	210a      	movs	r1, #10
 8001c6e:	4618      	mov	r0, r3
 8001c70:	f000 fd12 	bl	8002698 <IOE_Read>
 8001c74:	4603      	mov	r3, r0
 8001c76:	73fb      	strb	r3, [r7, #15]

  /* Set the interrupts to be Enabled */    
  tmp |= Source; 
 8001c78:	7bfa      	ldrb	r2, [r7, #15]
 8001c7a:	797b      	ldrb	r3, [r7, #5]
 8001c7c:	4313      	orrs	r3, r2
 8001c7e:	73fb      	strb	r3, [r7, #15]
  
  /* Set the register */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8001c80:	88fb      	ldrh	r3, [r7, #6]
 8001c82:	b2db      	uxtb	r3, r3
 8001c84:	7bfa      	ldrb	r2, [r7, #15]
 8001c86:	210a      	movs	r1, #10
 8001c88:	4618      	mov	r0, r3
 8001c8a:	f000 fcf2 	bl	8002672 <IOE_Write>
}
 8001c8e:	bf00      	nop
 8001c90:	3710      	adds	r7, #16
 8001c92:	46bd      	mov	sp, r7
 8001c94:	bd80      	pop	{r7, pc}

08001c96 <stmpe811_DisableITSource>:
  *   @arg  STMPE811_GIT_FTH : Touch Screen Controller FIFO Threshold interrupt   
  *   @arg  STMPE811_GIT_TOUCH : Touch Screen Controller Touch Detected interrupt  
  * @retval None
  */
void stmpe811_DisableITSource(uint16_t DeviceAddr, uint8_t Source)
{
 8001c96:	b580      	push	{r7, lr}
 8001c98:	b084      	sub	sp, #16
 8001c9a:	af00      	add	r7, sp, #0
 8001c9c:	4603      	mov	r3, r0
 8001c9e:	460a      	mov	r2, r1
 8001ca0:	80fb      	strh	r3, [r7, #6]
 8001ca2:	4613      	mov	r3, r2
 8001ca4:	717b      	strb	r3, [r7, #5]
  uint8_t tmp = 0;
 8001ca6:	2300      	movs	r3, #0
 8001ca8:	73fb      	strb	r3, [r7, #15]
  
  /* Get the current value of the INT_EN register */
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8001caa:	88fb      	ldrh	r3, [r7, #6]
 8001cac:	b2db      	uxtb	r3, r3
 8001cae:	210a      	movs	r1, #10
 8001cb0:	4618      	mov	r0, r3
 8001cb2:	f000 fcf1 	bl	8002698 <IOE_Read>
 8001cb6:	4603      	mov	r3, r0
 8001cb8:	73fb      	strb	r3, [r7, #15]

  /* Set the interrupts to be Enabled */    
  tmp &= ~Source; 
 8001cba:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8001cbe:	43db      	mvns	r3, r3
 8001cc0:	b25a      	sxtb	r2, r3
 8001cc2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001cc6:	4013      	ands	r3, r2
 8001cc8:	b25b      	sxtb	r3, r3
 8001cca:	73fb      	strb	r3, [r7, #15]
  
  /* Set the register */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8001ccc:	88fb      	ldrh	r3, [r7, #6]
 8001cce:	b2db      	uxtb	r3, r3
 8001cd0:	7bfa      	ldrb	r2, [r7, #15]
 8001cd2:	210a      	movs	r1, #10
 8001cd4:	4618      	mov	r0, r3
 8001cd6:	f000 fccc 	bl	8002672 <IOE_Write>
}
 8001cda:	bf00      	nop
 8001cdc:	3710      	adds	r7, #16
 8001cde:	46bd      	mov	sp, r7
 8001ce0:	bd80      	pop	{r7, pc}

08001ce2 <stmpe811_ReadGITStatus>:
  *   @arg  STMPE811_GIT_FTH : Touch Screen Controller FIFO Threshold interrupt   
  *   @arg  STMPE811_GIT_TOUCH : Touch Screen Controller Touch Detected interrupt      
  * @retval The checked Global interrupt source status.
  */
uint8_t stmpe811_ReadGITStatus(uint16_t DeviceAddr, uint8_t Source)
{
 8001ce2:	b580      	push	{r7, lr}
 8001ce4:	b082      	sub	sp, #8
 8001ce6:	af00      	add	r7, sp, #0
 8001ce8:	4603      	mov	r3, r0
 8001cea:	460a      	mov	r2, r1
 8001cec:	80fb      	strh	r3, [r7, #6]
 8001cee:	4613      	mov	r3, r2
 8001cf0:	717b      	strb	r3, [r7, #5]
  /* Return the global IT source status */
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8001cf2:	88fb      	ldrh	r3, [r7, #6]
 8001cf4:	b2db      	uxtb	r3, r3
 8001cf6:	210b      	movs	r1, #11
 8001cf8:	4618      	mov	r0, r3
 8001cfa:	f000 fccd 	bl	8002698 <IOE_Read>
 8001cfe:	4603      	mov	r3, r0
 8001d00:	461a      	mov	r2, r3
 8001d02:	797b      	ldrb	r3, [r7, #5]
 8001d04:	4013      	ands	r3, r2
 8001d06:	b2db      	uxtb	r3, r3
}
 8001d08:	4618      	mov	r0, r3
 8001d0a:	3708      	adds	r7, #8
 8001d0c:	46bd      	mov	sp, r7
 8001d0e:	bd80      	pop	{r7, pc}

08001d10 <stmpe811_ClearGlobalIT>:
  *   @arg  STMPE811_GIT_FTH : Touch Screen Controller FIFO Threshold interrupt   
  *   @arg  STMPE811_GIT_TOUCH : Touch Screen Controller Touch Detected interrupt 
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
 8001d10:	b580      	push	{r7, lr}
 8001d12:	b082      	sub	sp, #8
 8001d14:	af00      	add	r7, sp, #0
 8001d16:	4603      	mov	r3, r0
 8001d18:	460a      	mov	r2, r1
 8001d1a:	80fb      	strh	r3, [r7, #6]
 8001d1c:	4613      	mov	r3, r2
 8001d1e:	717b      	strb	r3, [r7, #5]
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8001d20:	88fb      	ldrh	r3, [r7, #6]
 8001d22:	b2db      	uxtb	r3, r3
 8001d24:	797a      	ldrb	r2, [r7, #5]
 8001d26:	210b      	movs	r1, #11
 8001d28:	4618      	mov	r0, r3
 8001d2a:	f000 fca2 	bl	8002672 <IOE_Write>
}
 8001d2e:	bf00      	nop
 8001d30:	3708      	adds	r7, #8
 8001d32:	46bd      	mov	sp, r7
 8001d34:	bd80      	pop	{r7, pc}

08001d36 <stmpe811_IO_EnableAF>:
  *         combination of the following values:
  *   @arg  STMPE811_PIN_x: Where x can be from 0 to 7.       
  * @retval None
  */
void stmpe811_IO_EnableAF(uint16_t DeviceAddr, uint32_t IO_Pin)
{
 8001d36:	b580      	push	{r7, lr}
 8001d38:	b084      	sub	sp, #16
 8001d3a:	af00      	add	r7, sp, #0
 8001d3c:	4603      	mov	r3, r0
 8001d3e:	6039      	str	r1, [r7, #0]
 8001d40:	80fb      	strh	r3, [r7, #6]
  uint8_t tmp = 0;
 8001d42:	2300      	movs	r3, #0
 8001d44:	73fb      	strb	r3, [r7, #15]
  
  /* Get the current register value */
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8001d46:	88fb      	ldrh	r3, [r7, #6]
 8001d48:	b2db      	uxtb	r3, r3
 8001d4a:	2117      	movs	r1, #23
 8001d4c:	4618      	mov	r0, r3
 8001d4e:	f000 fca3 	bl	8002698 <IOE_Read>
 8001d52:	4603      	mov	r3, r0
 8001d54:	73fb      	strb	r3, [r7, #15]

  /* Enable the selected pins alternate function */   
  tmp &= ~(uint8_t)IO_Pin;   
 8001d56:	683b      	ldr	r3, [r7, #0]
 8001d58:	b25b      	sxtb	r3, r3
 8001d5a:	43db      	mvns	r3, r3
 8001d5c:	b25a      	sxtb	r2, r3
 8001d5e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001d62:	4013      	ands	r3, r2
 8001d64:	b25b      	sxtb	r3, r3
 8001d66:	73fb      	strb	r3, [r7, #15]
  
  /* Write back the new register value */
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8001d68:	88fb      	ldrh	r3, [r7, #6]
 8001d6a:	b2db      	uxtb	r3, r3
 8001d6c:	7bfa      	ldrb	r2, [r7, #15]
 8001d6e:	2117      	movs	r1, #23
 8001d70:	4618      	mov	r0, r3
 8001d72:	f000 fc7e 	bl	8002672 <IOE_Write>
}
 8001d76:	bf00      	nop
 8001d78:	3710      	adds	r7, #16
 8001d7a:	46bd      	mov	sp, r7
 8001d7c:	bd80      	pop	{r7, pc}

08001d7e <stmpe811_TS_Start>:
  * @brief  Configures the touch Screen Controller (Single point detection)
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval None.
  */
void stmpe811_TS_Start(uint16_t DeviceAddr)
{
 8001d7e:	b580      	push	{r7, lr}
 8001d80:	b084      	sub	sp, #16
 8001d82:	af00      	add	r7, sp, #0
 8001d84:	4603      	mov	r3, r0
 8001d86:	80fb      	strh	r3, [r7, #6]
  uint8_t mode;
  
  /* Get the current register value */
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8001d88:	88fb      	ldrh	r3, [r7, #6]
 8001d8a:	b2db      	uxtb	r3, r3
 8001d8c:	2104      	movs	r1, #4
 8001d8e:	4618      	mov	r0, r3
 8001d90:	f000 fc82 	bl	8002698 <IOE_Read>
 8001d94:	4603      	mov	r3, r0
 8001d96:	73fb      	strb	r3, [r7, #15]
  
  /* Set the Functionalities to be Enabled */    
  mode &= ~(STMPE811_IO_FCT);  
 8001d98:	7bfb      	ldrb	r3, [r7, #15]
 8001d9a:	f023 0304 	bic.w	r3, r3, #4
 8001d9e:	73fb      	strb	r3, [r7, #15]
  
  /* Write the new register value */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8001da0:	88fb      	ldrh	r3, [r7, #6]
 8001da2:	b2db      	uxtb	r3, r3
 8001da4:	7bfa      	ldrb	r2, [r7, #15]
 8001da6:	2104      	movs	r1, #4
 8001da8:	4618      	mov	r0, r3
 8001daa:	f000 fc62 	bl	8002672 <IOE_Write>

  /* Select TSC pins in TSC alternate mode */  
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8001dae:	88fb      	ldrh	r3, [r7, #6]
 8001db0:	21f0      	movs	r1, #240	; 0xf0
 8001db2:	4618      	mov	r0, r3
 8001db4:	f7ff ffbf 	bl	8001d36 <stmpe811_IO_EnableAF>
  
  /* Set the Functionalities to be Enabled */    
  mode &= ~(STMPE811_TS_FCT | STMPE811_ADC_FCT);  
 8001db8:	7bfb      	ldrb	r3, [r7, #15]
 8001dba:	f023 0303 	bic.w	r3, r3, #3
 8001dbe:	73fb      	strb	r3, [r7, #15]
  
  /* Set the new register value */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8001dc0:	88fb      	ldrh	r3, [r7, #6]
 8001dc2:	b2db      	uxtb	r3, r3
 8001dc4:	7bfa      	ldrb	r2, [r7, #15]
 8001dc6:	2104      	movs	r1, #4
 8001dc8:	4618      	mov	r0, r3
 8001dca:	f000 fc52 	bl	8002672 <IOE_Write>
  
  /* Select Sample Time, bit number and ADC Reference */
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8001dce:	88fb      	ldrh	r3, [r7, #6]
 8001dd0:	b2db      	uxtb	r3, r3
 8001dd2:	2249      	movs	r2, #73	; 0x49
 8001dd4:	2120      	movs	r1, #32
 8001dd6:	4618      	mov	r0, r3
 8001dd8:	f000 fc4b 	bl	8002672 <IOE_Write>
  
  /* Wait for 2 ms */
  IOE_Delay(2); 
 8001ddc:	2002      	movs	r0, #2
 8001dde:	f000 fc85 	bl	80026ec <IOE_Delay>
  
  /* Select the ADC clock speed: 3.25 MHz */
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8001de2:	88fb      	ldrh	r3, [r7, #6]
 8001de4:	b2db      	uxtb	r3, r3
 8001de6:	2201      	movs	r2, #1
 8001de8:	2121      	movs	r1, #33	; 0x21
 8001dea:	4618      	mov	r0, r3
 8001dec:	f000 fc41 	bl	8002672 <IOE_Write>
  /* Configuration: 
     - Touch average control    : 4 samples
     - Touch delay time         : 500 uS
     - Panel driver setting time: 500 uS 
  */
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8001df0:	88fb      	ldrh	r3, [r7, #6]
 8001df2:	b2db      	uxtb	r3, r3
 8001df4:	229a      	movs	r2, #154	; 0x9a
 8001df6:	2141      	movs	r1, #65	; 0x41
 8001df8:	4618      	mov	r0, r3
 8001dfa:	f000 fc3a 	bl	8002672 <IOE_Write>
  
  /* Configure the Touch FIFO threshold: single point reading */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8001dfe:	88fb      	ldrh	r3, [r7, #6]
 8001e00:	b2db      	uxtb	r3, r3
 8001e02:	2201      	movs	r2, #1
 8001e04:	214a      	movs	r1, #74	; 0x4a
 8001e06:	4618      	mov	r0, r3
 8001e08:	f000 fc33 	bl	8002672 <IOE_Write>
  
  /* Clear the FIFO memory content. */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8001e0c:	88fb      	ldrh	r3, [r7, #6]
 8001e0e:	b2db      	uxtb	r3, r3
 8001e10:	2201      	movs	r2, #1
 8001e12:	214b      	movs	r1, #75	; 0x4b
 8001e14:	4618      	mov	r0, r3
 8001e16:	f000 fc2c 	bl	8002672 <IOE_Write>
  
  /* Put the FIFO back into operation mode  */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8001e1a:	88fb      	ldrh	r3, [r7, #6]
 8001e1c:	b2db      	uxtb	r3, r3
 8001e1e:	2200      	movs	r2, #0
 8001e20:	214b      	movs	r1, #75	; 0x4b
 8001e22:	4618      	mov	r0, r3
 8001e24:	f000 fc25 	bl	8002672 <IOE_Write>
  
  /* Set the range and accuracy pf the pressure measurement (Z) : 
     - Fractional part :7 
     - Whole part      :1 
  */
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8001e28:	88fb      	ldrh	r3, [r7, #6]
 8001e2a:	b2db      	uxtb	r3, r3
 8001e2c:	2201      	movs	r2, #1
 8001e2e:	2156      	movs	r1, #86	; 0x56
 8001e30:	4618      	mov	r0, r3
 8001e32:	f000 fc1e 	bl	8002672 <IOE_Write>
  
  /* Set the driving capability (limit) of the device for TSC pins: 50mA */
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8001e36:	88fb      	ldrh	r3, [r7, #6]
 8001e38:	b2db      	uxtb	r3, r3
 8001e3a:	2201      	movs	r2, #1
 8001e3c:	2158      	movs	r1, #88	; 0x58
 8001e3e:	4618      	mov	r0, r3
 8001e40:	f000 fc17 	bl	8002672 <IOE_Write>
  
  /* Touch screen control configuration (enable TSC):
     - No window tracking index
     - XYZ acquisition mode
   */
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8001e44:	88fb      	ldrh	r3, [r7, #6]
 8001e46:	b2db      	uxtb	r3, r3
 8001e48:	2201      	movs	r2, #1
 8001e4a:	2140      	movs	r1, #64	; 0x40
 8001e4c:	4618      	mov	r0, r3
 8001e4e:	f000 fc10 	bl	8002672 <IOE_Write>
  
  /*  Clear all the status pending bits if any */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8001e52:	88fb      	ldrh	r3, [r7, #6]
 8001e54:	b2db      	uxtb	r3, r3
 8001e56:	22ff      	movs	r2, #255	; 0xff
 8001e58:	210b      	movs	r1, #11
 8001e5a:	4618      	mov	r0, r3
 8001e5c:	f000 fc09 	bl	8002672 <IOE_Write>

  /* Wait for 2 ms delay */
  IOE_Delay(2); 
 8001e60:	2002      	movs	r0, #2
 8001e62:	f000 fc43 	bl	80026ec <IOE_Delay>
}
 8001e66:	bf00      	nop
 8001e68:	3710      	adds	r7, #16
 8001e6a:	46bd      	mov	sp, r7
 8001e6c:	bd80      	pop	{r7, pc}

08001e6e <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8001e6e:	b580      	push	{r7, lr}
 8001e70:	b084      	sub	sp, #16
 8001e72:	af00      	add	r7, sp, #0
 8001e74:	4603      	mov	r3, r0
 8001e76:	80fb      	strh	r3, [r7, #6]
  uint8_t state;
  uint8_t ret = 0;
 8001e78:	2300      	movs	r3, #0
 8001e7a:	73fb      	strb	r3, [r7, #15]
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8001e7c:	88fb      	ldrh	r3, [r7, #6]
 8001e7e:	b2db      	uxtb	r3, r3
 8001e80:	2140      	movs	r1, #64	; 0x40
 8001e82:	4618      	mov	r0, r3
 8001e84:	f000 fc08 	bl	8002698 <IOE_Read>
 8001e88:	4603      	mov	r3, r0
 8001e8a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001e8e:	2b80      	cmp	r3, #128	; 0x80
 8001e90:	bf0c      	ite	eq
 8001e92:	2301      	moveq	r3, #1
 8001e94:	2300      	movne	r3, #0
 8001e96:	b2db      	uxtb	r3, r3
 8001e98:	73bb      	strb	r3, [r7, #14]
  
  if(state > 0)
 8001e9a:	7bbb      	ldrb	r3, [r7, #14]
 8001e9c:	2b00      	cmp	r3, #0
 8001e9e:	d00b      	beq.n	8001eb8 <stmpe811_TS_DetectTouch+0x4a>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8001ea0:	88fb      	ldrh	r3, [r7, #6]
 8001ea2:	b2db      	uxtb	r3, r3
 8001ea4:	214c      	movs	r1, #76	; 0x4c
 8001ea6:	4618      	mov	r0, r3
 8001ea8:	f000 fbf6 	bl	8002698 <IOE_Read>
 8001eac:	4603      	mov	r3, r0
 8001eae:	2b00      	cmp	r3, #0
 8001eb0:	d010      	beq.n	8001ed4 <stmpe811_TS_DetectTouch+0x66>
    {
      ret = 1;
 8001eb2:	2301      	movs	r3, #1
 8001eb4:	73fb      	strb	r3, [r7, #15]
 8001eb6:	e00d      	b.n	8001ed4 <stmpe811_TS_DetectTouch+0x66>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8001eb8:	88fb      	ldrh	r3, [r7, #6]
 8001eba:	b2db      	uxtb	r3, r3
 8001ebc:	2201      	movs	r2, #1
 8001ebe:	214b      	movs	r1, #75	; 0x4b
 8001ec0:	4618      	mov	r0, r3
 8001ec2:	f000 fbd6 	bl	8002672 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8001ec6:	88fb      	ldrh	r3, [r7, #6]
 8001ec8:	b2db      	uxtb	r3, r3
 8001eca:	2200      	movs	r2, #0
 8001ecc:	214b      	movs	r1, #75	; 0x4b
 8001ece:	4618      	mov	r0, r3
 8001ed0:	f000 fbcf 	bl	8002672 <IOE_Write>
  }
  
  return ret;
 8001ed4:	7bfb      	ldrb	r3, [r7, #15]
}
 8001ed6:	4618      	mov	r0, r3
 8001ed8:	3710      	adds	r7, #16
 8001eda:	46bd      	mov	sp, r7
 8001edc:	bd80      	pop	{r7, pc}

08001ede <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8001ede:	b580      	push	{r7, lr}
 8001ee0:	b086      	sub	sp, #24
 8001ee2:	af00      	add	r7, sp, #0
 8001ee4:	4603      	mov	r3, r0
 8001ee6:	60b9      	str	r1, [r7, #8]
 8001ee8:	607a      	str	r2, [r7, #4]
 8001eea:	81fb      	strh	r3, [r7, #14]
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8001eec:	89fb      	ldrh	r3, [r7, #14]
 8001eee:	b2d8      	uxtb	r0, r3
 8001ef0:	f107 0210 	add.w	r2, r7, #16
 8001ef4:	2304      	movs	r3, #4
 8001ef6:	21d7      	movs	r1, #215	; 0xd7
 8001ef8:	f000 fbe1 	bl	80026be <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8001efc:	7c3b      	ldrb	r3, [r7, #16]
 8001efe:	061a      	lsls	r2, r3, #24
 8001f00:	7c7b      	ldrb	r3, [r7, #17]
 8001f02:	041b      	lsls	r3, r3, #16
 8001f04:	431a      	orrs	r2, r3
 8001f06:	7cbb      	ldrb	r3, [r7, #18]
 8001f08:	021b      	lsls	r3, r3, #8
 8001f0a:	4313      	orrs	r3, r2
 8001f0c:	7cfa      	ldrb	r2, [r7, #19]
 8001f0e:	4313      	orrs	r3, r2
 8001f10:	617b      	str	r3, [r7, #20]
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8001f12:	697b      	ldr	r3, [r7, #20]
 8001f14:	0d1b      	lsrs	r3, r3, #20
 8001f16:	b29a      	uxth	r2, r3
 8001f18:	68bb      	ldr	r3, [r7, #8]
 8001f1a:	801a      	strh	r2, [r3, #0]
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8001f1c:	697b      	ldr	r3, [r7, #20]
 8001f1e:	0a1b      	lsrs	r3, r3, #8
 8001f20:	b29b      	uxth	r3, r3
 8001f22:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001f26:	b29a      	uxth	r2, r3
 8001f28:	687b      	ldr	r3, [r7, #4]
 8001f2a:	801a      	strh	r2, [r3, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8001f2c:	89fb      	ldrh	r3, [r7, #14]
 8001f2e:	b2db      	uxtb	r3, r3
 8001f30:	2201      	movs	r2, #1
 8001f32:	214b      	movs	r1, #75	; 0x4b
 8001f34:	4618      	mov	r0, r3
 8001f36:	f000 fb9c 	bl	8002672 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8001f3a:	89fb      	ldrh	r3, [r7, #14]
 8001f3c:	b2db      	uxtb	r3, r3
 8001f3e:	2200      	movs	r2, #0
 8001f40:	214b      	movs	r1, #75	; 0x4b
 8001f42:	4618      	mov	r0, r3
 8001f44:	f000 fb95 	bl	8002672 <IOE_Write>
}
 8001f48:	bf00      	nop
 8001f4a:	3718      	adds	r7, #24
 8001f4c:	46bd      	mov	sp, r7
 8001f4e:	bd80      	pop	{r7, pc}

08001f50 <stmpe811_TS_EnableIT>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_TS_EnableIT(uint16_t DeviceAddr)
{
 8001f50:	b580      	push	{r7, lr}
 8001f52:	b082      	sub	sp, #8
 8001f54:	af00      	add	r7, sp, #0
 8001f56:	4603      	mov	r3, r0
 8001f58:	80fb      	strh	r3, [r7, #6]
  IOE_ITConfig();
 8001f5a:	f000 fb84 	bl	8002666 <IOE_ITConfig>
  
  /* Enable global TS IT source */
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8001f5e:	88fb      	ldrh	r3, [r7, #6]
 8001f60:	211f      	movs	r1, #31
 8001f62:	4618      	mov	r0, r3
 8001f64:	f7ff fe76 	bl	8001c54 <stmpe811_EnableITSource>
  
  /* Enable global interrupt */
  stmpe811_EnableGlobalIT(DeviceAddr);
 8001f68:	88fb      	ldrh	r3, [r7, #6]
 8001f6a:	4618      	mov	r0, r3
 8001f6c:	f7ff fe36 	bl	8001bdc <stmpe811_EnableGlobalIT>
}
 8001f70:	bf00      	nop
 8001f72:	3708      	adds	r7, #8
 8001f74:	46bd      	mov	sp, r7
 8001f76:	bd80      	pop	{r7, pc}

08001f78 <stmpe811_TS_DisableIT>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval None
  */
void stmpe811_TS_DisableIT(uint16_t DeviceAddr)
{
 8001f78:	b580      	push	{r7, lr}
 8001f7a:	b082      	sub	sp, #8
 8001f7c:	af00      	add	r7, sp, #0
 8001f7e:	4603      	mov	r3, r0
 8001f80:	80fb      	strh	r3, [r7, #6]
  /* Disable global interrupt */
  stmpe811_DisableGlobalIT(DeviceAddr);
 8001f82:	88fb      	ldrh	r3, [r7, #6]
 8001f84:	4618      	mov	r0, r3
 8001f86:	f7ff fe47 	bl	8001c18 <stmpe811_DisableGlobalIT>
  
  /* Disable global TS IT source */
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8001f8a:	88fb      	ldrh	r3, [r7, #6]
 8001f8c:	211f      	movs	r1, #31
 8001f8e:	4618      	mov	r0, r3
 8001f90:	f7ff fe81 	bl	8001c96 <stmpe811_DisableITSource>
}
 8001f94:	bf00      	nop
 8001f96:	3708      	adds	r7, #8
 8001f98:	46bd      	mov	sp, r7
 8001f9a:	bd80      	pop	{r7, pc}

08001f9c <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8001f9c:	b580      	push	{r7, lr}
 8001f9e:	b082      	sub	sp, #8
 8001fa0:	af00      	add	r7, sp, #0
 8001fa2:	4603      	mov	r3, r0
 8001fa4:	80fb      	strh	r3, [r7, #6]
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8001fa6:	88fb      	ldrh	r3, [r7, #6]
 8001fa8:	211f      	movs	r1, #31
 8001faa:	4618      	mov	r0, r3
 8001fac:	f7ff fe99 	bl	8001ce2 <stmpe811_ReadGITStatus>
 8001fb0:	4603      	mov	r3, r0
}
 8001fb2:	4618      	mov	r0, r3
 8001fb4:	3708      	adds	r7, #8
 8001fb6:	46bd      	mov	sp, r7
 8001fb8:	bd80      	pop	{r7, pc}

08001fba <stmpe811_TS_ClearIT>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_TS_ClearIT(uint16_t DeviceAddr)
{
 8001fba:	b580      	push	{r7, lr}
 8001fbc:	b082      	sub	sp, #8
 8001fbe:	af00      	add	r7, sp, #0
 8001fc0:	4603      	mov	r3, r0
 8001fc2:	80fb      	strh	r3, [r7, #6]
  /* Clear the global TS IT source */
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8001fc4:	88fb      	ldrh	r3, [r7, #6]
 8001fc6:	211f      	movs	r1, #31
 8001fc8:	4618      	mov	r0, r3
 8001fca:	f7ff fea1 	bl	8001d10 <stmpe811_ClearGlobalIT>
}
 8001fce:	bf00      	nop
 8001fd0:	3708      	adds	r7, #8
 8001fd2:	46bd      	mov	sp, r7
 8001fd4:	bd80      	pop	{r7, pc}
	...

08001fd8 <stmpe811_GetInstance>:
  *         and return its index  
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Index of the device instance if registered, 0xFF if not.
  */
static uint8_t stmpe811_GetInstance(uint16_t DeviceAddr)
{
 8001fd8:	b480      	push	{r7}
 8001fda:	b085      	sub	sp, #20
 8001fdc:	af00      	add	r7, sp, #0
 8001fde:	4603      	mov	r3, r0
 8001fe0:	80fb      	strh	r3, [r7, #6]
  uint8_t idx = 0;
 8001fe2:	2300      	movs	r3, #0
 8001fe4:	73fb      	strb	r3, [r7, #15]
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8001fe6:	2300      	movs	r3, #0
 8001fe8:	73fb      	strb	r3, [r7, #15]
 8001fea:	e00b      	b.n	8002004 <stmpe811_GetInstance+0x2c>
  {
    if(stmpe811[idx] == DeviceAddr)
 8001fec:	7bfb      	ldrb	r3, [r7, #15]
 8001fee:	4a0a      	ldr	r2, [pc, #40]	; (8002018 <stmpe811_GetInstance+0x40>)
 8001ff0:	5cd3      	ldrb	r3, [r2, r3]
 8001ff2:	b29b      	uxth	r3, r3
 8001ff4:	88fa      	ldrh	r2, [r7, #6]
 8001ff6:	429a      	cmp	r2, r3
 8001ff8:	d101      	bne.n	8001ffe <stmpe811_GetInstance+0x26>
    {
      return idx; 
 8001ffa:	7bfb      	ldrb	r3, [r7, #15]
 8001ffc:	e006      	b.n	800200c <stmpe811_GetInstance+0x34>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8001ffe:	7bfb      	ldrb	r3, [r7, #15]
 8002000:	3301      	adds	r3, #1
 8002002:	73fb      	strb	r3, [r7, #15]
 8002004:	7bfb      	ldrb	r3, [r7, #15]
 8002006:	2b01      	cmp	r3, #1
 8002008:	d9f0      	bls.n	8001fec <stmpe811_GetInstance+0x14>
    }
  }
  
  return 0xFF;
 800200a:	23ff      	movs	r3, #255	; 0xff
}
 800200c:	4618      	mov	r0, r3
 800200e:	3714      	adds	r7, #20
 8002010:	46bd      	mov	sp, r7
 8002012:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002016:	4770      	bx	lr
 8002018:	20025c24 	.word	0x20025c24

0800201c <I2Cx_MspInit>:
/**
  * @brief  I2Cx MSP Initialization
  * @param  hi2c: I2C handle
  */
static void I2Cx_MspInit(I2C_HandleTypeDef *hi2c)
{
 800201c:	b580      	push	{r7, lr}
 800201e:	b08a      	sub	sp, #40	; 0x28
 8002020:	af00      	add	r7, sp, #0
 8002022:	6078      	str	r0, [r7, #4]
  
  I2C_HandleTypeDef* pI2cHandle;
  pI2cHandle = &I2cHandle;
#endif /* EE_M24LR64 */

  if (hi2c->Instance == DISCOVERY_I2Cx)
 8002024:	687b      	ldr	r3, [r7, #4]
 8002026:	681b      	ldr	r3, [r3, #0]
 8002028:	4a33      	ldr	r2, [pc, #204]	; (80020f8 <I2Cx_MspInit+0xdc>)
 800202a:	4293      	cmp	r3, r2
 800202c:	d15f      	bne.n	80020ee <I2Cx_MspInit+0xd2>
  {
    /* Configure the GPIOs ---------------------------------------------------*/ 
    /* Enable GPIO clock */
    DISCOVERY_I2Cx_SDA_GPIO_CLK_ENABLE();
 800202e:	2300      	movs	r3, #0
 8002030:	613b      	str	r3, [r7, #16]
 8002032:	4b32      	ldr	r3, [pc, #200]	; (80020fc <I2Cx_MspInit+0xe0>)
 8002034:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002036:	4a31      	ldr	r2, [pc, #196]	; (80020fc <I2Cx_MspInit+0xe0>)
 8002038:	f043 0304 	orr.w	r3, r3, #4
 800203c:	6313      	str	r3, [r2, #48]	; 0x30
 800203e:	4b2f      	ldr	r3, [pc, #188]	; (80020fc <I2Cx_MspInit+0xe0>)
 8002040:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002042:	f003 0304 	and.w	r3, r3, #4
 8002046:	613b      	str	r3, [r7, #16]
 8002048:	693b      	ldr	r3, [r7, #16]
    DISCOVERY_I2Cx_SCL_GPIO_CLK_ENABLE();
 800204a:	2300      	movs	r3, #0
 800204c:	60fb      	str	r3, [r7, #12]
 800204e:	4b2b      	ldr	r3, [pc, #172]	; (80020fc <I2Cx_MspInit+0xe0>)
 8002050:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002052:	4a2a      	ldr	r2, [pc, #168]	; (80020fc <I2Cx_MspInit+0xe0>)
 8002054:	f043 0301 	orr.w	r3, r3, #1
 8002058:	6313      	str	r3, [r2, #48]	; 0x30
 800205a:	4b28      	ldr	r3, [pc, #160]	; (80020fc <I2Cx_MspInit+0xe0>)
 800205c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800205e:	f003 0301 	and.w	r3, r3, #1
 8002062:	60fb      	str	r3, [r7, #12]
 8002064:	68fb      	ldr	r3, [r7, #12]
      
    /* Configure I2C Tx as alternate function  */
    GPIO_InitStruct.Pin       = DISCOVERY_I2Cx_SCL_PIN;
 8002066:	f44f 7380 	mov.w	r3, #256	; 0x100
 800206a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode      = GPIO_MODE_AF_OD;
 800206c:	2312      	movs	r3, #18
 800206e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull      = GPIO_NOPULL;
 8002070:	2300      	movs	r3, #0
 8002072:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed     = GPIO_SPEED_FAST;
 8002074:	2302      	movs	r3, #2
 8002076:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = DISCOVERY_I2Cx_SCL_SDA_AF;
 8002078:	2304      	movs	r3, #4
 800207a:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(DISCOVERY_I2Cx_SCL_GPIO_PORT, &GPIO_InitStruct);
 800207c:	f107 0314 	add.w	r3, r7, #20
 8002080:	4619      	mov	r1, r3
 8002082:	481f      	ldr	r0, [pc, #124]	; (8002100 <I2Cx_MspInit+0xe4>)
 8002084:	f000 fe8e 	bl	8002da4 <HAL_GPIO_Init>
      
    /* Configure I2C Rx as alternate function  */
    GPIO_InitStruct.Pin = DISCOVERY_I2Cx_SDA_PIN;
 8002088:	f44f 7300 	mov.w	r3, #512	; 0x200
 800208c:	617b      	str	r3, [r7, #20]
    HAL_GPIO_Init(DISCOVERY_I2Cx_SDA_GPIO_PORT, &GPIO_InitStruct);
 800208e:	f107 0314 	add.w	r3, r7, #20
 8002092:	4619      	mov	r1, r3
 8002094:	481b      	ldr	r0, [pc, #108]	; (8002104 <I2Cx_MspInit+0xe8>)
 8002096:	f000 fe85 	bl	8002da4 <HAL_GPIO_Init>
    
    
    /* Configure the Discovery I2Cx peripheral -------------------------------*/ 
    /* Enable I2C3 clock */
    DISCOVERY_I2Cx_CLOCK_ENABLE();
 800209a:	2300      	movs	r3, #0
 800209c:	60bb      	str	r3, [r7, #8]
 800209e:	4b17      	ldr	r3, [pc, #92]	; (80020fc <I2Cx_MspInit+0xe0>)
 80020a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80020a2:	4a16      	ldr	r2, [pc, #88]	; (80020fc <I2Cx_MspInit+0xe0>)
 80020a4:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80020a8:	6413      	str	r3, [r2, #64]	; 0x40
 80020aa:	4b14      	ldr	r3, [pc, #80]	; (80020fc <I2Cx_MspInit+0xe0>)
 80020ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80020ae:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80020b2:	60bb      	str	r3, [r7, #8]
 80020b4:	68bb      	ldr	r3, [r7, #8]
    
    /* Force the I2C Peripheral Clock Reset */  
    DISCOVERY_I2Cx_FORCE_RESET();
 80020b6:	4b11      	ldr	r3, [pc, #68]	; (80020fc <I2Cx_MspInit+0xe0>)
 80020b8:	6a1b      	ldr	r3, [r3, #32]
 80020ba:	4a10      	ldr	r2, [pc, #64]	; (80020fc <I2Cx_MspInit+0xe0>)
 80020bc:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80020c0:	6213      	str	r3, [r2, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    DISCOVERY_I2Cx_RELEASE_RESET(); 
 80020c2:	4b0e      	ldr	r3, [pc, #56]	; (80020fc <I2Cx_MspInit+0xe0>)
 80020c4:	6a1b      	ldr	r3, [r3, #32]
 80020c6:	4a0d      	ldr	r2, [pc, #52]	; (80020fc <I2Cx_MspInit+0xe0>)
 80020c8:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80020cc:	6213      	str	r3, [r2, #32]
    
    /* Enable and set Discovery I2Cx Interrupt to the lowest priority */
    HAL_NVIC_SetPriority(DISCOVERY_I2Cx_EV_IRQn, 0x0F, 0);
 80020ce:	2200      	movs	r2, #0
 80020d0:	210f      	movs	r1, #15
 80020d2:	2048      	movs	r0, #72	; 0x48
 80020d4:	f000 fc34 	bl	8002940 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DISCOVERY_I2Cx_EV_IRQn);
 80020d8:	2048      	movs	r0, #72	; 0x48
 80020da:	f000 fc4d 	bl	8002978 <HAL_NVIC_EnableIRQ>
    
    /* Enable and set Discovery I2Cx Interrupt to the lowest priority */
    HAL_NVIC_SetPriority(DISCOVERY_I2Cx_ER_IRQn, 0x0F, 0);
 80020de:	2200      	movs	r2, #0
 80020e0:	210f      	movs	r1, #15
 80020e2:	2049      	movs	r0, #73	; 0x49
 80020e4:	f000 fc2c 	bl	8002940 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DISCOVERY_I2Cx_ER_IRQn);  
 80020e8:	2049      	movs	r0, #73	; 0x49
 80020ea:	f000 fc45 	bl	8002978 <HAL_NVIC_EnableIRQ>
    /* Configure and enable I2C DMA RX Channel interrupt */
    HAL_NVIC_SetPriority((IRQn_Type)(EEPROM_I2C_DMA_RX_IRQn), EEPROM_I2C_DMA_PREPRIO, 0);
    HAL_NVIC_EnableIRQ((IRQn_Type)(EEPROM_I2C_DMA_RX_IRQn));
#endif /* EE_M24LR64 */
  }
}
 80020ee:	bf00      	nop
 80020f0:	3728      	adds	r7, #40	; 0x28
 80020f2:	46bd      	mov	sp, r7
 80020f4:	bd80      	pop	{r7, pc}
 80020f6:	bf00      	nop
 80020f8:	40005c00 	.word	0x40005c00
 80020fc:	40023800 	.word	0x40023800
 8002100:	40020000 	.word	0x40020000
 8002104:	40020800 	.word	0x40020800

08002108 <I2Cx_Init>:

/**
  * @brief  I2Cx Bus initialization.
  */
static void I2Cx_Init(void)
{
 8002108:	b580      	push	{r7, lr}
 800210a:	af00      	add	r7, sp, #0
  if(HAL_I2C_GetState(&I2cHandle) == HAL_I2C_STATE_RESET)
 800210c:	4814      	ldr	r0, [pc, #80]	; (8002160 <I2Cx_Init+0x58>)
 800210e:	f001 fdaf 	bl	8003c70 <HAL_I2C_GetState>
 8002112:	4603      	mov	r3, r0
 8002114:	2b00      	cmp	r3, #0
 8002116:	d121      	bne.n	800215c <I2Cx_Init+0x54>
  {
    I2cHandle.Instance              = DISCOVERY_I2Cx;
 8002118:	4b11      	ldr	r3, [pc, #68]	; (8002160 <I2Cx_Init+0x58>)
 800211a:	4a12      	ldr	r2, [pc, #72]	; (8002164 <I2Cx_Init+0x5c>)
 800211c:	601a      	str	r2, [r3, #0]
    I2cHandle.Init.ClockSpeed       = BSP_I2C_SPEED;
 800211e:	4b10      	ldr	r3, [pc, #64]	; (8002160 <I2Cx_Init+0x58>)
 8002120:	4a11      	ldr	r2, [pc, #68]	; (8002168 <I2Cx_Init+0x60>)
 8002122:	605a      	str	r2, [r3, #4]
    I2cHandle.Init.DutyCycle        = I2C_DUTYCYCLE_2;
 8002124:	4b0e      	ldr	r3, [pc, #56]	; (8002160 <I2Cx_Init+0x58>)
 8002126:	2200      	movs	r2, #0
 8002128:	609a      	str	r2, [r3, #8]
    I2cHandle.Init.OwnAddress1      = 0;
 800212a:	4b0d      	ldr	r3, [pc, #52]	; (8002160 <I2Cx_Init+0x58>)
 800212c:	2200      	movs	r2, #0
 800212e:	60da      	str	r2, [r3, #12]
    I2cHandle.Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
 8002130:	4b0b      	ldr	r3, [pc, #44]	; (8002160 <I2Cx_Init+0x58>)
 8002132:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8002136:	611a      	str	r2, [r3, #16]
    I2cHandle.Init.DualAddressMode  = I2C_DUALADDRESS_DISABLED;
 8002138:	4b09      	ldr	r3, [pc, #36]	; (8002160 <I2Cx_Init+0x58>)
 800213a:	2200      	movs	r2, #0
 800213c:	615a      	str	r2, [r3, #20]
    I2cHandle.Init.OwnAddress2      = 0;
 800213e:	4b08      	ldr	r3, [pc, #32]	; (8002160 <I2Cx_Init+0x58>)
 8002140:	2200      	movs	r2, #0
 8002142:	619a      	str	r2, [r3, #24]
    I2cHandle.Init.GeneralCallMode  = I2C_GENERALCALL_DISABLED;
 8002144:	4b06      	ldr	r3, [pc, #24]	; (8002160 <I2Cx_Init+0x58>)
 8002146:	2200      	movs	r2, #0
 8002148:	61da      	str	r2, [r3, #28]
    I2cHandle.Init.NoStretchMode    = I2C_NOSTRETCH_DISABLED;  
 800214a:	4b05      	ldr	r3, [pc, #20]	; (8002160 <I2Cx_Init+0x58>)
 800214c:	2200      	movs	r2, #0
 800214e:	621a      	str	r2, [r3, #32]
    
    /* Init the I2C */
    I2Cx_MspInit(&I2cHandle);
 8002150:	4803      	ldr	r0, [pc, #12]	; (8002160 <I2Cx_Init+0x58>)
 8002152:	f7ff ff63 	bl	800201c <I2Cx_MspInit>
    HAL_I2C_Init(&I2cHandle);
 8002156:	4802      	ldr	r0, [pc, #8]	; (8002160 <I2Cx_Init+0x58>)
 8002158:	f001 f8f6 	bl	8003348 <HAL_I2C_Init>
  }
}
 800215c:	bf00      	nop
 800215e:	bd80      	pop	{r7, pc}
 8002160:	20025c28 	.word	0x20025c28
 8002164:	40005c00 	.word	0x40005c00
 8002168:	000186a0 	.word	0x000186a0

0800216c <I2Cx_ITConfig>:

/**
  * @brief  Configures Interruption pin for I2C communication.
  */
static void I2Cx_ITConfig(void)
{
 800216c:	b580      	push	{r7, lr}
 800216e:	b086      	sub	sp, #24
 8002170:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef  GPIO_InitStruct;
    
  /* Enable the GPIO EXTI Clock */
  STMPE811_INT_CLK_ENABLE();
 8002172:	2300      	movs	r3, #0
 8002174:	603b      	str	r3, [r7, #0]
 8002176:	4b13      	ldr	r3, [pc, #76]	; (80021c4 <I2Cx_ITConfig+0x58>)
 8002178:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800217a:	4a12      	ldr	r2, [pc, #72]	; (80021c4 <I2Cx_ITConfig+0x58>)
 800217c:	f043 0301 	orr.w	r3, r3, #1
 8002180:	6313      	str	r3, [r2, #48]	; 0x30
 8002182:	4b10      	ldr	r3, [pc, #64]	; (80021c4 <I2Cx_ITConfig+0x58>)
 8002184:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002186:	f003 0301 	and.w	r3, r3, #1
 800218a:	603b      	str	r3, [r7, #0]
 800218c:	683b      	ldr	r3, [r7, #0]
  
  GPIO_InitStruct.Pin   = STMPE811_INT_PIN;
 800218e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8002192:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Pull  = GPIO_PULLUP;
 8002194:	2301      	movs	r3, #1
 8002196:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_LOW;
 8002198:	2300      	movs	r3, #0
 800219a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode  = GPIO_MODE_IT_FALLING;
 800219c:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 80021a0:	60bb      	str	r3, [r7, #8]
  HAL_GPIO_Init(STMPE811_INT_GPIO_PORT, &GPIO_InitStruct);
 80021a2:	1d3b      	adds	r3, r7, #4
 80021a4:	4619      	mov	r1, r3
 80021a6:	4808      	ldr	r0, [pc, #32]	; (80021c8 <I2Cx_ITConfig+0x5c>)
 80021a8:	f000 fdfc 	bl	8002da4 <HAL_GPIO_Init>
    
  /* Enable and set GPIO EXTI Interrupt to the highest priority */
  HAL_NVIC_SetPriority((IRQn_Type)(STMPE811_INT_EXTI), 0x0F, 0x00);
 80021ac:	2200      	movs	r2, #0
 80021ae:	210f      	movs	r1, #15
 80021b0:	2028      	movs	r0, #40	; 0x28
 80021b2:	f000 fbc5 	bl	8002940 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ((IRQn_Type)(STMPE811_INT_EXTI));
 80021b6:	2028      	movs	r0, #40	; 0x28
 80021b8:	f000 fbde 	bl	8002978 <HAL_NVIC_EnableIRQ>
}
 80021bc:	bf00      	nop
 80021be:	3718      	adds	r7, #24
 80021c0:	46bd      	mov	sp, r7
 80021c2:	bd80      	pop	{r7, pc}
 80021c4:	40023800 	.word	0x40023800
 80021c8:	40020000 	.word	0x40020000

080021cc <I2Cx_WriteData>:
  * @param  Addr: Device address on BUS Bus.  
  * @param  Reg: The target register address to write
  * @param  Value: The target register value to be written 
  */
static void I2Cx_WriteData(uint8_t Addr, uint8_t Reg, uint8_t Value)
  {
 80021cc:	b580      	push	{r7, lr}
 80021ce:	b088      	sub	sp, #32
 80021d0:	af04      	add	r7, sp, #16
 80021d2:	4603      	mov	r3, r0
 80021d4:	71fb      	strb	r3, [r7, #7]
 80021d6:	460b      	mov	r3, r1
 80021d8:	71bb      	strb	r3, [r7, #6]
 80021da:	4613      	mov	r3, r2
 80021dc:	717b      	strb	r3, [r7, #5]
  HAL_StatusTypeDef status = HAL_OK;
 80021de:	2300      	movs	r3, #0
 80021e0:	73fb      	strb	r3, [r7, #15]
  
  status = HAL_I2C_Mem_Write(&I2cHandle, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2cxTimeout); 
 80021e2:	79fb      	ldrb	r3, [r7, #7]
 80021e4:	b299      	uxth	r1, r3
 80021e6:	79bb      	ldrb	r3, [r7, #6]
 80021e8:	b29a      	uxth	r2, r3
 80021ea:	4b0b      	ldr	r3, [pc, #44]	; (8002218 <I2Cx_WriteData+0x4c>)
 80021ec:	681b      	ldr	r3, [r3, #0]
 80021ee:	9302      	str	r3, [sp, #8]
 80021f0:	2301      	movs	r3, #1
 80021f2:	9301      	str	r3, [sp, #4]
 80021f4:	1d7b      	adds	r3, r7, #5
 80021f6:	9300      	str	r3, [sp, #0]
 80021f8:	2301      	movs	r3, #1
 80021fa:	4808      	ldr	r0, [pc, #32]	; (800221c <I2Cx_WriteData+0x50>)
 80021fc:	f001 fa18 	bl	8003630 <HAL_I2C_Mem_Write>
 8002200:	4603      	mov	r3, r0
 8002202:	73fb      	strb	r3, [r7, #15]
  
  /* Check the communication status */
  if(status != HAL_OK)
 8002204:	7bfb      	ldrb	r3, [r7, #15]
 8002206:	2b00      	cmp	r3, #0
 8002208:	d001      	beq.n	800220e <I2Cx_WriteData+0x42>
  {
    /* Re-Initialize the BUS */
    I2Cx_Error();
 800220a:	f000 f863 	bl	80022d4 <I2Cx_Error>
  }        
}
 800220e:	bf00      	nop
 8002210:	3710      	adds	r7, #16
 8002212:	46bd      	mov	sp, r7
 8002214:	bd80      	pop	{r7, pc}
 8002216:	bf00      	nop
 8002218:	20000068 	.word	0x20000068
 800221c:	20025c28 	.word	0x20025c28

08002220 <I2Cx_ReadData>:
  * @param  Addr: Device address on BUS Bus.  
  * @param  Reg: The target register address to write
  * @retval Data read at register address
  */
static uint8_t I2Cx_ReadData(uint8_t Addr, uint8_t Reg)
{
 8002220:	b580      	push	{r7, lr}
 8002222:	b088      	sub	sp, #32
 8002224:	af04      	add	r7, sp, #16
 8002226:	4603      	mov	r3, r0
 8002228:	460a      	mov	r2, r1
 800222a:	71fb      	strb	r3, [r7, #7]
 800222c:	4613      	mov	r3, r2
 800222e:	71bb      	strb	r3, [r7, #6]
  HAL_StatusTypeDef status = HAL_OK;
 8002230:	2300      	movs	r3, #0
 8002232:	73fb      	strb	r3, [r7, #15]
  uint8_t value = 0;
 8002234:	2300      	movs	r3, #0
 8002236:	73bb      	strb	r3, [r7, #14]
  
  status = HAL_I2C_Mem_Read(&I2cHandle, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2cxTimeout);
 8002238:	79fb      	ldrb	r3, [r7, #7]
 800223a:	b299      	uxth	r1, r3
 800223c:	79bb      	ldrb	r3, [r7, #6]
 800223e:	b29a      	uxth	r2, r3
 8002240:	4b0b      	ldr	r3, [pc, #44]	; (8002270 <I2Cx_ReadData+0x50>)
 8002242:	681b      	ldr	r3, [r3, #0]
 8002244:	9302      	str	r3, [sp, #8]
 8002246:	2301      	movs	r3, #1
 8002248:	9301      	str	r3, [sp, #4]
 800224a:	f107 030e 	add.w	r3, r7, #14
 800224e:	9300      	str	r3, [sp, #0]
 8002250:	2301      	movs	r3, #1
 8002252:	4808      	ldr	r0, [pc, #32]	; (8002274 <I2Cx_ReadData+0x54>)
 8002254:	f001 fae6 	bl	8003824 <HAL_I2C_Mem_Read>
 8002258:	4603      	mov	r3, r0
 800225a:	73fb      	strb	r3, [r7, #15]
 
  /* Check the communication status */
  if(status != HAL_OK)
 800225c:	7bfb      	ldrb	r3, [r7, #15]
 800225e:	2b00      	cmp	r3, #0
 8002260:	d001      	beq.n	8002266 <I2Cx_ReadData+0x46>
  {
    /* Re-Initialize the BUS */
    I2Cx_Error();
 8002262:	f000 f837 	bl	80022d4 <I2Cx_Error>
  
  }
  return value;
 8002266:	7bbb      	ldrb	r3, [r7, #14]
}
 8002268:	4618      	mov	r0, r3
 800226a:	3710      	adds	r7, #16
 800226c:	46bd      	mov	sp, r7
 800226e:	bd80      	pop	{r7, pc}
 8002270:	20000068 	.word	0x20000068
 8002274:	20025c28 	.word	0x20025c28

08002278 <I2Cx_ReadBuffer>:
  * @param  pBuffer: pointer to read data buffer
  * @param  Length: length of the data
  * @retval 0 if no problems to read multiple data
  */
static uint8_t I2Cx_ReadBuffer(uint8_t Addr, uint8_t Reg, uint8_t *pBuffer, uint16_t Length)
{
 8002278:	b580      	push	{r7, lr}
 800227a:	b088      	sub	sp, #32
 800227c:	af04      	add	r7, sp, #16
 800227e:	603a      	str	r2, [r7, #0]
 8002280:	461a      	mov	r2, r3
 8002282:	4603      	mov	r3, r0
 8002284:	71fb      	strb	r3, [r7, #7]
 8002286:	460b      	mov	r3, r1
 8002288:	71bb      	strb	r3, [r7, #6]
 800228a:	4613      	mov	r3, r2
 800228c:	80bb      	strh	r3, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 800228e:	2300      	movs	r3, #0
 8002290:	73fb      	strb	r3, [r7, #15]

  status = HAL_I2C_Mem_Read(&I2cHandle, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2cxTimeout);
 8002292:	79fb      	ldrb	r3, [r7, #7]
 8002294:	b299      	uxth	r1, r3
 8002296:	79bb      	ldrb	r3, [r7, #6]
 8002298:	b29a      	uxth	r2, r3
 800229a:	4b0c      	ldr	r3, [pc, #48]	; (80022cc <I2Cx_ReadBuffer+0x54>)
 800229c:	681b      	ldr	r3, [r3, #0]
 800229e:	9302      	str	r3, [sp, #8]
 80022a0:	88bb      	ldrh	r3, [r7, #4]
 80022a2:	9301      	str	r3, [sp, #4]
 80022a4:	683b      	ldr	r3, [r7, #0]
 80022a6:	9300      	str	r3, [sp, #0]
 80022a8:	2301      	movs	r3, #1
 80022aa:	4809      	ldr	r0, [pc, #36]	; (80022d0 <I2Cx_ReadBuffer+0x58>)
 80022ac:	f001 faba 	bl	8003824 <HAL_I2C_Mem_Read>
 80022b0:	4603      	mov	r3, r0
 80022b2:	73fb      	strb	r3, [r7, #15]
  
  /* Check the communication status */
  if(status == HAL_OK)
 80022b4:	7bfb      	ldrb	r3, [r7, #15]
 80022b6:	2b00      	cmp	r3, #0
 80022b8:	d101      	bne.n	80022be <I2Cx_ReadBuffer+0x46>
  {
    return 0;
 80022ba:	2300      	movs	r3, #0
 80022bc:	e002      	b.n	80022c4 <I2Cx_ReadBuffer+0x4c>
  }
  else
  {
    /* Re-Initialize the BUS */
    I2Cx_Error();
 80022be:	f000 f809 	bl	80022d4 <I2Cx_Error>

    return 1;
 80022c2:	2301      	movs	r3, #1
  }
}
 80022c4:	4618      	mov	r0, r3
 80022c6:	3710      	adds	r7, #16
 80022c8:	46bd      	mov	sp, r7
 80022ca:	bd80      	pop	{r7, pc}
 80022cc:	20000068 	.word	0x20000068
 80022d0:	20025c28 	.word	0x20025c28

080022d4 <I2Cx_Error>:

/**
  * @brief  I2Cx error treatment function
  */
static void I2Cx_Error(void)
{
 80022d4:	b580      	push	{r7, lr}
 80022d6:	af00      	add	r7, sp, #0
  /* De-initialize the SPI communication BUS */
  HAL_I2C_DeInit(&I2cHandle);
 80022d8:	4803      	ldr	r0, [pc, #12]	; (80022e8 <I2Cx_Error+0x14>)
 80022da:	f001 f979 	bl	80035d0 <HAL_I2C_DeInit>
  
  /* Re-Initialize the SPI communication BUS */
  I2Cx_Init();
 80022de:	f7ff ff13 	bl	8002108 <I2Cx_Init>
}
 80022e2:	bf00      	nop
 80022e4:	bd80      	pop	{r7, pc}
 80022e6:	bf00      	nop
 80022e8:	20025c28 	.word	0x20025c28

080022ec <SPIx_Init>:

/**
  * @brief  SPIx Bus initialization
  */
static void SPIx_Init(void)
{
 80022ec:	b580      	push	{r7, lr}
 80022ee:	af00      	add	r7, sp, #0
  if(HAL_SPI_GetState(&SpiHandle) == HAL_SPI_STATE_RESET)
 80022f0:	4819      	ldr	r0, [pc, #100]	; (8002358 <SPIx_Init+0x6c>)
 80022f2:	f003 ff95 	bl	8006220 <HAL_SPI_GetState>
 80022f6:	4603      	mov	r3, r0
 80022f8:	2b00      	cmp	r3, #0
 80022fa:	d12b      	bne.n	8002354 <SPIx_Init+0x68>
  {
    /* SPI configuration -----------------------------------------------------*/
    SpiHandle.Instance = DISCOVERY_SPIx;
 80022fc:	4b16      	ldr	r3, [pc, #88]	; (8002358 <SPIx_Init+0x6c>)
 80022fe:	4a17      	ldr	r2, [pc, #92]	; (800235c <SPIx_Init+0x70>)
 8002300:	601a      	str	r2, [r3, #0]
       to verify these constraints:
       - ILI9341 LCD SPI interface max baudrate is 10MHz for write and 6.66MHz for read
       - l3gd20 SPI interface max baudrate is 10MHz for write/read
       - PCLK2 frequency is set to 90 MHz 
    */  
    SpiHandle.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8002302:	4b15      	ldr	r3, [pc, #84]	; (8002358 <SPIx_Init+0x6c>)
 8002304:	2218      	movs	r2, #24
 8002306:	61da      	str	r2, [r3, #28]

    /* On STM32F429I-Discovery, LCD ID cannot be read then keep a common configuration */
    /* for LCD and GYRO (SPI_DIRECTION_2LINES) */
    /* Note: To read a register a LCD, SPI_DIRECTION_1LINE should be set */
    SpiHandle.Init.Direction      = SPI_DIRECTION_2LINES;
 8002308:	4b13      	ldr	r3, [pc, #76]	; (8002358 <SPIx_Init+0x6c>)
 800230a:	2200      	movs	r2, #0
 800230c:	609a      	str	r2, [r3, #8]
    SpiHandle.Init.CLKPhase       = SPI_PHASE_1EDGE;
 800230e:	4b12      	ldr	r3, [pc, #72]	; (8002358 <SPIx_Init+0x6c>)
 8002310:	2200      	movs	r2, #0
 8002312:	615a      	str	r2, [r3, #20]
    SpiHandle.Init.CLKPolarity    = SPI_POLARITY_LOW;
 8002314:	4b10      	ldr	r3, [pc, #64]	; (8002358 <SPIx_Init+0x6c>)
 8002316:	2200      	movs	r2, #0
 8002318:	611a      	str	r2, [r3, #16]
    SpiHandle.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLED;
 800231a:	4b0f      	ldr	r3, [pc, #60]	; (8002358 <SPIx_Init+0x6c>)
 800231c:	2200      	movs	r2, #0
 800231e:	629a      	str	r2, [r3, #40]	; 0x28
    SpiHandle.Init.CRCPolynomial  = 7;
 8002320:	4b0d      	ldr	r3, [pc, #52]	; (8002358 <SPIx_Init+0x6c>)
 8002322:	2207      	movs	r2, #7
 8002324:	62da      	str	r2, [r3, #44]	; 0x2c
    SpiHandle.Init.DataSize       = SPI_DATASIZE_8BIT;
 8002326:	4b0c      	ldr	r3, [pc, #48]	; (8002358 <SPIx_Init+0x6c>)
 8002328:	2200      	movs	r2, #0
 800232a:	60da      	str	r2, [r3, #12]
    SpiHandle.Init.FirstBit       = SPI_FIRSTBIT_MSB;
 800232c:	4b0a      	ldr	r3, [pc, #40]	; (8002358 <SPIx_Init+0x6c>)
 800232e:	2200      	movs	r2, #0
 8002330:	621a      	str	r2, [r3, #32]
    SpiHandle.Init.NSS            = SPI_NSS_SOFT;
 8002332:	4b09      	ldr	r3, [pc, #36]	; (8002358 <SPIx_Init+0x6c>)
 8002334:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002338:	619a      	str	r2, [r3, #24]
    SpiHandle.Init.TIMode         = SPI_TIMODE_DISABLED;
 800233a:	4b07      	ldr	r3, [pc, #28]	; (8002358 <SPIx_Init+0x6c>)
 800233c:	2200      	movs	r2, #0
 800233e:	625a      	str	r2, [r3, #36]	; 0x24
    SpiHandle.Init.Mode           = SPI_MODE_MASTER;
 8002340:	4b05      	ldr	r3, [pc, #20]	; (8002358 <SPIx_Init+0x6c>)
 8002342:	f44f 7282 	mov.w	r2, #260	; 0x104
 8002346:	605a      	str	r2, [r3, #4]
  
    SPIx_MspInit(&SpiHandle);
 8002348:	4803      	ldr	r0, [pc, #12]	; (8002358 <SPIx_Init+0x6c>)
 800234a:	f000 f853 	bl	80023f4 <SPIx_MspInit>
    HAL_SPI_Init(&SpiHandle);
 800234e:	4802      	ldr	r0, [pc, #8]	; (8002358 <SPIx_Init+0x6c>)
 8002350:	f003 fac6 	bl	80058e0 <HAL_SPI_Init>
  } 
}
 8002354:	bf00      	nop
 8002356:	bd80      	pop	{r7, pc}
 8002358:	20025c7c 	.word	0x20025c7c
 800235c:	40015000 	.word	0x40015000

08002360 <SPIx_Read>:
  * @brief  Reads 4 bytes from device.
  * @param  ReadSize: Number of bytes to read (max 4 bytes)
  * @retval Value read on the SPI
  */
static uint32_t SPIx_Read(uint8_t ReadSize)
{
 8002360:	b580      	push	{r7, lr}
 8002362:	b084      	sub	sp, #16
 8002364:	af00      	add	r7, sp, #0
 8002366:	4603      	mov	r3, r0
 8002368:	71fb      	strb	r3, [r7, #7]
  HAL_StatusTypeDef status = HAL_OK;
 800236a:	2300      	movs	r3, #0
 800236c:	73fb      	strb	r3, [r7, #15]
  uint32_t readvalue;
  
  status = HAL_SPI_Receive(&SpiHandle, (uint8_t*) &readvalue, ReadSize, SpixTimeout);
 800236e:	79fb      	ldrb	r3, [r7, #7]
 8002370:	b29a      	uxth	r2, r3
 8002372:	4b09      	ldr	r3, [pc, #36]	; (8002398 <SPIx_Read+0x38>)
 8002374:	681b      	ldr	r3, [r3, #0]
 8002376:	f107 0108 	add.w	r1, r7, #8
 800237a:	4808      	ldr	r0, [pc, #32]	; (800239c <SPIx_Read+0x3c>)
 800237c:	f003 fc9d 	bl	8005cba <HAL_SPI_Receive>
 8002380:	4603      	mov	r3, r0
 8002382:	73fb      	strb	r3, [r7, #15]
  
  /* Check the communication status */
  if(status != HAL_OK)
 8002384:	7bfb      	ldrb	r3, [r7, #15]
 8002386:	2b00      	cmp	r3, #0
 8002388:	d001      	beq.n	800238e <SPIx_Read+0x2e>
  {
    /* Re-Initialize the BUS */
    SPIx_Error();
 800238a:	f000 f827 	bl	80023dc <SPIx_Error>
  }
  
  return readvalue;
 800238e:	68bb      	ldr	r3, [r7, #8]
}
 8002390:	4618      	mov	r0, r3
 8002392:	3710      	adds	r7, #16
 8002394:	46bd      	mov	sp, r7
 8002396:	bd80      	pop	{r7, pc}
 8002398:	2000006c 	.word	0x2000006c
 800239c:	20025c7c 	.word	0x20025c7c

080023a0 <SPIx_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPIx_Write(uint16_t Value)
{
 80023a0:	b580      	push	{r7, lr}
 80023a2:	b084      	sub	sp, #16
 80023a4:	af00      	add	r7, sp, #0
 80023a6:	4603      	mov	r3, r0
 80023a8:	80fb      	strh	r3, [r7, #6]
  HAL_StatusTypeDef status = HAL_OK;
 80023aa:	2300      	movs	r3, #0
 80023ac:	73fb      	strb	r3, [r7, #15]
  
  status = HAL_SPI_Transmit(&SpiHandle, (uint8_t*) &Value, 1, SpixTimeout);
 80023ae:	4b09      	ldr	r3, [pc, #36]	; (80023d4 <SPIx_Write+0x34>)
 80023b0:	681b      	ldr	r3, [r3, #0]
 80023b2:	1db9      	adds	r1, r7, #6
 80023b4:	2201      	movs	r2, #1
 80023b6:	4808      	ldr	r0, [pc, #32]	; (80023d8 <SPIx_Write+0x38>)
 80023b8:	f003 fb43 	bl	8005a42 <HAL_SPI_Transmit>
 80023bc:	4603      	mov	r3, r0
 80023be:	73fb      	strb	r3, [r7, #15]
  
  /* Check the communication status */
  if(status != HAL_OK)
 80023c0:	7bfb      	ldrb	r3, [r7, #15]
 80023c2:	2b00      	cmp	r3, #0
 80023c4:	d001      	beq.n	80023ca <SPIx_Write+0x2a>
  {
    /* Re-Initialize the BUS */
    SPIx_Error();
 80023c6:	f000 f809 	bl	80023dc <SPIx_Error>
  }
}
 80023ca:	bf00      	nop
 80023cc:	3710      	adds	r7, #16
 80023ce:	46bd      	mov	sp, r7
 80023d0:	bd80      	pop	{r7, pc}
 80023d2:	bf00      	nop
 80023d4:	2000006c 	.word	0x2000006c
 80023d8:	20025c7c 	.word	0x20025c7c

080023dc <SPIx_Error>:

/**
  * @brief  SPIx error treatment function.
  */
static void SPIx_Error(void)
{
 80023dc:	b580      	push	{r7, lr}
 80023de:	af00      	add	r7, sp, #0
  /* De-initialize the SPI communication BUS */
  HAL_SPI_DeInit(&SpiHandle);
 80023e0:	4803      	ldr	r0, [pc, #12]	; (80023f0 <SPIx_Error+0x14>)
 80023e2:	f003 fb06 	bl	80059f2 <HAL_SPI_DeInit>
  
  /* Re- Initialize the SPI communication BUS */
  SPIx_Init();
 80023e6:	f7ff ff81 	bl	80022ec <SPIx_Init>
}
 80023ea:	bf00      	nop
 80023ec:	bd80      	pop	{r7, pc}
 80023ee:	bf00      	nop
 80023f0:	20025c7c 	.word	0x20025c7c

080023f4 <SPIx_MspInit>:
/**
  * @brief  SPI MSP Init.
  * @param  hspi: SPI handle
  */
static void SPIx_MspInit(SPI_HandleTypeDef *hspi)
{
 80023f4:	b580      	push	{r7, lr}
 80023f6:	b08a      	sub	sp, #40	; 0x28
 80023f8:	af00      	add	r7, sp, #0
 80023fa:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef   GPIO_InitStructure;

  /* Enable SPIx clock */
  DISCOVERY_SPIx_CLK_ENABLE();
 80023fc:	2300      	movs	r3, #0
 80023fe:	613b      	str	r3, [r7, #16]
 8002400:	4b17      	ldr	r3, [pc, #92]	; (8002460 <SPIx_MspInit+0x6c>)
 8002402:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002404:	4a16      	ldr	r2, [pc, #88]	; (8002460 <SPIx_MspInit+0x6c>)
 8002406:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800240a:	6453      	str	r3, [r2, #68]	; 0x44
 800240c:	4b14      	ldr	r3, [pc, #80]	; (8002460 <SPIx_MspInit+0x6c>)
 800240e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002410:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8002414:	613b      	str	r3, [r7, #16]
 8002416:	693b      	ldr	r3, [r7, #16]

  /* Enable DISCOVERY_SPI GPIO clock */
  DISCOVERY_SPIx_GPIO_CLK_ENABLE();
 8002418:	2300      	movs	r3, #0
 800241a:	60fb      	str	r3, [r7, #12]
 800241c:	4b10      	ldr	r3, [pc, #64]	; (8002460 <SPIx_MspInit+0x6c>)
 800241e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002420:	4a0f      	ldr	r2, [pc, #60]	; (8002460 <SPIx_MspInit+0x6c>)
 8002422:	f043 0320 	orr.w	r3, r3, #32
 8002426:	6313      	str	r3, [r2, #48]	; 0x30
 8002428:	4b0d      	ldr	r3, [pc, #52]	; (8002460 <SPIx_MspInit+0x6c>)
 800242a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800242c:	f003 0320 	and.w	r3, r3, #32
 8002430:	60fb      	str	r3, [r7, #12]
 8002432:	68fb      	ldr	r3, [r7, #12]

  /* configure SPI SCK, MOSI and MISO */    
  GPIO_InitStructure.Pin    = (DISCOVERY_SPIx_SCK_PIN | DISCOVERY_SPIx_MOSI_PIN | DISCOVERY_SPIx_MISO_PIN);
 8002434:	f44f 7360 	mov.w	r3, #896	; 0x380
 8002438:	617b      	str	r3, [r7, #20]
  GPIO_InitStructure.Mode   = GPIO_MODE_AF_PP;
 800243a:	2302      	movs	r3, #2
 800243c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStructure.Pull   = GPIO_PULLDOWN;
 800243e:	2302      	movs	r3, #2
 8002440:	61fb      	str	r3, [r7, #28]
  GPIO_InitStructure.Speed  = GPIO_SPEED_MEDIUM;
 8002442:	2301      	movs	r3, #1
 8002444:	623b      	str	r3, [r7, #32]
  GPIO_InitStructure.Alternate = DISCOVERY_SPIx_AF;
 8002446:	2305      	movs	r3, #5
 8002448:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(DISCOVERY_SPIx_GPIO_PORT, &GPIO_InitStructure);      
 800244a:	f107 0314 	add.w	r3, r7, #20
 800244e:	4619      	mov	r1, r3
 8002450:	4804      	ldr	r0, [pc, #16]	; (8002464 <SPIx_MspInit+0x70>)
 8002452:	f000 fca7 	bl	8002da4 <HAL_GPIO_Init>
}
 8002456:	bf00      	nop
 8002458:	3728      	adds	r7, #40	; 0x28
 800245a:	46bd      	mov	sp, r7
 800245c:	bd80      	pop	{r7, pc}
 800245e:	bf00      	nop
 8002460:	40023800 	.word	0x40023800
 8002464:	40021400 	.word	0x40021400

08002468 <LCD_IO_Init>:

/**
  * @brief  Configures the LCD_SPI interface.
  */
void LCD_IO_Init(void)
{
 8002468:	b580      	push	{r7, lr}
 800246a:	b088      	sub	sp, #32
 800246c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStructure;
  
  if(Is_LCD_IO_Initialized == 0)
 800246e:	4b36      	ldr	r3, [pc, #216]	; (8002548 <LCD_IO_Init+0xe0>)
 8002470:	781b      	ldrb	r3, [r3, #0]
 8002472:	2b00      	cmp	r3, #0
 8002474:	d164      	bne.n	8002540 <LCD_IO_Init+0xd8>
  {
    Is_LCD_IO_Initialized = 1; 
 8002476:	4b34      	ldr	r3, [pc, #208]	; (8002548 <LCD_IO_Init+0xe0>)
 8002478:	2201      	movs	r2, #1
 800247a:	701a      	strb	r2, [r3, #0]
    
    /* Configure NCS in Output Push-Pull mode */
    LCD_WRX_GPIO_CLK_ENABLE();
 800247c:	2300      	movs	r3, #0
 800247e:	60bb      	str	r3, [r7, #8]
 8002480:	4b32      	ldr	r3, [pc, #200]	; (800254c <LCD_IO_Init+0xe4>)
 8002482:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002484:	4a31      	ldr	r2, [pc, #196]	; (800254c <LCD_IO_Init+0xe4>)
 8002486:	f043 0308 	orr.w	r3, r3, #8
 800248a:	6313      	str	r3, [r2, #48]	; 0x30
 800248c:	4b2f      	ldr	r3, [pc, #188]	; (800254c <LCD_IO_Init+0xe4>)
 800248e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002490:	f003 0308 	and.w	r3, r3, #8
 8002494:	60bb      	str	r3, [r7, #8]
 8002496:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStructure.Pin     = LCD_WRX_PIN;
 8002498:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800249c:	60fb      	str	r3, [r7, #12]
    GPIO_InitStructure.Mode    = GPIO_MODE_OUTPUT_PP;
 800249e:	2301      	movs	r3, #1
 80024a0:	613b      	str	r3, [r7, #16]
    GPIO_InitStructure.Pull    = GPIO_NOPULL;
 80024a2:	2300      	movs	r3, #0
 80024a4:	617b      	str	r3, [r7, #20]
    GPIO_InitStructure.Speed   = GPIO_SPEED_FAST;
 80024a6:	2302      	movs	r3, #2
 80024a8:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(LCD_WRX_GPIO_PORT, &GPIO_InitStructure);
 80024aa:	f107 030c 	add.w	r3, r7, #12
 80024ae:	4619      	mov	r1, r3
 80024b0:	4827      	ldr	r0, [pc, #156]	; (8002550 <LCD_IO_Init+0xe8>)
 80024b2:	f000 fc77 	bl	8002da4 <HAL_GPIO_Init>
    
    LCD_RDX_GPIO_CLK_ENABLE();
 80024b6:	2300      	movs	r3, #0
 80024b8:	607b      	str	r3, [r7, #4]
 80024ba:	4b24      	ldr	r3, [pc, #144]	; (800254c <LCD_IO_Init+0xe4>)
 80024bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80024be:	4a23      	ldr	r2, [pc, #140]	; (800254c <LCD_IO_Init+0xe4>)
 80024c0:	f043 0308 	orr.w	r3, r3, #8
 80024c4:	6313      	str	r3, [r2, #48]	; 0x30
 80024c6:	4b21      	ldr	r3, [pc, #132]	; (800254c <LCD_IO_Init+0xe4>)
 80024c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80024ca:	f003 0308 	and.w	r3, r3, #8
 80024ce:	607b      	str	r3, [r7, #4]
 80024d0:	687b      	ldr	r3, [r7, #4]
    GPIO_InitStructure.Pin     = LCD_RDX_PIN;
 80024d2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80024d6:	60fb      	str	r3, [r7, #12]
    GPIO_InitStructure.Mode    = GPIO_MODE_OUTPUT_PP;
 80024d8:	2301      	movs	r3, #1
 80024da:	613b      	str	r3, [r7, #16]
    GPIO_InitStructure.Pull    = GPIO_NOPULL;
 80024dc:	2300      	movs	r3, #0
 80024de:	617b      	str	r3, [r7, #20]
    GPIO_InitStructure.Speed   = GPIO_SPEED_FAST;
 80024e0:	2302      	movs	r3, #2
 80024e2:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(LCD_RDX_GPIO_PORT, &GPIO_InitStructure);
 80024e4:	f107 030c 	add.w	r3, r7, #12
 80024e8:	4619      	mov	r1, r3
 80024ea:	4819      	ldr	r0, [pc, #100]	; (8002550 <LCD_IO_Init+0xe8>)
 80024ec:	f000 fc5a 	bl	8002da4 <HAL_GPIO_Init>
    
    /* Configure the LCD Control pins ----------------------------------------*/
    LCD_NCS_GPIO_CLK_ENABLE();
 80024f0:	2300      	movs	r3, #0
 80024f2:	603b      	str	r3, [r7, #0]
 80024f4:	4b15      	ldr	r3, [pc, #84]	; (800254c <LCD_IO_Init+0xe4>)
 80024f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80024f8:	4a14      	ldr	r2, [pc, #80]	; (800254c <LCD_IO_Init+0xe4>)
 80024fa:	f043 0304 	orr.w	r3, r3, #4
 80024fe:	6313      	str	r3, [r2, #48]	; 0x30
 8002500:	4b12      	ldr	r3, [pc, #72]	; (800254c <LCD_IO_Init+0xe4>)
 8002502:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002504:	f003 0304 	and.w	r3, r3, #4
 8002508:	603b      	str	r3, [r7, #0]
 800250a:	683b      	ldr	r3, [r7, #0]
    
    /* Configure NCS in Output Push-Pull mode */
    GPIO_InitStructure.Pin     = LCD_NCS_PIN;
 800250c:	2304      	movs	r3, #4
 800250e:	60fb      	str	r3, [r7, #12]
    GPIO_InitStructure.Mode    = GPIO_MODE_OUTPUT_PP;
 8002510:	2301      	movs	r3, #1
 8002512:	613b      	str	r3, [r7, #16]
    GPIO_InitStructure.Pull    = GPIO_NOPULL;
 8002514:	2300      	movs	r3, #0
 8002516:	617b      	str	r3, [r7, #20]
    GPIO_InitStructure.Speed   = GPIO_SPEED_FAST;
 8002518:	2302      	movs	r3, #2
 800251a:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(LCD_NCS_GPIO_PORT, &GPIO_InitStructure);
 800251c:	f107 030c 	add.w	r3, r7, #12
 8002520:	4619      	mov	r1, r3
 8002522:	480c      	ldr	r0, [pc, #48]	; (8002554 <LCD_IO_Init+0xec>)
 8002524:	f000 fc3e 	bl	8002da4 <HAL_GPIO_Init>
    
    /* Set or Reset the control line */
    LCD_CS_LOW();
 8002528:	2200      	movs	r2, #0
 800252a:	2104      	movs	r1, #4
 800252c:	4809      	ldr	r0, [pc, #36]	; (8002554 <LCD_IO_Init+0xec>)
 800252e:	f000 fef1 	bl	8003314 <HAL_GPIO_WritePin>
    LCD_CS_HIGH();
 8002532:	2201      	movs	r2, #1
 8002534:	2104      	movs	r1, #4
 8002536:	4807      	ldr	r0, [pc, #28]	; (8002554 <LCD_IO_Init+0xec>)
 8002538:	f000 feec 	bl	8003314 <HAL_GPIO_WritePin>
    
    SPIx_Init();
 800253c:	f7ff fed6 	bl	80022ec <SPIx_Init>
  }
}
 8002540:	bf00      	nop
 8002542:	3720      	adds	r7, #32
 8002544:	46bd      	mov	sp, r7
 8002546:	bd80      	pop	{r7, pc}
 8002548:	20025cd4 	.word	0x20025cd4
 800254c:	40023800 	.word	0x40023800
 8002550:	40020c00 	.word	0x40020c00
 8002554:	40020800 	.word	0x40020800

08002558 <LCD_IO_WriteData>:

/**
  * @brief  Writes register value.
  */
void LCD_IO_WriteData(uint16_t RegValue) 
{
 8002558:	b580      	push	{r7, lr}
 800255a:	b082      	sub	sp, #8
 800255c:	af00      	add	r7, sp, #0
 800255e:	4603      	mov	r3, r0
 8002560:	80fb      	strh	r3, [r7, #6]
  /* Set WRX to send data */
  LCD_WRX_HIGH();
 8002562:	2201      	movs	r2, #1
 8002564:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002568:	480a      	ldr	r0, [pc, #40]	; (8002594 <LCD_IO_WriteData+0x3c>)
 800256a:	f000 fed3 	bl	8003314 <HAL_GPIO_WritePin>
  
  /* Reset LCD control line(/CS) and Send data */  
  LCD_CS_LOW();
 800256e:	2200      	movs	r2, #0
 8002570:	2104      	movs	r1, #4
 8002572:	4809      	ldr	r0, [pc, #36]	; (8002598 <LCD_IO_WriteData+0x40>)
 8002574:	f000 fece 	bl	8003314 <HAL_GPIO_WritePin>
  SPIx_Write(RegValue);
 8002578:	88fb      	ldrh	r3, [r7, #6]
 800257a:	4618      	mov	r0, r3
 800257c:	f7ff ff10 	bl	80023a0 <SPIx_Write>
  
  /* Deselect: Chip Select high */
  LCD_CS_HIGH();
 8002580:	2201      	movs	r2, #1
 8002582:	2104      	movs	r1, #4
 8002584:	4804      	ldr	r0, [pc, #16]	; (8002598 <LCD_IO_WriteData+0x40>)
 8002586:	f000 fec5 	bl	8003314 <HAL_GPIO_WritePin>
}
 800258a:	bf00      	nop
 800258c:	3708      	adds	r7, #8
 800258e:	46bd      	mov	sp, r7
 8002590:	bd80      	pop	{r7, pc}
 8002592:	bf00      	nop
 8002594:	40020c00 	.word	0x40020c00
 8002598:	40020800 	.word	0x40020800

0800259c <LCD_IO_WriteReg>:

/**
  * @brief  Writes register address.
  */
void LCD_IO_WriteReg(uint8_t Reg) 
{
 800259c:	b580      	push	{r7, lr}
 800259e:	b082      	sub	sp, #8
 80025a0:	af00      	add	r7, sp, #0
 80025a2:	4603      	mov	r3, r0
 80025a4:	71fb      	strb	r3, [r7, #7]
  /* Reset WRX to send command */
  LCD_WRX_LOW();
 80025a6:	2200      	movs	r2, #0
 80025a8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80025ac:	480a      	ldr	r0, [pc, #40]	; (80025d8 <LCD_IO_WriteReg+0x3c>)
 80025ae:	f000 feb1 	bl	8003314 <HAL_GPIO_WritePin>
  
  /* Reset LCD control line(/CS) and Send command */
  LCD_CS_LOW();
 80025b2:	2200      	movs	r2, #0
 80025b4:	2104      	movs	r1, #4
 80025b6:	4809      	ldr	r0, [pc, #36]	; (80025dc <LCD_IO_WriteReg+0x40>)
 80025b8:	f000 feac 	bl	8003314 <HAL_GPIO_WritePin>
  SPIx_Write(Reg);
 80025bc:	79fb      	ldrb	r3, [r7, #7]
 80025be:	b29b      	uxth	r3, r3
 80025c0:	4618      	mov	r0, r3
 80025c2:	f7ff feed 	bl	80023a0 <SPIx_Write>
  
  /* Deselect: Chip Select high */
  LCD_CS_HIGH();
 80025c6:	2201      	movs	r2, #1
 80025c8:	2104      	movs	r1, #4
 80025ca:	4804      	ldr	r0, [pc, #16]	; (80025dc <LCD_IO_WriteReg+0x40>)
 80025cc:	f000 fea2 	bl	8003314 <HAL_GPIO_WritePin>
}
 80025d0:	bf00      	nop
 80025d2:	3708      	adds	r7, #8
 80025d4:	46bd      	mov	sp, r7
 80025d6:	bd80      	pop	{r7, pc}
 80025d8:	40020c00 	.word	0x40020c00
 80025dc:	40020800 	.word	0x40020800

080025e0 <LCD_IO_ReadData>:
  * @param  RegValue Address of the register to read
  * @param  ReadSize Number of bytes to read
  * @retval Content of the register value
  */
uint32_t LCD_IO_ReadData(uint16_t RegValue, uint8_t ReadSize) 
{
 80025e0:	b580      	push	{r7, lr}
 80025e2:	b084      	sub	sp, #16
 80025e4:	af00      	add	r7, sp, #0
 80025e6:	4603      	mov	r3, r0
 80025e8:	460a      	mov	r2, r1
 80025ea:	80fb      	strh	r3, [r7, #6]
 80025ec:	4613      	mov	r3, r2
 80025ee:	717b      	strb	r3, [r7, #5]
  uint32_t readvalue = 0;
 80025f0:	2300      	movs	r3, #0
 80025f2:	60fb      	str	r3, [r7, #12]

  /* Select: Chip Select low */
  LCD_CS_LOW();
 80025f4:	2200      	movs	r2, #0
 80025f6:	2104      	movs	r1, #4
 80025f8:	4810      	ldr	r0, [pc, #64]	; (800263c <LCD_IO_ReadData+0x5c>)
 80025fa:	f000 fe8b 	bl	8003314 <HAL_GPIO_WritePin>

  /* Reset WRX to send command */
  LCD_WRX_LOW();
 80025fe:	2200      	movs	r2, #0
 8002600:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002604:	480e      	ldr	r0, [pc, #56]	; (8002640 <LCD_IO_ReadData+0x60>)
 8002606:	f000 fe85 	bl	8003314 <HAL_GPIO_WritePin>
  
  SPIx_Write(RegValue);
 800260a:	88fb      	ldrh	r3, [r7, #6]
 800260c:	4618      	mov	r0, r3
 800260e:	f7ff fec7 	bl	80023a0 <SPIx_Write>
  
  readvalue = SPIx_Read(ReadSize);
 8002612:	797b      	ldrb	r3, [r7, #5]
 8002614:	4618      	mov	r0, r3
 8002616:	f7ff fea3 	bl	8002360 <SPIx_Read>
 800261a:	60f8      	str	r0, [r7, #12]

  /* Set WRX to send data */
  LCD_WRX_HIGH();
 800261c:	2201      	movs	r2, #1
 800261e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002622:	4807      	ldr	r0, [pc, #28]	; (8002640 <LCD_IO_ReadData+0x60>)
 8002624:	f000 fe76 	bl	8003314 <HAL_GPIO_WritePin>

  /* Deselect: Chip Select high */
  LCD_CS_HIGH();
 8002628:	2201      	movs	r2, #1
 800262a:	2104      	movs	r1, #4
 800262c:	4803      	ldr	r0, [pc, #12]	; (800263c <LCD_IO_ReadData+0x5c>)
 800262e:	f000 fe71 	bl	8003314 <HAL_GPIO_WritePin>
  
  return readvalue;
 8002632:	68fb      	ldr	r3, [r7, #12]
}
 8002634:	4618      	mov	r0, r3
 8002636:	3710      	adds	r7, #16
 8002638:	46bd      	mov	sp, r7
 800263a:	bd80      	pop	{r7, pc}
 800263c:	40020800 	.word	0x40020800
 8002640:	40020c00 	.word	0x40020c00

08002644 <LCD_Delay>:
/**
  * @brief  Wait for loop in ms.
  * @param  Delay in ms.
  */
void LCD_Delay(uint32_t Delay)
{
 8002644:	b580      	push	{r7, lr}
 8002646:	b082      	sub	sp, #8
 8002648:	af00      	add	r7, sp, #0
 800264a:	6078      	str	r0, [r7, #4]
  HAL_Delay(Delay);
 800264c:	6878      	ldr	r0, [r7, #4]
 800264e:	f000 f89b 	bl	8002788 <HAL_Delay>
}
 8002652:	bf00      	nop
 8002654:	3708      	adds	r7, #8
 8002656:	46bd      	mov	sp, r7
 8002658:	bd80      	pop	{r7, pc}

0800265a <IOE_Init>:

/**
  * @brief  IOE Low Level Initialization.
  */
void IOE_Init(void) 
{
 800265a:	b580      	push	{r7, lr}
 800265c:	af00      	add	r7, sp, #0
  I2Cx_Init();
 800265e:	f7ff fd53 	bl	8002108 <I2Cx_Init>
}
 8002662:	bf00      	nop
 8002664:	bd80      	pop	{r7, pc}

08002666 <IOE_ITConfig>:

/**
  * @brief  IOE Low Level Interrupt configuration.
  */
void IOE_ITConfig(void)
{
 8002666:	b580      	push	{r7, lr}
 8002668:	af00      	add	r7, sp, #0
  I2Cx_ITConfig();
 800266a:	f7ff fd7f 	bl	800216c <I2Cx_ITConfig>
}
 800266e:	bf00      	nop
 8002670:	bd80      	pop	{r7, pc}

08002672 <IOE_Write>:
  * @param  Addr: I2C Address
  * @param  Reg: Reg Address 
  * @param  Value: Data to be written
  */
void IOE_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8002672:	b580      	push	{r7, lr}
 8002674:	b082      	sub	sp, #8
 8002676:	af00      	add	r7, sp, #0
 8002678:	4603      	mov	r3, r0
 800267a:	71fb      	strb	r3, [r7, #7]
 800267c:	460b      	mov	r3, r1
 800267e:	71bb      	strb	r3, [r7, #6]
 8002680:	4613      	mov	r3, r2
 8002682:	717b      	strb	r3, [r7, #5]
  I2Cx_WriteData(Addr, Reg, Value);
 8002684:	797a      	ldrb	r2, [r7, #5]
 8002686:	79b9      	ldrb	r1, [r7, #6]
 8002688:	79fb      	ldrb	r3, [r7, #7]
 800268a:	4618      	mov	r0, r3
 800268c:	f7ff fd9e 	bl	80021cc <I2Cx_WriteData>
}
 8002690:	bf00      	nop
 8002692:	3708      	adds	r7, #8
 8002694:	46bd      	mov	sp, r7
 8002696:	bd80      	pop	{r7, pc}

08002698 <IOE_Read>:
  * @param  Addr: I2C Address
  * @param  Reg: Reg Address 
  * @retval The read data
  */
uint8_t IOE_Read(uint8_t Addr, uint8_t Reg)
{
 8002698:	b580      	push	{r7, lr}
 800269a:	b082      	sub	sp, #8
 800269c:	af00      	add	r7, sp, #0
 800269e:	4603      	mov	r3, r0
 80026a0:	460a      	mov	r2, r1
 80026a2:	71fb      	strb	r3, [r7, #7]
 80026a4:	4613      	mov	r3, r2
 80026a6:	71bb      	strb	r3, [r7, #6]
  return I2Cx_ReadData(Addr, Reg);
 80026a8:	79ba      	ldrb	r2, [r7, #6]
 80026aa:	79fb      	ldrb	r3, [r7, #7]
 80026ac:	4611      	mov	r1, r2
 80026ae:	4618      	mov	r0, r3
 80026b0:	f7ff fdb6 	bl	8002220 <I2Cx_ReadData>
 80026b4:	4603      	mov	r3, r0
}
 80026b6:	4618      	mov	r0, r3
 80026b8:	3708      	adds	r7, #8
 80026ba:	46bd      	mov	sp, r7
 80026bc:	bd80      	pop	{r7, pc}

080026be <IOE_ReadMultiple>:
  * @param  pBuffer: pointer to data buffer
  * @param  Length: length of the data
  * @retval 0 if no problems to read multiple data
  */
uint16_t IOE_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *pBuffer, uint16_t Length)
{
 80026be:	b580      	push	{r7, lr}
 80026c0:	b082      	sub	sp, #8
 80026c2:	af00      	add	r7, sp, #0
 80026c4:	603a      	str	r2, [r7, #0]
 80026c6:	461a      	mov	r2, r3
 80026c8:	4603      	mov	r3, r0
 80026ca:	71fb      	strb	r3, [r7, #7]
 80026cc:	460b      	mov	r3, r1
 80026ce:	71bb      	strb	r3, [r7, #6]
 80026d0:	4613      	mov	r3, r2
 80026d2:	80bb      	strh	r3, [r7, #4]
 return I2Cx_ReadBuffer(Addr, Reg, pBuffer, Length);
 80026d4:	88bb      	ldrh	r3, [r7, #4]
 80026d6:	79b9      	ldrb	r1, [r7, #6]
 80026d8:	79f8      	ldrb	r0, [r7, #7]
 80026da:	683a      	ldr	r2, [r7, #0]
 80026dc:	f7ff fdcc 	bl	8002278 <I2Cx_ReadBuffer>
 80026e0:	4603      	mov	r3, r0
 80026e2:	b29b      	uxth	r3, r3
}
 80026e4:	4618      	mov	r0, r3
 80026e6:	3708      	adds	r7, #8
 80026e8:	46bd      	mov	sp, r7
 80026ea:	bd80      	pop	{r7, pc}

080026ec <IOE_Delay>:
/**
  * @brief  IOE Delay.
  * @param  Delay in ms
  */
void IOE_Delay(uint32_t Delay)
{
 80026ec:	b580      	push	{r7, lr}
 80026ee:	b082      	sub	sp, #8
 80026f0:	af00      	add	r7, sp, #0
 80026f2:	6078      	str	r0, [r7, #4]
  HAL_Delay(Delay);
 80026f4:	6878      	ldr	r0, [r7, #4]
 80026f6:	f000 f847 	bl	8002788 <HAL_Delay>
}
 80026fa:	bf00      	nop
 80026fc:	3708      	adds	r7, #8
 80026fe:	46bd      	mov	sp, r7
 8002700:	bd80      	pop	{r7, pc}
	...

08002704 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8002704:	b580      	push	{r7, lr}
 8002706:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8002708:	4b0e      	ldr	r3, [pc, #56]	; (8002744 <HAL_Init+0x40>)
 800270a:	681b      	ldr	r3, [r3, #0]
 800270c:	4a0d      	ldr	r2, [pc, #52]	; (8002744 <HAL_Init+0x40>)
 800270e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002712:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8002714:	4b0b      	ldr	r3, [pc, #44]	; (8002744 <HAL_Init+0x40>)
 8002716:	681b      	ldr	r3, [r3, #0]
 8002718:	4a0a      	ldr	r2, [pc, #40]	; (8002744 <HAL_Init+0x40>)
 800271a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800271e:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002720:	4b08      	ldr	r3, [pc, #32]	; (8002744 <HAL_Init+0x40>)
 8002722:	681b      	ldr	r3, [r3, #0]
 8002724:	4a07      	ldr	r2, [pc, #28]	; (8002744 <HAL_Init+0x40>)
 8002726:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800272a:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800272c:	2003      	movs	r0, #3
 800272e:	f000 f8fc 	bl	800292a <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8002732:	200f      	movs	r0, #15
 8002734:	f7fe fea6 	bl	8001484 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8002738:	f7fe fb06 	bl	8000d48 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 800273c:	2300      	movs	r3, #0
}
 800273e:	4618      	mov	r0, r3
 8002740:	bd80      	pop	{r7, pc}
 8002742:	bf00      	nop
 8002744:	40023c00 	.word	0x40023c00

08002748 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8002748:	b480      	push	{r7}
 800274a:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 800274c:	4b06      	ldr	r3, [pc, #24]	; (8002768 <HAL_IncTick+0x20>)
 800274e:	781b      	ldrb	r3, [r3, #0]
 8002750:	461a      	mov	r2, r3
 8002752:	4b06      	ldr	r3, [pc, #24]	; (800276c <HAL_IncTick+0x24>)
 8002754:	681b      	ldr	r3, [r3, #0]
 8002756:	4413      	add	r3, r2
 8002758:	4a04      	ldr	r2, [pc, #16]	; (800276c <HAL_IncTick+0x24>)
 800275a:	6013      	str	r3, [r2, #0]
}
 800275c:	bf00      	nop
 800275e:	46bd      	mov	sp, r7
 8002760:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002764:	4770      	bx	lr
 8002766:	bf00      	nop
 8002768:	20000074 	.word	0x20000074
 800276c:	20025cd8 	.word	0x20025cd8

08002770 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8002770:	b480      	push	{r7}
 8002772:	af00      	add	r7, sp, #0
  return uwTick;
 8002774:	4b03      	ldr	r3, [pc, #12]	; (8002784 <HAL_GetTick+0x14>)
 8002776:	681b      	ldr	r3, [r3, #0]
}
 8002778:	4618      	mov	r0, r3
 800277a:	46bd      	mov	sp, r7
 800277c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002780:	4770      	bx	lr
 8002782:	bf00      	nop
 8002784:	20025cd8 	.word	0x20025cd8

08002788 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8002788:	b580      	push	{r7, lr}
 800278a:	b084      	sub	sp, #16
 800278c:	af00      	add	r7, sp, #0
 800278e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8002790:	f7ff ffee 	bl	8002770 <HAL_GetTick>
 8002794:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8002796:	687b      	ldr	r3, [r7, #4]
 8002798:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800279a:	68fb      	ldr	r3, [r7, #12]
 800279c:	f1b3 3fff 	cmp.w	r3, #4294967295
 80027a0:	d005      	beq.n	80027ae <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 80027a2:	4b0a      	ldr	r3, [pc, #40]	; (80027cc <HAL_Delay+0x44>)
 80027a4:	781b      	ldrb	r3, [r3, #0]
 80027a6:	461a      	mov	r2, r3
 80027a8:	68fb      	ldr	r3, [r7, #12]
 80027aa:	4413      	add	r3, r2
 80027ac:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 80027ae:	bf00      	nop
 80027b0:	f7ff ffde 	bl	8002770 <HAL_GetTick>
 80027b4:	4602      	mov	r2, r0
 80027b6:	68bb      	ldr	r3, [r7, #8]
 80027b8:	1ad3      	subs	r3, r2, r3
 80027ba:	68fa      	ldr	r2, [r7, #12]
 80027bc:	429a      	cmp	r2, r3
 80027be:	d8f7      	bhi.n	80027b0 <HAL_Delay+0x28>
  {
  }
}
 80027c0:	bf00      	nop
 80027c2:	bf00      	nop
 80027c4:	3710      	adds	r7, #16
 80027c6:	46bd      	mov	sp, r7
 80027c8:	bd80      	pop	{r7, pc}
 80027ca:	bf00      	nop
 80027cc:	20000074 	.word	0x20000074

080027d0 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80027d0:	b480      	push	{r7}
 80027d2:	b085      	sub	sp, #20
 80027d4:	af00      	add	r7, sp, #0
 80027d6:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80027d8:	687b      	ldr	r3, [r7, #4]
 80027da:	f003 0307 	and.w	r3, r3, #7
 80027de:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80027e0:	4b0c      	ldr	r3, [pc, #48]	; (8002814 <__NVIC_SetPriorityGrouping+0x44>)
 80027e2:	68db      	ldr	r3, [r3, #12]
 80027e4:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80027e6:	68ba      	ldr	r2, [r7, #8]
 80027e8:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80027ec:	4013      	ands	r3, r2
 80027ee:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80027f0:	68fb      	ldr	r3, [r7, #12]
 80027f2:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80027f4:	68bb      	ldr	r3, [r7, #8]
 80027f6:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80027f8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80027fc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002800:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8002802:	4a04      	ldr	r2, [pc, #16]	; (8002814 <__NVIC_SetPriorityGrouping+0x44>)
 8002804:	68bb      	ldr	r3, [r7, #8]
 8002806:	60d3      	str	r3, [r2, #12]
}
 8002808:	bf00      	nop
 800280a:	3714      	adds	r7, #20
 800280c:	46bd      	mov	sp, r7
 800280e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002812:	4770      	bx	lr
 8002814:	e000ed00 	.word	0xe000ed00

08002818 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8002818:	b480      	push	{r7}
 800281a:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800281c:	4b04      	ldr	r3, [pc, #16]	; (8002830 <__NVIC_GetPriorityGrouping+0x18>)
 800281e:	68db      	ldr	r3, [r3, #12]
 8002820:	0a1b      	lsrs	r3, r3, #8
 8002822:	f003 0307 	and.w	r3, r3, #7
}
 8002826:	4618      	mov	r0, r3
 8002828:	46bd      	mov	sp, r7
 800282a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800282e:	4770      	bx	lr
 8002830:	e000ed00 	.word	0xe000ed00

08002834 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8002834:	b480      	push	{r7}
 8002836:	b083      	sub	sp, #12
 8002838:	af00      	add	r7, sp, #0
 800283a:	4603      	mov	r3, r0
 800283c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800283e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002842:	2b00      	cmp	r3, #0
 8002844:	db0b      	blt.n	800285e <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002846:	79fb      	ldrb	r3, [r7, #7]
 8002848:	f003 021f 	and.w	r2, r3, #31
 800284c:	4907      	ldr	r1, [pc, #28]	; (800286c <__NVIC_EnableIRQ+0x38>)
 800284e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002852:	095b      	lsrs	r3, r3, #5
 8002854:	2001      	movs	r0, #1
 8002856:	fa00 f202 	lsl.w	r2, r0, r2
 800285a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 800285e:	bf00      	nop
 8002860:	370c      	adds	r7, #12
 8002862:	46bd      	mov	sp, r7
 8002864:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002868:	4770      	bx	lr
 800286a:	bf00      	nop
 800286c:	e000e100 	.word	0xe000e100

08002870 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8002870:	b480      	push	{r7}
 8002872:	b083      	sub	sp, #12
 8002874:	af00      	add	r7, sp, #0
 8002876:	4603      	mov	r3, r0
 8002878:	6039      	str	r1, [r7, #0]
 800287a:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800287c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002880:	2b00      	cmp	r3, #0
 8002882:	db0a      	blt.n	800289a <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002884:	683b      	ldr	r3, [r7, #0]
 8002886:	b2da      	uxtb	r2, r3
 8002888:	490c      	ldr	r1, [pc, #48]	; (80028bc <__NVIC_SetPriority+0x4c>)
 800288a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800288e:	0112      	lsls	r2, r2, #4
 8002890:	b2d2      	uxtb	r2, r2
 8002892:	440b      	add	r3, r1
 8002894:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8002898:	e00a      	b.n	80028b0 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800289a:	683b      	ldr	r3, [r7, #0]
 800289c:	b2da      	uxtb	r2, r3
 800289e:	4908      	ldr	r1, [pc, #32]	; (80028c0 <__NVIC_SetPriority+0x50>)
 80028a0:	79fb      	ldrb	r3, [r7, #7]
 80028a2:	f003 030f 	and.w	r3, r3, #15
 80028a6:	3b04      	subs	r3, #4
 80028a8:	0112      	lsls	r2, r2, #4
 80028aa:	b2d2      	uxtb	r2, r2
 80028ac:	440b      	add	r3, r1
 80028ae:	761a      	strb	r2, [r3, #24]
}
 80028b0:	bf00      	nop
 80028b2:	370c      	adds	r7, #12
 80028b4:	46bd      	mov	sp, r7
 80028b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028ba:	4770      	bx	lr
 80028bc:	e000e100 	.word	0xe000e100
 80028c0:	e000ed00 	.word	0xe000ed00

080028c4 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80028c4:	b480      	push	{r7}
 80028c6:	b089      	sub	sp, #36	; 0x24
 80028c8:	af00      	add	r7, sp, #0
 80028ca:	60f8      	str	r0, [r7, #12]
 80028cc:	60b9      	str	r1, [r7, #8]
 80028ce:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80028d0:	68fb      	ldr	r3, [r7, #12]
 80028d2:	f003 0307 	and.w	r3, r3, #7
 80028d6:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80028d8:	69fb      	ldr	r3, [r7, #28]
 80028da:	f1c3 0307 	rsb	r3, r3, #7
 80028de:	2b04      	cmp	r3, #4
 80028e0:	bf28      	it	cs
 80028e2:	2304      	movcs	r3, #4
 80028e4:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80028e6:	69fb      	ldr	r3, [r7, #28]
 80028e8:	3304      	adds	r3, #4
 80028ea:	2b06      	cmp	r3, #6
 80028ec:	d902      	bls.n	80028f4 <NVIC_EncodePriority+0x30>
 80028ee:	69fb      	ldr	r3, [r7, #28]
 80028f0:	3b03      	subs	r3, #3
 80028f2:	e000      	b.n	80028f6 <NVIC_EncodePriority+0x32>
 80028f4:	2300      	movs	r3, #0
 80028f6:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80028f8:	f04f 32ff 	mov.w	r2, #4294967295
 80028fc:	69bb      	ldr	r3, [r7, #24]
 80028fe:	fa02 f303 	lsl.w	r3, r2, r3
 8002902:	43da      	mvns	r2, r3
 8002904:	68bb      	ldr	r3, [r7, #8]
 8002906:	401a      	ands	r2, r3
 8002908:	697b      	ldr	r3, [r7, #20]
 800290a:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800290c:	f04f 31ff 	mov.w	r1, #4294967295
 8002910:	697b      	ldr	r3, [r7, #20]
 8002912:	fa01 f303 	lsl.w	r3, r1, r3
 8002916:	43d9      	mvns	r1, r3
 8002918:	687b      	ldr	r3, [r7, #4]
 800291a:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800291c:	4313      	orrs	r3, r2
         );
}
 800291e:	4618      	mov	r0, r3
 8002920:	3724      	adds	r7, #36	; 0x24
 8002922:	46bd      	mov	sp, r7
 8002924:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002928:	4770      	bx	lr

0800292a <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 800292a:	b580      	push	{r7, lr}
 800292c:	b082      	sub	sp, #8
 800292e:	af00      	add	r7, sp, #0
 8002930:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8002932:	6878      	ldr	r0, [r7, #4]
 8002934:	f7ff ff4c 	bl	80027d0 <__NVIC_SetPriorityGrouping>
}
 8002938:	bf00      	nop
 800293a:	3708      	adds	r7, #8
 800293c:	46bd      	mov	sp, r7
 800293e:	bd80      	pop	{r7, pc}

08002940 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8002940:	b580      	push	{r7, lr}
 8002942:	b086      	sub	sp, #24
 8002944:	af00      	add	r7, sp, #0
 8002946:	4603      	mov	r3, r0
 8002948:	60b9      	str	r1, [r7, #8]
 800294a:	607a      	str	r2, [r7, #4]
 800294c:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 800294e:	2300      	movs	r3, #0
 8002950:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8002952:	f7ff ff61 	bl	8002818 <__NVIC_GetPriorityGrouping>
 8002956:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8002958:	687a      	ldr	r2, [r7, #4]
 800295a:	68b9      	ldr	r1, [r7, #8]
 800295c:	6978      	ldr	r0, [r7, #20]
 800295e:	f7ff ffb1 	bl	80028c4 <NVIC_EncodePriority>
 8002962:	4602      	mov	r2, r0
 8002964:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002968:	4611      	mov	r1, r2
 800296a:	4618      	mov	r0, r3
 800296c:	f7ff ff80 	bl	8002870 <__NVIC_SetPriority>
}
 8002970:	bf00      	nop
 8002972:	3718      	adds	r7, #24
 8002974:	46bd      	mov	sp, r7
 8002976:	bd80      	pop	{r7, pc}

08002978 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8002978:	b580      	push	{r7, lr}
 800297a:	b082      	sub	sp, #8
 800297c:	af00      	add	r7, sp, #0
 800297e:	4603      	mov	r3, r0
 8002980:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 8002982:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002986:	4618      	mov	r0, r3
 8002988:	f7ff ff54 	bl	8002834 <__NVIC_EnableIRQ>
}
 800298c:	bf00      	nop
 800298e:	3708      	adds	r7, #8
 8002990:	46bd      	mov	sp, r7
 8002992:	bd80      	pop	{r7, pc}

08002994 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8002994:	b580      	push	{r7, lr}
 8002996:	b082      	sub	sp, #8
 8002998:	af00      	add	r7, sp, #0
 800299a:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800299c:	687b      	ldr	r3, [r7, #4]
 800299e:	2b00      	cmp	r3, #0
 80029a0:	d101      	bne.n	80029a6 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 80029a2:	2301      	movs	r3, #1
 80029a4:	e00e      	b.n	80029c4 <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 80029a6:	687b      	ldr	r3, [r7, #4]
 80029a8:	795b      	ldrb	r3, [r3, #5]
 80029aa:	b2db      	uxtb	r3, r3
 80029ac:	2b00      	cmp	r3, #0
 80029ae:	d105      	bne.n	80029bc <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 80029b0:	687b      	ldr	r3, [r7, #4]
 80029b2:	2200      	movs	r2, #0
 80029b4:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 80029b6:	6878      	ldr	r0, [r7, #4]
 80029b8:	f7fe f9ee 	bl	8000d98 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80029bc:	687b      	ldr	r3, [r7, #4]
 80029be:	2201      	movs	r2, #1
 80029c0:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 80029c2:	2300      	movs	r3, #0
}
 80029c4:	4618      	mov	r0, r3
 80029c6:	3708      	adds	r7, #8
 80029c8:	46bd      	mov	sp, r7
 80029ca:	bd80      	pop	{r7, pc}

080029cc <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 80029cc:	b580      	push	{r7, lr}
 80029ce:	b082      	sub	sp, #8
 80029d0:	af00      	add	r7, sp, #0
 80029d2:	6078      	str	r0, [r7, #4]
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 80029d4:	687b      	ldr	r3, [r7, #4]
 80029d6:	2b00      	cmp	r3, #0
 80029d8:	d101      	bne.n	80029de <HAL_DMA2D_Init+0x12>
  {
    return HAL_ERROR;
 80029da:	2301      	movs	r3, #1
 80029dc:	e03b      	b.n	8002a56 <HAL_DMA2D_Init+0x8a>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 80029de:	687b      	ldr	r3, [r7, #4]
 80029e0:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 80029e4:	b2db      	uxtb	r3, r3
 80029e6:	2b00      	cmp	r3, #0
 80029e8:	d106      	bne.n	80029f8 <HAL_DMA2D_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 80029ea:	687b      	ldr	r3, [r7, #4]
 80029ec:	2200      	movs	r2, #0
 80029ee:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 80029f2:	6878      	ldr	r0, [r7, #4]
 80029f4:	f7fe f9f2 	bl	8000ddc <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80029f8:	687b      	ldr	r3, [r7, #4]
 80029fa:	2202      	movs	r2, #2
 80029fc:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8002a00:	687b      	ldr	r3, [r7, #4]
 8002a02:	681b      	ldr	r3, [r3, #0]
 8002a04:	681b      	ldr	r3, [r3, #0]
 8002a06:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 8002a0a:	687b      	ldr	r3, [r7, #4]
 8002a0c:	685a      	ldr	r2, [r3, #4]
 8002a0e:	687b      	ldr	r3, [r7, #4]
 8002a10:	681b      	ldr	r3, [r3, #0]
 8002a12:	430a      	orrs	r2, r1
 8002a14:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8002a16:	687b      	ldr	r3, [r7, #4]
 8002a18:	681b      	ldr	r3, [r3, #0]
 8002a1a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002a1c:	f023 0107 	bic.w	r1, r3, #7
 8002a20:	687b      	ldr	r3, [r7, #4]
 8002a22:	689a      	ldr	r2, [r3, #8]
 8002a24:	687b      	ldr	r3, [r7, #4]
 8002a26:	681b      	ldr	r3, [r3, #0]
 8002a28:	430a      	orrs	r2, r1
 8002a2a:	635a      	str	r2, [r3, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8002a2c:	687b      	ldr	r3, [r7, #4]
 8002a2e:	681b      	ldr	r3, [r3, #0]
 8002a30:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002a32:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8002a36:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8002a3a:	687a      	ldr	r2, [r7, #4]
 8002a3c:	68d1      	ldr	r1, [r2, #12]
 8002a3e:	687a      	ldr	r2, [r7, #4]
 8002a40:	6812      	ldr	r2, [r2, #0]
 8002a42:	430b      	orrs	r3, r1
 8002a44:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8002a46:	687b      	ldr	r3, [r7, #4]
 8002a48:	2200      	movs	r2, #0
 8002a4a:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8002a4c:	687b      	ldr	r3, [r7, #4]
 8002a4e:	2201      	movs	r2, #1
 8002a50:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  return HAL_OK;
 8002a54:	2300      	movs	r3, #0
}
 8002a56:	4618      	mov	r0, r3
 8002a58:	3708      	adds	r7, #8
 8002a5a:	46bd      	mov	sp, r7
 8002a5c:	bd80      	pop	{r7, pc}

08002a5e <HAL_DMA2D_IRQHandler>:
  * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
 8002a5e:	b580      	push	{r7, lr}
 8002a60:	b084      	sub	sp, #16
 8002a62:	af00      	add	r7, sp, #0
 8002a64:	6078      	str	r0, [r7, #4]
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8002a66:	687b      	ldr	r3, [r7, #4]
 8002a68:	681b      	ldr	r3, [r3, #0]
 8002a6a:	685b      	ldr	r3, [r3, #4]
 8002a6c:	60fb      	str	r3, [r7, #12]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8002a6e:	687b      	ldr	r3, [r7, #4]
 8002a70:	681b      	ldr	r3, [r3, #0]
 8002a72:	681b      	ldr	r3, [r3, #0]
 8002a74:	60bb      	str	r3, [r7, #8]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8002a76:	68fb      	ldr	r3, [r7, #12]
 8002a78:	f003 0301 	and.w	r3, r3, #1
 8002a7c:	2b00      	cmp	r3, #0
 8002a7e:	d026      	beq.n	8002ace <HAL_DMA2D_IRQHandler+0x70>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8002a80:	68bb      	ldr	r3, [r7, #8]
 8002a82:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002a86:	2b00      	cmp	r3, #0
 8002a88:	d021      	beq.n	8002ace <HAL_DMA2D_IRQHandler+0x70>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8002a8a:	687b      	ldr	r3, [r7, #4]
 8002a8c:	681b      	ldr	r3, [r3, #0]
 8002a8e:	681a      	ldr	r2, [r3, #0]
 8002a90:	687b      	ldr	r3, [r7, #4]
 8002a92:	681b      	ldr	r3, [r3, #0]
 8002a94:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8002a98:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8002a9a:	687b      	ldr	r3, [r7, #4]
 8002a9c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002a9e:	f043 0201 	orr.w	r2, r3, #1
 8002aa2:	687b      	ldr	r3, [r7, #4]
 8002aa4:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8002aa6:	687b      	ldr	r3, [r7, #4]
 8002aa8:	681b      	ldr	r3, [r3, #0]
 8002aaa:	2201      	movs	r2, #1
 8002aac:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8002aae:	687b      	ldr	r3, [r7, #4]
 8002ab0:	2204      	movs	r2, #4
 8002ab2:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8002ab6:	687b      	ldr	r3, [r7, #4]
 8002ab8:	2200      	movs	r2, #0
 8002aba:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8002abe:	687b      	ldr	r3, [r7, #4]
 8002ac0:	695b      	ldr	r3, [r3, #20]
 8002ac2:	2b00      	cmp	r3, #0
 8002ac4:	d003      	beq.n	8002ace <HAL_DMA2D_IRQHandler+0x70>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8002ac6:	687b      	ldr	r3, [r7, #4]
 8002ac8:	695b      	ldr	r3, [r3, #20]
 8002aca:	6878      	ldr	r0, [r7, #4]
 8002acc:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8002ace:	68fb      	ldr	r3, [r7, #12]
 8002ad0:	f003 0320 	and.w	r3, r3, #32
 8002ad4:	2b00      	cmp	r3, #0
 8002ad6:	d026      	beq.n	8002b26 <HAL_DMA2D_IRQHandler+0xc8>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8002ad8:	68bb      	ldr	r3, [r7, #8]
 8002ada:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8002ade:	2b00      	cmp	r3, #0
 8002ae0:	d021      	beq.n	8002b26 <HAL_DMA2D_IRQHandler+0xc8>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8002ae2:	687b      	ldr	r3, [r7, #4]
 8002ae4:	681b      	ldr	r3, [r3, #0]
 8002ae6:	681a      	ldr	r2, [r3, #0]
 8002ae8:	687b      	ldr	r3, [r7, #4]
 8002aea:	681b      	ldr	r3, [r3, #0]
 8002aec:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002af0:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8002af2:	687b      	ldr	r3, [r7, #4]
 8002af4:	681b      	ldr	r3, [r3, #0]
 8002af6:	2220      	movs	r2, #32
 8002af8:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8002afa:	687b      	ldr	r3, [r7, #4]
 8002afc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002afe:	f043 0202 	orr.w	r2, r3, #2
 8002b02:	687b      	ldr	r3, [r7, #4]
 8002b04:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8002b06:	687b      	ldr	r3, [r7, #4]
 8002b08:	2204      	movs	r2, #4
 8002b0a:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8002b0e:	687b      	ldr	r3, [r7, #4]
 8002b10:	2200      	movs	r2, #0
 8002b12:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8002b16:	687b      	ldr	r3, [r7, #4]
 8002b18:	695b      	ldr	r3, [r3, #20]
 8002b1a:	2b00      	cmp	r3, #0
 8002b1c:	d003      	beq.n	8002b26 <HAL_DMA2D_IRQHandler+0xc8>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8002b1e:	687b      	ldr	r3, [r7, #4]
 8002b20:	695b      	ldr	r3, [r3, #20]
 8002b22:	6878      	ldr	r0, [r7, #4]
 8002b24:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8002b26:	68fb      	ldr	r3, [r7, #12]
 8002b28:	f003 0308 	and.w	r3, r3, #8
 8002b2c:	2b00      	cmp	r3, #0
 8002b2e:	d026      	beq.n	8002b7e <HAL_DMA2D_IRQHandler+0x120>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8002b30:	68bb      	ldr	r3, [r7, #8]
 8002b32:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8002b36:	2b00      	cmp	r3, #0
 8002b38:	d021      	beq.n	8002b7e <HAL_DMA2D_IRQHandler+0x120>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8002b3a:	687b      	ldr	r3, [r7, #4]
 8002b3c:	681b      	ldr	r3, [r3, #0]
 8002b3e:	681a      	ldr	r2, [r3, #0]
 8002b40:	687b      	ldr	r3, [r7, #4]
 8002b42:	681b      	ldr	r3, [r3, #0]
 8002b44:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8002b48:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8002b4a:	687b      	ldr	r3, [r7, #4]
 8002b4c:	681b      	ldr	r3, [r3, #0]
 8002b4e:	2208      	movs	r2, #8
 8002b50:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8002b52:	687b      	ldr	r3, [r7, #4]
 8002b54:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002b56:	f043 0204 	orr.w	r2, r3, #4
 8002b5a:	687b      	ldr	r3, [r7, #4]
 8002b5c:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8002b5e:	687b      	ldr	r3, [r7, #4]
 8002b60:	2204      	movs	r2, #4
 8002b62:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8002b66:	687b      	ldr	r3, [r7, #4]
 8002b68:	2200      	movs	r2, #0
 8002b6a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8002b6e:	687b      	ldr	r3, [r7, #4]
 8002b70:	695b      	ldr	r3, [r3, #20]
 8002b72:	2b00      	cmp	r3, #0
 8002b74:	d003      	beq.n	8002b7e <HAL_DMA2D_IRQHandler+0x120>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8002b76:	687b      	ldr	r3, [r7, #4]
 8002b78:	695b      	ldr	r3, [r3, #20]
 8002b7a:	6878      	ldr	r0, [r7, #4]
 8002b7c:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8002b7e:	68fb      	ldr	r3, [r7, #12]
 8002b80:	f003 0304 	and.w	r3, r3, #4
 8002b84:	2b00      	cmp	r3, #0
 8002b86:	d013      	beq.n	8002bb0 <HAL_DMA2D_IRQHandler+0x152>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8002b88:	68bb      	ldr	r3, [r7, #8]
 8002b8a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002b8e:	2b00      	cmp	r3, #0
 8002b90:	d00e      	beq.n	8002bb0 <HAL_DMA2D_IRQHandler+0x152>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8002b92:	687b      	ldr	r3, [r7, #4]
 8002b94:	681b      	ldr	r3, [r3, #0]
 8002b96:	681a      	ldr	r2, [r3, #0]
 8002b98:	687b      	ldr	r3, [r7, #4]
 8002b9a:	681b      	ldr	r3, [r3, #0]
 8002b9c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002ba0:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8002ba2:	687b      	ldr	r3, [r7, #4]
 8002ba4:	681b      	ldr	r3, [r3, #0]
 8002ba6:	2204      	movs	r2, #4
 8002ba8:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8002baa:	6878      	ldr	r0, [r7, #4]
 8002bac:	f000 f853 	bl	8002c56 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8002bb0:	68fb      	ldr	r3, [r7, #12]
 8002bb2:	f003 0302 	and.w	r3, r3, #2
 8002bb6:	2b00      	cmp	r3, #0
 8002bb8:	d024      	beq.n	8002c04 <HAL_DMA2D_IRQHandler+0x1a6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8002bba:	68bb      	ldr	r3, [r7, #8]
 8002bbc:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8002bc0:	2b00      	cmp	r3, #0
 8002bc2:	d01f      	beq.n	8002c04 <HAL_DMA2D_IRQHandler+0x1a6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	681b      	ldr	r3, [r3, #0]
 8002bc8:	681a      	ldr	r2, [r3, #0]
 8002bca:	687b      	ldr	r3, [r7, #4]
 8002bcc:	681b      	ldr	r3, [r3, #0]
 8002bce:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8002bd2:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8002bd4:	687b      	ldr	r3, [r7, #4]
 8002bd6:	681b      	ldr	r3, [r3, #0]
 8002bd8:	2202      	movs	r2, #2
 8002bda:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8002bdc:	687b      	ldr	r3, [r7, #4]
 8002bde:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8002be0:	687b      	ldr	r3, [r7, #4]
 8002be2:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8002be4:	687b      	ldr	r3, [r7, #4]
 8002be6:	2201      	movs	r2, #1
 8002be8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8002bec:	687b      	ldr	r3, [r7, #4]
 8002bee:	2200      	movs	r2, #0
 8002bf0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 8002bf4:	687b      	ldr	r3, [r7, #4]
 8002bf6:	691b      	ldr	r3, [r3, #16]
 8002bf8:	2b00      	cmp	r3, #0
 8002bfa:	d003      	beq.n	8002c04 <HAL_DMA2D_IRQHandler+0x1a6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8002bfc:	687b      	ldr	r3, [r7, #4]
 8002bfe:	691b      	ldr	r3, [r3, #16]
 8002c00:	6878      	ldr	r0, [r7, #4]
 8002c02:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8002c04:	68fb      	ldr	r3, [r7, #12]
 8002c06:	f003 0310 	and.w	r3, r3, #16
 8002c0a:	2b00      	cmp	r3, #0
 8002c0c:	d01f      	beq.n	8002c4e <HAL_DMA2D_IRQHandler+0x1f0>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8002c0e:	68bb      	ldr	r3, [r7, #8]
 8002c10:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002c14:	2b00      	cmp	r3, #0
 8002c16:	d01a      	beq.n	8002c4e <HAL_DMA2D_IRQHandler+0x1f0>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8002c18:	687b      	ldr	r3, [r7, #4]
 8002c1a:	681b      	ldr	r3, [r3, #0]
 8002c1c:	681a      	ldr	r2, [r3, #0]
 8002c1e:	687b      	ldr	r3, [r7, #4]
 8002c20:	681b      	ldr	r3, [r3, #0]
 8002c22:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8002c26:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8002c28:	687b      	ldr	r3, [r7, #4]
 8002c2a:	681b      	ldr	r3, [r3, #0]
 8002c2c:	2210      	movs	r2, #16
 8002c2e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8002c30:	687b      	ldr	r3, [r7, #4]
 8002c32:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8002c34:	687b      	ldr	r3, [r7, #4]
 8002c36:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8002c38:	687b      	ldr	r3, [r7, #4]
 8002c3a:	2201      	movs	r2, #1
 8002c3c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8002c40:	687b      	ldr	r3, [r7, #4]
 8002c42:	2200      	movs	r2, #0
 8002c44:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8002c48:	6878      	ldr	r0, [r7, #4]
 8002c4a:	f000 f80e 	bl	8002c6a <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8002c4e:	bf00      	nop
 8002c50:	3710      	adds	r7, #16
 8002c52:	46bd      	mov	sp, r7
 8002c54:	bd80      	pop	{r7, pc}

08002c56 <HAL_DMA2D_LineEventCallback>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
{
 8002c56:	b480      	push	{r7}
 8002c58:	b083      	sub	sp, #12
 8002c5a:	af00      	add	r7, sp, #0
 8002c5c:	6078      	str	r0, [r7, #4]
  UNUSED(hdma2d);

  /* NOTE : This function should not be modified; when the callback is needed,
            the HAL_DMA2D_LineEventCallback can be implemented in the user file.
   */
}
 8002c5e:	bf00      	nop
 8002c60:	370c      	adds	r7, #12
 8002c62:	46bd      	mov	sp, r7
 8002c64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c68:	4770      	bx	lr

08002c6a <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
{
 8002c6a:	b480      	push	{r7}
 8002c6c:	b083      	sub	sp, #12
 8002c6e:	af00      	add	r7, sp, #0
 8002c70:	6078      	str	r0, [r7, #4]
  UNUSED(hdma2d);

  /* NOTE : This function should not be modified; when the callback is needed,
            the HAL_DMA2D_CLUTLoadingCpltCallback can be implemented in the user file.
   */
}
 8002c72:	bf00      	nop
 8002c74:	370c      	adds	r7, #12
 8002c76:	46bd      	mov	sp, r7
 8002c78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c7c:	4770      	bx	lr
	...

08002c80 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8002c80:	b480      	push	{r7}
 8002c82:	b087      	sub	sp, #28
 8002c84:	af00      	add	r7, sp, #0
 8002c86:	6078      	str	r0, [r7, #4]
 8002c88:	6039      	str	r1, [r7, #0]
  uint32_t regValue;

  /* Check the parameters */
  assert_param(IS_DMA2D_LAYER(LayerIdx));
  assert_param(IS_DMA2D_OFFSET(hdma2d->LayerCfg[LayerIdx].InputOffset));
  if (hdma2d->Init.Mode != DMA2D_R2M)
 8002c8a:	687b      	ldr	r3, [r7, #4]
 8002c8c:	685b      	ldr	r3, [r3, #4]
 8002c8e:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8002c92:	687b      	ldr	r3, [r7, #4]
 8002c94:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8002c98:	2b01      	cmp	r3, #1
 8002c9a:	d101      	bne.n	8002ca0 <HAL_DMA2D_ConfigLayer+0x20>
 8002c9c:	2302      	movs	r3, #2
 8002c9e:	e079      	b.n	8002d94 <HAL_DMA2D_ConfigLayer+0x114>
 8002ca0:	687b      	ldr	r3, [r7, #4]
 8002ca2:	2201      	movs	r2, #1
 8002ca4:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8002ca8:	687b      	ldr	r3, [r7, #4]
 8002caa:	2202      	movs	r2, #2
 8002cac:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];
 8002cb0:	683b      	ldr	r3, [r7, #0]
 8002cb2:	011b      	lsls	r3, r3, #4
 8002cb4:	3318      	adds	r3, #24
 8002cb6:	687a      	ldr	r2, [r7, #4]
 8002cb8:	4413      	add	r3, r2
 8002cba:	613b      	str	r3, [r7, #16]

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8002cbc:	693b      	ldr	r3, [r7, #16]
 8002cbe:	685a      	ldr	r2, [r3, #4]
 8002cc0:	693b      	ldr	r3, [r7, #16]
 8002cc2:	689b      	ldr	r3, [r3, #8]
 8002cc4:	041b      	lsls	r3, r3, #16
 8002cc6:	4313      	orrs	r3, r2
 8002cc8:	617b      	str	r3, [r7, #20]
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;
 8002cca:	4b35      	ldr	r3, [pc, #212]	; (8002da0 <HAL_DMA2D_ConfigLayer+0x120>)
 8002ccc:	60fb      	str	r3, [r7, #12]


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8002cce:	693b      	ldr	r3, [r7, #16]
 8002cd0:	685b      	ldr	r3, [r3, #4]
 8002cd2:	2b0a      	cmp	r3, #10
 8002cd4:	d003      	beq.n	8002cde <HAL_DMA2D_ConfigLayer+0x5e>
 8002cd6:	693b      	ldr	r3, [r7, #16]
 8002cd8:	685b      	ldr	r3, [r3, #4]
 8002cda:	2b09      	cmp	r3, #9
 8002cdc:	d107      	bne.n	8002cee <HAL_DMA2D_ConfigLayer+0x6e>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8002cde:	693b      	ldr	r3, [r7, #16]
 8002ce0:	68db      	ldr	r3, [r3, #12]
 8002ce2:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002ce6:	697a      	ldr	r2, [r7, #20]
 8002ce8:	4313      	orrs	r3, r2
 8002cea:	617b      	str	r3, [r7, #20]
 8002cec:	e005      	b.n	8002cfa <HAL_DMA2D_ConfigLayer+0x7a>
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8002cee:	693b      	ldr	r3, [r7, #16]
 8002cf0:	68db      	ldr	r3, [r3, #12]
 8002cf2:	061b      	lsls	r3, r3, #24
 8002cf4:	697a      	ldr	r2, [r7, #20]
 8002cf6:	4313      	orrs	r3, r2
 8002cf8:	617b      	str	r3, [r7, #20]
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8002cfa:	683b      	ldr	r3, [r7, #0]
 8002cfc:	2b00      	cmp	r3, #0
 8002cfe:	d120      	bne.n	8002d42 <HAL_DMA2D_ConfigLayer+0xc2>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8002d00:	687b      	ldr	r3, [r7, #4]
 8002d02:	681b      	ldr	r3, [r3, #0]
 8002d04:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002d06:	68fb      	ldr	r3, [r7, #12]
 8002d08:	43db      	mvns	r3, r3
 8002d0a:	ea02 0103 	and.w	r1, r2, r3
 8002d0e:	687b      	ldr	r3, [r7, #4]
 8002d10:	681b      	ldr	r3, [r3, #0]
 8002d12:	697a      	ldr	r2, [r7, #20]
 8002d14:	430a      	orrs	r2, r1
 8002d16:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8002d18:	687b      	ldr	r3, [r7, #4]
 8002d1a:	681b      	ldr	r3, [r3, #0]
 8002d1c:	693a      	ldr	r2, [r7, #16]
 8002d1e:	6812      	ldr	r2, [r2, #0]
 8002d20:	619a      	str	r2, [r3, #24]

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8002d22:	693b      	ldr	r3, [r7, #16]
 8002d24:	685b      	ldr	r3, [r3, #4]
 8002d26:	2b0a      	cmp	r3, #10
 8002d28:	d003      	beq.n	8002d32 <HAL_DMA2D_ConfigLayer+0xb2>
 8002d2a:	693b      	ldr	r3, [r7, #16]
 8002d2c:	685b      	ldr	r3, [r3, #4]
 8002d2e:	2b09      	cmp	r3, #9
 8002d30:	d127      	bne.n	8002d82 <HAL_DMA2D_ConfigLayer+0x102>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8002d32:	693b      	ldr	r3, [r7, #16]
 8002d34:	68da      	ldr	r2, [r3, #12]
 8002d36:	687b      	ldr	r3, [r7, #4]
 8002d38:	681b      	ldr	r3, [r3, #0]
 8002d3a:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8002d3e:	629a      	str	r2, [r3, #40]	; 0x28
 8002d40:	e01f      	b.n	8002d82 <HAL_DMA2D_ConfigLayer+0x102>
  else
  {


    /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8002d42:	687b      	ldr	r3, [r7, #4]
 8002d44:	681b      	ldr	r3, [r3, #0]
 8002d46:	69da      	ldr	r2, [r3, #28]
 8002d48:	68fb      	ldr	r3, [r7, #12]
 8002d4a:	43db      	mvns	r3, r3
 8002d4c:	ea02 0103 	and.w	r1, r2, r3
 8002d50:	687b      	ldr	r3, [r7, #4]
 8002d52:	681b      	ldr	r3, [r3, #0]
 8002d54:	697a      	ldr	r2, [r7, #20]
 8002d56:	430a      	orrs	r2, r1
 8002d58:	61da      	str	r2, [r3, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8002d5a:	687b      	ldr	r3, [r7, #4]
 8002d5c:	681b      	ldr	r3, [r3, #0]
 8002d5e:	693a      	ldr	r2, [r7, #16]
 8002d60:	6812      	ldr	r2, [r2, #0]
 8002d62:	611a      	str	r2, [r3, #16]

    /* DMA2D FGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8002d64:	693b      	ldr	r3, [r7, #16]
 8002d66:	685b      	ldr	r3, [r3, #4]
 8002d68:	2b0a      	cmp	r3, #10
 8002d6a:	d003      	beq.n	8002d74 <HAL_DMA2D_ConfigLayer+0xf4>
 8002d6c:	693b      	ldr	r3, [r7, #16]
 8002d6e:	685b      	ldr	r3, [r3, #4]
 8002d70:	2b09      	cmp	r3, #9
 8002d72:	d106      	bne.n	8002d82 <HAL_DMA2D_ConfigLayer+0x102>
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8002d74:	693b      	ldr	r3, [r7, #16]
 8002d76:	68da      	ldr	r2, [r3, #12]
 8002d78:	687b      	ldr	r3, [r7, #4]
 8002d7a:	681b      	ldr	r3, [r3, #0]
 8002d7c:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8002d80:	621a      	str	r2, [r3, #32]
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8002d82:	687b      	ldr	r3, [r7, #4]
 8002d84:	2201      	movs	r2, #1
 8002d86:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8002d8a:	687b      	ldr	r3, [r7, #4]
 8002d8c:	2200      	movs	r2, #0
 8002d8e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 8002d92:	2300      	movs	r3, #0
}
 8002d94:	4618      	mov	r0, r3
 8002d96:	371c      	adds	r7, #28
 8002d98:	46bd      	mov	sp, r7
 8002d9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d9e:	4770      	bx	lr
 8002da0:	ff03000f 	.word	0xff03000f

08002da4 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8002da4:	b480      	push	{r7}
 8002da6:	b089      	sub	sp, #36	; 0x24
 8002da8:	af00      	add	r7, sp, #0
 8002daa:	6078      	str	r0, [r7, #4]
 8002dac:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8002dae:	2300      	movs	r3, #0
 8002db0:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8002db2:	2300      	movs	r3, #0
 8002db4:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 8002db6:	2300      	movs	r3, #0
 8002db8:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8002dba:	2300      	movs	r3, #0
 8002dbc:	61fb      	str	r3, [r7, #28]
 8002dbe:	e177      	b.n	80030b0 <HAL_GPIO_Init+0x30c>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8002dc0:	2201      	movs	r2, #1
 8002dc2:	69fb      	ldr	r3, [r7, #28]
 8002dc4:	fa02 f303 	lsl.w	r3, r2, r3
 8002dc8:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8002dca:	683b      	ldr	r3, [r7, #0]
 8002dcc:	681b      	ldr	r3, [r3, #0]
 8002dce:	697a      	ldr	r2, [r7, #20]
 8002dd0:	4013      	ands	r3, r2
 8002dd2:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8002dd4:	693a      	ldr	r2, [r7, #16]
 8002dd6:	697b      	ldr	r3, [r7, #20]
 8002dd8:	429a      	cmp	r2, r3
 8002dda:	f040 8166 	bne.w	80030aa <HAL_GPIO_Init+0x306>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8002dde:	683b      	ldr	r3, [r7, #0]
 8002de0:	685b      	ldr	r3, [r3, #4]
 8002de2:	f003 0303 	and.w	r3, r3, #3
 8002de6:	2b01      	cmp	r3, #1
 8002de8:	d005      	beq.n	8002df6 <HAL_GPIO_Init+0x52>
          (GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8002dea:	683b      	ldr	r3, [r7, #0]
 8002dec:	685b      	ldr	r3, [r3, #4]
 8002dee:	f003 0303 	and.w	r3, r3, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8002df2:	2b02      	cmp	r3, #2
 8002df4:	d130      	bne.n	8002e58 <HAL_GPIO_Init+0xb4>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8002df6:	687b      	ldr	r3, [r7, #4]
 8002df8:	689b      	ldr	r3, [r3, #8]
 8002dfa:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8002dfc:	69fb      	ldr	r3, [r7, #28]
 8002dfe:	005b      	lsls	r3, r3, #1
 8002e00:	2203      	movs	r2, #3
 8002e02:	fa02 f303 	lsl.w	r3, r2, r3
 8002e06:	43db      	mvns	r3, r3
 8002e08:	69ba      	ldr	r2, [r7, #24]
 8002e0a:	4013      	ands	r3, r2
 8002e0c:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8002e0e:	683b      	ldr	r3, [r7, #0]
 8002e10:	68da      	ldr	r2, [r3, #12]
 8002e12:	69fb      	ldr	r3, [r7, #28]
 8002e14:	005b      	lsls	r3, r3, #1
 8002e16:	fa02 f303 	lsl.w	r3, r2, r3
 8002e1a:	69ba      	ldr	r2, [r7, #24]
 8002e1c:	4313      	orrs	r3, r2
 8002e1e:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8002e20:	687b      	ldr	r3, [r7, #4]
 8002e22:	69ba      	ldr	r2, [r7, #24]
 8002e24:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8002e26:	687b      	ldr	r3, [r7, #4]
 8002e28:	685b      	ldr	r3, [r3, #4]
 8002e2a:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8002e2c:	2201      	movs	r2, #1
 8002e2e:	69fb      	ldr	r3, [r7, #28]
 8002e30:	fa02 f303 	lsl.w	r3, r2, r3
 8002e34:	43db      	mvns	r3, r3
 8002e36:	69ba      	ldr	r2, [r7, #24]
 8002e38:	4013      	ands	r3, r2
 8002e3a:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8002e3c:	683b      	ldr	r3, [r7, #0]
 8002e3e:	685b      	ldr	r3, [r3, #4]
 8002e40:	091b      	lsrs	r3, r3, #4
 8002e42:	f003 0201 	and.w	r2, r3, #1
 8002e46:	69fb      	ldr	r3, [r7, #28]
 8002e48:	fa02 f303 	lsl.w	r3, r2, r3
 8002e4c:	69ba      	ldr	r2, [r7, #24]
 8002e4e:	4313      	orrs	r3, r2
 8002e50:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8002e52:	687b      	ldr	r3, [r7, #4]
 8002e54:	69ba      	ldr	r2, [r7, #24]
 8002e56:	605a      	str	r2, [r3, #4]
       }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8002e58:	683b      	ldr	r3, [r7, #0]
 8002e5a:	685b      	ldr	r3, [r3, #4]
 8002e5c:	f003 0303 	and.w	r3, r3, #3
 8002e60:	2b03      	cmp	r3, #3
 8002e62:	d017      	beq.n	8002e94 <HAL_GPIO_Init+0xf0>
      {
        /* Check the parameters */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
        
        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8002e64:	687b      	ldr	r3, [r7, #4]
 8002e66:	68db      	ldr	r3, [r3, #12]
 8002e68:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8002e6a:	69fb      	ldr	r3, [r7, #28]
 8002e6c:	005b      	lsls	r3, r3, #1
 8002e6e:	2203      	movs	r2, #3
 8002e70:	fa02 f303 	lsl.w	r3, r2, r3
 8002e74:	43db      	mvns	r3, r3
 8002e76:	69ba      	ldr	r2, [r7, #24]
 8002e78:	4013      	ands	r3, r2
 8002e7a:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8002e7c:	683b      	ldr	r3, [r7, #0]
 8002e7e:	689a      	ldr	r2, [r3, #8]
 8002e80:	69fb      	ldr	r3, [r7, #28]
 8002e82:	005b      	lsls	r3, r3, #1
 8002e84:	fa02 f303 	lsl.w	r3, r2, r3
 8002e88:	69ba      	ldr	r2, [r7, #24]
 8002e8a:	4313      	orrs	r3, r2
 8002e8c:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 8002e8e:	687b      	ldr	r3, [r7, #4]
 8002e90:	69ba      	ldr	r2, [r7, #24]
 8002e92:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8002e94:	683b      	ldr	r3, [r7, #0]
 8002e96:	685b      	ldr	r3, [r3, #4]
 8002e98:	f003 0303 	and.w	r3, r3, #3
 8002e9c:	2b02      	cmp	r3, #2
 8002e9e:	d123      	bne.n	8002ee8 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8002ea0:	69fb      	ldr	r3, [r7, #28]
 8002ea2:	08da      	lsrs	r2, r3, #3
 8002ea4:	687b      	ldr	r3, [r7, #4]
 8002ea6:	3208      	adds	r2, #8
 8002ea8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002eac:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8002eae:	69fb      	ldr	r3, [r7, #28]
 8002eb0:	f003 0307 	and.w	r3, r3, #7
 8002eb4:	009b      	lsls	r3, r3, #2
 8002eb6:	220f      	movs	r2, #15
 8002eb8:	fa02 f303 	lsl.w	r3, r2, r3
 8002ebc:	43db      	mvns	r3, r3
 8002ebe:	69ba      	ldr	r2, [r7, #24]
 8002ec0:	4013      	ands	r3, r2
 8002ec2:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8002ec4:	683b      	ldr	r3, [r7, #0]
 8002ec6:	691a      	ldr	r2, [r3, #16]
 8002ec8:	69fb      	ldr	r3, [r7, #28]
 8002eca:	f003 0307 	and.w	r3, r3, #7
 8002ece:	009b      	lsls	r3, r3, #2
 8002ed0:	fa02 f303 	lsl.w	r3, r2, r3
 8002ed4:	69ba      	ldr	r2, [r7, #24]
 8002ed6:	4313      	orrs	r3, r2
 8002ed8:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8002eda:	69fb      	ldr	r3, [r7, #28]
 8002edc:	08da      	lsrs	r2, r3, #3
 8002ede:	687b      	ldr	r3, [r7, #4]
 8002ee0:	3208      	adds	r2, #8
 8002ee2:	69b9      	ldr	r1, [r7, #24]
 8002ee4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8002ee8:	687b      	ldr	r3, [r7, #4]
 8002eea:	681b      	ldr	r3, [r3, #0]
 8002eec:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8002eee:	69fb      	ldr	r3, [r7, #28]
 8002ef0:	005b      	lsls	r3, r3, #1
 8002ef2:	2203      	movs	r2, #3
 8002ef4:	fa02 f303 	lsl.w	r3, r2, r3
 8002ef8:	43db      	mvns	r3, r3
 8002efa:	69ba      	ldr	r2, [r7, #24]
 8002efc:	4013      	ands	r3, r2
 8002efe:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8002f00:	683b      	ldr	r3, [r7, #0]
 8002f02:	685b      	ldr	r3, [r3, #4]
 8002f04:	f003 0203 	and.w	r2, r3, #3
 8002f08:	69fb      	ldr	r3, [r7, #28]
 8002f0a:	005b      	lsls	r3, r3, #1
 8002f0c:	fa02 f303 	lsl.w	r3, r2, r3
 8002f10:	69ba      	ldr	r2, [r7, #24]
 8002f12:	4313      	orrs	r3, r2
 8002f14:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8002f16:	687b      	ldr	r3, [r7, #4]
 8002f18:	69ba      	ldr	r2, [r7, #24]
 8002f1a:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8002f1c:	683b      	ldr	r3, [r7, #0]
 8002f1e:	685b      	ldr	r3, [r3, #4]
 8002f20:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002f24:	2b00      	cmp	r3, #0
 8002f26:	f000 80c0 	beq.w	80030aa <HAL_GPIO_Init+0x306>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002f2a:	2300      	movs	r3, #0
 8002f2c:	60fb      	str	r3, [r7, #12]
 8002f2e:	4b66      	ldr	r3, [pc, #408]	; (80030c8 <HAL_GPIO_Init+0x324>)
 8002f30:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002f32:	4a65      	ldr	r2, [pc, #404]	; (80030c8 <HAL_GPIO_Init+0x324>)
 8002f34:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002f38:	6453      	str	r3, [r2, #68]	; 0x44
 8002f3a:	4b63      	ldr	r3, [pc, #396]	; (80030c8 <HAL_GPIO_Init+0x324>)
 8002f3c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002f3e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002f42:	60fb      	str	r3, [r7, #12]
 8002f44:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8002f46:	4a61      	ldr	r2, [pc, #388]	; (80030cc <HAL_GPIO_Init+0x328>)
 8002f48:	69fb      	ldr	r3, [r7, #28]
 8002f4a:	089b      	lsrs	r3, r3, #2
 8002f4c:	3302      	adds	r3, #2
 8002f4e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002f52:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8002f54:	69fb      	ldr	r3, [r7, #28]
 8002f56:	f003 0303 	and.w	r3, r3, #3
 8002f5a:	009b      	lsls	r3, r3, #2
 8002f5c:	220f      	movs	r2, #15
 8002f5e:	fa02 f303 	lsl.w	r3, r2, r3
 8002f62:	43db      	mvns	r3, r3
 8002f64:	69ba      	ldr	r2, [r7, #24]
 8002f66:	4013      	ands	r3, r2
 8002f68:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8002f6a:	687b      	ldr	r3, [r7, #4]
 8002f6c:	4a58      	ldr	r2, [pc, #352]	; (80030d0 <HAL_GPIO_Init+0x32c>)
 8002f6e:	4293      	cmp	r3, r2
 8002f70:	d037      	beq.n	8002fe2 <HAL_GPIO_Init+0x23e>
 8002f72:	687b      	ldr	r3, [r7, #4]
 8002f74:	4a57      	ldr	r2, [pc, #348]	; (80030d4 <HAL_GPIO_Init+0x330>)
 8002f76:	4293      	cmp	r3, r2
 8002f78:	d031      	beq.n	8002fde <HAL_GPIO_Init+0x23a>
 8002f7a:	687b      	ldr	r3, [r7, #4]
 8002f7c:	4a56      	ldr	r2, [pc, #344]	; (80030d8 <HAL_GPIO_Init+0x334>)
 8002f7e:	4293      	cmp	r3, r2
 8002f80:	d02b      	beq.n	8002fda <HAL_GPIO_Init+0x236>
 8002f82:	687b      	ldr	r3, [r7, #4]
 8002f84:	4a55      	ldr	r2, [pc, #340]	; (80030dc <HAL_GPIO_Init+0x338>)
 8002f86:	4293      	cmp	r3, r2
 8002f88:	d025      	beq.n	8002fd6 <HAL_GPIO_Init+0x232>
 8002f8a:	687b      	ldr	r3, [r7, #4]
 8002f8c:	4a54      	ldr	r2, [pc, #336]	; (80030e0 <HAL_GPIO_Init+0x33c>)
 8002f8e:	4293      	cmp	r3, r2
 8002f90:	d01f      	beq.n	8002fd2 <HAL_GPIO_Init+0x22e>
 8002f92:	687b      	ldr	r3, [r7, #4]
 8002f94:	4a53      	ldr	r2, [pc, #332]	; (80030e4 <HAL_GPIO_Init+0x340>)
 8002f96:	4293      	cmp	r3, r2
 8002f98:	d019      	beq.n	8002fce <HAL_GPIO_Init+0x22a>
 8002f9a:	687b      	ldr	r3, [r7, #4]
 8002f9c:	4a52      	ldr	r2, [pc, #328]	; (80030e8 <HAL_GPIO_Init+0x344>)
 8002f9e:	4293      	cmp	r3, r2
 8002fa0:	d013      	beq.n	8002fca <HAL_GPIO_Init+0x226>
 8002fa2:	687b      	ldr	r3, [r7, #4]
 8002fa4:	4a51      	ldr	r2, [pc, #324]	; (80030ec <HAL_GPIO_Init+0x348>)
 8002fa6:	4293      	cmp	r3, r2
 8002fa8:	d00d      	beq.n	8002fc6 <HAL_GPIO_Init+0x222>
 8002faa:	687b      	ldr	r3, [r7, #4]
 8002fac:	4a50      	ldr	r2, [pc, #320]	; (80030f0 <HAL_GPIO_Init+0x34c>)
 8002fae:	4293      	cmp	r3, r2
 8002fb0:	d007      	beq.n	8002fc2 <HAL_GPIO_Init+0x21e>
 8002fb2:	687b      	ldr	r3, [r7, #4]
 8002fb4:	4a4f      	ldr	r2, [pc, #316]	; (80030f4 <HAL_GPIO_Init+0x350>)
 8002fb6:	4293      	cmp	r3, r2
 8002fb8:	d101      	bne.n	8002fbe <HAL_GPIO_Init+0x21a>
 8002fba:	2309      	movs	r3, #9
 8002fbc:	e012      	b.n	8002fe4 <HAL_GPIO_Init+0x240>
 8002fbe:	230a      	movs	r3, #10
 8002fc0:	e010      	b.n	8002fe4 <HAL_GPIO_Init+0x240>
 8002fc2:	2308      	movs	r3, #8
 8002fc4:	e00e      	b.n	8002fe4 <HAL_GPIO_Init+0x240>
 8002fc6:	2307      	movs	r3, #7
 8002fc8:	e00c      	b.n	8002fe4 <HAL_GPIO_Init+0x240>
 8002fca:	2306      	movs	r3, #6
 8002fcc:	e00a      	b.n	8002fe4 <HAL_GPIO_Init+0x240>
 8002fce:	2305      	movs	r3, #5
 8002fd0:	e008      	b.n	8002fe4 <HAL_GPIO_Init+0x240>
 8002fd2:	2304      	movs	r3, #4
 8002fd4:	e006      	b.n	8002fe4 <HAL_GPIO_Init+0x240>
 8002fd6:	2303      	movs	r3, #3
 8002fd8:	e004      	b.n	8002fe4 <HAL_GPIO_Init+0x240>
 8002fda:	2302      	movs	r3, #2
 8002fdc:	e002      	b.n	8002fe4 <HAL_GPIO_Init+0x240>
 8002fde:	2301      	movs	r3, #1
 8002fe0:	e000      	b.n	8002fe4 <HAL_GPIO_Init+0x240>
 8002fe2:	2300      	movs	r3, #0
 8002fe4:	69fa      	ldr	r2, [r7, #28]
 8002fe6:	f002 0203 	and.w	r2, r2, #3
 8002fea:	0092      	lsls	r2, r2, #2
 8002fec:	4093      	lsls	r3, r2
 8002fee:	69ba      	ldr	r2, [r7, #24]
 8002ff0:	4313      	orrs	r3, r2
 8002ff2:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8002ff4:	4935      	ldr	r1, [pc, #212]	; (80030cc <HAL_GPIO_Init+0x328>)
 8002ff6:	69fb      	ldr	r3, [r7, #28]
 8002ff8:	089b      	lsrs	r3, r3, #2
 8002ffa:	3302      	adds	r3, #2
 8002ffc:	69ba      	ldr	r2, [r7, #24]
 8002ffe:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8003002:	4b3d      	ldr	r3, [pc, #244]	; (80030f8 <HAL_GPIO_Init+0x354>)
 8003004:	689b      	ldr	r3, [r3, #8]
 8003006:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003008:	693b      	ldr	r3, [r7, #16]
 800300a:	43db      	mvns	r3, r3
 800300c:	69ba      	ldr	r2, [r7, #24]
 800300e:	4013      	ands	r3, r2
 8003010:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8003012:	683b      	ldr	r3, [r7, #0]
 8003014:	685b      	ldr	r3, [r3, #4]
 8003016:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800301a:	2b00      	cmp	r3, #0
 800301c:	d003      	beq.n	8003026 <HAL_GPIO_Init+0x282>
        {
          temp |= iocurrent;
 800301e:	69ba      	ldr	r2, [r7, #24]
 8003020:	693b      	ldr	r3, [r7, #16]
 8003022:	4313      	orrs	r3, r2
 8003024:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8003026:	4a34      	ldr	r2, [pc, #208]	; (80030f8 <HAL_GPIO_Init+0x354>)
 8003028:	69bb      	ldr	r3, [r7, #24]
 800302a:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 800302c:	4b32      	ldr	r3, [pc, #200]	; (80030f8 <HAL_GPIO_Init+0x354>)
 800302e:	68db      	ldr	r3, [r3, #12]
 8003030:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003032:	693b      	ldr	r3, [r7, #16]
 8003034:	43db      	mvns	r3, r3
 8003036:	69ba      	ldr	r2, [r7, #24]
 8003038:	4013      	ands	r3, r2
 800303a:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800303c:	683b      	ldr	r3, [r7, #0]
 800303e:	685b      	ldr	r3, [r3, #4]
 8003040:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003044:	2b00      	cmp	r3, #0
 8003046:	d003      	beq.n	8003050 <HAL_GPIO_Init+0x2ac>
        {
          temp |= iocurrent;
 8003048:	69ba      	ldr	r2, [r7, #24]
 800304a:	693b      	ldr	r3, [r7, #16]
 800304c:	4313      	orrs	r3, r2
 800304e:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8003050:	4a29      	ldr	r2, [pc, #164]	; (80030f8 <HAL_GPIO_Init+0x354>)
 8003052:	69bb      	ldr	r3, [r7, #24]
 8003054:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 8003056:	4b28      	ldr	r3, [pc, #160]	; (80030f8 <HAL_GPIO_Init+0x354>)
 8003058:	685b      	ldr	r3, [r3, #4]
 800305a:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800305c:	693b      	ldr	r3, [r7, #16]
 800305e:	43db      	mvns	r3, r3
 8003060:	69ba      	ldr	r2, [r7, #24]
 8003062:	4013      	ands	r3, r2
 8003064:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8003066:	683b      	ldr	r3, [r7, #0]
 8003068:	685b      	ldr	r3, [r3, #4]
 800306a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800306e:	2b00      	cmp	r3, #0
 8003070:	d003      	beq.n	800307a <HAL_GPIO_Init+0x2d6>
        {
          temp |= iocurrent;
 8003072:	69ba      	ldr	r2, [r7, #24]
 8003074:	693b      	ldr	r3, [r7, #16]
 8003076:	4313      	orrs	r3, r2
 8003078:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 800307a:	4a1f      	ldr	r2, [pc, #124]	; (80030f8 <HAL_GPIO_Init+0x354>)
 800307c:	69bb      	ldr	r3, [r7, #24]
 800307e:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8003080:	4b1d      	ldr	r3, [pc, #116]	; (80030f8 <HAL_GPIO_Init+0x354>)
 8003082:	681b      	ldr	r3, [r3, #0]
 8003084:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003086:	693b      	ldr	r3, [r7, #16]
 8003088:	43db      	mvns	r3, r3
 800308a:	69ba      	ldr	r2, [r7, #24]
 800308c:	4013      	ands	r3, r2
 800308e:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8003090:	683b      	ldr	r3, [r7, #0]
 8003092:	685b      	ldr	r3, [r3, #4]
 8003094:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003098:	2b00      	cmp	r3, #0
 800309a:	d003      	beq.n	80030a4 <HAL_GPIO_Init+0x300>
        {
          temp |= iocurrent;
 800309c:	69ba      	ldr	r2, [r7, #24]
 800309e:	693b      	ldr	r3, [r7, #16]
 80030a0:	4313      	orrs	r3, r2
 80030a2:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 80030a4:	4a14      	ldr	r2, [pc, #80]	; (80030f8 <HAL_GPIO_Init+0x354>)
 80030a6:	69bb      	ldr	r3, [r7, #24]
 80030a8:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80030aa:	69fb      	ldr	r3, [r7, #28]
 80030ac:	3301      	adds	r3, #1
 80030ae:	61fb      	str	r3, [r7, #28]
 80030b0:	69fb      	ldr	r3, [r7, #28]
 80030b2:	2b0f      	cmp	r3, #15
 80030b4:	f67f ae84 	bls.w	8002dc0 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 80030b8:	bf00      	nop
 80030ba:	bf00      	nop
 80030bc:	3724      	adds	r7, #36	; 0x24
 80030be:	46bd      	mov	sp, r7
 80030c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030c4:	4770      	bx	lr
 80030c6:	bf00      	nop
 80030c8:	40023800 	.word	0x40023800
 80030cc:	40013800 	.word	0x40013800
 80030d0:	40020000 	.word	0x40020000
 80030d4:	40020400 	.word	0x40020400
 80030d8:	40020800 	.word	0x40020800
 80030dc:	40020c00 	.word	0x40020c00
 80030e0:	40021000 	.word	0x40021000
 80030e4:	40021400 	.word	0x40021400
 80030e8:	40021800 	.word	0x40021800
 80030ec:	40021c00 	.word	0x40021c00
 80030f0:	40022000 	.word	0x40022000
 80030f4:	40022400 	.word	0x40022400
 80030f8:	40013c00 	.word	0x40013c00

080030fc <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 80030fc:	b480      	push	{r7}
 80030fe:	b087      	sub	sp, #28
 8003100:	af00      	add	r7, sp, #0
 8003102:	6078      	str	r0, [r7, #4]
 8003104:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8003106:	2300      	movs	r3, #0
 8003108:	613b      	str	r3, [r7, #16]
  uint32_t iocurrent = 0x00U;
 800310a:	2300      	movs	r3, #0
 800310c:	60fb      	str	r3, [r7, #12]
  uint32_t tmp = 0x00U;
 800310e:	2300      	movs	r3, #0
 8003110:	60bb      	str	r3, [r7, #8]

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  
  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003112:	2300      	movs	r3, #0
 8003114:	617b      	str	r3, [r7, #20]
 8003116:	e0d9      	b.n	80032cc <HAL_GPIO_DeInit+0x1d0>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8003118:	2201      	movs	r2, #1
 800311a:	697b      	ldr	r3, [r7, #20]
 800311c:	fa02 f303 	lsl.w	r3, r2, r3
 8003120:	613b      	str	r3, [r7, #16]
    /* Get the current IO position */
    iocurrent = (GPIO_Pin) & ioposition;
 8003122:	683a      	ldr	r2, [r7, #0]
 8003124:	693b      	ldr	r3, [r7, #16]
 8003126:	4013      	ands	r3, r2
 8003128:	60fb      	str	r3, [r7, #12]

    if(iocurrent == ioposition)
 800312a:	68fa      	ldr	r2, [r7, #12]
 800312c:	693b      	ldr	r3, [r7, #16]
 800312e:	429a      	cmp	r2, r3
 8003130:	f040 80c9 	bne.w	80032c6 <HAL_GPIO_DeInit+0x1ca>
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      tmp = SYSCFG->EXTICR[position >> 2U];
 8003134:	4a6b      	ldr	r2, [pc, #428]	; (80032e4 <HAL_GPIO_DeInit+0x1e8>)
 8003136:	697b      	ldr	r3, [r7, #20]
 8003138:	089b      	lsrs	r3, r3, #2
 800313a:	3302      	adds	r3, #2
 800313c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003140:	60bb      	str	r3, [r7, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8003142:	697b      	ldr	r3, [r7, #20]
 8003144:	f003 0303 	and.w	r3, r3, #3
 8003148:	009b      	lsls	r3, r3, #2
 800314a:	220f      	movs	r2, #15
 800314c:	fa02 f303 	lsl.w	r3, r2, r3
 8003150:	68ba      	ldr	r2, [r7, #8]
 8003152:	4013      	ands	r3, r2
 8003154:	60bb      	str	r3, [r7, #8]
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8003156:	687b      	ldr	r3, [r7, #4]
 8003158:	4a63      	ldr	r2, [pc, #396]	; (80032e8 <HAL_GPIO_DeInit+0x1ec>)
 800315a:	4293      	cmp	r3, r2
 800315c:	d037      	beq.n	80031ce <HAL_GPIO_DeInit+0xd2>
 800315e:	687b      	ldr	r3, [r7, #4]
 8003160:	4a62      	ldr	r2, [pc, #392]	; (80032ec <HAL_GPIO_DeInit+0x1f0>)
 8003162:	4293      	cmp	r3, r2
 8003164:	d031      	beq.n	80031ca <HAL_GPIO_DeInit+0xce>
 8003166:	687b      	ldr	r3, [r7, #4]
 8003168:	4a61      	ldr	r2, [pc, #388]	; (80032f0 <HAL_GPIO_DeInit+0x1f4>)
 800316a:	4293      	cmp	r3, r2
 800316c:	d02b      	beq.n	80031c6 <HAL_GPIO_DeInit+0xca>
 800316e:	687b      	ldr	r3, [r7, #4]
 8003170:	4a60      	ldr	r2, [pc, #384]	; (80032f4 <HAL_GPIO_DeInit+0x1f8>)
 8003172:	4293      	cmp	r3, r2
 8003174:	d025      	beq.n	80031c2 <HAL_GPIO_DeInit+0xc6>
 8003176:	687b      	ldr	r3, [r7, #4]
 8003178:	4a5f      	ldr	r2, [pc, #380]	; (80032f8 <HAL_GPIO_DeInit+0x1fc>)
 800317a:	4293      	cmp	r3, r2
 800317c:	d01f      	beq.n	80031be <HAL_GPIO_DeInit+0xc2>
 800317e:	687b      	ldr	r3, [r7, #4]
 8003180:	4a5e      	ldr	r2, [pc, #376]	; (80032fc <HAL_GPIO_DeInit+0x200>)
 8003182:	4293      	cmp	r3, r2
 8003184:	d019      	beq.n	80031ba <HAL_GPIO_DeInit+0xbe>
 8003186:	687b      	ldr	r3, [r7, #4]
 8003188:	4a5d      	ldr	r2, [pc, #372]	; (8003300 <HAL_GPIO_DeInit+0x204>)
 800318a:	4293      	cmp	r3, r2
 800318c:	d013      	beq.n	80031b6 <HAL_GPIO_DeInit+0xba>
 800318e:	687b      	ldr	r3, [r7, #4]
 8003190:	4a5c      	ldr	r2, [pc, #368]	; (8003304 <HAL_GPIO_DeInit+0x208>)
 8003192:	4293      	cmp	r3, r2
 8003194:	d00d      	beq.n	80031b2 <HAL_GPIO_DeInit+0xb6>
 8003196:	687b      	ldr	r3, [r7, #4]
 8003198:	4a5b      	ldr	r2, [pc, #364]	; (8003308 <HAL_GPIO_DeInit+0x20c>)
 800319a:	4293      	cmp	r3, r2
 800319c:	d007      	beq.n	80031ae <HAL_GPIO_DeInit+0xb2>
 800319e:	687b      	ldr	r3, [r7, #4]
 80031a0:	4a5a      	ldr	r2, [pc, #360]	; (800330c <HAL_GPIO_DeInit+0x210>)
 80031a2:	4293      	cmp	r3, r2
 80031a4:	d101      	bne.n	80031aa <HAL_GPIO_DeInit+0xae>
 80031a6:	2309      	movs	r3, #9
 80031a8:	e012      	b.n	80031d0 <HAL_GPIO_DeInit+0xd4>
 80031aa:	230a      	movs	r3, #10
 80031ac:	e010      	b.n	80031d0 <HAL_GPIO_DeInit+0xd4>
 80031ae:	2308      	movs	r3, #8
 80031b0:	e00e      	b.n	80031d0 <HAL_GPIO_DeInit+0xd4>
 80031b2:	2307      	movs	r3, #7
 80031b4:	e00c      	b.n	80031d0 <HAL_GPIO_DeInit+0xd4>
 80031b6:	2306      	movs	r3, #6
 80031b8:	e00a      	b.n	80031d0 <HAL_GPIO_DeInit+0xd4>
 80031ba:	2305      	movs	r3, #5
 80031bc:	e008      	b.n	80031d0 <HAL_GPIO_DeInit+0xd4>
 80031be:	2304      	movs	r3, #4
 80031c0:	e006      	b.n	80031d0 <HAL_GPIO_DeInit+0xd4>
 80031c2:	2303      	movs	r3, #3
 80031c4:	e004      	b.n	80031d0 <HAL_GPIO_DeInit+0xd4>
 80031c6:	2302      	movs	r3, #2
 80031c8:	e002      	b.n	80031d0 <HAL_GPIO_DeInit+0xd4>
 80031ca:	2301      	movs	r3, #1
 80031cc:	e000      	b.n	80031d0 <HAL_GPIO_DeInit+0xd4>
 80031ce:	2300      	movs	r3, #0
 80031d0:	697a      	ldr	r2, [r7, #20]
 80031d2:	f002 0203 	and.w	r2, r2, #3
 80031d6:	0092      	lsls	r2, r2, #2
 80031d8:	4093      	lsls	r3, r2
 80031da:	68ba      	ldr	r2, [r7, #8]
 80031dc:	429a      	cmp	r2, r3
 80031de:	d132      	bne.n	8003246 <HAL_GPIO_DeInit+0x14a>
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 80031e0:	4b4b      	ldr	r3, [pc, #300]	; (8003310 <HAL_GPIO_DeInit+0x214>)
 80031e2:	681a      	ldr	r2, [r3, #0]
 80031e4:	68fb      	ldr	r3, [r7, #12]
 80031e6:	43db      	mvns	r3, r3
 80031e8:	4949      	ldr	r1, [pc, #292]	; (8003310 <HAL_GPIO_DeInit+0x214>)
 80031ea:	4013      	ands	r3, r2
 80031ec:	600b      	str	r3, [r1, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 80031ee:	4b48      	ldr	r3, [pc, #288]	; (8003310 <HAL_GPIO_DeInit+0x214>)
 80031f0:	685a      	ldr	r2, [r3, #4]
 80031f2:	68fb      	ldr	r3, [r7, #12]
 80031f4:	43db      	mvns	r3, r3
 80031f6:	4946      	ldr	r1, [pc, #280]	; (8003310 <HAL_GPIO_DeInit+0x214>)
 80031f8:	4013      	ands	r3, r2
 80031fa:	604b      	str	r3, [r1, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 80031fc:	4b44      	ldr	r3, [pc, #272]	; (8003310 <HAL_GPIO_DeInit+0x214>)
 80031fe:	68da      	ldr	r2, [r3, #12]
 8003200:	68fb      	ldr	r3, [r7, #12]
 8003202:	43db      	mvns	r3, r3
 8003204:	4942      	ldr	r1, [pc, #264]	; (8003310 <HAL_GPIO_DeInit+0x214>)
 8003206:	4013      	ands	r3, r2
 8003208:	60cb      	str	r3, [r1, #12]
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 800320a:	4b41      	ldr	r3, [pc, #260]	; (8003310 <HAL_GPIO_DeInit+0x214>)
 800320c:	689a      	ldr	r2, [r3, #8]
 800320e:	68fb      	ldr	r3, [r7, #12]
 8003210:	43db      	mvns	r3, r3
 8003212:	493f      	ldr	r1, [pc, #252]	; (8003310 <HAL_GPIO_DeInit+0x214>)
 8003214:	4013      	ands	r3, r2
 8003216:	608b      	str	r3, [r1, #8]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
 8003218:	697b      	ldr	r3, [r7, #20]
 800321a:	f003 0303 	and.w	r3, r3, #3
 800321e:	009b      	lsls	r3, r3, #2
 8003220:	220f      	movs	r2, #15
 8003222:	fa02 f303 	lsl.w	r3, r2, r3
 8003226:	60bb      	str	r3, [r7, #8]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 8003228:	4a2e      	ldr	r2, [pc, #184]	; (80032e4 <HAL_GPIO_DeInit+0x1e8>)
 800322a:	697b      	ldr	r3, [r7, #20]
 800322c:	089b      	lsrs	r3, r3, #2
 800322e:	3302      	adds	r3, #2
 8003230:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8003234:	68bb      	ldr	r3, [r7, #8]
 8003236:	43da      	mvns	r2, r3
 8003238:	482a      	ldr	r0, [pc, #168]	; (80032e4 <HAL_GPIO_DeInit+0x1e8>)
 800323a:	697b      	ldr	r3, [r7, #20]
 800323c:	089b      	lsrs	r3, r3, #2
 800323e:	400a      	ands	r2, r1
 8003240:	3302      	adds	r3, #2
 8003242:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8003246:	687b      	ldr	r3, [r7, #4]
 8003248:	681a      	ldr	r2, [r3, #0]
 800324a:	697b      	ldr	r3, [r7, #20]
 800324c:	005b      	lsls	r3, r3, #1
 800324e:	2103      	movs	r1, #3
 8003250:	fa01 f303 	lsl.w	r3, r1, r3
 8003254:	43db      	mvns	r3, r3
 8003256:	401a      	ands	r2, r3
 8003258:	687b      	ldr	r3, [r7, #4]
 800325a:	601a      	str	r2, [r3, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800325c:	697b      	ldr	r3, [r7, #20]
 800325e:	08da      	lsrs	r2, r3, #3
 8003260:	687b      	ldr	r3, [r7, #4]
 8003262:	3208      	adds	r2, #8
 8003264:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003268:	697b      	ldr	r3, [r7, #20]
 800326a:	f003 0307 	and.w	r3, r3, #7
 800326e:	009b      	lsls	r3, r3, #2
 8003270:	220f      	movs	r2, #15
 8003272:	fa02 f303 	lsl.w	r3, r2, r3
 8003276:	43db      	mvns	r3, r3
 8003278:	697a      	ldr	r2, [r7, #20]
 800327a:	08d2      	lsrs	r2, r2, #3
 800327c:	4019      	ands	r1, r3
 800327e:	687b      	ldr	r3, [r7, #4]
 8003280:	3208      	adds	r2, #8
 8003282:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8003286:	687b      	ldr	r3, [r7, #4]
 8003288:	68da      	ldr	r2, [r3, #12]
 800328a:	697b      	ldr	r3, [r7, #20]
 800328c:	005b      	lsls	r3, r3, #1
 800328e:	2103      	movs	r1, #3
 8003290:	fa01 f303 	lsl.w	r3, r1, r3
 8003294:	43db      	mvns	r3, r3
 8003296:	401a      	ands	r2, r3
 8003298:	687b      	ldr	r3, [r7, #4]
 800329a:	60da      	str	r2, [r3, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 800329c:	687b      	ldr	r3, [r7, #4]
 800329e:	685a      	ldr	r2, [r3, #4]
 80032a0:	2101      	movs	r1, #1
 80032a2:	697b      	ldr	r3, [r7, #20]
 80032a4:	fa01 f303 	lsl.w	r3, r1, r3
 80032a8:	43db      	mvns	r3, r3
 80032aa:	401a      	ands	r2, r3
 80032ac:	687b      	ldr	r3, [r7, #4]
 80032ae:	605a      	str	r2, [r3, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80032b0:	687b      	ldr	r3, [r7, #4]
 80032b2:	689a      	ldr	r2, [r3, #8]
 80032b4:	697b      	ldr	r3, [r7, #20]
 80032b6:	005b      	lsls	r3, r3, #1
 80032b8:	2103      	movs	r1, #3
 80032ba:	fa01 f303 	lsl.w	r3, r1, r3
 80032be:	43db      	mvns	r3, r3
 80032c0:	401a      	ands	r2, r3
 80032c2:	687b      	ldr	r3, [r7, #4]
 80032c4:	609a      	str	r2, [r3, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80032c6:	697b      	ldr	r3, [r7, #20]
 80032c8:	3301      	adds	r3, #1
 80032ca:	617b      	str	r3, [r7, #20]
 80032cc:	697b      	ldr	r3, [r7, #20]
 80032ce:	2b0f      	cmp	r3, #15
 80032d0:	f67f af22 	bls.w	8003118 <HAL_GPIO_DeInit+0x1c>
    }
  }
}
 80032d4:	bf00      	nop
 80032d6:	bf00      	nop
 80032d8:	371c      	adds	r7, #28
 80032da:	46bd      	mov	sp, r7
 80032dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032e0:	4770      	bx	lr
 80032e2:	bf00      	nop
 80032e4:	40013800 	.word	0x40013800
 80032e8:	40020000 	.word	0x40020000
 80032ec:	40020400 	.word	0x40020400
 80032f0:	40020800 	.word	0x40020800
 80032f4:	40020c00 	.word	0x40020c00
 80032f8:	40021000 	.word	0x40021000
 80032fc:	40021400 	.word	0x40021400
 8003300:	40021800 	.word	0x40021800
 8003304:	40021c00 	.word	0x40021c00
 8003308:	40022000 	.word	0x40022000
 800330c:	40022400 	.word	0x40022400
 8003310:	40013c00 	.word	0x40013c00

08003314 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8003314:	b480      	push	{r7}
 8003316:	b083      	sub	sp, #12
 8003318:	af00      	add	r7, sp, #0
 800331a:	6078      	str	r0, [r7, #4]
 800331c:	460b      	mov	r3, r1
 800331e:	807b      	strh	r3, [r7, #2]
 8003320:	4613      	mov	r3, r2
 8003322:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8003324:	787b      	ldrb	r3, [r7, #1]
 8003326:	2b00      	cmp	r3, #0
 8003328:	d003      	beq.n	8003332 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 800332a:	887a      	ldrh	r2, [r7, #2]
 800332c:	687b      	ldr	r3, [r7, #4]
 800332e:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 8003330:	e003      	b.n	800333a <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8003332:	887b      	ldrh	r3, [r7, #2]
 8003334:	041a      	lsls	r2, r3, #16
 8003336:	687b      	ldr	r3, [r7, #4]
 8003338:	619a      	str	r2, [r3, #24]
}
 800333a:	bf00      	nop
 800333c:	370c      	adds	r7, #12
 800333e:	46bd      	mov	sp, r7
 8003340:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003344:	4770      	bx	lr
	...

08003348 <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 8003348:	b580      	push	{r7, lr}
 800334a:	b084      	sub	sp, #16
 800334c:	af00      	add	r7, sp, #0
 800334e:	6078      	str	r0, [r7, #4]
  uint32_t freqrange;
  uint32_t pclk1;

  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 8003350:	687b      	ldr	r3, [r7, #4]
 8003352:	2b00      	cmp	r3, #0
 8003354:	d101      	bne.n	800335a <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 8003356:	2301      	movs	r3, #1
 8003358:	e12b      	b.n	80035b2 <HAL_I2C_Init+0x26a>
  assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 800335a:	687b      	ldr	r3, [r7, #4]
 800335c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003360:	b2db      	uxtb	r3, r3
 8003362:	2b00      	cmp	r3, #0
 8003364:	d106      	bne.n	8003374 <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 8003366:	687b      	ldr	r3, [r7, #4]
 8003368:	2200      	movs	r2, #0
 800336a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_I2C_MspInit(hi2c);
 800336e:	6878      	ldr	r0, [r7, #4]
 8003370:	f7fd fd5c 	bl	8000e2c <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 8003374:	687b      	ldr	r3, [r7, #4]
 8003376:	2224      	movs	r2, #36	; 0x24
 8003378:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 800337c:	687b      	ldr	r3, [r7, #4]
 800337e:	681b      	ldr	r3, [r3, #0]
 8003380:	681a      	ldr	r2, [r3, #0]
 8003382:	687b      	ldr	r3, [r7, #4]
 8003384:	681b      	ldr	r3, [r3, #0]
 8003386:	f022 0201 	bic.w	r2, r2, #1
 800338a:	601a      	str	r2, [r3, #0]

  /*Reset I2C*/
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800338c:	687b      	ldr	r3, [r7, #4]
 800338e:	681b      	ldr	r3, [r3, #0]
 8003390:	681a      	ldr	r2, [r3, #0]
 8003392:	687b      	ldr	r3, [r7, #4]
 8003394:	681b      	ldr	r3, [r3, #0]
 8003396:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800339a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	681b      	ldr	r3, [r3, #0]
 80033a0:	681a      	ldr	r2, [r3, #0]
 80033a2:	687b      	ldr	r3, [r7, #4]
 80033a4:	681b      	ldr	r3, [r3, #0]
 80033a6:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80033aa:	601a      	str	r2, [r3, #0]

  /* Get PCLK1 frequency */
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80033ac:	f002 f84a 	bl	8005444 <HAL_RCC_GetPCLK1Freq>
 80033b0:	60f8      	str	r0, [r7, #12]

  /* Check the minimum allowed PCLK1 frequency */
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80033b2:	687b      	ldr	r3, [r7, #4]
 80033b4:	685b      	ldr	r3, [r3, #4]
 80033b6:	4a81      	ldr	r2, [pc, #516]	; (80035bc <HAL_I2C_Init+0x274>)
 80033b8:	4293      	cmp	r3, r2
 80033ba:	d807      	bhi.n	80033cc <HAL_I2C_Init+0x84>
 80033bc:	68fb      	ldr	r3, [r7, #12]
 80033be:	4a80      	ldr	r2, [pc, #512]	; (80035c0 <HAL_I2C_Init+0x278>)
 80033c0:	4293      	cmp	r3, r2
 80033c2:	bf94      	ite	ls
 80033c4:	2301      	movls	r3, #1
 80033c6:	2300      	movhi	r3, #0
 80033c8:	b2db      	uxtb	r3, r3
 80033ca:	e006      	b.n	80033da <HAL_I2C_Init+0x92>
 80033cc:	68fb      	ldr	r3, [r7, #12]
 80033ce:	4a7d      	ldr	r2, [pc, #500]	; (80035c4 <HAL_I2C_Init+0x27c>)
 80033d0:	4293      	cmp	r3, r2
 80033d2:	bf94      	ite	ls
 80033d4:	2301      	movls	r3, #1
 80033d6:	2300      	movhi	r3, #0
 80033d8:	b2db      	uxtb	r3, r3
 80033da:	2b00      	cmp	r3, #0
 80033dc:	d001      	beq.n	80033e2 <HAL_I2C_Init+0x9a>
  {
    return HAL_ERROR;
 80033de:	2301      	movs	r3, #1
 80033e0:	e0e7      	b.n	80035b2 <HAL_I2C_Init+0x26a>
  }

  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);
 80033e2:	68fb      	ldr	r3, [r7, #12]
 80033e4:	4a78      	ldr	r2, [pc, #480]	; (80035c8 <HAL_I2C_Init+0x280>)
 80033e6:	fba2 2303 	umull	r2, r3, r2, r3
 80033ea:	0c9b      	lsrs	r3, r3, #18
 80033ec:	60bb      	str	r3, [r7, #8]

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Frequency range */
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80033ee:	687b      	ldr	r3, [r7, #4]
 80033f0:	681b      	ldr	r3, [r3, #0]
 80033f2:	685b      	ldr	r3, [r3, #4]
 80033f4:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 80033f8:	687b      	ldr	r3, [r7, #4]
 80033fa:	681b      	ldr	r3, [r3, #0]
 80033fc:	68ba      	ldr	r2, [r7, #8]
 80033fe:	430a      	orrs	r2, r1
 8003400:	605a      	str	r2, [r3, #4]

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8003402:	687b      	ldr	r3, [r7, #4]
 8003404:	681b      	ldr	r3, [r3, #0]
 8003406:	6a1b      	ldr	r3, [r3, #32]
 8003408:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 800340c:	687b      	ldr	r3, [r7, #4]
 800340e:	685b      	ldr	r3, [r3, #4]
 8003410:	4a6a      	ldr	r2, [pc, #424]	; (80035bc <HAL_I2C_Init+0x274>)
 8003412:	4293      	cmp	r3, r2
 8003414:	d802      	bhi.n	800341c <HAL_I2C_Init+0xd4>
 8003416:	68bb      	ldr	r3, [r7, #8]
 8003418:	3301      	adds	r3, #1
 800341a:	e009      	b.n	8003430 <HAL_I2C_Init+0xe8>
 800341c:	68bb      	ldr	r3, [r7, #8]
 800341e:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8003422:	fb02 f303 	mul.w	r3, r2, r3
 8003426:	4a69      	ldr	r2, [pc, #420]	; (80035cc <HAL_I2C_Init+0x284>)
 8003428:	fba2 2303 	umull	r2, r3, r2, r3
 800342c:	099b      	lsrs	r3, r3, #6
 800342e:	3301      	adds	r3, #1
 8003430:	687a      	ldr	r2, [r7, #4]
 8003432:	6812      	ldr	r2, [r2, #0]
 8003434:	430b      	orrs	r3, r1
 8003436:	6213      	str	r3, [r2, #32]

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8003438:	687b      	ldr	r3, [r7, #4]
 800343a:	681b      	ldr	r3, [r3, #0]
 800343c:	69db      	ldr	r3, [r3, #28]
 800343e:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 8003442:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8003446:	687b      	ldr	r3, [r7, #4]
 8003448:	685b      	ldr	r3, [r3, #4]
 800344a:	495c      	ldr	r1, [pc, #368]	; (80035bc <HAL_I2C_Init+0x274>)
 800344c:	428b      	cmp	r3, r1
 800344e:	d819      	bhi.n	8003484 <HAL_I2C_Init+0x13c>
 8003450:	68fb      	ldr	r3, [r7, #12]
 8003452:	1e59      	subs	r1, r3, #1
 8003454:	687b      	ldr	r3, [r7, #4]
 8003456:	685b      	ldr	r3, [r3, #4]
 8003458:	005b      	lsls	r3, r3, #1
 800345a:	fbb1 f3f3 	udiv	r3, r1, r3
 800345e:	1c59      	adds	r1, r3, #1
 8003460:	f640 73fc 	movw	r3, #4092	; 0xffc
 8003464:	400b      	ands	r3, r1
 8003466:	2b00      	cmp	r3, #0
 8003468:	d00a      	beq.n	8003480 <HAL_I2C_Init+0x138>
 800346a:	68fb      	ldr	r3, [r7, #12]
 800346c:	1e59      	subs	r1, r3, #1
 800346e:	687b      	ldr	r3, [r7, #4]
 8003470:	685b      	ldr	r3, [r3, #4]
 8003472:	005b      	lsls	r3, r3, #1
 8003474:	fbb1 f3f3 	udiv	r3, r1, r3
 8003478:	3301      	adds	r3, #1
 800347a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800347e:	e051      	b.n	8003524 <HAL_I2C_Init+0x1dc>
 8003480:	2304      	movs	r3, #4
 8003482:	e04f      	b.n	8003524 <HAL_I2C_Init+0x1dc>
 8003484:	687b      	ldr	r3, [r7, #4]
 8003486:	689b      	ldr	r3, [r3, #8]
 8003488:	2b00      	cmp	r3, #0
 800348a:	d111      	bne.n	80034b0 <HAL_I2C_Init+0x168>
 800348c:	68fb      	ldr	r3, [r7, #12]
 800348e:	1e58      	subs	r0, r3, #1
 8003490:	687b      	ldr	r3, [r7, #4]
 8003492:	6859      	ldr	r1, [r3, #4]
 8003494:	460b      	mov	r3, r1
 8003496:	005b      	lsls	r3, r3, #1
 8003498:	440b      	add	r3, r1
 800349a:	fbb0 f3f3 	udiv	r3, r0, r3
 800349e:	3301      	adds	r3, #1
 80034a0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80034a4:	2b00      	cmp	r3, #0
 80034a6:	bf0c      	ite	eq
 80034a8:	2301      	moveq	r3, #1
 80034aa:	2300      	movne	r3, #0
 80034ac:	b2db      	uxtb	r3, r3
 80034ae:	e012      	b.n	80034d6 <HAL_I2C_Init+0x18e>
 80034b0:	68fb      	ldr	r3, [r7, #12]
 80034b2:	1e58      	subs	r0, r3, #1
 80034b4:	687b      	ldr	r3, [r7, #4]
 80034b6:	6859      	ldr	r1, [r3, #4]
 80034b8:	460b      	mov	r3, r1
 80034ba:	009b      	lsls	r3, r3, #2
 80034bc:	440b      	add	r3, r1
 80034be:	0099      	lsls	r1, r3, #2
 80034c0:	440b      	add	r3, r1
 80034c2:	fbb0 f3f3 	udiv	r3, r0, r3
 80034c6:	3301      	adds	r3, #1
 80034c8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80034cc:	2b00      	cmp	r3, #0
 80034ce:	bf0c      	ite	eq
 80034d0:	2301      	moveq	r3, #1
 80034d2:	2300      	movne	r3, #0
 80034d4:	b2db      	uxtb	r3, r3
 80034d6:	2b00      	cmp	r3, #0
 80034d8:	d001      	beq.n	80034de <HAL_I2C_Init+0x196>
 80034da:	2301      	movs	r3, #1
 80034dc:	e022      	b.n	8003524 <HAL_I2C_Init+0x1dc>
 80034de:	687b      	ldr	r3, [r7, #4]
 80034e0:	689b      	ldr	r3, [r3, #8]
 80034e2:	2b00      	cmp	r3, #0
 80034e4:	d10e      	bne.n	8003504 <HAL_I2C_Init+0x1bc>
 80034e6:	68fb      	ldr	r3, [r7, #12]
 80034e8:	1e58      	subs	r0, r3, #1
 80034ea:	687b      	ldr	r3, [r7, #4]
 80034ec:	6859      	ldr	r1, [r3, #4]
 80034ee:	460b      	mov	r3, r1
 80034f0:	005b      	lsls	r3, r3, #1
 80034f2:	440b      	add	r3, r1
 80034f4:	fbb0 f3f3 	udiv	r3, r0, r3
 80034f8:	3301      	adds	r3, #1
 80034fa:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80034fe:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003502:	e00f      	b.n	8003524 <HAL_I2C_Init+0x1dc>
 8003504:	68fb      	ldr	r3, [r7, #12]
 8003506:	1e58      	subs	r0, r3, #1
 8003508:	687b      	ldr	r3, [r7, #4]
 800350a:	6859      	ldr	r1, [r3, #4]
 800350c:	460b      	mov	r3, r1
 800350e:	009b      	lsls	r3, r3, #2
 8003510:	440b      	add	r3, r1
 8003512:	0099      	lsls	r1, r3, #2
 8003514:	440b      	add	r3, r1
 8003516:	fbb0 f3f3 	udiv	r3, r0, r3
 800351a:	3301      	adds	r3, #1
 800351c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003520:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8003524:	6879      	ldr	r1, [r7, #4]
 8003526:	6809      	ldr	r1, [r1, #0]
 8003528:	4313      	orrs	r3, r2
 800352a:	61cb      	str	r3, [r1, #28]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800352c:	687b      	ldr	r3, [r7, #4]
 800352e:	681b      	ldr	r3, [r3, #0]
 8003530:	681b      	ldr	r3, [r3, #0]
 8003532:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 8003536:	687b      	ldr	r3, [r7, #4]
 8003538:	69da      	ldr	r2, [r3, #28]
 800353a:	687b      	ldr	r3, [r7, #4]
 800353c:	6a1b      	ldr	r3, [r3, #32]
 800353e:	431a      	orrs	r2, r3
 8003540:	687b      	ldr	r3, [r7, #4]
 8003542:	681b      	ldr	r3, [r3, #0]
 8003544:	430a      	orrs	r2, r1
 8003546:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Configure I2Cx: Own Address1 and addressing mode */
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8003548:	687b      	ldr	r3, [r7, #4]
 800354a:	681b      	ldr	r3, [r3, #0]
 800354c:	689b      	ldr	r3, [r3, #8]
 800354e:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8003552:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8003556:	687a      	ldr	r2, [r7, #4]
 8003558:	6911      	ldr	r1, [r2, #16]
 800355a:	687a      	ldr	r2, [r7, #4]
 800355c:	68d2      	ldr	r2, [r2, #12]
 800355e:	4311      	orrs	r1, r2
 8003560:	687a      	ldr	r2, [r7, #4]
 8003562:	6812      	ldr	r2, [r2, #0]
 8003564:	430b      	orrs	r3, r1
 8003566:	6093      	str	r3, [r2, #8]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Configure I2Cx: Dual mode and Own Address2 */
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8003568:	687b      	ldr	r3, [r7, #4]
 800356a:	681b      	ldr	r3, [r3, #0]
 800356c:	68db      	ldr	r3, [r3, #12]
 800356e:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8003572:	687b      	ldr	r3, [r7, #4]
 8003574:	695a      	ldr	r2, [r3, #20]
 8003576:	687b      	ldr	r3, [r7, #4]
 8003578:	699b      	ldr	r3, [r3, #24]
 800357a:	431a      	orrs	r2, r3
 800357c:	687b      	ldr	r3, [r7, #4]
 800357e:	681b      	ldr	r3, [r3, #0]
 8003580:	430a      	orrs	r2, r1
 8003582:	60da      	str	r2, [r3, #12]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 8003584:	687b      	ldr	r3, [r7, #4]
 8003586:	681b      	ldr	r3, [r3, #0]
 8003588:	681a      	ldr	r2, [r3, #0]
 800358a:	687b      	ldr	r3, [r7, #4]
 800358c:	681b      	ldr	r3, [r3, #0]
 800358e:	f042 0201 	orr.w	r2, r2, #1
 8003592:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003594:	687b      	ldr	r3, [r7, #4]
 8003596:	2200      	movs	r2, #0
 8003598:	641a      	str	r2, [r3, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800359a:	687b      	ldr	r3, [r7, #4]
 800359c:	2220      	movs	r2, #32
 800359e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80035a2:	687b      	ldr	r3, [r7, #4]
 80035a4:	2200      	movs	r2, #0
 80035a6:	631a      	str	r2, [r3, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80035a8:	687b      	ldr	r3, [r7, #4]
 80035aa:	2200      	movs	r2, #0
 80035ac:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

  return HAL_OK;
 80035b0:	2300      	movs	r3, #0
}
 80035b2:	4618      	mov	r0, r3
 80035b4:	3710      	adds	r7, #16
 80035b6:	46bd      	mov	sp, r7
 80035b8:	bd80      	pop	{r7, pc}
 80035ba:	bf00      	nop
 80035bc:	000186a0 	.word	0x000186a0
 80035c0:	001e847f 	.word	0x001e847f
 80035c4:	003d08ff 	.word	0x003d08ff
 80035c8:	431bde83 	.word	0x431bde83
 80035cc:	10624dd3 	.word	0x10624dd3

080035d0 <HAL_I2C_DeInit>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *         the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_DeInit(I2C_HandleTypeDef *hi2c)
{
 80035d0:	b580      	push	{r7, lr}
 80035d2:	b082      	sub	sp, #8
 80035d4:	af00      	add	r7, sp, #0
 80035d6:	6078      	str	r0, [r7, #4]
  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 80035d8:	687b      	ldr	r3, [r7, #4]
 80035da:	2b00      	cmp	r3, #0
 80035dc:	d101      	bne.n	80035e2 <HAL_I2C_DeInit+0x12>
  {
    return HAL_ERROR;
 80035de:	2301      	movs	r3, #1
 80035e0:	e021      	b.n	8003626 <HAL_I2C_DeInit+0x56>
  }

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));

  hi2c->State = HAL_I2C_STATE_BUSY;
 80035e2:	687b      	ldr	r3, [r7, #4]
 80035e4:	2224      	movs	r2, #36	; 0x24
 80035e6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Disable the I2C Peripheral Clock */
  __HAL_I2C_DISABLE(hi2c);
 80035ea:	687b      	ldr	r3, [r7, #4]
 80035ec:	681b      	ldr	r3, [r3, #0]
 80035ee:	681a      	ldr	r2, [r3, #0]
 80035f0:	687b      	ldr	r3, [r7, #4]
 80035f2:	681b      	ldr	r3, [r3, #0]
 80035f4:	f022 0201 	bic.w	r2, r2, #1
 80035f8:	601a      	str	r2, [r3, #0]

  /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
  hi2c->MspDeInitCallback(hi2c);
#else
  /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
  HAL_I2C_MspDeInit(hi2c);
 80035fa:	6878      	ldr	r0, [r7, #4]
 80035fc:	f7fd fc80 	bl	8000f00 <HAL_I2C_MspDeInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */

  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	2200      	movs	r2, #0
 8003604:	641a      	str	r2, [r3, #64]	; 0x40
  hi2c->State         = HAL_I2C_STATE_RESET;
 8003606:	687b      	ldr	r3, [r7, #4]
 8003608:	2200      	movs	r2, #0
 800360a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800360e:	687b      	ldr	r3, [r7, #4]
 8003610:	2200      	movs	r2, #0
 8003612:	631a      	str	r2, [r3, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 8003614:	687b      	ldr	r3, [r7, #4]
 8003616:	2200      	movs	r2, #0
 8003618:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

  /* Release Lock */
  __HAL_UNLOCK(hi2c);
 800361c:	687b      	ldr	r3, [r7, #4]
 800361e:	2200      	movs	r2, #0
 8003620:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 8003624:	2300      	movs	r3, #0
}
 8003626:	4618      	mov	r0, r3
 8003628:	3708      	adds	r7, #8
 800362a:	46bd      	mov	sp, r7
 800362c:	bd80      	pop	{r7, pc}
	...

08003630 <HAL_I2C_Mem_Write>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8003630:	b580      	push	{r7, lr}
 8003632:	b088      	sub	sp, #32
 8003634:	af02      	add	r7, sp, #8
 8003636:	60f8      	str	r0, [r7, #12]
 8003638:	4608      	mov	r0, r1
 800363a:	4611      	mov	r1, r2
 800363c:	461a      	mov	r2, r3
 800363e:	4603      	mov	r3, r0
 8003640:	817b      	strh	r3, [r7, #10]
 8003642:	460b      	mov	r3, r1
 8003644:	813b      	strh	r3, [r7, #8]
 8003646:	4613      	mov	r3, r2
 8003648:	80fb      	strh	r3, [r7, #6]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 800364a:	f7ff f891 	bl	8002770 <HAL_GetTick>
 800364e:	6178      	str	r0, [r7, #20]

  /* Check the parameters */
  assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8003650:	68fb      	ldr	r3, [r7, #12]
 8003652:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003656:	b2db      	uxtb	r3, r3
 8003658:	2b20      	cmp	r3, #32
 800365a:	f040 80d9 	bne.w	8003810 <HAL_I2C_Mem_Write+0x1e0>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800365e:	697b      	ldr	r3, [r7, #20]
 8003660:	9300      	str	r3, [sp, #0]
 8003662:	2319      	movs	r3, #25
 8003664:	2201      	movs	r2, #1
 8003666:	496d      	ldr	r1, [pc, #436]	; (800381c <HAL_I2C_Mem_Write+0x1ec>)
 8003668:	68f8      	ldr	r0, [r7, #12]
 800366a:	f000 fc8d 	bl	8003f88 <I2C_WaitOnFlagUntilTimeout>
 800366e:	4603      	mov	r3, r0
 8003670:	2b00      	cmp	r3, #0
 8003672:	d001      	beq.n	8003678 <HAL_I2C_Mem_Write+0x48>
    {
      return HAL_BUSY;
 8003674:	2302      	movs	r3, #2
 8003676:	e0cc      	b.n	8003812 <HAL_I2C_Mem_Write+0x1e2>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8003678:	68fb      	ldr	r3, [r7, #12]
 800367a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800367e:	2b01      	cmp	r3, #1
 8003680:	d101      	bne.n	8003686 <HAL_I2C_Mem_Write+0x56>
 8003682:	2302      	movs	r3, #2
 8003684:	e0c5      	b.n	8003812 <HAL_I2C_Mem_Write+0x1e2>
 8003686:	68fb      	ldr	r3, [r7, #12]
 8003688:	2201      	movs	r2, #1
 800368a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800368e:	68fb      	ldr	r3, [r7, #12]
 8003690:	681b      	ldr	r3, [r3, #0]
 8003692:	681b      	ldr	r3, [r3, #0]
 8003694:	f003 0301 	and.w	r3, r3, #1
 8003698:	2b01      	cmp	r3, #1
 800369a:	d007      	beq.n	80036ac <HAL_I2C_Mem_Write+0x7c>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 800369c:	68fb      	ldr	r3, [r7, #12]
 800369e:	681b      	ldr	r3, [r3, #0]
 80036a0:	681a      	ldr	r2, [r3, #0]
 80036a2:	68fb      	ldr	r3, [r7, #12]
 80036a4:	681b      	ldr	r3, [r3, #0]
 80036a6:	f042 0201 	orr.w	r2, r2, #1
 80036aa:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80036ac:	68fb      	ldr	r3, [r7, #12]
 80036ae:	681b      	ldr	r3, [r3, #0]
 80036b0:	681a      	ldr	r2, [r3, #0]
 80036b2:	68fb      	ldr	r3, [r7, #12]
 80036b4:	681b      	ldr	r3, [r3, #0]
 80036b6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80036ba:	601a      	str	r2, [r3, #0]

    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80036bc:	68fb      	ldr	r3, [r7, #12]
 80036be:	2221      	movs	r2, #33	; 0x21
 80036c0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80036c4:	68fb      	ldr	r3, [r7, #12]
 80036c6:	2240      	movs	r2, #64	; 0x40
 80036c8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80036cc:	68fb      	ldr	r3, [r7, #12]
 80036ce:	2200      	movs	r2, #0
 80036d0:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 80036d2:	68fb      	ldr	r3, [r7, #12]
 80036d4:	6a3a      	ldr	r2, [r7, #32]
 80036d6:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 80036d8:	68fb      	ldr	r3, [r7, #12]
 80036da:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 80036dc:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80036de:	68fb      	ldr	r3, [r7, #12]
 80036e0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80036e2:	b29a      	uxth	r2, r3
 80036e4:	68fb      	ldr	r3, [r7, #12]
 80036e6:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80036e8:	68fb      	ldr	r3, [r7, #12]
 80036ea:	4a4d      	ldr	r2, [pc, #308]	; (8003820 <HAL_I2C_Mem_Write+0x1f0>)
 80036ec:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address and Memory Address */
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80036ee:	88f8      	ldrh	r0, [r7, #6]
 80036f0:	893a      	ldrh	r2, [r7, #8]
 80036f2:	8979      	ldrh	r1, [r7, #10]
 80036f4:	697b      	ldr	r3, [r7, #20]
 80036f6:	9301      	str	r3, [sp, #4]
 80036f8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80036fa:	9300      	str	r3, [sp, #0]
 80036fc:	4603      	mov	r3, r0
 80036fe:	68f8      	ldr	r0, [r7, #12]
 8003700:	f000 fac4 	bl	8003c8c <I2C_RequestMemoryWrite>
 8003704:	4603      	mov	r3, r0
 8003706:	2b00      	cmp	r3, #0
 8003708:	d052      	beq.n	80037b0 <HAL_I2C_Mem_Write+0x180>
    {
      return HAL_ERROR;
 800370a:	2301      	movs	r3, #1
 800370c:	e081      	b.n	8003812 <HAL_I2C_Mem_Write+0x1e2>
    }

    while (hi2c->XferSize > 0U)
    {
      /* Wait until TXE flag is set */
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800370e:	697a      	ldr	r2, [r7, #20]
 8003710:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8003712:	68f8      	ldr	r0, [r7, #12]
 8003714:	f000 fd0e 	bl	8004134 <I2C_WaitOnTXEFlagUntilTimeout>
 8003718:	4603      	mov	r3, r0
 800371a:	2b00      	cmp	r3, #0
 800371c:	d00d      	beq.n	800373a <HAL_I2C_Mem_Write+0x10a>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800371e:	68fb      	ldr	r3, [r7, #12]
 8003720:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003722:	2b04      	cmp	r3, #4
 8003724:	d107      	bne.n	8003736 <HAL_I2C_Mem_Write+0x106>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003726:	68fb      	ldr	r3, [r7, #12]
 8003728:	681b      	ldr	r3, [r3, #0]
 800372a:	681a      	ldr	r2, [r3, #0]
 800372c:	68fb      	ldr	r3, [r7, #12]
 800372e:	681b      	ldr	r3, [r3, #0]
 8003730:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003734:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 8003736:	2301      	movs	r3, #1
 8003738:	e06b      	b.n	8003812 <HAL_I2C_Mem_Write+0x1e2>
      }

      /* Write data to DR */
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800373a:	68fb      	ldr	r3, [r7, #12]
 800373c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800373e:	781a      	ldrb	r2, [r3, #0]
 8003740:	68fb      	ldr	r3, [r7, #12]
 8003742:	681b      	ldr	r3, [r3, #0]
 8003744:	611a      	str	r2, [r3, #16]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8003746:	68fb      	ldr	r3, [r7, #12]
 8003748:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800374a:	1c5a      	adds	r2, r3, #1
 800374c:	68fb      	ldr	r3, [r7, #12]
 800374e:	625a      	str	r2, [r3, #36]	; 0x24

      /* Update counter */
      hi2c->XferSize--;
 8003750:	68fb      	ldr	r3, [r7, #12]
 8003752:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003754:	3b01      	subs	r3, #1
 8003756:	b29a      	uxth	r2, r3
 8003758:	68fb      	ldr	r3, [r7, #12]
 800375a:	851a      	strh	r2, [r3, #40]	; 0x28
      hi2c->XferCount--;
 800375c:	68fb      	ldr	r3, [r7, #12]
 800375e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003760:	b29b      	uxth	r3, r3
 8003762:	3b01      	subs	r3, #1
 8003764:	b29a      	uxth	r2, r3
 8003766:	68fb      	ldr	r3, [r7, #12]
 8003768:	855a      	strh	r2, [r3, #42]	; 0x2a

      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800376a:	68fb      	ldr	r3, [r7, #12]
 800376c:	681b      	ldr	r3, [r3, #0]
 800376e:	695b      	ldr	r3, [r3, #20]
 8003770:	f003 0304 	and.w	r3, r3, #4
 8003774:	2b04      	cmp	r3, #4
 8003776:	d11b      	bne.n	80037b0 <HAL_I2C_Mem_Write+0x180>
 8003778:	68fb      	ldr	r3, [r7, #12]
 800377a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800377c:	2b00      	cmp	r3, #0
 800377e:	d017      	beq.n	80037b0 <HAL_I2C_Mem_Write+0x180>
      {
        /* Write data to DR */
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8003780:	68fb      	ldr	r3, [r7, #12]
 8003782:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003784:	781a      	ldrb	r2, [r3, #0]
 8003786:	68fb      	ldr	r3, [r7, #12]
 8003788:	681b      	ldr	r3, [r3, #0]
 800378a:	611a      	str	r2, [r3, #16]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 800378c:	68fb      	ldr	r3, [r7, #12]
 800378e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003790:	1c5a      	adds	r2, r3, #1
 8003792:	68fb      	ldr	r3, [r7, #12]
 8003794:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferSize--;
 8003796:	68fb      	ldr	r3, [r7, #12]
 8003798:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800379a:	3b01      	subs	r3, #1
 800379c:	b29a      	uxth	r2, r3
 800379e:	68fb      	ldr	r3, [r7, #12]
 80037a0:	851a      	strh	r2, [r3, #40]	; 0x28
        hi2c->XferCount--;
 80037a2:	68fb      	ldr	r3, [r7, #12]
 80037a4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80037a6:	b29b      	uxth	r3, r3
 80037a8:	3b01      	subs	r3, #1
 80037aa:	b29a      	uxth	r2, r3
 80037ac:	68fb      	ldr	r3, [r7, #12]
 80037ae:	855a      	strh	r2, [r3, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 80037b0:	68fb      	ldr	r3, [r7, #12]
 80037b2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80037b4:	2b00      	cmp	r3, #0
 80037b6:	d1aa      	bne.n	800370e <HAL_I2C_Mem_Write+0xde>
      }
    }

    /* Wait until BTF flag is set */
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80037b8:	697a      	ldr	r2, [r7, #20]
 80037ba:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80037bc:	68f8      	ldr	r0, [r7, #12]
 80037be:	f000 fcfa 	bl	80041b6 <I2C_WaitOnBTFFlagUntilTimeout>
 80037c2:	4603      	mov	r3, r0
 80037c4:	2b00      	cmp	r3, #0
 80037c6:	d00d      	beq.n	80037e4 <HAL_I2C_Mem_Write+0x1b4>
    {
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80037c8:	68fb      	ldr	r3, [r7, #12]
 80037ca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80037cc:	2b04      	cmp	r3, #4
 80037ce:	d107      	bne.n	80037e0 <HAL_I2C_Mem_Write+0x1b0>
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80037d0:	68fb      	ldr	r3, [r7, #12]
 80037d2:	681b      	ldr	r3, [r3, #0]
 80037d4:	681a      	ldr	r2, [r3, #0]
 80037d6:	68fb      	ldr	r3, [r7, #12]
 80037d8:	681b      	ldr	r3, [r3, #0]
 80037da:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80037de:	601a      	str	r2, [r3, #0]
      }
      return HAL_ERROR;
 80037e0:	2301      	movs	r3, #1
 80037e2:	e016      	b.n	8003812 <HAL_I2C_Mem_Write+0x1e2>
    }

    /* Generate Stop */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80037e4:	68fb      	ldr	r3, [r7, #12]
 80037e6:	681b      	ldr	r3, [r3, #0]
 80037e8:	681a      	ldr	r2, [r3, #0]
 80037ea:	68fb      	ldr	r3, [r7, #12]
 80037ec:	681b      	ldr	r3, [r3, #0]
 80037ee:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80037f2:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80037f4:	68fb      	ldr	r3, [r7, #12]
 80037f6:	2220      	movs	r2, #32
 80037f8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80037fc:	68fb      	ldr	r3, [r7, #12]
 80037fe:	2200      	movs	r2, #0
 8003800:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8003804:	68fb      	ldr	r3, [r7, #12]
 8003806:	2200      	movs	r2, #0
 8003808:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 800380c:	2300      	movs	r3, #0
 800380e:	e000      	b.n	8003812 <HAL_I2C_Mem_Write+0x1e2>
  }
  else
  {
    return HAL_BUSY;
 8003810:	2302      	movs	r3, #2
  }
}
 8003812:	4618      	mov	r0, r3
 8003814:	3718      	adds	r7, #24
 8003816:	46bd      	mov	sp, r7
 8003818:	bd80      	pop	{r7, pc}
 800381a:	bf00      	nop
 800381c:	00100002 	.word	0x00100002
 8003820:	ffff0000 	.word	0xffff0000

08003824 <HAL_I2C_Mem_Read>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8003824:	b580      	push	{r7, lr}
 8003826:	b08c      	sub	sp, #48	; 0x30
 8003828:	af02      	add	r7, sp, #8
 800382a:	60f8      	str	r0, [r7, #12]
 800382c:	4608      	mov	r0, r1
 800382e:	4611      	mov	r1, r2
 8003830:	461a      	mov	r2, r3
 8003832:	4603      	mov	r3, r0
 8003834:	817b      	strh	r3, [r7, #10]
 8003836:	460b      	mov	r3, r1
 8003838:	813b      	strh	r3, [r7, #8]
 800383a:	4613      	mov	r3, r2
 800383c:	80fb      	strh	r3, [r7, #6]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 800383e:	f7fe ff97 	bl	8002770 <HAL_GetTick>
 8003842:	6278      	str	r0, [r7, #36]	; 0x24

  /* Check the parameters */
  assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8003844:	68fb      	ldr	r3, [r7, #12]
 8003846:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800384a:	b2db      	uxtb	r3, r3
 800384c:	2b20      	cmp	r3, #32
 800384e:	f040 8208 	bne.w	8003c62 <HAL_I2C_Mem_Read+0x43e>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8003852:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003854:	9300      	str	r3, [sp, #0]
 8003856:	2319      	movs	r3, #25
 8003858:	2201      	movs	r2, #1
 800385a:	497b      	ldr	r1, [pc, #492]	; (8003a48 <HAL_I2C_Mem_Read+0x224>)
 800385c:	68f8      	ldr	r0, [r7, #12]
 800385e:	f000 fb93 	bl	8003f88 <I2C_WaitOnFlagUntilTimeout>
 8003862:	4603      	mov	r3, r0
 8003864:	2b00      	cmp	r3, #0
 8003866:	d001      	beq.n	800386c <HAL_I2C_Mem_Read+0x48>
    {
      return HAL_BUSY;
 8003868:	2302      	movs	r3, #2
 800386a:	e1fb      	b.n	8003c64 <HAL_I2C_Mem_Read+0x440>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 800386c:	68fb      	ldr	r3, [r7, #12]
 800386e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003872:	2b01      	cmp	r3, #1
 8003874:	d101      	bne.n	800387a <HAL_I2C_Mem_Read+0x56>
 8003876:	2302      	movs	r3, #2
 8003878:	e1f4      	b.n	8003c64 <HAL_I2C_Mem_Read+0x440>
 800387a:	68fb      	ldr	r3, [r7, #12]
 800387c:	2201      	movs	r2, #1
 800387e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8003882:	68fb      	ldr	r3, [r7, #12]
 8003884:	681b      	ldr	r3, [r3, #0]
 8003886:	681b      	ldr	r3, [r3, #0]
 8003888:	f003 0301 	and.w	r3, r3, #1
 800388c:	2b01      	cmp	r3, #1
 800388e:	d007      	beq.n	80038a0 <HAL_I2C_Mem_Read+0x7c>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 8003890:	68fb      	ldr	r3, [r7, #12]
 8003892:	681b      	ldr	r3, [r3, #0]
 8003894:	681a      	ldr	r2, [r3, #0]
 8003896:	68fb      	ldr	r3, [r7, #12]
 8003898:	681b      	ldr	r3, [r3, #0]
 800389a:	f042 0201 	orr.w	r2, r2, #1
 800389e:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80038a0:	68fb      	ldr	r3, [r7, #12]
 80038a2:	681b      	ldr	r3, [r3, #0]
 80038a4:	681a      	ldr	r2, [r3, #0]
 80038a6:	68fb      	ldr	r3, [r7, #12]
 80038a8:	681b      	ldr	r3, [r3, #0]
 80038aa:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80038ae:	601a      	str	r2, [r3, #0]

    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80038b0:	68fb      	ldr	r3, [r7, #12]
 80038b2:	2222      	movs	r2, #34	; 0x22
 80038b4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80038b8:	68fb      	ldr	r3, [r7, #12]
 80038ba:	2240      	movs	r2, #64	; 0x40
 80038bc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80038c0:	68fb      	ldr	r3, [r7, #12]
 80038c2:	2200      	movs	r2, #0
 80038c4:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 80038c6:	68fb      	ldr	r3, [r7, #12]
 80038c8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80038ca:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 80038cc:	68fb      	ldr	r3, [r7, #12]
 80038ce:	8eba      	ldrh	r2, [r7, #52]	; 0x34
 80038d0:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80038d2:	68fb      	ldr	r3, [r7, #12]
 80038d4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80038d6:	b29a      	uxth	r2, r3
 80038d8:	68fb      	ldr	r3, [r7, #12]
 80038da:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80038dc:	68fb      	ldr	r3, [r7, #12]
 80038de:	4a5b      	ldr	r2, [pc, #364]	; (8003a4c <HAL_I2C_Mem_Read+0x228>)
 80038e0:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address and Memory Address */
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80038e2:	88f8      	ldrh	r0, [r7, #6]
 80038e4:	893a      	ldrh	r2, [r7, #8]
 80038e6:	8979      	ldrh	r1, [r7, #10]
 80038e8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80038ea:	9301      	str	r3, [sp, #4]
 80038ec:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80038ee:	9300      	str	r3, [sp, #0]
 80038f0:	4603      	mov	r3, r0
 80038f2:	68f8      	ldr	r0, [r7, #12]
 80038f4:	f000 fa60 	bl	8003db8 <I2C_RequestMemoryRead>
 80038f8:	4603      	mov	r3, r0
 80038fa:	2b00      	cmp	r3, #0
 80038fc:	d001      	beq.n	8003902 <HAL_I2C_Mem_Read+0xde>
    {
      return HAL_ERROR;
 80038fe:	2301      	movs	r3, #1
 8003900:	e1b0      	b.n	8003c64 <HAL_I2C_Mem_Read+0x440>
    }

    if (hi2c->XferSize == 0U)
 8003902:	68fb      	ldr	r3, [r7, #12]
 8003904:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003906:	2b00      	cmp	r3, #0
 8003908:	d113      	bne.n	8003932 <HAL_I2C_Mem_Read+0x10e>
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800390a:	2300      	movs	r3, #0
 800390c:	623b      	str	r3, [r7, #32]
 800390e:	68fb      	ldr	r3, [r7, #12]
 8003910:	681b      	ldr	r3, [r3, #0]
 8003912:	695b      	ldr	r3, [r3, #20]
 8003914:	623b      	str	r3, [r7, #32]
 8003916:	68fb      	ldr	r3, [r7, #12]
 8003918:	681b      	ldr	r3, [r3, #0]
 800391a:	699b      	ldr	r3, [r3, #24]
 800391c:	623b      	str	r3, [r7, #32]
 800391e:	6a3b      	ldr	r3, [r7, #32]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003920:	68fb      	ldr	r3, [r7, #12]
 8003922:	681b      	ldr	r3, [r3, #0]
 8003924:	681a      	ldr	r2, [r3, #0]
 8003926:	68fb      	ldr	r3, [r7, #12]
 8003928:	681b      	ldr	r3, [r3, #0]
 800392a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800392e:	601a      	str	r2, [r3, #0]
 8003930:	e184      	b.n	8003c3c <HAL_I2C_Mem_Read+0x418>
    }
    else if (hi2c->XferSize == 1U)
 8003932:	68fb      	ldr	r3, [r7, #12]
 8003934:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003936:	2b01      	cmp	r3, #1
 8003938:	d11b      	bne.n	8003972 <HAL_I2C_Mem_Read+0x14e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800393a:	68fb      	ldr	r3, [r7, #12]
 800393c:	681b      	ldr	r3, [r3, #0]
 800393e:	681a      	ldr	r2, [r3, #0]
 8003940:	68fb      	ldr	r3, [r7, #12]
 8003942:	681b      	ldr	r3, [r3, #0]
 8003944:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003948:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800394a:	2300      	movs	r3, #0
 800394c:	61fb      	str	r3, [r7, #28]
 800394e:	68fb      	ldr	r3, [r7, #12]
 8003950:	681b      	ldr	r3, [r3, #0]
 8003952:	695b      	ldr	r3, [r3, #20]
 8003954:	61fb      	str	r3, [r7, #28]
 8003956:	68fb      	ldr	r3, [r7, #12]
 8003958:	681b      	ldr	r3, [r3, #0]
 800395a:	699b      	ldr	r3, [r3, #24]
 800395c:	61fb      	str	r3, [r7, #28]
 800395e:	69fb      	ldr	r3, [r7, #28]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003960:	68fb      	ldr	r3, [r7, #12]
 8003962:	681b      	ldr	r3, [r3, #0]
 8003964:	681a      	ldr	r2, [r3, #0]
 8003966:	68fb      	ldr	r3, [r7, #12]
 8003968:	681b      	ldr	r3, [r3, #0]
 800396a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800396e:	601a      	str	r2, [r3, #0]
 8003970:	e164      	b.n	8003c3c <HAL_I2C_Mem_Read+0x418>
    }
    else if (hi2c->XferSize == 2U)
 8003972:	68fb      	ldr	r3, [r7, #12]
 8003974:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003976:	2b02      	cmp	r3, #2
 8003978:	d11b      	bne.n	80039b2 <HAL_I2C_Mem_Read+0x18e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800397a:	68fb      	ldr	r3, [r7, #12]
 800397c:	681b      	ldr	r3, [r3, #0]
 800397e:	681a      	ldr	r2, [r3, #0]
 8003980:	68fb      	ldr	r3, [r7, #12]
 8003982:	681b      	ldr	r3, [r3, #0]
 8003984:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003988:	601a      	str	r2, [r3, #0]

      /* Enable Pos */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800398a:	68fb      	ldr	r3, [r7, #12]
 800398c:	681b      	ldr	r3, [r3, #0]
 800398e:	681a      	ldr	r2, [r3, #0]
 8003990:	68fb      	ldr	r3, [r7, #12]
 8003992:	681b      	ldr	r3, [r3, #0]
 8003994:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8003998:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800399a:	2300      	movs	r3, #0
 800399c:	61bb      	str	r3, [r7, #24]
 800399e:	68fb      	ldr	r3, [r7, #12]
 80039a0:	681b      	ldr	r3, [r3, #0]
 80039a2:	695b      	ldr	r3, [r3, #20]
 80039a4:	61bb      	str	r3, [r7, #24]
 80039a6:	68fb      	ldr	r3, [r7, #12]
 80039a8:	681b      	ldr	r3, [r3, #0]
 80039aa:	699b      	ldr	r3, [r3, #24]
 80039ac:	61bb      	str	r3, [r7, #24]
 80039ae:	69bb      	ldr	r3, [r7, #24]
 80039b0:	e144      	b.n	8003c3c <HAL_I2C_Mem_Read+0x418>
    }
    else
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80039b2:	2300      	movs	r3, #0
 80039b4:	617b      	str	r3, [r7, #20]
 80039b6:	68fb      	ldr	r3, [r7, #12]
 80039b8:	681b      	ldr	r3, [r3, #0]
 80039ba:	695b      	ldr	r3, [r3, #20]
 80039bc:	617b      	str	r3, [r7, #20]
 80039be:	68fb      	ldr	r3, [r7, #12]
 80039c0:	681b      	ldr	r3, [r3, #0]
 80039c2:	699b      	ldr	r3, [r3, #24]
 80039c4:	617b      	str	r3, [r7, #20]
 80039c6:	697b      	ldr	r3, [r7, #20]
    }

    while (hi2c->XferSize > 0U)
 80039c8:	e138      	b.n	8003c3c <HAL_I2C_Mem_Read+0x418>
    {
      if (hi2c->XferSize <= 3U)
 80039ca:	68fb      	ldr	r3, [r7, #12]
 80039cc:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80039ce:	2b03      	cmp	r3, #3
 80039d0:	f200 80f1 	bhi.w	8003bb6 <HAL_I2C_Mem_Read+0x392>
      {
        /* One byte */
        if (hi2c->XferSize == 1U)
 80039d4:	68fb      	ldr	r3, [r7, #12]
 80039d6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80039d8:	2b01      	cmp	r3, #1
 80039da:	d123      	bne.n	8003a24 <HAL_I2C_Mem_Read+0x200>
        {
          /* Wait until RXNE flag is set */
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80039dc:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80039de:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 80039e0:	68f8      	ldr	r0, [r7, #12]
 80039e2:	f000 fc29 	bl	8004238 <I2C_WaitOnRXNEFlagUntilTimeout>
 80039e6:	4603      	mov	r3, r0
 80039e8:	2b00      	cmp	r3, #0
 80039ea:	d001      	beq.n	80039f0 <HAL_I2C_Mem_Read+0x1cc>
          {
            return HAL_ERROR;
 80039ec:	2301      	movs	r3, #1
 80039ee:	e139      	b.n	8003c64 <HAL_I2C_Mem_Read+0x440>
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80039f0:	68fb      	ldr	r3, [r7, #12]
 80039f2:	681b      	ldr	r3, [r3, #0]
 80039f4:	691a      	ldr	r2, [r3, #16]
 80039f6:	68fb      	ldr	r3, [r7, #12]
 80039f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80039fa:	b2d2      	uxtb	r2, r2
 80039fc:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80039fe:	68fb      	ldr	r3, [r7, #12]
 8003a00:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a02:	1c5a      	adds	r2, r3, #1
 8003a04:	68fb      	ldr	r3, [r7, #12]
 8003a06:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8003a08:	68fb      	ldr	r3, [r7, #12]
 8003a0a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003a0c:	3b01      	subs	r3, #1
 8003a0e:	b29a      	uxth	r2, r3
 8003a10:	68fb      	ldr	r3, [r7, #12]
 8003a12:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8003a14:	68fb      	ldr	r3, [r7, #12]
 8003a16:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003a18:	b29b      	uxth	r3, r3
 8003a1a:	3b01      	subs	r3, #1
 8003a1c:	b29a      	uxth	r2, r3
 8003a1e:	68fb      	ldr	r3, [r7, #12]
 8003a20:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003a22:	e10b      	b.n	8003c3c <HAL_I2C_Mem_Read+0x418>
        }
        /* Two bytes */
        else if (hi2c->XferSize == 2U)
 8003a24:	68fb      	ldr	r3, [r7, #12]
 8003a26:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003a28:	2b02      	cmp	r3, #2
 8003a2a:	d14e      	bne.n	8003aca <HAL_I2C_Mem_Read+0x2a6>
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8003a2c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a2e:	9300      	str	r3, [sp, #0]
 8003a30:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003a32:	2200      	movs	r2, #0
 8003a34:	4906      	ldr	r1, [pc, #24]	; (8003a50 <HAL_I2C_Mem_Read+0x22c>)
 8003a36:	68f8      	ldr	r0, [r7, #12]
 8003a38:	f000 faa6 	bl	8003f88 <I2C_WaitOnFlagUntilTimeout>
 8003a3c:	4603      	mov	r3, r0
 8003a3e:	2b00      	cmp	r3, #0
 8003a40:	d008      	beq.n	8003a54 <HAL_I2C_Mem_Read+0x230>
          {
            return HAL_ERROR;
 8003a42:	2301      	movs	r3, #1
 8003a44:	e10e      	b.n	8003c64 <HAL_I2C_Mem_Read+0x440>
 8003a46:	bf00      	nop
 8003a48:	00100002 	.word	0x00100002
 8003a4c:	ffff0000 	.word	0xffff0000
 8003a50:	00010004 	.word	0x00010004
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003a54:	68fb      	ldr	r3, [r7, #12]
 8003a56:	681b      	ldr	r3, [r3, #0]
 8003a58:	681a      	ldr	r2, [r3, #0]
 8003a5a:	68fb      	ldr	r3, [r7, #12]
 8003a5c:	681b      	ldr	r3, [r3, #0]
 8003a5e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003a62:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003a64:	68fb      	ldr	r3, [r7, #12]
 8003a66:	681b      	ldr	r3, [r3, #0]
 8003a68:	691a      	ldr	r2, [r3, #16]
 8003a6a:	68fb      	ldr	r3, [r7, #12]
 8003a6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a6e:	b2d2      	uxtb	r2, r2
 8003a70:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8003a72:	68fb      	ldr	r3, [r7, #12]
 8003a74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a76:	1c5a      	adds	r2, r3, #1
 8003a78:	68fb      	ldr	r3, [r7, #12]
 8003a7a:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8003a7c:	68fb      	ldr	r3, [r7, #12]
 8003a7e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003a80:	3b01      	subs	r3, #1
 8003a82:	b29a      	uxth	r2, r3
 8003a84:	68fb      	ldr	r3, [r7, #12]
 8003a86:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8003a88:	68fb      	ldr	r3, [r7, #12]
 8003a8a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003a8c:	b29b      	uxth	r3, r3
 8003a8e:	3b01      	subs	r3, #1
 8003a90:	b29a      	uxth	r2, r3
 8003a92:	68fb      	ldr	r3, [r7, #12]
 8003a94:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003a96:	68fb      	ldr	r3, [r7, #12]
 8003a98:	681b      	ldr	r3, [r3, #0]
 8003a9a:	691a      	ldr	r2, [r3, #16]
 8003a9c:	68fb      	ldr	r3, [r7, #12]
 8003a9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003aa0:	b2d2      	uxtb	r2, r2
 8003aa2:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8003aa4:	68fb      	ldr	r3, [r7, #12]
 8003aa6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003aa8:	1c5a      	adds	r2, r3, #1
 8003aaa:	68fb      	ldr	r3, [r7, #12]
 8003aac:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8003aae:	68fb      	ldr	r3, [r7, #12]
 8003ab0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003ab2:	3b01      	subs	r3, #1
 8003ab4:	b29a      	uxth	r2, r3
 8003ab6:	68fb      	ldr	r3, [r7, #12]
 8003ab8:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8003aba:	68fb      	ldr	r3, [r7, #12]
 8003abc:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003abe:	b29b      	uxth	r3, r3
 8003ac0:	3b01      	subs	r3, #1
 8003ac2:	b29a      	uxth	r2, r3
 8003ac4:	68fb      	ldr	r3, [r7, #12]
 8003ac6:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003ac8:	e0b8      	b.n	8003c3c <HAL_I2C_Mem_Read+0x418>
        }
        /* 3 Last bytes */
        else
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8003aca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003acc:	9300      	str	r3, [sp, #0]
 8003ace:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003ad0:	2200      	movs	r2, #0
 8003ad2:	4966      	ldr	r1, [pc, #408]	; (8003c6c <HAL_I2C_Mem_Read+0x448>)
 8003ad4:	68f8      	ldr	r0, [r7, #12]
 8003ad6:	f000 fa57 	bl	8003f88 <I2C_WaitOnFlagUntilTimeout>
 8003ada:	4603      	mov	r3, r0
 8003adc:	2b00      	cmp	r3, #0
 8003ade:	d001      	beq.n	8003ae4 <HAL_I2C_Mem_Read+0x2c0>
          {
            return HAL_ERROR;
 8003ae0:	2301      	movs	r3, #1
 8003ae2:	e0bf      	b.n	8003c64 <HAL_I2C_Mem_Read+0x440>
          }

          /* Disable Acknowledge */
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8003ae4:	68fb      	ldr	r3, [r7, #12]
 8003ae6:	681b      	ldr	r3, [r3, #0]
 8003ae8:	681a      	ldr	r2, [r3, #0]
 8003aea:	68fb      	ldr	r3, [r7, #12]
 8003aec:	681b      	ldr	r3, [r3, #0]
 8003aee:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003af2:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003af4:	68fb      	ldr	r3, [r7, #12]
 8003af6:	681b      	ldr	r3, [r3, #0]
 8003af8:	691a      	ldr	r2, [r3, #16]
 8003afa:	68fb      	ldr	r3, [r7, #12]
 8003afc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003afe:	b2d2      	uxtb	r2, r2
 8003b00:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8003b02:	68fb      	ldr	r3, [r7, #12]
 8003b04:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b06:	1c5a      	adds	r2, r3, #1
 8003b08:	68fb      	ldr	r3, [r7, #12]
 8003b0a:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8003b0c:	68fb      	ldr	r3, [r7, #12]
 8003b0e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003b10:	3b01      	subs	r3, #1
 8003b12:	b29a      	uxth	r2, r3
 8003b14:	68fb      	ldr	r3, [r7, #12]
 8003b16:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8003b18:	68fb      	ldr	r3, [r7, #12]
 8003b1a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003b1c:	b29b      	uxth	r3, r3
 8003b1e:	3b01      	subs	r3, #1
 8003b20:	b29a      	uxth	r2, r3
 8003b22:	68fb      	ldr	r3, [r7, #12]
 8003b24:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8003b26:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003b28:	9300      	str	r3, [sp, #0]
 8003b2a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003b2c:	2200      	movs	r2, #0
 8003b2e:	494f      	ldr	r1, [pc, #316]	; (8003c6c <HAL_I2C_Mem_Read+0x448>)
 8003b30:	68f8      	ldr	r0, [r7, #12]
 8003b32:	f000 fa29 	bl	8003f88 <I2C_WaitOnFlagUntilTimeout>
 8003b36:	4603      	mov	r3, r0
 8003b38:	2b00      	cmp	r3, #0
 8003b3a:	d001      	beq.n	8003b40 <HAL_I2C_Mem_Read+0x31c>
          {
            return HAL_ERROR;
 8003b3c:	2301      	movs	r3, #1
 8003b3e:	e091      	b.n	8003c64 <HAL_I2C_Mem_Read+0x440>
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003b40:	68fb      	ldr	r3, [r7, #12]
 8003b42:	681b      	ldr	r3, [r3, #0]
 8003b44:	681a      	ldr	r2, [r3, #0]
 8003b46:	68fb      	ldr	r3, [r7, #12]
 8003b48:	681b      	ldr	r3, [r3, #0]
 8003b4a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003b4e:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003b50:	68fb      	ldr	r3, [r7, #12]
 8003b52:	681b      	ldr	r3, [r3, #0]
 8003b54:	691a      	ldr	r2, [r3, #16]
 8003b56:	68fb      	ldr	r3, [r7, #12]
 8003b58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b5a:	b2d2      	uxtb	r2, r2
 8003b5c:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8003b5e:	68fb      	ldr	r3, [r7, #12]
 8003b60:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b62:	1c5a      	adds	r2, r3, #1
 8003b64:	68fb      	ldr	r3, [r7, #12]
 8003b66:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8003b68:	68fb      	ldr	r3, [r7, #12]
 8003b6a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003b6c:	3b01      	subs	r3, #1
 8003b6e:	b29a      	uxth	r2, r3
 8003b70:	68fb      	ldr	r3, [r7, #12]
 8003b72:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8003b74:	68fb      	ldr	r3, [r7, #12]
 8003b76:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003b78:	b29b      	uxth	r3, r3
 8003b7a:	3b01      	subs	r3, #1
 8003b7c:	b29a      	uxth	r2, r3
 8003b7e:	68fb      	ldr	r3, [r7, #12]
 8003b80:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003b82:	68fb      	ldr	r3, [r7, #12]
 8003b84:	681b      	ldr	r3, [r3, #0]
 8003b86:	691a      	ldr	r2, [r3, #16]
 8003b88:	68fb      	ldr	r3, [r7, #12]
 8003b8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b8c:	b2d2      	uxtb	r2, r2
 8003b8e:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8003b90:	68fb      	ldr	r3, [r7, #12]
 8003b92:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b94:	1c5a      	adds	r2, r3, #1
 8003b96:	68fb      	ldr	r3, [r7, #12]
 8003b98:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8003b9a:	68fb      	ldr	r3, [r7, #12]
 8003b9c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003b9e:	3b01      	subs	r3, #1
 8003ba0:	b29a      	uxth	r2, r3
 8003ba2:	68fb      	ldr	r3, [r7, #12]
 8003ba4:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8003ba6:	68fb      	ldr	r3, [r7, #12]
 8003ba8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003baa:	b29b      	uxth	r3, r3
 8003bac:	3b01      	subs	r3, #1
 8003bae:	b29a      	uxth	r2, r3
 8003bb0:	68fb      	ldr	r3, [r7, #12]
 8003bb2:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003bb4:	e042      	b.n	8003c3c <HAL_I2C_Mem_Read+0x418>
        }
      }
      else
      {
        /* Wait until RXNE flag is set */
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003bb6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003bb8:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8003bba:	68f8      	ldr	r0, [r7, #12]
 8003bbc:	f000 fb3c 	bl	8004238 <I2C_WaitOnRXNEFlagUntilTimeout>
 8003bc0:	4603      	mov	r3, r0
 8003bc2:	2b00      	cmp	r3, #0
 8003bc4:	d001      	beq.n	8003bca <HAL_I2C_Mem_Read+0x3a6>
        {
          return HAL_ERROR;
 8003bc6:	2301      	movs	r3, #1
 8003bc8:	e04c      	b.n	8003c64 <HAL_I2C_Mem_Read+0x440>
        }

        /* Read data from DR */
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003bca:	68fb      	ldr	r3, [r7, #12]
 8003bcc:	681b      	ldr	r3, [r3, #0]
 8003bce:	691a      	ldr	r2, [r3, #16]
 8003bd0:	68fb      	ldr	r3, [r7, #12]
 8003bd2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003bd4:	b2d2      	uxtb	r2, r2
 8003bd6:	701a      	strb	r2, [r3, #0]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8003bd8:	68fb      	ldr	r3, [r7, #12]
 8003bda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003bdc:	1c5a      	adds	r2, r3, #1
 8003bde:	68fb      	ldr	r3, [r7, #12]
 8003be0:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferSize--;
 8003be2:	68fb      	ldr	r3, [r7, #12]
 8003be4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003be6:	3b01      	subs	r3, #1
 8003be8:	b29a      	uxth	r2, r3
 8003bea:	68fb      	ldr	r3, [r7, #12]
 8003bec:	851a      	strh	r2, [r3, #40]	; 0x28
        hi2c->XferCount--;
 8003bee:	68fb      	ldr	r3, [r7, #12]
 8003bf0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003bf2:	b29b      	uxth	r3, r3
 8003bf4:	3b01      	subs	r3, #1
 8003bf6:	b29a      	uxth	r2, r3
 8003bf8:	68fb      	ldr	r3, [r7, #12]
 8003bfa:	855a      	strh	r2, [r3, #42]	; 0x2a

        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8003bfc:	68fb      	ldr	r3, [r7, #12]
 8003bfe:	681b      	ldr	r3, [r3, #0]
 8003c00:	695b      	ldr	r3, [r3, #20]
 8003c02:	f003 0304 	and.w	r3, r3, #4
 8003c06:	2b04      	cmp	r3, #4
 8003c08:	d118      	bne.n	8003c3c <HAL_I2C_Mem_Read+0x418>
        {
          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003c0a:	68fb      	ldr	r3, [r7, #12]
 8003c0c:	681b      	ldr	r3, [r3, #0]
 8003c0e:	691a      	ldr	r2, [r3, #16]
 8003c10:	68fb      	ldr	r3, [r7, #12]
 8003c12:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c14:	b2d2      	uxtb	r2, r2
 8003c16:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8003c18:	68fb      	ldr	r3, [r7, #12]
 8003c1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c1c:	1c5a      	adds	r2, r3, #1
 8003c1e:	68fb      	ldr	r3, [r7, #12]
 8003c20:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8003c22:	68fb      	ldr	r3, [r7, #12]
 8003c24:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003c26:	3b01      	subs	r3, #1
 8003c28:	b29a      	uxth	r2, r3
 8003c2a:	68fb      	ldr	r3, [r7, #12]
 8003c2c:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8003c2e:	68fb      	ldr	r3, [r7, #12]
 8003c30:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003c32:	b29b      	uxth	r3, r3
 8003c34:	3b01      	subs	r3, #1
 8003c36:	b29a      	uxth	r2, r3
 8003c38:	68fb      	ldr	r3, [r7, #12]
 8003c3a:	855a      	strh	r2, [r3, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8003c3c:	68fb      	ldr	r3, [r7, #12]
 8003c3e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003c40:	2b00      	cmp	r3, #0
 8003c42:	f47f aec2 	bne.w	80039ca <HAL_I2C_Mem_Read+0x1a6>
        }
      }
    }

    hi2c->State = HAL_I2C_STATE_READY;
 8003c46:	68fb      	ldr	r3, [r7, #12]
 8003c48:	2220      	movs	r2, #32
 8003c4a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8003c4e:	68fb      	ldr	r3, [r7, #12]
 8003c50:	2200      	movs	r2, #0
 8003c52:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8003c56:	68fb      	ldr	r3, [r7, #12]
 8003c58:	2200      	movs	r2, #0
 8003c5a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 8003c5e:	2300      	movs	r3, #0
 8003c60:	e000      	b.n	8003c64 <HAL_I2C_Mem_Read+0x440>
  }
  else
  {
    return HAL_BUSY;
 8003c62:	2302      	movs	r3, #2
  }
}
 8003c64:	4618      	mov	r0, r3
 8003c66:	3728      	adds	r7, #40	; 0x28
 8003c68:	46bd      	mov	sp, r7
 8003c6a:	bd80      	pop	{r7, pc}
 8003c6c:	00010004 	.word	0x00010004

08003c70 <HAL_I2C_GetState>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL state
  */
HAL_I2C_StateTypeDef HAL_I2C_GetState(I2C_HandleTypeDef *hi2c)
{
 8003c70:	b480      	push	{r7}
 8003c72:	b083      	sub	sp, #12
 8003c74:	af00      	add	r7, sp, #0
 8003c76:	6078      	str	r0, [r7, #4]
  /* Return I2C handle state */
  return hi2c->State;
 8003c78:	687b      	ldr	r3, [r7, #4]
 8003c7a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003c7e:	b2db      	uxtb	r3, r3
}
 8003c80:	4618      	mov	r0, r3
 8003c82:	370c      	adds	r7, #12
 8003c84:	46bd      	mov	sp, r7
 8003c86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c8a:	4770      	bx	lr

08003c8c <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 8003c8c:	b580      	push	{r7, lr}
 8003c8e:	b088      	sub	sp, #32
 8003c90:	af02      	add	r7, sp, #8
 8003c92:	60f8      	str	r0, [r7, #12]
 8003c94:	4608      	mov	r0, r1
 8003c96:	4611      	mov	r1, r2
 8003c98:	461a      	mov	r2, r3
 8003c9a:	4603      	mov	r3, r0
 8003c9c:	817b      	strh	r3, [r7, #10]
 8003c9e:	460b      	mov	r3, r1
 8003ca0:	813b      	strh	r3, [r7, #8]
 8003ca2:	4613      	mov	r3, r2
 8003ca4:	80fb      	strh	r3, [r7, #6]
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003ca6:	68fb      	ldr	r3, [r7, #12]
 8003ca8:	681b      	ldr	r3, [r3, #0]
 8003caa:	681a      	ldr	r2, [r3, #0]
 8003cac:	68fb      	ldr	r3, [r7, #12]
 8003cae:	681b      	ldr	r3, [r3, #0]
 8003cb0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003cb4:	601a      	str	r2, [r3, #0]

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003cb6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003cb8:	9300      	str	r3, [sp, #0]
 8003cba:	6a3b      	ldr	r3, [r7, #32]
 8003cbc:	2200      	movs	r2, #0
 8003cbe:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8003cc2:	68f8      	ldr	r0, [r7, #12]
 8003cc4:	f000 f960 	bl	8003f88 <I2C_WaitOnFlagUntilTimeout>
 8003cc8:	4603      	mov	r3, r0
 8003cca:	2b00      	cmp	r3, #0
 8003ccc:	d00d      	beq.n	8003cea <I2C_RequestMemoryWrite+0x5e>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8003cce:	68fb      	ldr	r3, [r7, #12]
 8003cd0:	681b      	ldr	r3, [r3, #0]
 8003cd2:	681b      	ldr	r3, [r3, #0]
 8003cd4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003cd8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8003cdc:	d103      	bne.n	8003ce6 <I2C_RequestMemoryWrite+0x5a>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8003cde:	68fb      	ldr	r3, [r7, #12]
 8003ce0:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003ce4:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8003ce6:	2303      	movs	r3, #3
 8003ce8:	e05f      	b.n	8003daa <I2C_RequestMemoryWrite+0x11e>
  }

  /* Send slave address */
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8003cea:	897b      	ldrh	r3, [r7, #10]
 8003cec:	b2db      	uxtb	r3, r3
 8003cee:	461a      	mov	r2, r3
 8003cf0:	68fb      	ldr	r3, [r7, #12]
 8003cf2:	681b      	ldr	r3, [r3, #0]
 8003cf4:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8003cf8:	611a      	str	r2, [r3, #16]

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8003cfa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003cfc:	6a3a      	ldr	r2, [r7, #32]
 8003cfe:	492d      	ldr	r1, [pc, #180]	; (8003db4 <I2C_RequestMemoryWrite+0x128>)
 8003d00:	68f8      	ldr	r0, [r7, #12]
 8003d02:	f000 f998 	bl	8004036 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003d06:	4603      	mov	r3, r0
 8003d08:	2b00      	cmp	r3, #0
 8003d0a:	d001      	beq.n	8003d10 <I2C_RequestMemoryWrite+0x84>
  {
    return HAL_ERROR;
 8003d0c:	2301      	movs	r3, #1
 8003d0e:	e04c      	b.n	8003daa <I2C_RequestMemoryWrite+0x11e>
  }

  /* Clear ADDR flag */
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003d10:	2300      	movs	r3, #0
 8003d12:	617b      	str	r3, [r7, #20]
 8003d14:	68fb      	ldr	r3, [r7, #12]
 8003d16:	681b      	ldr	r3, [r3, #0]
 8003d18:	695b      	ldr	r3, [r3, #20]
 8003d1a:	617b      	str	r3, [r7, #20]
 8003d1c:	68fb      	ldr	r3, [r7, #12]
 8003d1e:	681b      	ldr	r3, [r3, #0]
 8003d20:	699b      	ldr	r3, [r3, #24]
 8003d22:	617b      	str	r3, [r7, #20]
 8003d24:	697b      	ldr	r3, [r7, #20]

  /* Wait until TXE flag is set */
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003d26:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003d28:	6a39      	ldr	r1, [r7, #32]
 8003d2a:	68f8      	ldr	r0, [r7, #12]
 8003d2c:	f000 fa02 	bl	8004134 <I2C_WaitOnTXEFlagUntilTimeout>
 8003d30:	4603      	mov	r3, r0
 8003d32:	2b00      	cmp	r3, #0
 8003d34:	d00d      	beq.n	8003d52 <I2C_RequestMemoryWrite+0xc6>
  {
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8003d36:	68fb      	ldr	r3, [r7, #12]
 8003d38:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003d3a:	2b04      	cmp	r3, #4
 8003d3c:	d107      	bne.n	8003d4e <I2C_RequestMemoryWrite+0xc2>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003d3e:	68fb      	ldr	r3, [r7, #12]
 8003d40:	681b      	ldr	r3, [r3, #0]
 8003d42:	681a      	ldr	r2, [r3, #0]
 8003d44:	68fb      	ldr	r3, [r7, #12]
 8003d46:	681b      	ldr	r3, [r3, #0]
 8003d48:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003d4c:	601a      	str	r2, [r3, #0]
    }
    return HAL_ERROR;
 8003d4e:	2301      	movs	r3, #1
 8003d50:	e02b      	b.n	8003daa <I2C_RequestMemoryWrite+0x11e>
  }

  /* If Memory address size is 8Bit */
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8003d52:	88fb      	ldrh	r3, [r7, #6]
 8003d54:	2b01      	cmp	r3, #1
 8003d56:	d105      	bne.n	8003d64 <I2C_RequestMemoryWrite+0xd8>
  {
    /* Send Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8003d58:	893b      	ldrh	r3, [r7, #8]
 8003d5a:	b2da      	uxtb	r2, r3
 8003d5c:	68fb      	ldr	r3, [r7, #12]
 8003d5e:	681b      	ldr	r3, [r3, #0]
 8003d60:	611a      	str	r2, [r3, #16]
 8003d62:	e021      	b.n	8003da8 <I2C_RequestMemoryWrite+0x11c>
  }
  /* If Memory address size is 16Bit */
  else
  {
    /* Send MSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8003d64:	893b      	ldrh	r3, [r7, #8]
 8003d66:	0a1b      	lsrs	r3, r3, #8
 8003d68:	b29b      	uxth	r3, r3
 8003d6a:	b2da      	uxtb	r2, r3
 8003d6c:	68fb      	ldr	r3, [r7, #12]
 8003d6e:	681b      	ldr	r3, [r3, #0]
 8003d70:	611a      	str	r2, [r3, #16]

    /* Wait until TXE flag is set */
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003d72:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003d74:	6a39      	ldr	r1, [r7, #32]
 8003d76:	68f8      	ldr	r0, [r7, #12]
 8003d78:	f000 f9dc 	bl	8004134 <I2C_WaitOnTXEFlagUntilTimeout>
 8003d7c:	4603      	mov	r3, r0
 8003d7e:	2b00      	cmp	r3, #0
 8003d80:	d00d      	beq.n	8003d9e <I2C_RequestMemoryWrite+0x112>
    {
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8003d82:	68fb      	ldr	r3, [r7, #12]
 8003d84:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003d86:	2b04      	cmp	r3, #4
 8003d88:	d107      	bne.n	8003d9a <I2C_RequestMemoryWrite+0x10e>
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003d8a:	68fb      	ldr	r3, [r7, #12]
 8003d8c:	681b      	ldr	r3, [r3, #0]
 8003d8e:	681a      	ldr	r2, [r3, #0]
 8003d90:	68fb      	ldr	r3, [r7, #12]
 8003d92:	681b      	ldr	r3, [r3, #0]
 8003d94:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003d98:	601a      	str	r2, [r3, #0]
      }
      return HAL_ERROR;
 8003d9a:	2301      	movs	r3, #1
 8003d9c:	e005      	b.n	8003daa <I2C_RequestMemoryWrite+0x11e>
    }

    /* Send LSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8003d9e:	893b      	ldrh	r3, [r7, #8]
 8003da0:	b2da      	uxtb	r2, r3
 8003da2:	68fb      	ldr	r3, [r7, #12]
 8003da4:	681b      	ldr	r3, [r3, #0]
 8003da6:	611a      	str	r2, [r3, #16]
  }

  return HAL_OK;
 8003da8:	2300      	movs	r3, #0
}
 8003daa:	4618      	mov	r0, r3
 8003dac:	3718      	adds	r7, #24
 8003dae:	46bd      	mov	sp, r7
 8003db0:	bd80      	pop	{r7, pc}
 8003db2:	bf00      	nop
 8003db4:	00010002 	.word	0x00010002

08003db8 <I2C_RequestMemoryRead>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 8003db8:	b580      	push	{r7, lr}
 8003dba:	b088      	sub	sp, #32
 8003dbc:	af02      	add	r7, sp, #8
 8003dbe:	60f8      	str	r0, [r7, #12]
 8003dc0:	4608      	mov	r0, r1
 8003dc2:	4611      	mov	r1, r2
 8003dc4:	461a      	mov	r2, r3
 8003dc6:	4603      	mov	r3, r0
 8003dc8:	817b      	strh	r3, [r7, #10]
 8003dca:	460b      	mov	r3, r1
 8003dcc:	813b      	strh	r3, [r7, #8]
 8003dce:	4613      	mov	r3, r2
 8003dd0:	80fb      	strh	r3, [r7, #6]
  /* Enable Acknowledge */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8003dd2:	68fb      	ldr	r3, [r7, #12]
 8003dd4:	681b      	ldr	r3, [r3, #0]
 8003dd6:	681a      	ldr	r2, [r3, #0]
 8003dd8:	68fb      	ldr	r3, [r7, #12]
 8003dda:	681b      	ldr	r3, [r3, #0]
 8003ddc:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8003de0:	601a      	str	r2, [r3, #0]

  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003de2:	68fb      	ldr	r3, [r7, #12]
 8003de4:	681b      	ldr	r3, [r3, #0]
 8003de6:	681a      	ldr	r2, [r3, #0]
 8003de8:	68fb      	ldr	r3, [r7, #12]
 8003dea:	681b      	ldr	r3, [r3, #0]
 8003dec:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003df0:	601a      	str	r2, [r3, #0]

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003df2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003df4:	9300      	str	r3, [sp, #0]
 8003df6:	6a3b      	ldr	r3, [r7, #32]
 8003df8:	2200      	movs	r2, #0
 8003dfa:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8003dfe:	68f8      	ldr	r0, [r7, #12]
 8003e00:	f000 f8c2 	bl	8003f88 <I2C_WaitOnFlagUntilTimeout>
 8003e04:	4603      	mov	r3, r0
 8003e06:	2b00      	cmp	r3, #0
 8003e08:	d00d      	beq.n	8003e26 <I2C_RequestMemoryRead+0x6e>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8003e0a:	68fb      	ldr	r3, [r7, #12]
 8003e0c:	681b      	ldr	r3, [r3, #0]
 8003e0e:	681b      	ldr	r3, [r3, #0]
 8003e10:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003e14:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8003e18:	d103      	bne.n	8003e22 <I2C_RequestMemoryRead+0x6a>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8003e1a:	68fb      	ldr	r3, [r7, #12]
 8003e1c:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003e20:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8003e22:	2303      	movs	r3, #3
 8003e24:	e0aa      	b.n	8003f7c <I2C_RequestMemoryRead+0x1c4>
  }

  /* Send slave address */
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8003e26:	897b      	ldrh	r3, [r7, #10]
 8003e28:	b2db      	uxtb	r3, r3
 8003e2a:	461a      	mov	r2, r3
 8003e2c:	68fb      	ldr	r3, [r7, #12]
 8003e2e:	681b      	ldr	r3, [r3, #0]
 8003e30:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8003e34:	611a      	str	r2, [r3, #16]

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8003e36:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003e38:	6a3a      	ldr	r2, [r7, #32]
 8003e3a:	4952      	ldr	r1, [pc, #328]	; (8003f84 <I2C_RequestMemoryRead+0x1cc>)
 8003e3c:	68f8      	ldr	r0, [r7, #12]
 8003e3e:	f000 f8fa 	bl	8004036 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003e42:	4603      	mov	r3, r0
 8003e44:	2b00      	cmp	r3, #0
 8003e46:	d001      	beq.n	8003e4c <I2C_RequestMemoryRead+0x94>
  {
    return HAL_ERROR;
 8003e48:	2301      	movs	r3, #1
 8003e4a:	e097      	b.n	8003f7c <I2C_RequestMemoryRead+0x1c4>
  }

  /* Clear ADDR flag */
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003e4c:	2300      	movs	r3, #0
 8003e4e:	617b      	str	r3, [r7, #20]
 8003e50:	68fb      	ldr	r3, [r7, #12]
 8003e52:	681b      	ldr	r3, [r3, #0]
 8003e54:	695b      	ldr	r3, [r3, #20]
 8003e56:	617b      	str	r3, [r7, #20]
 8003e58:	68fb      	ldr	r3, [r7, #12]
 8003e5a:	681b      	ldr	r3, [r3, #0]
 8003e5c:	699b      	ldr	r3, [r3, #24]
 8003e5e:	617b      	str	r3, [r7, #20]
 8003e60:	697b      	ldr	r3, [r7, #20]

  /* Wait until TXE flag is set */
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003e62:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003e64:	6a39      	ldr	r1, [r7, #32]
 8003e66:	68f8      	ldr	r0, [r7, #12]
 8003e68:	f000 f964 	bl	8004134 <I2C_WaitOnTXEFlagUntilTimeout>
 8003e6c:	4603      	mov	r3, r0
 8003e6e:	2b00      	cmp	r3, #0
 8003e70:	d00d      	beq.n	8003e8e <I2C_RequestMemoryRead+0xd6>
  {
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8003e72:	68fb      	ldr	r3, [r7, #12]
 8003e74:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003e76:	2b04      	cmp	r3, #4
 8003e78:	d107      	bne.n	8003e8a <I2C_RequestMemoryRead+0xd2>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003e7a:	68fb      	ldr	r3, [r7, #12]
 8003e7c:	681b      	ldr	r3, [r3, #0]
 8003e7e:	681a      	ldr	r2, [r3, #0]
 8003e80:	68fb      	ldr	r3, [r7, #12]
 8003e82:	681b      	ldr	r3, [r3, #0]
 8003e84:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003e88:	601a      	str	r2, [r3, #0]
    }
    return HAL_ERROR;
 8003e8a:	2301      	movs	r3, #1
 8003e8c:	e076      	b.n	8003f7c <I2C_RequestMemoryRead+0x1c4>
  }

  /* If Memory address size is 8Bit */
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8003e8e:	88fb      	ldrh	r3, [r7, #6]
 8003e90:	2b01      	cmp	r3, #1
 8003e92:	d105      	bne.n	8003ea0 <I2C_RequestMemoryRead+0xe8>
  {
    /* Send Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8003e94:	893b      	ldrh	r3, [r7, #8]
 8003e96:	b2da      	uxtb	r2, r3
 8003e98:	68fb      	ldr	r3, [r7, #12]
 8003e9a:	681b      	ldr	r3, [r3, #0]
 8003e9c:	611a      	str	r2, [r3, #16]
 8003e9e:	e021      	b.n	8003ee4 <I2C_RequestMemoryRead+0x12c>
  }
  /* If Memory address size is 16Bit */
  else
  {
    /* Send MSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8003ea0:	893b      	ldrh	r3, [r7, #8]
 8003ea2:	0a1b      	lsrs	r3, r3, #8
 8003ea4:	b29b      	uxth	r3, r3
 8003ea6:	b2da      	uxtb	r2, r3
 8003ea8:	68fb      	ldr	r3, [r7, #12]
 8003eaa:	681b      	ldr	r3, [r3, #0]
 8003eac:	611a      	str	r2, [r3, #16]

    /* Wait until TXE flag is set */
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003eae:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003eb0:	6a39      	ldr	r1, [r7, #32]
 8003eb2:	68f8      	ldr	r0, [r7, #12]
 8003eb4:	f000 f93e 	bl	8004134 <I2C_WaitOnTXEFlagUntilTimeout>
 8003eb8:	4603      	mov	r3, r0
 8003eba:	2b00      	cmp	r3, #0
 8003ebc:	d00d      	beq.n	8003eda <I2C_RequestMemoryRead+0x122>
    {
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8003ebe:	68fb      	ldr	r3, [r7, #12]
 8003ec0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003ec2:	2b04      	cmp	r3, #4
 8003ec4:	d107      	bne.n	8003ed6 <I2C_RequestMemoryRead+0x11e>
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003ec6:	68fb      	ldr	r3, [r7, #12]
 8003ec8:	681b      	ldr	r3, [r3, #0]
 8003eca:	681a      	ldr	r2, [r3, #0]
 8003ecc:	68fb      	ldr	r3, [r7, #12]
 8003ece:	681b      	ldr	r3, [r3, #0]
 8003ed0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003ed4:	601a      	str	r2, [r3, #0]
      }
      return HAL_ERROR;
 8003ed6:	2301      	movs	r3, #1
 8003ed8:	e050      	b.n	8003f7c <I2C_RequestMemoryRead+0x1c4>
    }

    /* Send LSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8003eda:	893b      	ldrh	r3, [r7, #8]
 8003edc:	b2da      	uxtb	r2, r3
 8003ede:	68fb      	ldr	r3, [r7, #12]
 8003ee0:	681b      	ldr	r3, [r3, #0]
 8003ee2:	611a      	str	r2, [r3, #16]
  }

  /* Wait until TXE flag is set */
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003ee4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003ee6:	6a39      	ldr	r1, [r7, #32]
 8003ee8:	68f8      	ldr	r0, [r7, #12]
 8003eea:	f000 f923 	bl	8004134 <I2C_WaitOnTXEFlagUntilTimeout>
 8003eee:	4603      	mov	r3, r0
 8003ef0:	2b00      	cmp	r3, #0
 8003ef2:	d00d      	beq.n	8003f10 <I2C_RequestMemoryRead+0x158>
  {
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8003ef4:	68fb      	ldr	r3, [r7, #12]
 8003ef6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003ef8:	2b04      	cmp	r3, #4
 8003efa:	d107      	bne.n	8003f0c <I2C_RequestMemoryRead+0x154>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003efc:	68fb      	ldr	r3, [r7, #12]
 8003efe:	681b      	ldr	r3, [r3, #0]
 8003f00:	681a      	ldr	r2, [r3, #0]
 8003f02:	68fb      	ldr	r3, [r7, #12]
 8003f04:	681b      	ldr	r3, [r3, #0]
 8003f06:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003f0a:	601a      	str	r2, [r3, #0]
    }
    return HAL_ERROR;
 8003f0c:	2301      	movs	r3, #1
 8003f0e:	e035      	b.n	8003f7c <I2C_RequestMemoryRead+0x1c4>
  }

  /* Generate Restart */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003f10:	68fb      	ldr	r3, [r7, #12]
 8003f12:	681b      	ldr	r3, [r3, #0]
 8003f14:	681a      	ldr	r2, [r3, #0]
 8003f16:	68fb      	ldr	r3, [r7, #12]
 8003f18:	681b      	ldr	r3, [r3, #0]
 8003f1a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003f1e:	601a      	str	r2, [r3, #0]

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003f20:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003f22:	9300      	str	r3, [sp, #0]
 8003f24:	6a3b      	ldr	r3, [r7, #32]
 8003f26:	2200      	movs	r2, #0
 8003f28:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8003f2c:	68f8      	ldr	r0, [r7, #12]
 8003f2e:	f000 f82b 	bl	8003f88 <I2C_WaitOnFlagUntilTimeout>
 8003f32:	4603      	mov	r3, r0
 8003f34:	2b00      	cmp	r3, #0
 8003f36:	d00d      	beq.n	8003f54 <I2C_RequestMemoryRead+0x19c>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8003f38:	68fb      	ldr	r3, [r7, #12]
 8003f3a:	681b      	ldr	r3, [r3, #0]
 8003f3c:	681b      	ldr	r3, [r3, #0]
 8003f3e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003f42:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8003f46:	d103      	bne.n	8003f50 <I2C_RequestMemoryRead+0x198>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8003f48:	68fb      	ldr	r3, [r7, #12]
 8003f4a:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003f4e:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8003f50:	2303      	movs	r3, #3
 8003f52:	e013      	b.n	8003f7c <I2C_RequestMemoryRead+0x1c4>
  }

  /* Send slave address */
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8003f54:	897b      	ldrh	r3, [r7, #10]
 8003f56:	b2db      	uxtb	r3, r3
 8003f58:	f043 0301 	orr.w	r3, r3, #1
 8003f5c:	b2da      	uxtb	r2, r3
 8003f5e:	68fb      	ldr	r3, [r7, #12]
 8003f60:	681b      	ldr	r3, [r3, #0]
 8003f62:	611a      	str	r2, [r3, #16]

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8003f64:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003f66:	6a3a      	ldr	r2, [r7, #32]
 8003f68:	4906      	ldr	r1, [pc, #24]	; (8003f84 <I2C_RequestMemoryRead+0x1cc>)
 8003f6a:	68f8      	ldr	r0, [r7, #12]
 8003f6c:	f000 f863 	bl	8004036 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003f70:	4603      	mov	r3, r0
 8003f72:	2b00      	cmp	r3, #0
 8003f74:	d001      	beq.n	8003f7a <I2C_RequestMemoryRead+0x1c2>
  {
    return HAL_ERROR;
 8003f76:	2301      	movs	r3, #1
 8003f78:	e000      	b.n	8003f7c <I2C_RequestMemoryRead+0x1c4>
  }

  return HAL_OK;
 8003f7a:	2300      	movs	r3, #0
}
 8003f7c:	4618      	mov	r0, r3
 8003f7e:	3718      	adds	r7, #24
 8003f80:	46bd      	mov	sp, r7
 8003f82:	bd80      	pop	{r7, pc}
 8003f84:	00010002 	.word	0x00010002

08003f88 <I2C_WaitOnFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
{
 8003f88:	b580      	push	{r7, lr}
 8003f8a:	b084      	sub	sp, #16
 8003f8c:	af00      	add	r7, sp, #0
 8003f8e:	60f8      	str	r0, [r7, #12]
 8003f90:	60b9      	str	r1, [r7, #8]
 8003f92:	603b      	str	r3, [r7, #0]
 8003f94:	4613      	mov	r3, r2
 8003f96:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8003f98:	e025      	b.n	8003fe6 <I2C_WaitOnFlagUntilTimeout+0x5e>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8003f9a:	683b      	ldr	r3, [r7, #0]
 8003f9c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003fa0:	d021      	beq.n	8003fe6 <I2C_WaitOnFlagUntilTimeout+0x5e>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003fa2:	f7fe fbe5 	bl	8002770 <HAL_GetTick>
 8003fa6:	4602      	mov	r2, r0
 8003fa8:	69bb      	ldr	r3, [r7, #24]
 8003faa:	1ad3      	subs	r3, r2, r3
 8003fac:	683a      	ldr	r2, [r7, #0]
 8003fae:	429a      	cmp	r2, r3
 8003fb0:	d302      	bcc.n	8003fb8 <I2C_WaitOnFlagUntilTimeout+0x30>
 8003fb2:	683b      	ldr	r3, [r7, #0]
 8003fb4:	2b00      	cmp	r3, #0
 8003fb6:	d116      	bne.n	8003fe6 <I2C_WaitOnFlagUntilTimeout+0x5e>
      {
        hi2c->PreviousState     = I2C_STATE_NONE;
 8003fb8:	68fb      	ldr	r3, [r7, #12]
 8003fba:	2200      	movs	r2, #0
 8003fbc:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8003fbe:	68fb      	ldr	r3, [r7, #12]
 8003fc0:	2220      	movs	r2, #32
 8003fc2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8003fc6:	68fb      	ldr	r3, [r7, #12]
 8003fc8:	2200      	movs	r2, #0
 8003fca:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8003fce:	68fb      	ldr	r3, [r7, #12]
 8003fd0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003fd2:	f043 0220 	orr.w	r2, r3, #32
 8003fd6:	68fb      	ldr	r3, [r7, #12]
 8003fd8:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8003fda:	68fb      	ldr	r3, [r7, #12]
 8003fdc:	2200      	movs	r2, #0
 8003fde:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 8003fe2:	2301      	movs	r3, #1
 8003fe4:	e023      	b.n	800402e <I2C_WaitOnFlagUntilTimeout+0xa6>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8003fe6:	68bb      	ldr	r3, [r7, #8]
 8003fe8:	0c1b      	lsrs	r3, r3, #16
 8003fea:	b2db      	uxtb	r3, r3
 8003fec:	2b01      	cmp	r3, #1
 8003fee:	d10d      	bne.n	800400c <I2C_WaitOnFlagUntilTimeout+0x84>
 8003ff0:	68fb      	ldr	r3, [r7, #12]
 8003ff2:	681b      	ldr	r3, [r3, #0]
 8003ff4:	695b      	ldr	r3, [r3, #20]
 8003ff6:	43da      	mvns	r2, r3
 8003ff8:	68bb      	ldr	r3, [r7, #8]
 8003ffa:	4013      	ands	r3, r2
 8003ffc:	b29b      	uxth	r3, r3
 8003ffe:	2b00      	cmp	r3, #0
 8004000:	bf0c      	ite	eq
 8004002:	2301      	moveq	r3, #1
 8004004:	2300      	movne	r3, #0
 8004006:	b2db      	uxtb	r3, r3
 8004008:	461a      	mov	r2, r3
 800400a:	e00c      	b.n	8004026 <I2C_WaitOnFlagUntilTimeout+0x9e>
 800400c:	68fb      	ldr	r3, [r7, #12]
 800400e:	681b      	ldr	r3, [r3, #0]
 8004010:	699b      	ldr	r3, [r3, #24]
 8004012:	43da      	mvns	r2, r3
 8004014:	68bb      	ldr	r3, [r7, #8]
 8004016:	4013      	ands	r3, r2
 8004018:	b29b      	uxth	r3, r3
 800401a:	2b00      	cmp	r3, #0
 800401c:	bf0c      	ite	eq
 800401e:	2301      	moveq	r3, #1
 8004020:	2300      	movne	r3, #0
 8004022:	b2db      	uxtb	r3, r3
 8004024:	461a      	mov	r2, r3
 8004026:	79fb      	ldrb	r3, [r7, #7]
 8004028:	429a      	cmp	r2, r3
 800402a:	d0b6      	beq.n	8003f9a <I2C_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 800402c:	2300      	movs	r3, #0
}
 800402e:	4618      	mov	r0, r3
 8004030:	3710      	adds	r7, #16
 8004032:	46bd      	mov	sp, r7
 8004034:	bd80      	pop	{r7, pc}

08004036 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
{
 8004036:	b580      	push	{r7, lr}
 8004038:	b084      	sub	sp, #16
 800403a:	af00      	add	r7, sp, #0
 800403c:	60f8      	str	r0, [r7, #12]
 800403e:	60b9      	str	r1, [r7, #8]
 8004040:	607a      	str	r2, [r7, #4]
 8004042:	603b      	str	r3, [r7, #0]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004044:	e051      	b.n	80040ea <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004046:	68fb      	ldr	r3, [r7, #12]
 8004048:	681b      	ldr	r3, [r3, #0]
 800404a:	695b      	ldr	r3, [r3, #20]
 800404c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004050:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004054:	d123      	bne.n	800409e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004056:	68fb      	ldr	r3, [r7, #12]
 8004058:	681b      	ldr	r3, [r3, #0]
 800405a:	681a      	ldr	r2, [r3, #0]
 800405c:	68fb      	ldr	r3, [r7, #12]
 800405e:	681b      	ldr	r3, [r3, #0]
 8004060:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004064:	601a      	str	r2, [r3, #0]

      /* Clear AF Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004066:	68fb      	ldr	r3, [r7, #12]
 8004068:	681b      	ldr	r3, [r3, #0]
 800406a:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 800406e:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 8004070:	68fb      	ldr	r3, [r7, #12]
 8004072:	2200      	movs	r2, #0
 8004074:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004076:	68fb      	ldr	r3, [r7, #12]
 8004078:	2220      	movs	r2, #32
 800407a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800407e:	68fb      	ldr	r3, [r7, #12]
 8004080:	2200      	movs	r2, #0
 8004082:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004086:	68fb      	ldr	r3, [r7, #12]
 8004088:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800408a:	f043 0204 	orr.w	r2, r3, #4
 800408e:	68fb      	ldr	r3, [r7, #12]
 8004090:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8004092:	68fb      	ldr	r3, [r7, #12]
 8004094:	2200      	movs	r2, #0
 8004096:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 800409a:	2301      	movs	r3, #1
 800409c:	e046      	b.n	800412c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800409e:	687b      	ldr	r3, [r7, #4]
 80040a0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80040a4:	d021      	beq.n	80040ea <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80040a6:	f7fe fb63 	bl	8002770 <HAL_GetTick>
 80040aa:	4602      	mov	r2, r0
 80040ac:	683b      	ldr	r3, [r7, #0]
 80040ae:	1ad3      	subs	r3, r2, r3
 80040b0:	687a      	ldr	r2, [r7, #4]
 80040b2:	429a      	cmp	r2, r3
 80040b4:	d302      	bcc.n	80040bc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 80040b6:	687b      	ldr	r3, [r7, #4]
 80040b8:	2b00      	cmp	r3, #0
 80040ba:	d116      	bne.n	80040ea <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 80040bc:	68fb      	ldr	r3, [r7, #12]
 80040be:	2200      	movs	r2, #0
 80040c0:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80040c2:	68fb      	ldr	r3, [r7, #12]
 80040c4:	2220      	movs	r2, #32
 80040c6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80040ca:	68fb      	ldr	r3, [r7, #12]
 80040cc:	2200      	movs	r2, #0
 80040ce:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80040d2:	68fb      	ldr	r3, [r7, #12]
 80040d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80040d6:	f043 0220 	orr.w	r2, r3, #32
 80040da:	68fb      	ldr	r3, [r7, #12]
 80040dc:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 80040de:	68fb      	ldr	r3, [r7, #12]
 80040e0:	2200      	movs	r2, #0
 80040e2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 80040e6:	2301      	movs	r3, #1
 80040e8:	e020      	b.n	800412c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80040ea:	68bb      	ldr	r3, [r7, #8]
 80040ec:	0c1b      	lsrs	r3, r3, #16
 80040ee:	b2db      	uxtb	r3, r3
 80040f0:	2b01      	cmp	r3, #1
 80040f2:	d10c      	bne.n	800410e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 80040f4:	68fb      	ldr	r3, [r7, #12]
 80040f6:	681b      	ldr	r3, [r3, #0]
 80040f8:	695b      	ldr	r3, [r3, #20]
 80040fa:	43da      	mvns	r2, r3
 80040fc:	68bb      	ldr	r3, [r7, #8]
 80040fe:	4013      	ands	r3, r2
 8004100:	b29b      	uxth	r3, r3
 8004102:	2b00      	cmp	r3, #0
 8004104:	bf14      	ite	ne
 8004106:	2301      	movne	r3, #1
 8004108:	2300      	moveq	r3, #0
 800410a:	b2db      	uxtb	r3, r3
 800410c:	e00b      	b.n	8004126 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 800410e:	68fb      	ldr	r3, [r7, #12]
 8004110:	681b      	ldr	r3, [r3, #0]
 8004112:	699b      	ldr	r3, [r3, #24]
 8004114:	43da      	mvns	r2, r3
 8004116:	68bb      	ldr	r3, [r7, #8]
 8004118:	4013      	ands	r3, r2
 800411a:	b29b      	uxth	r3, r3
 800411c:	2b00      	cmp	r3, #0
 800411e:	bf14      	ite	ne
 8004120:	2301      	movne	r3, #1
 8004122:	2300      	moveq	r3, #0
 8004124:	b2db      	uxtb	r3, r3
 8004126:	2b00      	cmp	r3, #0
 8004128:	d18d      	bne.n	8004046 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
      }
    }
  }
  return HAL_OK;
 800412a:	2300      	movs	r3, #0
}
 800412c:	4618      	mov	r0, r3
 800412e:	3710      	adds	r7, #16
 8004130:	46bd      	mov	sp, r7
 8004132:	bd80      	pop	{r7, pc}

08004134 <I2C_WaitOnTXEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8004134:	b580      	push	{r7, lr}
 8004136:	b084      	sub	sp, #16
 8004138:	af00      	add	r7, sp, #0
 800413a:	60f8      	str	r0, [r7, #12]
 800413c:	60b9      	str	r1, [r7, #8]
 800413e:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004140:	e02d      	b.n	800419e <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004142:	68f8      	ldr	r0, [r7, #12]
 8004144:	f000 f8ce 	bl	80042e4 <I2C_IsAcknowledgeFailed>
 8004148:	4603      	mov	r3, r0
 800414a:	2b00      	cmp	r3, #0
 800414c:	d001      	beq.n	8004152 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 800414e:	2301      	movs	r3, #1
 8004150:	e02d      	b.n	80041ae <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004152:	68bb      	ldr	r3, [r7, #8]
 8004154:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004158:	d021      	beq.n	800419e <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800415a:	f7fe fb09 	bl	8002770 <HAL_GetTick>
 800415e:	4602      	mov	r2, r0
 8004160:	687b      	ldr	r3, [r7, #4]
 8004162:	1ad3      	subs	r3, r2, r3
 8004164:	68ba      	ldr	r2, [r7, #8]
 8004166:	429a      	cmp	r2, r3
 8004168:	d302      	bcc.n	8004170 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 800416a:	68bb      	ldr	r3, [r7, #8]
 800416c:	2b00      	cmp	r3, #0
 800416e:	d116      	bne.n	800419e <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004170:	68fb      	ldr	r3, [r7, #12]
 8004172:	2200      	movs	r2, #0
 8004174:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004176:	68fb      	ldr	r3, [r7, #12]
 8004178:	2220      	movs	r2, #32
 800417a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800417e:	68fb      	ldr	r3, [r7, #12]
 8004180:	2200      	movs	r2, #0
 8004182:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004186:	68fb      	ldr	r3, [r7, #12]
 8004188:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800418a:	f043 0220 	orr.w	r2, r3, #32
 800418e:	68fb      	ldr	r3, [r7, #12]
 8004190:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8004192:	68fb      	ldr	r3, [r7, #12]
 8004194:	2200      	movs	r2, #0
 8004196:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 800419a:	2301      	movs	r3, #1
 800419c:	e007      	b.n	80041ae <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800419e:	68fb      	ldr	r3, [r7, #12]
 80041a0:	681b      	ldr	r3, [r3, #0]
 80041a2:	695b      	ldr	r3, [r3, #20]
 80041a4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80041a8:	2b80      	cmp	r3, #128	; 0x80
 80041aa:	d1ca      	bne.n	8004142 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 80041ac:	2300      	movs	r3, #0
}
 80041ae:	4618      	mov	r0, r3
 80041b0:	3710      	adds	r7, #16
 80041b2:	46bd      	mov	sp, r7
 80041b4:	bd80      	pop	{r7, pc}

080041b6 <I2C_WaitOnBTFFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnBTFFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 80041b6:	b580      	push	{r7, lr}
 80041b8:	b084      	sub	sp, #16
 80041ba:	af00      	add	r7, sp, #0
 80041bc:	60f8      	str	r0, [r7, #12]
 80041be:	60b9      	str	r1, [r7, #8]
 80041c0:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80041c2:	e02d      	b.n	8004220 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80041c4:	68f8      	ldr	r0, [r7, #12]
 80041c6:	f000 f88d 	bl	80042e4 <I2C_IsAcknowledgeFailed>
 80041ca:	4603      	mov	r3, r0
 80041cc:	2b00      	cmp	r3, #0
 80041ce:	d001      	beq.n	80041d4 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 80041d0:	2301      	movs	r3, #1
 80041d2:	e02d      	b.n	8004230 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80041d4:	68bb      	ldr	r3, [r7, #8]
 80041d6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80041da:	d021      	beq.n	8004220 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80041dc:	f7fe fac8 	bl	8002770 <HAL_GetTick>
 80041e0:	4602      	mov	r2, r0
 80041e2:	687b      	ldr	r3, [r7, #4]
 80041e4:	1ad3      	subs	r3, r2, r3
 80041e6:	68ba      	ldr	r2, [r7, #8]
 80041e8:	429a      	cmp	r2, r3
 80041ea:	d302      	bcc.n	80041f2 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 80041ec:	68bb      	ldr	r3, [r7, #8]
 80041ee:	2b00      	cmp	r3, #0
 80041f0:	d116      	bne.n	8004220 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 80041f2:	68fb      	ldr	r3, [r7, #12]
 80041f4:	2200      	movs	r2, #0
 80041f6:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80041f8:	68fb      	ldr	r3, [r7, #12]
 80041fa:	2220      	movs	r2, #32
 80041fc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004200:	68fb      	ldr	r3, [r7, #12]
 8004202:	2200      	movs	r2, #0
 8004204:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004208:	68fb      	ldr	r3, [r7, #12]
 800420a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800420c:	f043 0220 	orr.w	r2, r3, #32
 8004210:	68fb      	ldr	r3, [r7, #12]
 8004212:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8004214:	68fb      	ldr	r3, [r7, #12]
 8004216:	2200      	movs	r2, #0
 8004218:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 800421c:	2301      	movs	r3, #1
 800421e:	e007      	b.n	8004230 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004220:	68fb      	ldr	r3, [r7, #12]
 8004222:	681b      	ldr	r3, [r3, #0]
 8004224:	695b      	ldr	r3, [r3, #20]
 8004226:	f003 0304 	and.w	r3, r3, #4
 800422a:	2b04      	cmp	r3, #4
 800422c:	d1ca      	bne.n	80041c4 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 800422e:	2300      	movs	r3, #0
}
 8004230:	4618      	mov	r0, r3
 8004232:	3710      	adds	r7, #16
 8004234:	46bd      	mov	sp, r7
 8004236:	bd80      	pop	{r7, pc}

08004238 <I2C_WaitOnRXNEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8004238:	b580      	push	{r7, lr}
 800423a:	b084      	sub	sp, #16
 800423c:	af00      	add	r7, sp, #0
 800423e:	60f8      	str	r0, [r7, #12]
 8004240:	60b9      	str	r1, [r7, #8]
 8004242:	607a      	str	r2, [r7, #4]

  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8004244:	e042      	b.n	80042cc <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
  {
    /* Check if a STOPF is detected */
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8004246:	68fb      	ldr	r3, [r7, #12]
 8004248:	681b      	ldr	r3, [r3, #0]
 800424a:	695b      	ldr	r3, [r3, #20]
 800424c:	f003 0310 	and.w	r3, r3, #16
 8004250:	2b10      	cmp	r3, #16
 8004252:	d119      	bne.n	8004288 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004254:	68fb      	ldr	r3, [r7, #12]
 8004256:	681b      	ldr	r3, [r3, #0]
 8004258:	f06f 0210 	mvn.w	r2, #16
 800425c:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 800425e:	68fb      	ldr	r3, [r7, #12]
 8004260:	2200      	movs	r2, #0
 8004262:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004264:	68fb      	ldr	r3, [r7, #12]
 8004266:	2220      	movs	r2, #32
 8004268:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800426c:	68fb      	ldr	r3, [r7, #12]
 800426e:	2200      	movs	r2, #0
 8004270:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8004274:	68fb      	ldr	r3, [r7, #12]
 8004276:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004278:	68fb      	ldr	r3, [r7, #12]
 800427a:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 800427c:	68fb      	ldr	r3, [r7, #12]
 800427e:	2200      	movs	r2, #0
 8004280:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 8004284:	2301      	movs	r3, #1
 8004286:	e029      	b.n	80042dc <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
    }

    /* Check for the Timeout */
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004288:	f7fe fa72 	bl	8002770 <HAL_GetTick>
 800428c:	4602      	mov	r2, r0
 800428e:	687b      	ldr	r3, [r7, #4]
 8004290:	1ad3      	subs	r3, r2, r3
 8004292:	68ba      	ldr	r2, [r7, #8]
 8004294:	429a      	cmp	r2, r3
 8004296:	d302      	bcc.n	800429e <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8004298:	68bb      	ldr	r3, [r7, #8]
 800429a:	2b00      	cmp	r3, #0
 800429c:	d116      	bne.n	80042cc <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
    {
      hi2c->PreviousState       = I2C_STATE_NONE;
 800429e:	68fb      	ldr	r3, [r7, #12]
 80042a0:	2200      	movs	r2, #0
 80042a2:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80042a4:	68fb      	ldr	r3, [r7, #12]
 80042a6:	2220      	movs	r2, #32
 80042a8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80042ac:	68fb      	ldr	r3, [r7, #12]
 80042ae:	2200      	movs	r2, #0
 80042b0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80042b4:	68fb      	ldr	r3, [r7, #12]
 80042b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80042b8:	f043 0220 	orr.w	r2, r3, #32
 80042bc:	68fb      	ldr	r3, [r7, #12]
 80042be:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 80042c0:	68fb      	ldr	r3, [r7, #12]
 80042c2:	2200      	movs	r2, #0
 80042c4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 80042c8:	2301      	movs	r3, #1
 80042ca:	e007      	b.n	80042dc <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80042cc:	68fb      	ldr	r3, [r7, #12]
 80042ce:	681b      	ldr	r3, [r3, #0]
 80042d0:	695b      	ldr	r3, [r3, #20]
 80042d2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80042d6:	2b40      	cmp	r3, #64	; 0x40
 80042d8:	d1b5      	bne.n	8004246 <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
    }
  }
  return HAL_OK;
 80042da:	2300      	movs	r3, #0
}
 80042dc:	4618      	mov	r0, r3
 80042de:	3710      	adds	r7, #16
 80042e0:	46bd      	mov	sp, r7
 80042e2:	bd80      	pop	{r7, pc}

080042e4 <I2C_IsAcknowledgeFailed>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
 80042e4:	b480      	push	{r7}
 80042e6:	b083      	sub	sp, #12
 80042e8:	af00      	add	r7, sp, #0
 80042ea:	6078      	str	r0, [r7, #4]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80042ec:	687b      	ldr	r3, [r7, #4]
 80042ee:	681b      	ldr	r3, [r3, #0]
 80042f0:	695b      	ldr	r3, [r3, #20]
 80042f2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80042f6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80042fa:	d11b      	bne.n	8004334 <I2C_IsAcknowledgeFailed+0x50>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80042fc:	687b      	ldr	r3, [r7, #4]
 80042fe:	681b      	ldr	r3, [r3, #0]
 8004300:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8004304:	615a      	str	r2, [r3, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
 8004306:	687b      	ldr	r3, [r7, #4]
 8004308:	2200      	movs	r2, #0
 800430a:	631a      	str	r2, [r3, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800430c:	687b      	ldr	r3, [r7, #4]
 800430e:	2220      	movs	r2, #32
 8004310:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004314:	687b      	ldr	r3, [r7, #4]
 8004316:	2200      	movs	r2, #0
 8004318:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800431c:	687b      	ldr	r3, [r7, #4]
 800431e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004320:	f043 0204 	orr.w	r2, r3, #4
 8004324:	687b      	ldr	r3, [r7, #4]
 8004326:	641a      	str	r2, [r3, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004328:	687b      	ldr	r3, [r7, #4]
 800432a:	2200      	movs	r2, #0
 800432c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_ERROR;
 8004330:	2301      	movs	r3, #1
 8004332:	e000      	b.n	8004336 <I2C_IsAcknowledgeFailed+0x52>
  }
  return HAL_OK;
 8004334:	2300      	movs	r3, #0
}
 8004336:	4618      	mov	r0, r3
 8004338:	370c      	adds	r7, #12
 800433a:	46bd      	mov	sp, r7
 800433c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004340:	4770      	bx	lr

08004342 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8004342:	b480      	push	{r7}
 8004344:	b083      	sub	sp, #12
 8004346:	af00      	add	r7, sp, #0
 8004348:	6078      	str	r0, [r7, #4]
 800434a:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800434c:	687b      	ldr	r3, [r7, #4]
 800434e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004352:	b2db      	uxtb	r3, r3
 8004354:	2b20      	cmp	r3, #32
 8004356:	d129      	bne.n	80043ac <HAL_I2CEx_ConfigAnalogFilter+0x6a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8004358:	687b      	ldr	r3, [r7, #4]
 800435a:	2224      	movs	r2, #36	; 0x24
 800435c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004360:	687b      	ldr	r3, [r7, #4]
 8004362:	681b      	ldr	r3, [r3, #0]
 8004364:	681a      	ldr	r2, [r3, #0]
 8004366:	687b      	ldr	r3, [r7, #4]
 8004368:	681b      	ldr	r3, [r3, #0]
 800436a:	f022 0201 	bic.w	r2, r2, #1
 800436e:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8004370:	687b      	ldr	r3, [r7, #4]
 8004372:	681b      	ldr	r3, [r3, #0]
 8004374:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004376:	687b      	ldr	r3, [r7, #4]
 8004378:	681b      	ldr	r3, [r3, #0]
 800437a:	f022 0210 	bic.w	r2, r2, #16
 800437e:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8004380:	687b      	ldr	r3, [r7, #4]
 8004382:	681b      	ldr	r3, [r3, #0]
 8004384:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8004386:	687b      	ldr	r3, [r7, #4]
 8004388:	681b      	ldr	r3, [r3, #0]
 800438a:	683a      	ldr	r2, [r7, #0]
 800438c:	430a      	orrs	r2, r1
 800438e:	625a      	str	r2, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8004390:	687b      	ldr	r3, [r7, #4]
 8004392:	681b      	ldr	r3, [r3, #0]
 8004394:	681a      	ldr	r2, [r3, #0]
 8004396:	687b      	ldr	r3, [r7, #4]
 8004398:	681b      	ldr	r3, [r3, #0]
 800439a:	f042 0201 	orr.w	r2, r2, #1
 800439e:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80043a0:	687b      	ldr	r3, [r7, #4]
 80043a2:	2220      	movs	r2, #32
 80043a4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    return HAL_OK;
 80043a8:	2300      	movs	r3, #0
 80043aa:	e000      	b.n	80043ae <HAL_I2CEx_ConfigAnalogFilter+0x6c>
  }
  else
  {
    return HAL_BUSY;
 80043ac:	2302      	movs	r3, #2
  }
}
 80043ae:	4618      	mov	r0, r3
 80043b0:	370c      	adds	r7, #12
 80043b2:	46bd      	mov	sp, r7
 80043b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043b8:	4770      	bx	lr

080043ba <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80043ba:	b480      	push	{r7}
 80043bc:	b085      	sub	sp, #20
 80043be:	af00      	add	r7, sp, #0
 80043c0:	6078      	str	r0, [r7, #4]
 80043c2:	6039      	str	r1, [r7, #0]
  uint16_t tmpreg = 0;
 80043c4:	2300      	movs	r3, #0
 80043c6:	81fb      	strh	r3, [r7, #14]

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80043c8:	687b      	ldr	r3, [r7, #4]
 80043ca:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80043ce:	b2db      	uxtb	r3, r3
 80043d0:	2b20      	cmp	r3, #32
 80043d2:	d12a      	bne.n	800442a <HAL_I2CEx_ConfigDigitalFilter+0x70>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 80043d4:	687b      	ldr	r3, [r7, #4]
 80043d6:	2224      	movs	r2, #36	; 0x24
 80043d8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80043dc:	687b      	ldr	r3, [r7, #4]
 80043de:	681b      	ldr	r3, [r3, #0]
 80043e0:	681a      	ldr	r2, [r3, #0]
 80043e2:	687b      	ldr	r3, [r7, #4]
 80043e4:	681b      	ldr	r3, [r3, #0]
 80043e6:	f022 0201 	bic.w	r2, r2, #1
 80043ea:	601a      	str	r2, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 80043ec:	687b      	ldr	r3, [r7, #4]
 80043ee:	681b      	ldr	r3, [r3, #0]
 80043f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80043f2:	81fb      	strh	r3, [r7, #14]

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 80043f4:	89fb      	ldrh	r3, [r7, #14]
 80043f6:	f023 030f 	bic.w	r3, r3, #15
 80043fa:	81fb      	strh	r3, [r7, #14]

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 80043fc:	683b      	ldr	r3, [r7, #0]
 80043fe:	b29a      	uxth	r2, r3
 8004400:	89fb      	ldrh	r3, [r7, #14]
 8004402:	4313      	orrs	r3, r2
 8004404:	81fb      	strh	r3, [r7, #14]

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8004406:	687b      	ldr	r3, [r7, #4]
 8004408:	681b      	ldr	r3, [r3, #0]
 800440a:	89fa      	ldrh	r2, [r7, #14]
 800440c:	625a      	str	r2, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 800440e:	687b      	ldr	r3, [r7, #4]
 8004410:	681b      	ldr	r3, [r3, #0]
 8004412:	681a      	ldr	r2, [r3, #0]
 8004414:	687b      	ldr	r3, [r7, #4]
 8004416:	681b      	ldr	r3, [r3, #0]
 8004418:	f042 0201 	orr.w	r2, r2, #1
 800441c:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800441e:	687b      	ldr	r3, [r7, #4]
 8004420:	2220      	movs	r2, #32
 8004422:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    return HAL_OK;
 8004426:	2300      	movs	r3, #0
 8004428:	e000      	b.n	800442c <HAL_I2CEx_ConfigDigitalFilter+0x72>
  }
  else
  {
    return HAL_BUSY;
 800442a:	2302      	movs	r3, #2
  }
}
 800442c:	4618      	mov	r0, r3
 800442e:	3714      	adds	r7, #20
 8004430:	46bd      	mov	sp, r7
 8004432:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004436:	4770      	bx	lr

08004438 <HAL_LTDC_Init>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_Init(LTDC_HandleTypeDef *hltdc)
{
 8004438:	b580      	push	{r7, lr}
 800443a:	b084      	sub	sp, #16
 800443c:	af00      	add	r7, sp, #0
 800443e:	6078      	str	r0, [r7, #4]
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 8004440:	687b      	ldr	r3, [r7, #4]
 8004442:	2b00      	cmp	r3, #0
 8004444:	d101      	bne.n	800444a <HAL_LTDC_Init+0x12>
  {
    return HAL_ERROR;
 8004446:	2301      	movs	r3, #1
 8004448:	e0bf      	b.n	80045ca <HAL_LTDC_Init+0x192>
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800444a:	687b      	ldr	r3, [r7, #4]
 800444c:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 8004450:	b2db      	uxtb	r3, r3
 8004452:	2b00      	cmp	r3, #0
 8004454:	d106      	bne.n	8004464 <HAL_LTDC_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hltdc->Lock = HAL_UNLOCKED;
 8004456:	687b      	ldr	r3, [r7, #4]
 8004458:	2200      	movs	r2, #0
 800445a:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
    /* Init the low level hardware */
    HAL_LTDC_MspInit(hltdc);
 800445e:	6878      	ldr	r0, [r7, #4]
 8004460:	f7fc fd74 	bl	8000f4c <HAL_LTDC_MspInit>
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004464:	687b      	ldr	r3, [r7, #4]
 8004466:	2202      	movs	r2, #2
 8004468:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800446c:	687b      	ldr	r3, [r7, #4]
 800446e:	681b      	ldr	r3, [r3, #0]
 8004470:	699a      	ldr	r2, [r3, #24]
 8004472:	687b      	ldr	r3, [r7, #4]
 8004474:	681b      	ldr	r3, [r3, #0]
 8004476:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800447a:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800447c:	687b      	ldr	r3, [r7, #4]
 800447e:	681b      	ldr	r3, [r3, #0]
 8004480:	6999      	ldr	r1, [r3, #24]
 8004482:	687b      	ldr	r3, [r7, #4]
 8004484:	685a      	ldr	r2, [r3, #4]
 8004486:	687b      	ldr	r3, [r7, #4]
 8004488:	689b      	ldr	r3, [r3, #8]
 800448a:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800448c:	687b      	ldr	r3, [r7, #4]
 800448e:	68db      	ldr	r3, [r3, #12]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004490:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8004492:	687b      	ldr	r3, [r7, #4]
 8004494:	691b      	ldr	r3, [r3, #16]
 8004496:	431a      	orrs	r2, r3
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004498:	687b      	ldr	r3, [r7, #4]
 800449a:	681b      	ldr	r3, [r3, #0]
 800449c:	430a      	orrs	r2, r1
 800449e:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80044a0:	687b      	ldr	r3, [r7, #4]
 80044a2:	681b      	ldr	r3, [r3, #0]
 80044a4:	6899      	ldr	r1, [r3, #8]
 80044a6:	687b      	ldr	r3, [r7, #4]
 80044a8:	681a      	ldr	r2, [r3, #0]
 80044aa:	4b4a      	ldr	r3, [pc, #296]	; (80045d4 <HAL_LTDC_Init+0x19c>)
 80044ac:	400b      	ands	r3, r1
 80044ae:	6093      	str	r3, [r2, #8]
  tmp = (hltdc->Init.HorizontalSync << 16U);
 80044b0:	687b      	ldr	r3, [r7, #4]
 80044b2:	695b      	ldr	r3, [r3, #20]
 80044b4:	041b      	lsls	r3, r3, #16
 80044b6:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 80044b8:	687b      	ldr	r3, [r7, #4]
 80044ba:	681b      	ldr	r3, [r3, #0]
 80044bc:	6899      	ldr	r1, [r3, #8]
 80044be:	687b      	ldr	r3, [r7, #4]
 80044c0:	699a      	ldr	r2, [r3, #24]
 80044c2:	68fb      	ldr	r3, [r7, #12]
 80044c4:	431a      	orrs	r2, r3
 80044c6:	687b      	ldr	r3, [r7, #4]
 80044c8:	681b      	ldr	r3, [r3, #0]
 80044ca:	430a      	orrs	r2, r1
 80044cc:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80044ce:	687b      	ldr	r3, [r7, #4]
 80044d0:	681b      	ldr	r3, [r3, #0]
 80044d2:	68d9      	ldr	r1, [r3, #12]
 80044d4:	687b      	ldr	r3, [r7, #4]
 80044d6:	681a      	ldr	r2, [r3, #0]
 80044d8:	4b3e      	ldr	r3, [pc, #248]	; (80045d4 <HAL_LTDC_Init+0x19c>)
 80044da:	400b      	ands	r3, r1
 80044dc:	60d3      	str	r3, [r2, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 80044de:	687b      	ldr	r3, [r7, #4]
 80044e0:	69db      	ldr	r3, [r3, #28]
 80044e2:	041b      	lsls	r3, r3, #16
 80044e4:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80044e6:	687b      	ldr	r3, [r7, #4]
 80044e8:	681b      	ldr	r3, [r3, #0]
 80044ea:	68d9      	ldr	r1, [r3, #12]
 80044ec:	687b      	ldr	r3, [r7, #4]
 80044ee:	6a1a      	ldr	r2, [r3, #32]
 80044f0:	68fb      	ldr	r3, [r7, #12]
 80044f2:	431a      	orrs	r2, r3
 80044f4:	687b      	ldr	r3, [r7, #4]
 80044f6:	681b      	ldr	r3, [r3, #0]
 80044f8:	430a      	orrs	r2, r1
 80044fa:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80044fc:	687b      	ldr	r3, [r7, #4]
 80044fe:	681b      	ldr	r3, [r3, #0]
 8004500:	6919      	ldr	r1, [r3, #16]
 8004502:	687b      	ldr	r3, [r7, #4]
 8004504:	681a      	ldr	r2, [r3, #0]
 8004506:	4b33      	ldr	r3, [pc, #204]	; (80045d4 <HAL_LTDC_Init+0x19c>)
 8004508:	400b      	ands	r3, r1
 800450a:	6113      	str	r3, [r2, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800450c:	687b      	ldr	r3, [r7, #4]
 800450e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004510:	041b      	lsls	r3, r3, #16
 8004512:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8004514:	687b      	ldr	r3, [r7, #4]
 8004516:	681b      	ldr	r3, [r3, #0]
 8004518:	6919      	ldr	r1, [r3, #16]
 800451a:	687b      	ldr	r3, [r7, #4]
 800451c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800451e:	68fb      	ldr	r3, [r7, #12]
 8004520:	431a      	orrs	r2, r3
 8004522:	687b      	ldr	r3, [r7, #4]
 8004524:	681b      	ldr	r3, [r3, #0]
 8004526:	430a      	orrs	r2, r1
 8004528:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800452a:	687b      	ldr	r3, [r7, #4]
 800452c:	681b      	ldr	r3, [r3, #0]
 800452e:	6959      	ldr	r1, [r3, #20]
 8004530:	687b      	ldr	r3, [r7, #4]
 8004532:	681a      	ldr	r2, [r3, #0]
 8004534:	4b27      	ldr	r3, [pc, #156]	; (80045d4 <HAL_LTDC_Init+0x19c>)
 8004536:	400b      	ands	r3, r1
 8004538:	6153      	str	r3, [r2, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800453a:	687b      	ldr	r3, [r7, #4]
 800453c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800453e:	041b      	lsls	r3, r3, #16
 8004540:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8004542:	687b      	ldr	r3, [r7, #4]
 8004544:	681b      	ldr	r3, [r3, #0]
 8004546:	6959      	ldr	r1, [r3, #20]
 8004548:	687b      	ldr	r3, [r7, #4]
 800454a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800454c:	68fb      	ldr	r3, [r7, #12]
 800454e:	431a      	orrs	r2, r3
 8004550:	687b      	ldr	r3, [r7, #4]
 8004552:	681b      	ldr	r3, [r3, #0]
 8004554:	430a      	orrs	r2, r1
 8004556:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8004558:	687b      	ldr	r3, [r7, #4]
 800455a:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800455e:	021b      	lsls	r3, r3, #8
 8004560:	60fb      	str	r3, [r7, #12]
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8004562:	687b      	ldr	r3, [r7, #4]
 8004564:	f893 3036 	ldrb.w	r3, [r3, #54]	; 0x36
 8004568:	041b      	lsls	r3, r3, #16
 800456a:	60bb      	str	r3, [r7, #8]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800456c:	687b      	ldr	r3, [r7, #4]
 800456e:	681b      	ldr	r3, [r3, #0]
 8004570:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004572:	687b      	ldr	r3, [r7, #4]
 8004574:	681b      	ldr	r3, [r3, #0]
 8004576:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800457a:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800457c:	687b      	ldr	r3, [r7, #4]
 800457e:	681b      	ldr	r3, [r3, #0]
 8004580:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8004582:	68ba      	ldr	r2, [r7, #8]
 8004584:	68fb      	ldr	r3, [r7, #12]
 8004586:	4313      	orrs	r3, r2
 8004588:	687a      	ldr	r2, [r7, #4]
 800458a:	f892 2034 	ldrb.w	r2, [r2, #52]	; 0x34
 800458e:	431a      	orrs	r2, r3
 8004590:	687b      	ldr	r3, [r7, #4]
 8004592:	681b      	ldr	r3, [r3, #0]
 8004594:	430a      	orrs	r2, r1
 8004596:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8004598:	687b      	ldr	r3, [r7, #4]
 800459a:	681b      	ldr	r3, [r3, #0]
 800459c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800459e:	687b      	ldr	r3, [r7, #4]
 80045a0:	681b      	ldr	r3, [r3, #0]
 80045a2:	f042 0206 	orr.w	r2, r2, #6
 80045a6:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 80045a8:	687b      	ldr	r3, [r7, #4]
 80045aa:	681b      	ldr	r3, [r3, #0]
 80045ac:	699a      	ldr	r2, [r3, #24]
 80045ae:	687b      	ldr	r3, [r7, #4]
 80045b0:	681b      	ldr	r3, [r3, #0]
 80045b2:	f042 0201 	orr.w	r2, r2, #1
 80045b6:	619a      	str	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80045b8:	687b      	ldr	r3, [r7, #4]
 80045ba:	2200      	movs	r2, #0
 80045bc:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 80045c0:	687b      	ldr	r3, [r7, #4]
 80045c2:	2201      	movs	r2, #1
 80045c4:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  return HAL_OK;
 80045c8:	2300      	movs	r3, #0
}
 80045ca:	4618      	mov	r0, r3
 80045cc:	3710      	adds	r7, #16
 80045ce:	46bd      	mov	sp, r7
 80045d0:	bd80      	pop	{r7, pc}
 80045d2:	bf00      	nop
 80045d4:	f000f800 	.word	0xf000f800

080045d8 <HAL_LTDC_IRQHandler>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
 80045d8:	b580      	push	{r7, lr}
 80045da:	b084      	sub	sp, #16
 80045dc:	af00      	add	r7, sp, #0
 80045de:	6078      	str	r0, [r7, #4]
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80045e0:	687b      	ldr	r3, [r7, #4]
 80045e2:	681b      	ldr	r3, [r3, #0]
 80045e4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80045e6:	60fb      	str	r3, [r7, #12]
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80045e8:	687b      	ldr	r3, [r7, #4]
 80045ea:	681b      	ldr	r3, [r3, #0]
 80045ec:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80045ee:	60bb      	str	r3, [r7, #8]

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80045f0:	68fb      	ldr	r3, [r7, #12]
 80045f2:	f003 0304 	and.w	r3, r3, #4
 80045f6:	2b00      	cmp	r3, #0
 80045f8:	d023      	beq.n	8004642 <HAL_LTDC_IRQHandler+0x6a>
 80045fa:	68bb      	ldr	r3, [r7, #8]
 80045fc:	f003 0304 	and.w	r3, r3, #4
 8004600:	2b00      	cmp	r3, #0
 8004602:	d01e      	beq.n	8004642 <HAL_LTDC_IRQHandler+0x6a>
  {
    /* Disable the transfer Error interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8004604:	687b      	ldr	r3, [r7, #4]
 8004606:	681b      	ldr	r3, [r3, #0]
 8004608:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800460a:	687b      	ldr	r3, [r7, #4]
 800460c:	681b      	ldr	r3, [r3, #0]
 800460e:	f022 0204 	bic.w	r2, r2, #4
 8004612:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the transfer error flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8004614:	687b      	ldr	r3, [r7, #4]
 8004616:	681b      	ldr	r3, [r3, #0]
 8004618:	2204      	movs	r2, #4
 800461a:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800461c:	687b      	ldr	r3, [r7, #4]
 800461e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8004622:	f043 0201 	orr.w	r2, r3, #1
 8004626:	687b      	ldr	r3, [r7, #4]
 8004628:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800462c:	687b      	ldr	r3, [r7, #4]
 800462e:	2204      	movs	r2, #4
 8004630:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8004634:	687b      	ldr	r3, [r7, #4]
 8004636:	2200      	movs	r2, #0
 8004638:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 800463c:	6878      	ldr	r0, [r7, #4]
 800463e:	f000 f86f 	bl	8004720 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8004642:	68fb      	ldr	r3, [r7, #12]
 8004644:	f003 0302 	and.w	r3, r3, #2
 8004648:	2b00      	cmp	r3, #0
 800464a:	d023      	beq.n	8004694 <HAL_LTDC_IRQHandler+0xbc>
 800464c:	68bb      	ldr	r3, [r7, #8]
 800464e:	f003 0302 	and.w	r3, r3, #2
 8004652:	2b00      	cmp	r3, #0
 8004654:	d01e      	beq.n	8004694 <HAL_LTDC_IRQHandler+0xbc>
  {
    /* Disable the FIFO underrun interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8004656:	687b      	ldr	r3, [r7, #4]
 8004658:	681b      	ldr	r3, [r3, #0]
 800465a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800465c:	687b      	ldr	r3, [r7, #4]
 800465e:	681b      	ldr	r3, [r3, #0]
 8004660:	f022 0202 	bic.w	r2, r2, #2
 8004664:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the FIFO underrun flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8004666:	687b      	ldr	r3, [r7, #4]
 8004668:	681b      	ldr	r3, [r3, #0]
 800466a:	2202      	movs	r2, #2
 800466c:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800466e:	687b      	ldr	r3, [r7, #4]
 8004670:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8004674:	f043 0202 	orr.w	r2, r3, #2
 8004678:	687b      	ldr	r3, [r7, #4]
 800467a:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800467e:	687b      	ldr	r3, [r7, #4]
 8004680:	2204      	movs	r2, #4
 8004682:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8004686:	687b      	ldr	r3, [r7, #4]
 8004688:	2200      	movs	r2, #0
 800468a:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 800468e:	6878      	ldr	r0, [r7, #4]
 8004690:	f000 f846 	bl	8004720 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8004694:	68fb      	ldr	r3, [r7, #12]
 8004696:	f003 0301 	and.w	r3, r3, #1
 800469a:	2b00      	cmp	r3, #0
 800469c:	d01b      	beq.n	80046d6 <HAL_LTDC_IRQHandler+0xfe>
 800469e:	68bb      	ldr	r3, [r7, #8]
 80046a0:	f003 0301 	and.w	r3, r3, #1
 80046a4:	2b00      	cmp	r3, #0
 80046a6:	d016      	beq.n	80046d6 <HAL_LTDC_IRQHandler+0xfe>
  {
    /* Disable the Line interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80046a8:	687b      	ldr	r3, [r7, #4]
 80046aa:	681b      	ldr	r3, [r3, #0]
 80046ac:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80046ae:	687b      	ldr	r3, [r7, #4]
 80046b0:	681b      	ldr	r3, [r3, #0]
 80046b2:	f022 0201 	bic.w	r2, r2, #1
 80046b6:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the Line interrupt flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80046b8:	687b      	ldr	r3, [r7, #4]
 80046ba:	681b      	ldr	r3, [r3, #0]
 80046bc:	2201      	movs	r2, #1
 80046be:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 80046c0:	687b      	ldr	r3, [r7, #4]
 80046c2:	2201      	movs	r2, #1
 80046c4:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 80046c8:	687b      	ldr	r3, [r7, #4]
 80046ca:	2200      	movs	r2, #0
 80046cc:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered Line Event callback */
    hltdc->LineEventCallback(hltdc);
#else
    /*Call Legacy Line Event callback */
    HAL_LTDC_LineEventCallback(hltdc);
 80046d0:	6878      	ldr	r0, [r7, #4]
 80046d2:	f007 f8ff 	bl	800b8d4 <HAL_LTDC_LineEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80046d6:	68fb      	ldr	r3, [r7, #12]
 80046d8:	f003 0308 	and.w	r3, r3, #8
 80046dc:	2b00      	cmp	r3, #0
 80046de:	d01b      	beq.n	8004718 <HAL_LTDC_IRQHandler+0x140>
 80046e0:	68bb      	ldr	r3, [r7, #8]
 80046e2:	f003 0308 	and.w	r3, r3, #8
 80046e6:	2b00      	cmp	r3, #0
 80046e8:	d016      	beq.n	8004718 <HAL_LTDC_IRQHandler+0x140>
  {
    /* Disable the register reload interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80046ea:	687b      	ldr	r3, [r7, #4]
 80046ec:	681b      	ldr	r3, [r3, #0]
 80046ee:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80046f0:	687b      	ldr	r3, [r7, #4]
 80046f2:	681b      	ldr	r3, [r3, #0]
 80046f4:	f022 0208 	bic.w	r2, r2, #8
 80046f8:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the register reload flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80046fa:	687b      	ldr	r3, [r7, #4]
 80046fc:	681b      	ldr	r3, [r3, #0]
 80046fe:	2208      	movs	r2, #8
 8004700:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 8004702:	687b      	ldr	r3, [r7, #4]
 8004704:	2201      	movs	r2, #1
 8004706:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 800470a:	687b      	ldr	r3, [r7, #4]
 800470c:	2200      	movs	r2, #0
 800470e:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered reload Event callback */
    hltdc->ReloadEventCallback(hltdc);
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
 8004712:	6878      	ldr	r0, [r7, #4]
 8004714:	f000 f80e 	bl	8004734 <HAL_LTDC_ReloadEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 8004718:	bf00      	nop
 800471a:	3710      	adds	r7, #16
 800471c:	46bd      	mov	sp, r7
 800471e:	bd80      	pop	{r7, pc}

08004720 <HAL_LTDC_ErrorCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
{
 8004720:	b480      	push	{r7}
 8004722:	b083      	sub	sp, #12
 8004724:	af00      	add	r7, sp, #0
 8004726:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ErrorCallback could be implemented in the user file
   */
}
 8004728:	bf00      	nop
 800472a:	370c      	adds	r7, #12
 800472c:	46bd      	mov	sp, r7
 800472e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004732:	4770      	bx	lr

08004734 <HAL_LTDC_ReloadEventCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
{
 8004734:	b480      	push	{r7}
 8004736:	b083      	sub	sp, #12
 8004738:	af00      	add	r7, sp, #0
 800473a:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ReloadEvenCallback could be implemented in the user file
   */
}
 800473c:	bf00      	nop
 800473e:	370c      	adds	r7, #12
 8004740:	46bd      	mov	sp, r7
 8004742:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004746:	4770      	bx	lr

08004748 <HAL_LTDC_ConfigLayer>:
  *                    This parameter can be one of the following values:
  *                    LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ConfigLayer(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8004748:	b5b0      	push	{r4, r5, r7, lr}
 800474a:	b084      	sub	sp, #16
 800474c:	af00      	add	r7, sp, #0
 800474e:	60f8      	str	r0, [r7, #12]
 8004750:	60b9      	str	r1, [r7, #8]
 8004752:	607a      	str	r2, [r7, #4]
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 8004754:	68fb      	ldr	r3, [r7, #12]
 8004756:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 800475a:	2b01      	cmp	r3, #1
 800475c:	d101      	bne.n	8004762 <HAL_LTDC_ConfigLayer+0x1a>
 800475e:	2302      	movs	r3, #2
 8004760:	e02c      	b.n	80047bc <HAL_LTDC_ConfigLayer+0x74>
 8004762:	68fb      	ldr	r3, [r7, #12]
 8004764:	2201      	movs	r2, #1
 8004766:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800476a:	68fb      	ldr	r3, [r7, #12]
 800476c:	2202      	movs	r2, #2
 800476e:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8004772:	68fa      	ldr	r2, [r7, #12]
 8004774:	687b      	ldr	r3, [r7, #4]
 8004776:	2134      	movs	r1, #52	; 0x34
 8004778:	fb01 f303 	mul.w	r3, r1, r3
 800477c:	4413      	add	r3, r2
 800477e:	f103 0238 	add.w	r2, r3, #56	; 0x38
 8004782:	68bb      	ldr	r3, [r7, #8]
 8004784:	4614      	mov	r4, r2
 8004786:	461d      	mov	r5, r3
 8004788:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800478a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800478c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800478e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004790:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004792:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004794:	682b      	ldr	r3, [r5, #0]
 8004796:	6023      	str	r3, [r4, #0]

  /* Configure the LTDC Layer */
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8004798:	687a      	ldr	r2, [r7, #4]
 800479a:	68b9      	ldr	r1, [r7, #8]
 800479c:	68f8      	ldr	r0, [r7, #12]
 800479e:	f000 f849 	bl	8004834 <LTDC_SetConfig>

  /* Set the Immediate Reload type */
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80047a2:	68fb      	ldr	r3, [r7, #12]
 80047a4:	681b      	ldr	r3, [r3, #0]
 80047a6:	2201      	movs	r2, #1
 80047a8:	625a      	str	r2, [r3, #36]	; 0x24

  /* Initialize the LTDC state*/
  hltdc->State  = HAL_LTDC_STATE_READY;
 80047aa:	68fb      	ldr	r3, [r7, #12]
 80047ac:	2201      	movs	r2, #1
 80047ae:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 80047b2:	68fb      	ldr	r3, [r7, #12]
 80047b4:	2200      	movs	r2, #0
 80047b6:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  return HAL_OK;
 80047ba:	2300      	movs	r3, #0
}
 80047bc:	4618      	mov	r0, r3
 80047be:	3710      	adds	r7, #16
 80047c0:	46bd      	mov	sp, r7
 80047c2:	bdb0      	pop	{r4, r5, r7, pc}

080047c4 <HAL_LTDC_ProgramLineEvent>:
  * @param  Line    Line Interrupt Position.
  * @note   User application may resort to HAL_LTDC_LineEventCallback() at line interrupt generation.
  * @retval  HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ProgramLineEvent(LTDC_HandleTypeDef *hltdc, uint32_t Line)
{
 80047c4:	b480      	push	{r7}
 80047c6:	b083      	sub	sp, #12
 80047c8:	af00      	add	r7, sp, #0
 80047ca:	6078      	str	r0, [r7, #4]
 80047cc:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_LTDC_LIPOS(Line));

  /* Process locked */
  __HAL_LOCK(hltdc);
 80047ce:	687b      	ldr	r3, [r7, #4]
 80047d0:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 80047d4:	2b01      	cmp	r3, #1
 80047d6:	d101      	bne.n	80047dc <HAL_LTDC_ProgramLineEvent+0x18>
 80047d8:	2302      	movs	r3, #2
 80047da:	e023      	b.n	8004824 <HAL_LTDC_ProgramLineEvent+0x60>
 80047dc:	687b      	ldr	r3, [r7, #4]
 80047de:	2201      	movs	r2, #1
 80047e0:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80047e4:	687b      	ldr	r3, [r7, #4]
 80047e6:	2202      	movs	r2, #2
 80047e8:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Disable the Line interrupt */
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80047ec:	687b      	ldr	r3, [r7, #4]
 80047ee:	681b      	ldr	r3, [r3, #0]
 80047f0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80047f2:	687b      	ldr	r3, [r7, #4]
 80047f4:	681b      	ldr	r3, [r3, #0]
 80047f6:	f022 0201 	bic.w	r2, r2, #1
 80047fa:	635a      	str	r2, [r3, #52]	; 0x34

  /* Set the Line Interrupt position */
  LTDC->LIPCR = (uint32_t)Line;
 80047fc:	4a0c      	ldr	r2, [pc, #48]	; (8004830 <HAL_LTDC_ProgramLineEvent+0x6c>)
 80047fe:	683b      	ldr	r3, [r7, #0]
 8004800:	6413      	str	r3, [r2, #64]	; 0x40

  /* Enable the Line interrupt */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8004802:	687b      	ldr	r3, [r7, #4]
 8004804:	681b      	ldr	r3, [r3, #0]
 8004806:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004808:	687b      	ldr	r3, [r7, #4]
 800480a:	681b      	ldr	r3, [r3, #0]
 800480c:	f042 0201 	orr.w	r2, r2, #1
 8004810:	635a      	str	r2, [r3, #52]	; 0x34

  /* Change the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8004812:	687b      	ldr	r3, [r7, #4]
 8004814:	2201      	movs	r2, #1
 8004816:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 800481a:	687b      	ldr	r3, [r7, #4]
 800481c:	2200      	movs	r2, #0
 800481e:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  return HAL_OK;
 8004822:	2300      	movs	r3, #0
}
 8004824:	4618      	mov	r0, r3
 8004826:	370c      	adds	r7, #12
 8004828:	46bd      	mov	sp, r7
 800482a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800482e:	4770      	bx	lr
 8004830:	40016800 	.word	0x40016800

08004834 <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8004834:	b480      	push	{r7}
 8004836:	b089      	sub	sp, #36	; 0x24
 8004838:	af00      	add	r7, sp, #0
 800483a:	60f8      	str	r0, [r7, #12]
 800483c:	60b9      	str	r1, [r7, #8]
 800483e:	607a      	str	r2, [r7, #4]
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004840:	68bb      	ldr	r3, [r7, #8]
 8004842:	685a      	ldr	r2, [r3, #4]
 8004844:	68fb      	ldr	r3, [r7, #12]
 8004846:	681b      	ldr	r3, [r3, #0]
 8004848:	68db      	ldr	r3, [r3, #12]
 800484a:	0c1b      	lsrs	r3, r3, #16
 800484c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004850:	4413      	add	r3, r2
 8004852:	041b      	lsls	r3, r3, #16
 8004854:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004856:	68fb      	ldr	r3, [r7, #12]
 8004858:	681b      	ldr	r3, [r3, #0]
 800485a:	461a      	mov	r2, r3
 800485c:	687b      	ldr	r3, [r7, #4]
 800485e:	01db      	lsls	r3, r3, #7
 8004860:	4413      	add	r3, r2
 8004862:	3384      	adds	r3, #132	; 0x84
 8004864:	685b      	ldr	r3, [r3, #4]
 8004866:	68fa      	ldr	r2, [r7, #12]
 8004868:	6812      	ldr	r2, [r2, #0]
 800486a:	4611      	mov	r1, r2
 800486c:	687a      	ldr	r2, [r7, #4]
 800486e:	01d2      	lsls	r2, r2, #7
 8004870:	440a      	add	r2, r1
 8004872:	3284      	adds	r2, #132	; 0x84
 8004874:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8004878:	6053      	str	r3, [r2, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800487a:	68bb      	ldr	r3, [r7, #8]
 800487c:	681a      	ldr	r2, [r3, #0]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800487e:	68fb      	ldr	r3, [r7, #12]
 8004880:	681b      	ldr	r3, [r3, #0]
 8004882:	68db      	ldr	r3, [r3, #12]
 8004884:	0c1b      	lsrs	r3, r3, #16
 8004886:	f3c3 030b 	ubfx	r3, r3, #0, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800488a:	4413      	add	r3, r2
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800488c:	1c5a      	adds	r2, r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800488e:	68fb      	ldr	r3, [r7, #12]
 8004890:	681b      	ldr	r3, [r3, #0]
 8004892:	4619      	mov	r1, r3
 8004894:	687b      	ldr	r3, [r7, #4]
 8004896:	01db      	lsls	r3, r3, #7
 8004898:	440b      	add	r3, r1
 800489a:	3384      	adds	r3, #132	; 0x84
 800489c:	4619      	mov	r1, r3
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800489e:	69fb      	ldr	r3, [r7, #28]
 80048a0:	4313      	orrs	r3, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 80048a2:	604b      	str	r3, [r1, #4]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 80048a4:	68bb      	ldr	r3, [r7, #8]
 80048a6:	68da      	ldr	r2, [r3, #12]
 80048a8:	68fb      	ldr	r3, [r7, #12]
 80048aa:	681b      	ldr	r3, [r3, #0]
 80048ac:	68db      	ldr	r3, [r3, #12]
 80048ae:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80048b2:	4413      	add	r3, r2
 80048b4:	041b      	lsls	r3, r3, #16
 80048b6:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 80048b8:	68fb      	ldr	r3, [r7, #12]
 80048ba:	681b      	ldr	r3, [r3, #0]
 80048bc:	461a      	mov	r2, r3
 80048be:	687b      	ldr	r3, [r7, #4]
 80048c0:	01db      	lsls	r3, r3, #7
 80048c2:	4413      	add	r3, r2
 80048c4:	3384      	adds	r3, #132	; 0x84
 80048c6:	689b      	ldr	r3, [r3, #8]
 80048c8:	68fa      	ldr	r2, [r7, #12]
 80048ca:	6812      	ldr	r2, [r2, #0]
 80048cc:	4611      	mov	r1, r2
 80048ce:	687a      	ldr	r2, [r7, #4]
 80048d0:	01d2      	lsls	r2, r2, #7
 80048d2:	440a      	add	r2, r1
 80048d4:	3284      	adds	r2, #132	; 0x84
 80048d6:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 80048da:	6093      	str	r3, [r2, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 80048dc:	68bb      	ldr	r3, [r7, #8]
 80048de:	689a      	ldr	r2, [r3, #8]
 80048e0:	68fb      	ldr	r3, [r7, #12]
 80048e2:	681b      	ldr	r3, [r3, #0]
 80048e4:	68db      	ldr	r3, [r3, #12]
 80048e6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80048ea:	4413      	add	r3, r2
 80048ec:	1c5a      	adds	r2, r3, #1
 80048ee:	68fb      	ldr	r3, [r7, #12]
 80048f0:	681b      	ldr	r3, [r3, #0]
 80048f2:	4619      	mov	r1, r3
 80048f4:	687b      	ldr	r3, [r7, #4]
 80048f6:	01db      	lsls	r3, r3, #7
 80048f8:	440b      	add	r3, r1
 80048fa:	3384      	adds	r3, #132	; 0x84
 80048fc:	4619      	mov	r1, r3
 80048fe:	69fb      	ldr	r3, [r7, #28]
 8004900:	4313      	orrs	r3, r2
 8004902:	608b      	str	r3, [r1, #8]

  /* Specifies the pixel format */
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8004904:	68fb      	ldr	r3, [r7, #12]
 8004906:	681b      	ldr	r3, [r3, #0]
 8004908:	461a      	mov	r2, r3
 800490a:	687b      	ldr	r3, [r7, #4]
 800490c:	01db      	lsls	r3, r3, #7
 800490e:	4413      	add	r3, r2
 8004910:	3384      	adds	r3, #132	; 0x84
 8004912:	691b      	ldr	r3, [r3, #16]
 8004914:	68fa      	ldr	r2, [r7, #12]
 8004916:	6812      	ldr	r2, [r2, #0]
 8004918:	4611      	mov	r1, r2
 800491a:	687a      	ldr	r2, [r7, #4]
 800491c:	01d2      	lsls	r2, r2, #7
 800491e:	440a      	add	r2, r1
 8004920:	3284      	adds	r2, #132	; 0x84
 8004922:	f023 0307 	bic.w	r3, r3, #7
 8004926:	6113      	str	r3, [r2, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8004928:	68fb      	ldr	r3, [r7, #12]
 800492a:	681b      	ldr	r3, [r3, #0]
 800492c:	461a      	mov	r2, r3
 800492e:	687b      	ldr	r3, [r7, #4]
 8004930:	01db      	lsls	r3, r3, #7
 8004932:	4413      	add	r3, r2
 8004934:	3384      	adds	r3, #132	; 0x84
 8004936:	461a      	mov	r2, r3
 8004938:	68bb      	ldr	r3, [r7, #8]
 800493a:	691b      	ldr	r3, [r3, #16]
 800493c:	6113      	str	r3, [r2, #16]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800493e:	68bb      	ldr	r3, [r7, #8]
 8004940:	f893 3031 	ldrb.w	r3, [r3, #49]	; 0x31
 8004944:	021b      	lsls	r3, r3, #8
 8004946:	61fb      	str	r3, [r7, #28]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8004948:	68bb      	ldr	r3, [r7, #8]
 800494a:	f893 3032 	ldrb.w	r3, [r3, #50]	; 0x32
 800494e:	041b      	lsls	r3, r3, #16
 8004950:	61bb      	str	r3, [r7, #24]
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8004952:	68bb      	ldr	r3, [r7, #8]
 8004954:	699b      	ldr	r3, [r3, #24]
 8004956:	061b      	lsls	r3, r3, #24
 8004958:	617b      	str	r3, [r7, #20]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800495a:	68fb      	ldr	r3, [r7, #12]
 800495c:	681b      	ldr	r3, [r3, #0]
 800495e:	461a      	mov	r2, r3
 8004960:	687b      	ldr	r3, [r7, #4]
 8004962:	01db      	lsls	r3, r3, #7
 8004964:	4413      	add	r3, r2
 8004966:	3384      	adds	r3, #132	; 0x84
 8004968:	699b      	ldr	r3, [r3, #24]
 800496a:	68fb      	ldr	r3, [r7, #12]
 800496c:	681b      	ldr	r3, [r3, #0]
 800496e:	461a      	mov	r2, r3
 8004970:	687b      	ldr	r3, [r7, #4]
 8004972:	01db      	lsls	r3, r3, #7
 8004974:	4413      	add	r3, r2
 8004976:	3384      	adds	r3, #132	; 0x84
 8004978:	461a      	mov	r2, r3
 800497a:	2300      	movs	r3, #0
 800497c:	6193      	str	r3, [r2, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800497e:	68bb      	ldr	r3, [r7, #8]
 8004980:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8004984:	461a      	mov	r2, r3
 8004986:	69fb      	ldr	r3, [r7, #28]
 8004988:	431a      	orrs	r2, r3
 800498a:	69bb      	ldr	r3, [r7, #24]
 800498c:	431a      	orrs	r2, r3
 800498e:	68fb      	ldr	r3, [r7, #12]
 8004990:	681b      	ldr	r3, [r3, #0]
 8004992:	4619      	mov	r1, r3
 8004994:	687b      	ldr	r3, [r7, #4]
 8004996:	01db      	lsls	r3, r3, #7
 8004998:	440b      	add	r3, r1
 800499a:	3384      	adds	r3, #132	; 0x84
 800499c:	4619      	mov	r1, r3
 800499e:	697b      	ldr	r3, [r7, #20]
 80049a0:	4313      	orrs	r3, r2
 80049a2:	618b      	str	r3, [r1, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80049a4:	68fb      	ldr	r3, [r7, #12]
 80049a6:	681b      	ldr	r3, [r3, #0]
 80049a8:	461a      	mov	r2, r3
 80049aa:	687b      	ldr	r3, [r7, #4]
 80049ac:	01db      	lsls	r3, r3, #7
 80049ae:	4413      	add	r3, r2
 80049b0:	3384      	adds	r3, #132	; 0x84
 80049b2:	695b      	ldr	r3, [r3, #20]
 80049b4:	68fa      	ldr	r2, [r7, #12]
 80049b6:	6812      	ldr	r2, [r2, #0]
 80049b8:	4611      	mov	r1, r2
 80049ba:	687a      	ldr	r2, [r7, #4]
 80049bc:	01d2      	lsls	r2, r2, #7
 80049be:	440a      	add	r2, r1
 80049c0:	3284      	adds	r2, #132	; 0x84
 80049c2:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 80049c6:	6153      	str	r3, [r2, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80049c8:	68fb      	ldr	r3, [r7, #12]
 80049ca:	681b      	ldr	r3, [r3, #0]
 80049cc:	461a      	mov	r2, r3
 80049ce:	687b      	ldr	r3, [r7, #4]
 80049d0:	01db      	lsls	r3, r3, #7
 80049d2:	4413      	add	r3, r2
 80049d4:	3384      	adds	r3, #132	; 0x84
 80049d6:	461a      	mov	r2, r3
 80049d8:	68bb      	ldr	r3, [r7, #8]
 80049da:	695b      	ldr	r3, [r3, #20]
 80049dc:	6153      	str	r3, [r2, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80049de:	68fb      	ldr	r3, [r7, #12]
 80049e0:	681b      	ldr	r3, [r3, #0]
 80049e2:	461a      	mov	r2, r3
 80049e4:	687b      	ldr	r3, [r7, #4]
 80049e6:	01db      	lsls	r3, r3, #7
 80049e8:	4413      	add	r3, r2
 80049ea:	3384      	adds	r3, #132	; 0x84
 80049ec:	69db      	ldr	r3, [r3, #28]
 80049ee:	68fa      	ldr	r2, [r7, #12]
 80049f0:	6812      	ldr	r2, [r2, #0]
 80049f2:	4611      	mov	r1, r2
 80049f4:	687a      	ldr	r2, [r7, #4]
 80049f6:	01d2      	lsls	r2, r2, #7
 80049f8:	440a      	add	r2, r1
 80049fa:	3284      	adds	r2, #132	; 0x84
 80049fc:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8004a00:	f023 0307 	bic.w	r3, r3, #7
 8004a04:	61d3      	str	r3, [r2, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8004a06:	68bb      	ldr	r3, [r7, #8]
 8004a08:	69da      	ldr	r2, [r3, #28]
 8004a0a:	68bb      	ldr	r3, [r7, #8]
 8004a0c:	6a1b      	ldr	r3, [r3, #32]
 8004a0e:	68f9      	ldr	r1, [r7, #12]
 8004a10:	6809      	ldr	r1, [r1, #0]
 8004a12:	4608      	mov	r0, r1
 8004a14:	6879      	ldr	r1, [r7, #4]
 8004a16:	01c9      	lsls	r1, r1, #7
 8004a18:	4401      	add	r1, r0
 8004a1a:	3184      	adds	r1, #132	; 0x84
 8004a1c:	4313      	orrs	r3, r2
 8004a1e:	61cb      	str	r3, [r1, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8004a20:	68fb      	ldr	r3, [r7, #12]
 8004a22:	681b      	ldr	r3, [r3, #0]
 8004a24:	461a      	mov	r2, r3
 8004a26:	687b      	ldr	r3, [r7, #4]
 8004a28:	01db      	lsls	r3, r3, #7
 8004a2a:	4413      	add	r3, r2
 8004a2c:	3384      	adds	r3, #132	; 0x84
 8004a2e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004a30:	68fb      	ldr	r3, [r7, #12]
 8004a32:	681b      	ldr	r3, [r3, #0]
 8004a34:	461a      	mov	r2, r3
 8004a36:	687b      	ldr	r3, [r7, #4]
 8004a38:	01db      	lsls	r3, r3, #7
 8004a3a:	4413      	add	r3, r2
 8004a3c:	3384      	adds	r3, #132	; 0x84
 8004a3e:	461a      	mov	r2, r3
 8004a40:	2300      	movs	r3, #0
 8004a42:	6293      	str	r3, [r2, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8004a44:	68fb      	ldr	r3, [r7, #12]
 8004a46:	681b      	ldr	r3, [r3, #0]
 8004a48:	461a      	mov	r2, r3
 8004a4a:	687b      	ldr	r3, [r7, #4]
 8004a4c:	01db      	lsls	r3, r3, #7
 8004a4e:	4413      	add	r3, r2
 8004a50:	3384      	adds	r3, #132	; 0x84
 8004a52:	461a      	mov	r2, r3
 8004a54:	68bb      	ldr	r3, [r7, #8]
 8004a56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a58:	6293      	str	r3, [r2, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8004a5a:	68bb      	ldr	r3, [r7, #8]
 8004a5c:	691b      	ldr	r3, [r3, #16]
 8004a5e:	2b00      	cmp	r3, #0
 8004a60:	d102      	bne.n	8004a68 <LTDC_SetConfig+0x234>
  {
    tmp = 4U;
 8004a62:	2304      	movs	r3, #4
 8004a64:	61fb      	str	r3, [r7, #28]
 8004a66:	e01b      	b.n	8004aa0 <LTDC_SetConfig+0x26c>
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8004a68:	68bb      	ldr	r3, [r7, #8]
 8004a6a:	691b      	ldr	r3, [r3, #16]
 8004a6c:	2b01      	cmp	r3, #1
 8004a6e:	d102      	bne.n	8004a76 <LTDC_SetConfig+0x242>
  {
    tmp = 3U;
 8004a70:	2303      	movs	r3, #3
 8004a72:	61fb      	str	r3, [r7, #28]
 8004a74:	e014      	b.n	8004aa0 <LTDC_SetConfig+0x26c>
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8004a76:	68bb      	ldr	r3, [r7, #8]
 8004a78:	691b      	ldr	r3, [r3, #16]
 8004a7a:	2b04      	cmp	r3, #4
 8004a7c:	d00b      	beq.n	8004a96 <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 8004a7e:	68bb      	ldr	r3, [r7, #8]
 8004a80:	691b      	ldr	r3, [r3, #16]
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8004a82:	2b02      	cmp	r3, #2
 8004a84:	d007      	beq.n	8004a96 <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8004a86:	68bb      	ldr	r3, [r7, #8]
 8004a88:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 8004a8a:	2b03      	cmp	r3, #3
 8004a8c:	d003      	beq.n	8004a96 <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
 8004a8e:	68bb      	ldr	r3, [r7, #8]
 8004a90:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8004a92:	2b07      	cmp	r3, #7
 8004a94:	d102      	bne.n	8004a9c <LTDC_SetConfig+0x268>
  {
    tmp = 2U;
 8004a96:	2302      	movs	r3, #2
 8004a98:	61fb      	str	r3, [r7, #28]
 8004a9a:	e001      	b.n	8004aa0 <LTDC_SetConfig+0x26c>
  }
  else
  {
    tmp = 1U;
 8004a9c:	2301      	movs	r3, #1
 8004a9e:	61fb      	str	r3, [r7, #28]
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8004aa0:	68fb      	ldr	r3, [r7, #12]
 8004aa2:	681b      	ldr	r3, [r3, #0]
 8004aa4:	461a      	mov	r2, r3
 8004aa6:	687b      	ldr	r3, [r7, #4]
 8004aa8:	01db      	lsls	r3, r3, #7
 8004aaa:	4413      	add	r3, r2
 8004aac:	3384      	adds	r3, #132	; 0x84
 8004aae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004ab0:	68fa      	ldr	r2, [r7, #12]
 8004ab2:	6812      	ldr	r2, [r2, #0]
 8004ab4:	4611      	mov	r1, r2
 8004ab6:	687a      	ldr	r2, [r7, #4]
 8004ab8:	01d2      	lsls	r2, r2, #7
 8004aba:	440a      	add	r2, r1
 8004abc:	3284      	adds	r2, #132	; 0x84
 8004abe:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 8004ac2:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8004ac4:	68bb      	ldr	r3, [r7, #8]
 8004ac6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004ac8:	69fa      	ldr	r2, [r7, #28]
 8004aca:	fb02 f303 	mul.w	r3, r2, r3
 8004ace:	041a      	lsls	r2, r3, #16
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8004ad0:	68bb      	ldr	r3, [r7, #8]
 8004ad2:	6859      	ldr	r1, [r3, #4]
 8004ad4:	68bb      	ldr	r3, [r7, #8]
 8004ad6:	681b      	ldr	r3, [r3, #0]
 8004ad8:	1acb      	subs	r3, r1, r3
 8004ada:	69f9      	ldr	r1, [r7, #28]
 8004adc:	fb01 f303 	mul.w	r3, r1, r3
 8004ae0:	3303      	adds	r3, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8004ae2:	68f9      	ldr	r1, [r7, #12]
 8004ae4:	6809      	ldr	r1, [r1, #0]
 8004ae6:	4608      	mov	r0, r1
 8004ae8:	6879      	ldr	r1, [r7, #4]
 8004aea:	01c9      	lsls	r1, r1, #7
 8004aec:	4401      	add	r1, r0
 8004aee:	3184      	adds	r1, #132	; 0x84
 8004af0:	4313      	orrs	r3, r2
 8004af2:	62cb      	str	r3, [r1, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8004af4:	68fb      	ldr	r3, [r7, #12]
 8004af6:	681b      	ldr	r3, [r3, #0]
 8004af8:	461a      	mov	r2, r3
 8004afa:	687b      	ldr	r3, [r7, #4]
 8004afc:	01db      	lsls	r3, r3, #7
 8004afe:	4413      	add	r3, r2
 8004b00:	3384      	adds	r3, #132	; 0x84
 8004b02:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b04:	68fa      	ldr	r2, [r7, #12]
 8004b06:	6812      	ldr	r2, [r2, #0]
 8004b08:	4611      	mov	r1, r2
 8004b0a:	687a      	ldr	r2, [r7, #4]
 8004b0c:	01d2      	lsls	r2, r2, #7
 8004b0e:	440a      	add	r2, r1
 8004b10:	3284      	adds	r2, #132	; 0x84
 8004b12:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8004b16:	f023 0307 	bic.w	r3, r3, #7
 8004b1a:	6313      	str	r3, [r2, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8004b1c:	68fb      	ldr	r3, [r7, #12]
 8004b1e:	681b      	ldr	r3, [r3, #0]
 8004b20:	461a      	mov	r2, r3
 8004b22:	687b      	ldr	r3, [r7, #4]
 8004b24:	01db      	lsls	r3, r3, #7
 8004b26:	4413      	add	r3, r2
 8004b28:	3384      	adds	r3, #132	; 0x84
 8004b2a:	461a      	mov	r2, r3
 8004b2c:	68bb      	ldr	r3, [r7, #8]
 8004b2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004b30:	6313      	str	r3, [r2, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8004b32:	68fb      	ldr	r3, [r7, #12]
 8004b34:	681b      	ldr	r3, [r3, #0]
 8004b36:	461a      	mov	r2, r3
 8004b38:	687b      	ldr	r3, [r7, #4]
 8004b3a:	01db      	lsls	r3, r3, #7
 8004b3c:	4413      	add	r3, r2
 8004b3e:	3384      	adds	r3, #132	; 0x84
 8004b40:	681b      	ldr	r3, [r3, #0]
 8004b42:	68fa      	ldr	r2, [r7, #12]
 8004b44:	6812      	ldr	r2, [r2, #0]
 8004b46:	4611      	mov	r1, r2
 8004b48:	687a      	ldr	r2, [r7, #4]
 8004b4a:	01d2      	lsls	r2, r2, #7
 8004b4c:	440a      	add	r2, r1
 8004b4e:	3284      	adds	r2, #132	; 0x84
 8004b50:	f043 0301 	orr.w	r3, r3, #1
 8004b54:	6013      	str	r3, [r2, #0]
}
 8004b56:	bf00      	nop
 8004b58:	3724      	adds	r7, #36	; 0x24
 8004b5a:	46bd      	mov	sp, r7
 8004b5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b60:	4770      	bx	lr
	...

08004b64 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8004b64:	b580      	push	{r7, lr}
 8004b66:	b086      	sub	sp, #24
 8004b68:	af00      	add	r7, sp, #0
 8004b6a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8004b6c:	687b      	ldr	r3, [r7, #4]
 8004b6e:	2b00      	cmp	r3, #0
 8004b70:	d101      	bne.n	8004b76 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8004b72:	2301      	movs	r3, #1
 8004b74:	e267      	b.n	8005046 <HAL_RCC_OscConfig+0x4e2>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8004b76:	687b      	ldr	r3, [r7, #4]
 8004b78:	681b      	ldr	r3, [r3, #0]
 8004b7a:	f003 0301 	and.w	r3, r3, #1
 8004b7e:	2b00      	cmp	r3, #0
 8004b80:	d075      	beq.n	8004c6e <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8004b82:	4b88      	ldr	r3, [pc, #544]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004b84:	689b      	ldr	r3, [r3, #8]
 8004b86:	f003 030c 	and.w	r3, r3, #12
 8004b8a:	2b04      	cmp	r3, #4
 8004b8c:	d00c      	beq.n	8004ba8 <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8004b8e:	4b85      	ldr	r3, [pc, #532]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004b90:	689b      	ldr	r3, [r3, #8]
 8004b92:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8004b96:	2b08      	cmp	r3, #8
 8004b98:	d112      	bne.n	8004bc0 <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8004b9a:	4b82      	ldr	r3, [pc, #520]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004b9c:	685b      	ldr	r3, [r3, #4]
 8004b9e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004ba2:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8004ba6:	d10b      	bne.n	8004bc0 <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8004ba8:	4b7e      	ldr	r3, [pc, #504]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004baa:	681b      	ldr	r3, [r3, #0]
 8004bac:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004bb0:	2b00      	cmp	r3, #0
 8004bb2:	d05b      	beq.n	8004c6c <HAL_RCC_OscConfig+0x108>
 8004bb4:	687b      	ldr	r3, [r7, #4]
 8004bb6:	685b      	ldr	r3, [r3, #4]
 8004bb8:	2b00      	cmp	r3, #0
 8004bba:	d157      	bne.n	8004c6c <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 8004bbc:	2301      	movs	r3, #1
 8004bbe:	e242      	b.n	8005046 <HAL_RCC_OscConfig+0x4e2>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8004bc0:	687b      	ldr	r3, [r7, #4]
 8004bc2:	685b      	ldr	r3, [r3, #4]
 8004bc4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004bc8:	d106      	bne.n	8004bd8 <HAL_RCC_OscConfig+0x74>
 8004bca:	4b76      	ldr	r3, [pc, #472]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004bcc:	681b      	ldr	r3, [r3, #0]
 8004bce:	4a75      	ldr	r2, [pc, #468]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004bd0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004bd4:	6013      	str	r3, [r2, #0]
 8004bd6:	e01d      	b.n	8004c14 <HAL_RCC_OscConfig+0xb0>
 8004bd8:	687b      	ldr	r3, [r7, #4]
 8004bda:	685b      	ldr	r3, [r3, #4]
 8004bdc:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8004be0:	d10c      	bne.n	8004bfc <HAL_RCC_OscConfig+0x98>
 8004be2:	4b70      	ldr	r3, [pc, #448]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004be4:	681b      	ldr	r3, [r3, #0]
 8004be6:	4a6f      	ldr	r2, [pc, #444]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004be8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8004bec:	6013      	str	r3, [r2, #0]
 8004bee:	4b6d      	ldr	r3, [pc, #436]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004bf0:	681b      	ldr	r3, [r3, #0]
 8004bf2:	4a6c      	ldr	r2, [pc, #432]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004bf4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004bf8:	6013      	str	r3, [r2, #0]
 8004bfa:	e00b      	b.n	8004c14 <HAL_RCC_OscConfig+0xb0>
 8004bfc:	4b69      	ldr	r3, [pc, #420]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004bfe:	681b      	ldr	r3, [r3, #0]
 8004c00:	4a68      	ldr	r2, [pc, #416]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004c02:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004c06:	6013      	str	r3, [r2, #0]
 8004c08:	4b66      	ldr	r3, [pc, #408]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004c0a:	681b      	ldr	r3, [r3, #0]
 8004c0c:	4a65      	ldr	r2, [pc, #404]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004c0e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004c12:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8004c14:	687b      	ldr	r3, [r7, #4]
 8004c16:	685b      	ldr	r3, [r3, #4]
 8004c18:	2b00      	cmp	r3, #0
 8004c1a:	d013      	beq.n	8004c44 <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004c1c:	f7fd fda8 	bl	8002770 <HAL_GetTick>
 8004c20:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004c22:	e008      	b.n	8004c36 <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8004c24:	f7fd fda4 	bl	8002770 <HAL_GetTick>
 8004c28:	4602      	mov	r2, r0
 8004c2a:	693b      	ldr	r3, [r7, #16]
 8004c2c:	1ad3      	subs	r3, r2, r3
 8004c2e:	2b64      	cmp	r3, #100	; 0x64
 8004c30:	d901      	bls.n	8004c36 <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 8004c32:	2303      	movs	r3, #3
 8004c34:	e207      	b.n	8005046 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004c36:	4b5b      	ldr	r3, [pc, #364]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004c38:	681b      	ldr	r3, [r3, #0]
 8004c3a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004c3e:	2b00      	cmp	r3, #0
 8004c40:	d0f0      	beq.n	8004c24 <HAL_RCC_OscConfig+0xc0>
 8004c42:	e014      	b.n	8004c6e <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004c44:	f7fd fd94 	bl	8002770 <HAL_GetTick>
 8004c48:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8004c4a:	e008      	b.n	8004c5e <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8004c4c:	f7fd fd90 	bl	8002770 <HAL_GetTick>
 8004c50:	4602      	mov	r2, r0
 8004c52:	693b      	ldr	r3, [r7, #16]
 8004c54:	1ad3      	subs	r3, r2, r3
 8004c56:	2b64      	cmp	r3, #100	; 0x64
 8004c58:	d901      	bls.n	8004c5e <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 8004c5a:	2303      	movs	r3, #3
 8004c5c:	e1f3      	b.n	8005046 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8004c5e:	4b51      	ldr	r3, [pc, #324]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004c60:	681b      	ldr	r3, [r3, #0]
 8004c62:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004c66:	2b00      	cmp	r3, #0
 8004c68:	d1f0      	bne.n	8004c4c <HAL_RCC_OscConfig+0xe8>
 8004c6a:	e000      	b.n	8004c6e <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8004c6c:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8004c6e:	687b      	ldr	r3, [r7, #4]
 8004c70:	681b      	ldr	r3, [r3, #0]
 8004c72:	f003 0302 	and.w	r3, r3, #2
 8004c76:	2b00      	cmp	r3, #0
 8004c78:	d063      	beq.n	8004d42 <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8004c7a:	4b4a      	ldr	r3, [pc, #296]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004c7c:	689b      	ldr	r3, [r3, #8]
 8004c7e:	f003 030c 	and.w	r3, r3, #12
 8004c82:	2b00      	cmp	r3, #0
 8004c84:	d00b      	beq.n	8004c9e <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8004c86:	4b47      	ldr	r3, [pc, #284]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004c88:	689b      	ldr	r3, [r3, #8]
 8004c8a:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8004c8e:	2b08      	cmp	r3, #8
 8004c90:	d11c      	bne.n	8004ccc <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8004c92:	4b44      	ldr	r3, [pc, #272]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004c94:	685b      	ldr	r3, [r3, #4]
 8004c96:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004c9a:	2b00      	cmp	r3, #0
 8004c9c:	d116      	bne.n	8004ccc <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8004c9e:	4b41      	ldr	r3, [pc, #260]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004ca0:	681b      	ldr	r3, [r3, #0]
 8004ca2:	f003 0302 	and.w	r3, r3, #2
 8004ca6:	2b00      	cmp	r3, #0
 8004ca8:	d005      	beq.n	8004cb6 <HAL_RCC_OscConfig+0x152>
 8004caa:	687b      	ldr	r3, [r7, #4]
 8004cac:	68db      	ldr	r3, [r3, #12]
 8004cae:	2b01      	cmp	r3, #1
 8004cb0:	d001      	beq.n	8004cb6 <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 8004cb2:	2301      	movs	r3, #1
 8004cb4:	e1c7      	b.n	8005046 <HAL_RCC_OscConfig+0x4e2>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004cb6:	4b3b      	ldr	r3, [pc, #236]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004cb8:	681b      	ldr	r3, [r3, #0]
 8004cba:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8004cbe:	687b      	ldr	r3, [r7, #4]
 8004cc0:	691b      	ldr	r3, [r3, #16]
 8004cc2:	00db      	lsls	r3, r3, #3
 8004cc4:	4937      	ldr	r1, [pc, #220]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004cc6:	4313      	orrs	r3, r2
 8004cc8:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8004cca:	e03a      	b.n	8004d42 <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8004ccc:	687b      	ldr	r3, [r7, #4]
 8004cce:	68db      	ldr	r3, [r3, #12]
 8004cd0:	2b00      	cmp	r3, #0
 8004cd2:	d020      	beq.n	8004d16 <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8004cd4:	4b34      	ldr	r3, [pc, #208]	; (8004da8 <HAL_RCC_OscConfig+0x244>)
 8004cd6:	2201      	movs	r2, #1
 8004cd8:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004cda:	f7fd fd49 	bl	8002770 <HAL_GetTick>
 8004cde:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004ce0:	e008      	b.n	8004cf4 <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8004ce2:	f7fd fd45 	bl	8002770 <HAL_GetTick>
 8004ce6:	4602      	mov	r2, r0
 8004ce8:	693b      	ldr	r3, [r7, #16]
 8004cea:	1ad3      	subs	r3, r2, r3
 8004cec:	2b02      	cmp	r3, #2
 8004cee:	d901      	bls.n	8004cf4 <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 8004cf0:	2303      	movs	r3, #3
 8004cf2:	e1a8      	b.n	8005046 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004cf4:	4b2b      	ldr	r3, [pc, #172]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004cf6:	681b      	ldr	r3, [r3, #0]
 8004cf8:	f003 0302 	and.w	r3, r3, #2
 8004cfc:	2b00      	cmp	r3, #0
 8004cfe:	d0f0      	beq.n	8004ce2 <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004d00:	4b28      	ldr	r3, [pc, #160]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004d02:	681b      	ldr	r3, [r3, #0]
 8004d04:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8004d08:	687b      	ldr	r3, [r7, #4]
 8004d0a:	691b      	ldr	r3, [r3, #16]
 8004d0c:	00db      	lsls	r3, r3, #3
 8004d0e:	4925      	ldr	r1, [pc, #148]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004d10:	4313      	orrs	r3, r2
 8004d12:	600b      	str	r3, [r1, #0]
 8004d14:	e015      	b.n	8004d42 <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8004d16:	4b24      	ldr	r3, [pc, #144]	; (8004da8 <HAL_RCC_OscConfig+0x244>)
 8004d18:	2200      	movs	r2, #0
 8004d1a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004d1c:	f7fd fd28 	bl	8002770 <HAL_GetTick>
 8004d20:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8004d22:	e008      	b.n	8004d36 <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8004d24:	f7fd fd24 	bl	8002770 <HAL_GetTick>
 8004d28:	4602      	mov	r2, r0
 8004d2a:	693b      	ldr	r3, [r7, #16]
 8004d2c:	1ad3      	subs	r3, r2, r3
 8004d2e:	2b02      	cmp	r3, #2
 8004d30:	d901      	bls.n	8004d36 <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 8004d32:	2303      	movs	r3, #3
 8004d34:	e187      	b.n	8005046 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8004d36:	4b1b      	ldr	r3, [pc, #108]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004d38:	681b      	ldr	r3, [r3, #0]
 8004d3a:	f003 0302 	and.w	r3, r3, #2
 8004d3e:	2b00      	cmp	r3, #0
 8004d40:	d1f0      	bne.n	8004d24 <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8004d42:	687b      	ldr	r3, [r7, #4]
 8004d44:	681b      	ldr	r3, [r3, #0]
 8004d46:	f003 0308 	and.w	r3, r3, #8
 8004d4a:	2b00      	cmp	r3, #0
 8004d4c:	d036      	beq.n	8004dbc <HAL_RCC_OscConfig+0x258>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8004d4e:	687b      	ldr	r3, [r7, #4]
 8004d50:	695b      	ldr	r3, [r3, #20]
 8004d52:	2b00      	cmp	r3, #0
 8004d54:	d016      	beq.n	8004d84 <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8004d56:	4b15      	ldr	r3, [pc, #84]	; (8004dac <HAL_RCC_OscConfig+0x248>)
 8004d58:	2201      	movs	r2, #1
 8004d5a:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8004d5c:	f7fd fd08 	bl	8002770 <HAL_GetTick>
 8004d60:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8004d62:	e008      	b.n	8004d76 <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8004d64:	f7fd fd04 	bl	8002770 <HAL_GetTick>
 8004d68:	4602      	mov	r2, r0
 8004d6a:	693b      	ldr	r3, [r7, #16]
 8004d6c:	1ad3      	subs	r3, r2, r3
 8004d6e:	2b02      	cmp	r3, #2
 8004d70:	d901      	bls.n	8004d76 <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 8004d72:	2303      	movs	r3, #3
 8004d74:	e167      	b.n	8005046 <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8004d76:	4b0b      	ldr	r3, [pc, #44]	; (8004da4 <HAL_RCC_OscConfig+0x240>)
 8004d78:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004d7a:	f003 0302 	and.w	r3, r3, #2
 8004d7e:	2b00      	cmp	r3, #0
 8004d80:	d0f0      	beq.n	8004d64 <HAL_RCC_OscConfig+0x200>
 8004d82:	e01b      	b.n	8004dbc <HAL_RCC_OscConfig+0x258>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8004d84:	4b09      	ldr	r3, [pc, #36]	; (8004dac <HAL_RCC_OscConfig+0x248>)
 8004d86:	2200      	movs	r2, #0
 8004d88:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004d8a:	f7fd fcf1 	bl	8002770 <HAL_GetTick>
 8004d8e:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8004d90:	e00e      	b.n	8004db0 <HAL_RCC_OscConfig+0x24c>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8004d92:	f7fd fced 	bl	8002770 <HAL_GetTick>
 8004d96:	4602      	mov	r2, r0
 8004d98:	693b      	ldr	r3, [r7, #16]
 8004d9a:	1ad3      	subs	r3, r2, r3
 8004d9c:	2b02      	cmp	r3, #2
 8004d9e:	d907      	bls.n	8004db0 <HAL_RCC_OscConfig+0x24c>
        {
          return HAL_TIMEOUT;
 8004da0:	2303      	movs	r3, #3
 8004da2:	e150      	b.n	8005046 <HAL_RCC_OscConfig+0x4e2>
 8004da4:	40023800 	.word	0x40023800
 8004da8:	42470000 	.word	0x42470000
 8004dac:	42470e80 	.word	0x42470e80
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8004db0:	4b88      	ldr	r3, [pc, #544]	; (8004fd4 <HAL_RCC_OscConfig+0x470>)
 8004db2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004db4:	f003 0302 	and.w	r3, r3, #2
 8004db8:	2b00      	cmp	r3, #0
 8004dba:	d1ea      	bne.n	8004d92 <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8004dbc:	687b      	ldr	r3, [r7, #4]
 8004dbe:	681b      	ldr	r3, [r3, #0]
 8004dc0:	f003 0304 	and.w	r3, r3, #4
 8004dc4:	2b00      	cmp	r3, #0
 8004dc6:	f000 8097 	beq.w	8004ef8 <HAL_RCC_OscConfig+0x394>
  {
    FlagStatus       pwrclkchanged = RESET;
 8004dca:	2300      	movs	r3, #0
 8004dcc:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8004dce:	4b81      	ldr	r3, [pc, #516]	; (8004fd4 <HAL_RCC_OscConfig+0x470>)
 8004dd0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004dd2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004dd6:	2b00      	cmp	r3, #0
 8004dd8:	d10f      	bne.n	8004dfa <HAL_RCC_OscConfig+0x296>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8004dda:	2300      	movs	r3, #0
 8004ddc:	60bb      	str	r3, [r7, #8]
 8004dde:	4b7d      	ldr	r3, [pc, #500]	; (8004fd4 <HAL_RCC_OscConfig+0x470>)
 8004de0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004de2:	4a7c      	ldr	r2, [pc, #496]	; (8004fd4 <HAL_RCC_OscConfig+0x470>)
 8004de4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004de8:	6413      	str	r3, [r2, #64]	; 0x40
 8004dea:	4b7a      	ldr	r3, [pc, #488]	; (8004fd4 <HAL_RCC_OscConfig+0x470>)
 8004dec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004dee:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004df2:	60bb      	str	r3, [r7, #8]
 8004df4:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8004df6:	2301      	movs	r3, #1
 8004df8:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004dfa:	4b77      	ldr	r3, [pc, #476]	; (8004fd8 <HAL_RCC_OscConfig+0x474>)
 8004dfc:	681b      	ldr	r3, [r3, #0]
 8004dfe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004e02:	2b00      	cmp	r3, #0
 8004e04:	d118      	bne.n	8004e38 <HAL_RCC_OscConfig+0x2d4>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8004e06:	4b74      	ldr	r3, [pc, #464]	; (8004fd8 <HAL_RCC_OscConfig+0x474>)
 8004e08:	681b      	ldr	r3, [r3, #0]
 8004e0a:	4a73      	ldr	r2, [pc, #460]	; (8004fd8 <HAL_RCC_OscConfig+0x474>)
 8004e0c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004e10:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8004e12:	f7fd fcad 	bl	8002770 <HAL_GetTick>
 8004e16:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004e18:	e008      	b.n	8004e2c <HAL_RCC_OscConfig+0x2c8>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8004e1a:	f7fd fca9 	bl	8002770 <HAL_GetTick>
 8004e1e:	4602      	mov	r2, r0
 8004e20:	693b      	ldr	r3, [r7, #16]
 8004e22:	1ad3      	subs	r3, r2, r3
 8004e24:	2b02      	cmp	r3, #2
 8004e26:	d901      	bls.n	8004e2c <HAL_RCC_OscConfig+0x2c8>
        {
          return HAL_TIMEOUT;
 8004e28:	2303      	movs	r3, #3
 8004e2a:	e10c      	b.n	8005046 <HAL_RCC_OscConfig+0x4e2>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004e2c:	4b6a      	ldr	r3, [pc, #424]	; (8004fd8 <HAL_RCC_OscConfig+0x474>)
 8004e2e:	681b      	ldr	r3, [r3, #0]
 8004e30:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004e34:	2b00      	cmp	r3, #0
 8004e36:	d0f0      	beq.n	8004e1a <HAL_RCC_OscConfig+0x2b6>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8004e38:	687b      	ldr	r3, [r7, #4]
 8004e3a:	689b      	ldr	r3, [r3, #8]
 8004e3c:	2b01      	cmp	r3, #1
 8004e3e:	d106      	bne.n	8004e4e <HAL_RCC_OscConfig+0x2ea>
 8004e40:	4b64      	ldr	r3, [pc, #400]	; (8004fd4 <HAL_RCC_OscConfig+0x470>)
 8004e42:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004e44:	4a63      	ldr	r2, [pc, #396]	; (8004fd4 <HAL_RCC_OscConfig+0x470>)
 8004e46:	f043 0301 	orr.w	r3, r3, #1
 8004e4a:	6713      	str	r3, [r2, #112]	; 0x70
 8004e4c:	e01c      	b.n	8004e88 <HAL_RCC_OscConfig+0x324>
 8004e4e:	687b      	ldr	r3, [r7, #4]
 8004e50:	689b      	ldr	r3, [r3, #8]
 8004e52:	2b05      	cmp	r3, #5
 8004e54:	d10c      	bne.n	8004e70 <HAL_RCC_OscConfig+0x30c>
 8004e56:	4b5f      	ldr	r3, [pc, #380]	; (8004fd4 <HAL_RCC_OscConfig+0x470>)
 8004e58:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004e5a:	4a5e      	ldr	r2, [pc, #376]	; (8004fd4 <HAL_RCC_OscConfig+0x470>)
 8004e5c:	f043 0304 	orr.w	r3, r3, #4
 8004e60:	6713      	str	r3, [r2, #112]	; 0x70
 8004e62:	4b5c      	ldr	r3, [pc, #368]	; (8004fd4 <HAL_RCC_OscConfig+0x470>)
 8004e64:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004e66:	4a5b      	ldr	r2, [pc, #364]	; (8004fd4 <HAL_RCC_OscConfig+0x470>)
 8004e68:	f043 0301 	orr.w	r3, r3, #1
 8004e6c:	6713      	str	r3, [r2, #112]	; 0x70
 8004e6e:	e00b      	b.n	8004e88 <HAL_RCC_OscConfig+0x324>
 8004e70:	4b58      	ldr	r3, [pc, #352]	; (8004fd4 <HAL_RCC_OscConfig+0x470>)
 8004e72:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004e74:	4a57      	ldr	r2, [pc, #348]	; (8004fd4 <HAL_RCC_OscConfig+0x470>)
 8004e76:	f023 0301 	bic.w	r3, r3, #1
 8004e7a:	6713      	str	r3, [r2, #112]	; 0x70
 8004e7c:	4b55      	ldr	r3, [pc, #340]	; (8004fd4 <HAL_RCC_OscConfig+0x470>)
 8004e7e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004e80:	4a54      	ldr	r2, [pc, #336]	; (8004fd4 <HAL_RCC_OscConfig+0x470>)
 8004e82:	f023 0304 	bic.w	r3, r3, #4
 8004e86:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8004e88:	687b      	ldr	r3, [r7, #4]
 8004e8a:	689b      	ldr	r3, [r3, #8]
 8004e8c:	2b00      	cmp	r3, #0
 8004e8e:	d015      	beq.n	8004ebc <HAL_RCC_OscConfig+0x358>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8004e90:	f7fd fc6e 	bl	8002770 <HAL_GetTick>
 8004e94:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004e96:	e00a      	b.n	8004eae <HAL_RCC_OscConfig+0x34a>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004e98:	f7fd fc6a 	bl	8002770 <HAL_GetTick>
 8004e9c:	4602      	mov	r2, r0
 8004e9e:	693b      	ldr	r3, [r7, #16]
 8004ea0:	1ad3      	subs	r3, r2, r3
 8004ea2:	f241 3288 	movw	r2, #5000	; 0x1388
 8004ea6:	4293      	cmp	r3, r2
 8004ea8:	d901      	bls.n	8004eae <HAL_RCC_OscConfig+0x34a>
        {
          return HAL_TIMEOUT;
 8004eaa:	2303      	movs	r3, #3
 8004eac:	e0cb      	b.n	8005046 <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004eae:	4b49      	ldr	r3, [pc, #292]	; (8004fd4 <HAL_RCC_OscConfig+0x470>)
 8004eb0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004eb2:	f003 0302 	and.w	r3, r3, #2
 8004eb6:	2b00      	cmp	r3, #0
 8004eb8:	d0ee      	beq.n	8004e98 <HAL_RCC_OscConfig+0x334>
 8004eba:	e014      	b.n	8004ee6 <HAL_RCC_OscConfig+0x382>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004ebc:	f7fd fc58 	bl	8002770 <HAL_GetTick>
 8004ec0:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8004ec2:	e00a      	b.n	8004eda <HAL_RCC_OscConfig+0x376>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004ec4:	f7fd fc54 	bl	8002770 <HAL_GetTick>
 8004ec8:	4602      	mov	r2, r0
 8004eca:	693b      	ldr	r3, [r7, #16]
 8004ecc:	1ad3      	subs	r3, r2, r3
 8004ece:	f241 3288 	movw	r2, #5000	; 0x1388
 8004ed2:	4293      	cmp	r3, r2
 8004ed4:	d901      	bls.n	8004eda <HAL_RCC_OscConfig+0x376>
        {
          return HAL_TIMEOUT;
 8004ed6:	2303      	movs	r3, #3
 8004ed8:	e0b5      	b.n	8005046 <HAL_RCC_OscConfig+0x4e2>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8004eda:	4b3e      	ldr	r3, [pc, #248]	; (8004fd4 <HAL_RCC_OscConfig+0x470>)
 8004edc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004ede:	f003 0302 	and.w	r3, r3, #2
 8004ee2:	2b00      	cmp	r3, #0
 8004ee4:	d1ee      	bne.n	8004ec4 <HAL_RCC_OscConfig+0x360>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8004ee6:	7dfb      	ldrb	r3, [r7, #23]
 8004ee8:	2b01      	cmp	r3, #1
 8004eea:	d105      	bne.n	8004ef8 <HAL_RCC_OscConfig+0x394>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8004eec:	4b39      	ldr	r3, [pc, #228]	; (8004fd4 <HAL_RCC_OscConfig+0x470>)
 8004eee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004ef0:	4a38      	ldr	r2, [pc, #224]	; (8004fd4 <HAL_RCC_OscConfig+0x470>)
 8004ef2:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004ef6:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8004ef8:	687b      	ldr	r3, [r7, #4]
 8004efa:	699b      	ldr	r3, [r3, #24]
 8004efc:	2b00      	cmp	r3, #0
 8004efe:	f000 80a1 	beq.w	8005044 <HAL_RCC_OscConfig+0x4e0>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8004f02:	4b34      	ldr	r3, [pc, #208]	; (8004fd4 <HAL_RCC_OscConfig+0x470>)
 8004f04:	689b      	ldr	r3, [r3, #8]
 8004f06:	f003 030c 	and.w	r3, r3, #12
 8004f0a:	2b08      	cmp	r3, #8
 8004f0c:	d05c      	beq.n	8004fc8 <HAL_RCC_OscConfig+0x464>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8004f0e:	687b      	ldr	r3, [r7, #4]
 8004f10:	699b      	ldr	r3, [r3, #24]
 8004f12:	2b02      	cmp	r3, #2
 8004f14:	d141      	bne.n	8004f9a <HAL_RCC_OscConfig+0x436>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8004f16:	4b31      	ldr	r3, [pc, #196]	; (8004fdc <HAL_RCC_OscConfig+0x478>)
 8004f18:	2200      	movs	r2, #0
 8004f1a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004f1c:	f7fd fc28 	bl	8002770 <HAL_GetTick>
 8004f20:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8004f22:	e008      	b.n	8004f36 <HAL_RCC_OscConfig+0x3d2>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004f24:	f7fd fc24 	bl	8002770 <HAL_GetTick>
 8004f28:	4602      	mov	r2, r0
 8004f2a:	693b      	ldr	r3, [r7, #16]
 8004f2c:	1ad3      	subs	r3, r2, r3
 8004f2e:	2b02      	cmp	r3, #2
 8004f30:	d901      	bls.n	8004f36 <HAL_RCC_OscConfig+0x3d2>
          {
            return HAL_TIMEOUT;
 8004f32:	2303      	movs	r3, #3
 8004f34:	e087      	b.n	8005046 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8004f36:	4b27      	ldr	r3, [pc, #156]	; (8004fd4 <HAL_RCC_OscConfig+0x470>)
 8004f38:	681b      	ldr	r3, [r3, #0]
 8004f3a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004f3e:	2b00      	cmp	r3, #0
 8004f40:	d1f0      	bne.n	8004f24 <HAL_RCC_OscConfig+0x3c0>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8004f42:	687b      	ldr	r3, [r7, #4]
 8004f44:	69da      	ldr	r2, [r3, #28]
 8004f46:	687b      	ldr	r3, [r7, #4]
 8004f48:	6a1b      	ldr	r3, [r3, #32]
 8004f4a:	431a      	orrs	r2, r3
 8004f4c:	687b      	ldr	r3, [r7, #4]
 8004f4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f50:	019b      	lsls	r3, r3, #6
 8004f52:	431a      	orrs	r2, r3
 8004f54:	687b      	ldr	r3, [r7, #4]
 8004f56:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004f58:	085b      	lsrs	r3, r3, #1
 8004f5a:	3b01      	subs	r3, #1
 8004f5c:	041b      	lsls	r3, r3, #16
 8004f5e:	431a      	orrs	r2, r3
 8004f60:	687b      	ldr	r3, [r7, #4]
 8004f62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004f64:	061b      	lsls	r3, r3, #24
 8004f66:	491b      	ldr	r1, [pc, #108]	; (8004fd4 <HAL_RCC_OscConfig+0x470>)
 8004f68:	4313      	orrs	r3, r2
 8004f6a:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8004f6c:	4b1b      	ldr	r3, [pc, #108]	; (8004fdc <HAL_RCC_OscConfig+0x478>)
 8004f6e:	2201      	movs	r2, #1
 8004f70:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004f72:	f7fd fbfd 	bl	8002770 <HAL_GetTick>
 8004f76:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8004f78:	e008      	b.n	8004f8c <HAL_RCC_OscConfig+0x428>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004f7a:	f7fd fbf9 	bl	8002770 <HAL_GetTick>
 8004f7e:	4602      	mov	r2, r0
 8004f80:	693b      	ldr	r3, [r7, #16]
 8004f82:	1ad3      	subs	r3, r2, r3
 8004f84:	2b02      	cmp	r3, #2
 8004f86:	d901      	bls.n	8004f8c <HAL_RCC_OscConfig+0x428>
          {
            return HAL_TIMEOUT;
 8004f88:	2303      	movs	r3, #3
 8004f8a:	e05c      	b.n	8005046 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8004f8c:	4b11      	ldr	r3, [pc, #68]	; (8004fd4 <HAL_RCC_OscConfig+0x470>)
 8004f8e:	681b      	ldr	r3, [r3, #0]
 8004f90:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004f94:	2b00      	cmp	r3, #0
 8004f96:	d0f0      	beq.n	8004f7a <HAL_RCC_OscConfig+0x416>
 8004f98:	e054      	b.n	8005044 <HAL_RCC_OscConfig+0x4e0>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8004f9a:	4b10      	ldr	r3, [pc, #64]	; (8004fdc <HAL_RCC_OscConfig+0x478>)
 8004f9c:	2200      	movs	r2, #0
 8004f9e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004fa0:	f7fd fbe6 	bl	8002770 <HAL_GetTick>
 8004fa4:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8004fa6:	e008      	b.n	8004fba <HAL_RCC_OscConfig+0x456>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004fa8:	f7fd fbe2 	bl	8002770 <HAL_GetTick>
 8004fac:	4602      	mov	r2, r0
 8004fae:	693b      	ldr	r3, [r7, #16]
 8004fb0:	1ad3      	subs	r3, r2, r3
 8004fb2:	2b02      	cmp	r3, #2
 8004fb4:	d901      	bls.n	8004fba <HAL_RCC_OscConfig+0x456>
          {
            return HAL_TIMEOUT;
 8004fb6:	2303      	movs	r3, #3
 8004fb8:	e045      	b.n	8005046 <HAL_RCC_OscConfig+0x4e2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8004fba:	4b06      	ldr	r3, [pc, #24]	; (8004fd4 <HAL_RCC_OscConfig+0x470>)
 8004fbc:	681b      	ldr	r3, [r3, #0]
 8004fbe:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004fc2:	2b00      	cmp	r3, #0
 8004fc4:	d1f0      	bne.n	8004fa8 <HAL_RCC_OscConfig+0x444>
 8004fc6:	e03d      	b.n	8005044 <HAL_RCC_OscConfig+0x4e0>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8004fc8:	687b      	ldr	r3, [r7, #4]
 8004fca:	699b      	ldr	r3, [r3, #24]
 8004fcc:	2b01      	cmp	r3, #1
 8004fce:	d107      	bne.n	8004fe0 <HAL_RCC_OscConfig+0x47c>
      {
        return HAL_ERROR;
 8004fd0:	2301      	movs	r3, #1
 8004fd2:	e038      	b.n	8005046 <HAL_RCC_OscConfig+0x4e2>
 8004fd4:	40023800 	.word	0x40023800
 8004fd8:	40007000 	.word	0x40007000
 8004fdc:	42470060 	.word	0x42470060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 8004fe0:	4b1b      	ldr	r3, [pc, #108]	; (8005050 <HAL_RCC_OscConfig+0x4ec>)
 8004fe2:	685b      	ldr	r3, [r3, #4]
 8004fe4:	60fb      	str	r3, [r7, #12]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
#else
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8004fe6:	687b      	ldr	r3, [r7, #4]
 8004fe8:	699b      	ldr	r3, [r3, #24]
 8004fea:	2b01      	cmp	r3, #1
 8004fec:	d028      	beq.n	8005040 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8004fee:	68fb      	ldr	r3, [r7, #12]
 8004ff0:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8004ff4:	687b      	ldr	r3, [r7, #4]
 8004ff6:	69db      	ldr	r3, [r3, #28]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8004ff8:	429a      	cmp	r2, r3
 8004ffa:	d121      	bne.n	8005040 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8004ffc:	68fb      	ldr	r3, [r7, #12]
 8004ffe:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8005002:	687b      	ldr	r3, [r7, #4]
 8005004:	6a1b      	ldr	r3, [r3, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005006:	429a      	cmp	r2, r3
 8005008:	d11a      	bne.n	8005040 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800500a:	68fa      	ldr	r2, [r7, #12]
 800500c:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8005010:	4013      	ands	r3, r2
 8005012:	687a      	ldr	r2, [r7, #4]
 8005014:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8005016:	0192      	lsls	r2, r2, #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005018:	4293      	cmp	r3, r2
 800501a:	d111      	bne.n	8005040 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800501c:	68fb      	ldr	r3, [r7, #12]
 800501e:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8005022:	687b      	ldr	r3, [r7, #4]
 8005024:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005026:	085b      	lsrs	r3, r3, #1
 8005028:	3b01      	subs	r3, #1
 800502a:	041b      	lsls	r3, r3, #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800502c:	429a      	cmp	r2, r3
 800502e:	d107      	bne.n	8005040 <HAL_RCC_OscConfig+0x4dc>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8005030:	68fb      	ldr	r3, [r7, #12]
 8005032:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8005036:	687b      	ldr	r3, [r7, #4]
 8005038:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800503a:	061b      	lsls	r3, r3, #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800503c:	429a      	cmp	r2, r3
 800503e:	d001      	beq.n	8005044 <HAL_RCC_OscConfig+0x4e0>
#endif
        {
          return HAL_ERROR;
 8005040:	2301      	movs	r3, #1
 8005042:	e000      	b.n	8005046 <HAL_RCC_OscConfig+0x4e2>
        }
      }
    }
  }
  return HAL_OK;
 8005044:	2300      	movs	r3, #0
}
 8005046:	4618      	mov	r0, r3
 8005048:	3718      	adds	r7, #24
 800504a:	46bd      	mov	sp, r7
 800504c:	bd80      	pop	{r7, pc}
 800504e:	bf00      	nop
 8005050:	40023800 	.word	0x40023800

08005054 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8005054:	b580      	push	{r7, lr}
 8005056:	b084      	sub	sp, #16
 8005058:	af00      	add	r7, sp, #0
 800505a:	6078      	str	r0, [r7, #4]
 800505c:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 800505e:	687b      	ldr	r3, [r7, #4]
 8005060:	2b00      	cmp	r3, #0
 8005062:	d101      	bne.n	8005068 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8005064:	2301      	movs	r3, #1
 8005066:	e0cc      	b.n	8005202 <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8005068:	4b68      	ldr	r3, [pc, #416]	; (800520c <HAL_RCC_ClockConfig+0x1b8>)
 800506a:	681b      	ldr	r3, [r3, #0]
 800506c:	f003 030f 	and.w	r3, r3, #15
 8005070:	683a      	ldr	r2, [r7, #0]
 8005072:	429a      	cmp	r2, r3
 8005074:	d90c      	bls.n	8005090 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005076:	4b65      	ldr	r3, [pc, #404]	; (800520c <HAL_RCC_ClockConfig+0x1b8>)
 8005078:	683a      	ldr	r2, [r7, #0]
 800507a:	b2d2      	uxtb	r2, r2
 800507c:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800507e:	4b63      	ldr	r3, [pc, #396]	; (800520c <HAL_RCC_ClockConfig+0x1b8>)
 8005080:	681b      	ldr	r3, [r3, #0]
 8005082:	f003 030f 	and.w	r3, r3, #15
 8005086:	683a      	ldr	r2, [r7, #0]
 8005088:	429a      	cmp	r2, r3
 800508a:	d001      	beq.n	8005090 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 800508c:	2301      	movs	r3, #1
 800508e:	e0b8      	b.n	8005202 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005090:	687b      	ldr	r3, [r7, #4]
 8005092:	681b      	ldr	r3, [r3, #0]
 8005094:	f003 0302 	and.w	r3, r3, #2
 8005098:	2b00      	cmp	r3, #0
 800509a:	d020      	beq.n	80050de <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800509c:	687b      	ldr	r3, [r7, #4]
 800509e:	681b      	ldr	r3, [r3, #0]
 80050a0:	f003 0304 	and.w	r3, r3, #4
 80050a4:	2b00      	cmp	r3, #0
 80050a6:	d005      	beq.n	80050b4 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80050a8:	4b59      	ldr	r3, [pc, #356]	; (8005210 <HAL_RCC_ClockConfig+0x1bc>)
 80050aa:	689b      	ldr	r3, [r3, #8]
 80050ac:	4a58      	ldr	r2, [pc, #352]	; (8005210 <HAL_RCC_ClockConfig+0x1bc>)
 80050ae:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 80050b2:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80050b4:	687b      	ldr	r3, [r7, #4]
 80050b6:	681b      	ldr	r3, [r3, #0]
 80050b8:	f003 0308 	and.w	r3, r3, #8
 80050bc:	2b00      	cmp	r3, #0
 80050be:	d005      	beq.n	80050cc <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80050c0:	4b53      	ldr	r3, [pc, #332]	; (8005210 <HAL_RCC_ClockConfig+0x1bc>)
 80050c2:	689b      	ldr	r3, [r3, #8]
 80050c4:	4a52      	ldr	r2, [pc, #328]	; (8005210 <HAL_RCC_ClockConfig+0x1bc>)
 80050c6:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80050ca:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80050cc:	4b50      	ldr	r3, [pc, #320]	; (8005210 <HAL_RCC_ClockConfig+0x1bc>)
 80050ce:	689b      	ldr	r3, [r3, #8]
 80050d0:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80050d4:	687b      	ldr	r3, [r7, #4]
 80050d6:	689b      	ldr	r3, [r3, #8]
 80050d8:	494d      	ldr	r1, [pc, #308]	; (8005210 <HAL_RCC_ClockConfig+0x1bc>)
 80050da:	4313      	orrs	r3, r2
 80050dc:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80050de:	687b      	ldr	r3, [r7, #4]
 80050e0:	681b      	ldr	r3, [r3, #0]
 80050e2:	f003 0301 	and.w	r3, r3, #1
 80050e6:	2b00      	cmp	r3, #0
 80050e8:	d044      	beq.n	8005174 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80050ea:	687b      	ldr	r3, [r7, #4]
 80050ec:	685b      	ldr	r3, [r3, #4]
 80050ee:	2b01      	cmp	r3, #1
 80050f0:	d107      	bne.n	8005102 <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80050f2:	4b47      	ldr	r3, [pc, #284]	; (8005210 <HAL_RCC_ClockConfig+0x1bc>)
 80050f4:	681b      	ldr	r3, [r3, #0]
 80050f6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80050fa:	2b00      	cmp	r3, #0
 80050fc:	d119      	bne.n	8005132 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80050fe:	2301      	movs	r3, #1
 8005100:	e07f      	b.n	8005202 <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005102:	687b      	ldr	r3, [r7, #4]
 8005104:	685b      	ldr	r3, [r3, #4]
 8005106:	2b02      	cmp	r3, #2
 8005108:	d003      	beq.n	8005112 <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 800510a:	687b      	ldr	r3, [r7, #4]
 800510c:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800510e:	2b03      	cmp	r3, #3
 8005110:	d107      	bne.n	8005122 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005112:	4b3f      	ldr	r3, [pc, #252]	; (8005210 <HAL_RCC_ClockConfig+0x1bc>)
 8005114:	681b      	ldr	r3, [r3, #0]
 8005116:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800511a:	2b00      	cmp	r3, #0
 800511c:	d109      	bne.n	8005132 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800511e:	2301      	movs	r3, #1
 8005120:	e06f      	b.n	8005202 <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005122:	4b3b      	ldr	r3, [pc, #236]	; (8005210 <HAL_RCC_ClockConfig+0x1bc>)
 8005124:	681b      	ldr	r3, [r3, #0]
 8005126:	f003 0302 	and.w	r3, r3, #2
 800512a:	2b00      	cmp	r3, #0
 800512c:	d101      	bne.n	8005132 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800512e:	2301      	movs	r3, #1
 8005130:	e067      	b.n	8005202 <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8005132:	4b37      	ldr	r3, [pc, #220]	; (8005210 <HAL_RCC_ClockConfig+0x1bc>)
 8005134:	689b      	ldr	r3, [r3, #8]
 8005136:	f023 0203 	bic.w	r2, r3, #3
 800513a:	687b      	ldr	r3, [r7, #4]
 800513c:	685b      	ldr	r3, [r3, #4]
 800513e:	4934      	ldr	r1, [pc, #208]	; (8005210 <HAL_RCC_ClockConfig+0x1bc>)
 8005140:	4313      	orrs	r3, r2
 8005142:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8005144:	f7fd fb14 	bl	8002770 <HAL_GetTick>
 8005148:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800514a:	e00a      	b.n	8005162 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800514c:	f7fd fb10 	bl	8002770 <HAL_GetTick>
 8005150:	4602      	mov	r2, r0
 8005152:	68fb      	ldr	r3, [r7, #12]
 8005154:	1ad3      	subs	r3, r2, r3
 8005156:	f241 3288 	movw	r2, #5000	; 0x1388
 800515a:	4293      	cmp	r3, r2
 800515c:	d901      	bls.n	8005162 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 800515e:	2303      	movs	r3, #3
 8005160:	e04f      	b.n	8005202 <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005162:	4b2b      	ldr	r3, [pc, #172]	; (8005210 <HAL_RCC_ClockConfig+0x1bc>)
 8005164:	689b      	ldr	r3, [r3, #8]
 8005166:	f003 020c 	and.w	r2, r3, #12
 800516a:	687b      	ldr	r3, [r7, #4]
 800516c:	685b      	ldr	r3, [r3, #4]
 800516e:	009b      	lsls	r3, r3, #2
 8005170:	429a      	cmp	r2, r3
 8005172:	d1eb      	bne.n	800514c <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8005174:	4b25      	ldr	r3, [pc, #148]	; (800520c <HAL_RCC_ClockConfig+0x1b8>)
 8005176:	681b      	ldr	r3, [r3, #0]
 8005178:	f003 030f 	and.w	r3, r3, #15
 800517c:	683a      	ldr	r2, [r7, #0]
 800517e:	429a      	cmp	r2, r3
 8005180:	d20c      	bcs.n	800519c <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005182:	4b22      	ldr	r3, [pc, #136]	; (800520c <HAL_RCC_ClockConfig+0x1b8>)
 8005184:	683a      	ldr	r2, [r7, #0]
 8005186:	b2d2      	uxtb	r2, r2
 8005188:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800518a:	4b20      	ldr	r3, [pc, #128]	; (800520c <HAL_RCC_ClockConfig+0x1b8>)
 800518c:	681b      	ldr	r3, [r3, #0]
 800518e:	f003 030f 	and.w	r3, r3, #15
 8005192:	683a      	ldr	r2, [r7, #0]
 8005194:	429a      	cmp	r2, r3
 8005196:	d001      	beq.n	800519c <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8005198:	2301      	movs	r3, #1
 800519a:	e032      	b.n	8005202 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800519c:	687b      	ldr	r3, [r7, #4]
 800519e:	681b      	ldr	r3, [r3, #0]
 80051a0:	f003 0304 	and.w	r3, r3, #4
 80051a4:	2b00      	cmp	r3, #0
 80051a6:	d008      	beq.n	80051ba <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80051a8:	4b19      	ldr	r3, [pc, #100]	; (8005210 <HAL_RCC_ClockConfig+0x1bc>)
 80051aa:	689b      	ldr	r3, [r3, #8]
 80051ac:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 80051b0:	687b      	ldr	r3, [r7, #4]
 80051b2:	68db      	ldr	r3, [r3, #12]
 80051b4:	4916      	ldr	r1, [pc, #88]	; (8005210 <HAL_RCC_ClockConfig+0x1bc>)
 80051b6:	4313      	orrs	r3, r2
 80051b8:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80051ba:	687b      	ldr	r3, [r7, #4]
 80051bc:	681b      	ldr	r3, [r3, #0]
 80051be:	f003 0308 	and.w	r3, r3, #8
 80051c2:	2b00      	cmp	r3, #0
 80051c4:	d009      	beq.n	80051da <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80051c6:	4b12      	ldr	r3, [pc, #72]	; (8005210 <HAL_RCC_ClockConfig+0x1bc>)
 80051c8:	689b      	ldr	r3, [r3, #8]
 80051ca:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80051ce:	687b      	ldr	r3, [r7, #4]
 80051d0:	691b      	ldr	r3, [r3, #16]
 80051d2:	00db      	lsls	r3, r3, #3
 80051d4:	490e      	ldr	r1, [pc, #56]	; (8005210 <HAL_RCC_ClockConfig+0x1bc>)
 80051d6:	4313      	orrs	r3, r2
 80051d8:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80051da:	f000 f821 	bl	8005220 <HAL_RCC_GetSysClockFreq>
 80051de:	4602      	mov	r2, r0
 80051e0:	4b0b      	ldr	r3, [pc, #44]	; (8005210 <HAL_RCC_ClockConfig+0x1bc>)
 80051e2:	689b      	ldr	r3, [r3, #8]
 80051e4:	091b      	lsrs	r3, r3, #4
 80051e6:	f003 030f 	and.w	r3, r3, #15
 80051ea:	490a      	ldr	r1, [pc, #40]	; (8005214 <HAL_RCC_ClockConfig+0x1c0>)
 80051ec:	5ccb      	ldrb	r3, [r1, r3]
 80051ee:	fa22 f303 	lsr.w	r3, r2, r3
 80051f2:	4a09      	ldr	r2, [pc, #36]	; (8005218 <HAL_RCC_ClockConfig+0x1c4>)
 80051f4:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 80051f6:	4b09      	ldr	r3, [pc, #36]	; (800521c <HAL_RCC_ClockConfig+0x1c8>)
 80051f8:	681b      	ldr	r3, [r3, #0]
 80051fa:	4618      	mov	r0, r3
 80051fc:	f7fc f942 	bl	8001484 <HAL_InitTick>

  return HAL_OK;
 8005200:	2300      	movs	r3, #0
}
 8005202:	4618      	mov	r0, r3
 8005204:	3710      	adds	r7, #16
 8005206:	46bd      	mov	sp, r7
 8005208:	bd80      	pop	{r7, pc}
 800520a:	bf00      	nop
 800520c:	40023c00 	.word	0x40023c00
 8005210:	40023800 	.word	0x40023800
 8005214:	0801f550 	.word	0x0801f550
 8005218:	20000004 	.word	0x20000004
 800521c:	20000070 	.word	0x20000070

08005220 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8005220:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005224:	b094      	sub	sp, #80	; 0x50
 8005226:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 8005228:	2300      	movs	r3, #0
 800522a:	647b      	str	r3, [r7, #68]	; 0x44
 800522c:	2300      	movs	r3, #0
 800522e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8005230:	2300      	movs	r3, #0
 8005232:	643b      	str	r3, [r7, #64]	; 0x40
  uint32_t sysclockfreq = 0U;
 8005234:	2300      	movs	r3, #0
 8005236:	64bb      	str	r3, [r7, #72]	; 0x48

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005238:	4b79      	ldr	r3, [pc, #484]	; (8005420 <HAL_RCC_GetSysClockFreq+0x200>)
 800523a:	689b      	ldr	r3, [r3, #8]
 800523c:	f003 030c 	and.w	r3, r3, #12
 8005240:	2b08      	cmp	r3, #8
 8005242:	d00d      	beq.n	8005260 <HAL_RCC_GetSysClockFreq+0x40>
 8005244:	2b08      	cmp	r3, #8
 8005246:	f200 80e1 	bhi.w	800540c <HAL_RCC_GetSysClockFreq+0x1ec>
 800524a:	2b00      	cmp	r3, #0
 800524c:	d002      	beq.n	8005254 <HAL_RCC_GetSysClockFreq+0x34>
 800524e:	2b04      	cmp	r3, #4
 8005250:	d003      	beq.n	800525a <HAL_RCC_GetSysClockFreq+0x3a>
 8005252:	e0db      	b.n	800540c <HAL_RCC_GetSysClockFreq+0x1ec>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8005254:	4b73      	ldr	r3, [pc, #460]	; (8005424 <HAL_RCC_GetSysClockFreq+0x204>)
 8005256:	64bb      	str	r3, [r7, #72]	; 0x48
       break;
 8005258:	e0db      	b.n	8005412 <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 800525a:	4b73      	ldr	r3, [pc, #460]	; (8005428 <HAL_RCC_GetSysClockFreq+0x208>)
 800525c:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 800525e:	e0d8      	b.n	8005412 <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005260:	4b6f      	ldr	r3, [pc, #444]	; (8005420 <HAL_RCC_GetSysClockFreq+0x200>)
 8005262:	685b      	ldr	r3, [r3, #4]
 8005264:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8005268:	647b      	str	r3, [r7, #68]	; 0x44
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800526a:	4b6d      	ldr	r3, [pc, #436]	; (8005420 <HAL_RCC_GetSysClockFreq+0x200>)
 800526c:	685b      	ldr	r3, [r3, #4]
 800526e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005272:	2b00      	cmp	r3, #0
 8005274:	d063      	beq.n	800533e <HAL_RCC_GetSysClockFreq+0x11e>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005276:	4b6a      	ldr	r3, [pc, #424]	; (8005420 <HAL_RCC_GetSysClockFreq+0x200>)
 8005278:	685b      	ldr	r3, [r3, #4]
 800527a:	099b      	lsrs	r3, r3, #6
 800527c:	2200      	movs	r2, #0
 800527e:	63bb      	str	r3, [r7, #56]	; 0x38
 8005280:	63fa      	str	r2, [r7, #60]	; 0x3c
 8005282:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005284:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005288:	633b      	str	r3, [r7, #48]	; 0x30
 800528a:	2300      	movs	r3, #0
 800528c:	637b      	str	r3, [r7, #52]	; 0x34
 800528e:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 8005292:	4622      	mov	r2, r4
 8005294:	462b      	mov	r3, r5
 8005296:	f04f 0000 	mov.w	r0, #0
 800529a:	f04f 0100 	mov.w	r1, #0
 800529e:	0159      	lsls	r1, r3, #5
 80052a0:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80052a4:	0150      	lsls	r0, r2, #5
 80052a6:	4602      	mov	r2, r0
 80052a8:	460b      	mov	r3, r1
 80052aa:	4621      	mov	r1, r4
 80052ac:	1a51      	subs	r1, r2, r1
 80052ae:	6139      	str	r1, [r7, #16]
 80052b0:	4629      	mov	r1, r5
 80052b2:	eb63 0301 	sbc.w	r3, r3, r1
 80052b6:	617b      	str	r3, [r7, #20]
 80052b8:	f04f 0200 	mov.w	r2, #0
 80052bc:	f04f 0300 	mov.w	r3, #0
 80052c0:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80052c4:	4659      	mov	r1, fp
 80052c6:	018b      	lsls	r3, r1, #6
 80052c8:	4651      	mov	r1, sl
 80052ca:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80052ce:	4651      	mov	r1, sl
 80052d0:	018a      	lsls	r2, r1, #6
 80052d2:	4651      	mov	r1, sl
 80052d4:	ebb2 0801 	subs.w	r8, r2, r1
 80052d8:	4659      	mov	r1, fp
 80052da:	eb63 0901 	sbc.w	r9, r3, r1
 80052de:	f04f 0200 	mov.w	r2, #0
 80052e2:	f04f 0300 	mov.w	r3, #0
 80052e6:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80052ea:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80052ee:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80052f2:	4690      	mov	r8, r2
 80052f4:	4699      	mov	r9, r3
 80052f6:	4623      	mov	r3, r4
 80052f8:	eb18 0303 	adds.w	r3, r8, r3
 80052fc:	60bb      	str	r3, [r7, #8]
 80052fe:	462b      	mov	r3, r5
 8005300:	eb49 0303 	adc.w	r3, r9, r3
 8005304:	60fb      	str	r3, [r7, #12]
 8005306:	f04f 0200 	mov.w	r2, #0
 800530a:	f04f 0300 	mov.w	r3, #0
 800530e:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8005312:	4629      	mov	r1, r5
 8005314:	024b      	lsls	r3, r1, #9
 8005316:	4621      	mov	r1, r4
 8005318:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 800531c:	4621      	mov	r1, r4
 800531e:	024a      	lsls	r2, r1, #9
 8005320:	4610      	mov	r0, r2
 8005322:	4619      	mov	r1, r3
 8005324:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8005326:	2200      	movs	r2, #0
 8005328:	62bb      	str	r3, [r7, #40]	; 0x28
 800532a:	62fa      	str	r2, [r7, #44]	; 0x2c
 800532c:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8005330:	f7fa ffae 	bl	8000290 <__aeabi_uldivmod>
 8005334:	4602      	mov	r2, r0
 8005336:	460b      	mov	r3, r1
 8005338:	4613      	mov	r3, r2
 800533a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800533c:	e058      	b.n	80053f0 <HAL_RCC_GetSysClockFreq+0x1d0>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800533e:	4b38      	ldr	r3, [pc, #224]	; (8005420 <HAL_RCC_GetSysClockFreq+0x200>)
 8005340:	685b      	ldr	r3, [r3, #4]
 8005342:	099b      	lsrs	r3, r3, #6
 8005344:	2200      	movs	r2, #0
 8005346:	4618      	mov	r0, r3
 8005348:	4611      	mov	r1, r2
 800534a:	f3c0 0308 	ubfx	r3, r0, #0, #9
 800534e:	623b      	str	r3, [r7, #32]
 8005350:	2300      	movs	r3, #0
 8005352:	627b      	str	r3, [r7, #36]	; 0x24
 8005354:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8005358:	4642      	mov	r2, r8
 800535a:	464b      	mov	r3, r9
 800535c:	f04f 0000 	mov.w	r0, #0
 8005360:	f04f 0100 	mov.w	r1, #0
 8005364:	0159      	lsls	r1, r3, #5
 8005366:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800536a:	0150      	lsls	r0, r2, #5
 800536c:	4602      	mov	r2, r0
 800536e:	460b      	mov	r3, r1
 8005370:	4641      	mov	r1, r8
 8005372:	ebb2 0a01 	subs.w	sl, r2, r1
 8005376:	4649      	mov	r1, r9
 8005378:	eb63 0b01 	sbc.w	fp, r3, r1
 800537c:	f04f 0200 	mov.w	r2, #0
 8005380:	f04f 0300 	mov.w	r3, #0
 8005384:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8005388:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 800538c:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8005390:	ebb2 040a 	subs.w	r4, r2, sl
 8005394:	eb63 050b 	sbc.w	r5, r3, fp
 8005398:	f04f 0200 	mov.w	r2, #0
 800539c:	f04f 0300 	mov.w	r3, #0
 80053a0:	00eb      	lsls	r3, r5, #3
 80053a2:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80053a6:	00e2      	lsls	r2, r4, #3
 80053a8:	4614      	mov	r4, r2
 80053aa:	461d      	mov	r5, r3
 80053ac:	4643      	mov	r3, r8
 80053ae:	18e3      	adds	r3, r4, r3
 80053b0:	603b      	str	r3, [r7, #0]
 80053b2:	464b      	mov	r3, r9
 80053b4:	eb45 0303 	adc.w	r3, r5, r3
 80053b8:	607b      	str	r3, [r7, #4]
 80053ba:	f04f 0200 	mov.w	r2, #0
 80053be:	f04f 0300 	mov.w	r3, #0
 80053c2:	e9d7 4500 	ldrd	r4, r5, [r7]
 80053c6:	4629      	mov	r1, r5
 80053c8:	028b      	lsls	r3, r1, #10
 80053ca:	4621      	mov	r1, r4
 80053cc:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80053d0:	4621      	mov	r1, r4
 80053d2:	028a      	lsls	r2, r1, #10
 80053d4:	4610      	mov	r0, r2
 80053d6:	4619      	mov	r1, r3
 80053d8:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80053da:	2200      	movs	r2, #0
 80053dc:	61bb      	str	r3, [r7, #24]
 80053de:	61fa      	str	r2, [r7, #28]
 80053e0:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80053e4:	f7fa ff54 	bl	8000290 <__aeabi_uldivmod>
 80053e8:	4602      	mov	r2, r0
 80053ea:	460b      	mov	r3, r1
 80053ec:	4613      	mov	r3, r2
 80053ee:	64fb      	str	r3, [r7, #76]	; 0x4c
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 80053f0:	4b0b      	ldr	r3, [pc, #44]	; (8005420 <HAL_RCC_GetSysClockFreq+0x200>)
 80053f2:	685b      	ldr	r3, [r3, #4]
 80053f4:	0c1b      	lsrs	r3, r3, #16
 80053f6:	f003 0303 	and.w	r3, r3, #3
 80053fa:	3301      	adds	r3, #1
 80053fc:	005b      	lsls	r3, r3, #1
 80053fe:	643b      	str	r3, [r7, #64]	; 0x40

      sysclockfreq = pllvco/pllp;
 8005400:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8005402:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8005404:	fbb2 f3f3 	udiv	r3, r2, r3
 8005408:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 800540a:	e002      	b.n	8005412 <HAL_RCC_GetSysClockFreq+0x1f2>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 800540c:	4b05      	ldr	r3, [pc, #20]	; (8005424 <HAL_RCC_GetSysClockFreq+0x204>)
 800540e:	64bb      	str	r3, [r7, #72]	; 0x48
      break;
 8005410:	bf00      	nop
    }
  }
  return sysclockfreq;
 8005412:	6cbb      	ldr	r3, [r7, #72]	; 0x48
}
 8005414:	4618      	mov	r0, r3
 8005416:	3750      	adds	r7, #80	; 0x50
 8005418:	46bd      	mov	sp, r7
 800541a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800541e:	bf00      	nop
 8005420:	40023800 	.word	0x40023800
 8005424:	00f42400 	.word	0x00f42400
 8005428:	007a1200 	.word	0x007a1200

0800542c <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 800542c:	b480      	push	{r7}
 800542e:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8005430:	4b03      	ldr	r3, [pc, #12]	; (8005440 <HAL_RCC_GetHCLKFreq+0x14>)
 8005432:	681b      	ldr	r3, [r3, #0]
}
 8005434:	4618      	mov	r0, r3
 8005436:	46bd      	mov	sp, r7
 8005438:	f85d 7b04 	ldr.w	r7, [sp], #4
 800543c:	4770      	bx	lr
 800543e:	bf00      	nop
 8005440:	20000004 	.word	0x20000004

08005444 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8005444:	b580      	push	{r7, lr}
 8005446:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8005448:	f7ff fff0 	bl	800542c <HAL_RCC_GetHCLKFreq>
 800544c:	4602      	mov	r2, r0
 800544e:	4b05      	ldr	r3, [pc, #20]	; (8005464 <HAL_RCC_GetPCLK1Freq+0x20>)
 8005450:	689b      	ldr	r3, [r3, #8]
 8005452:	0a9b      	lsrs	r3, r3, #10
 8005454:	f003 0307 	and.w	r3, r3, #7
 8005458:	4903      	ldr	r1, [pc, #12]	; (8005468 <HAL_RCC_GetPCLK1Freq+0x24>)
 800545a:	5ccb      	ldrb	r3, [r1, r3]
 800545c:	fa22 f303 	lsr.w	r3, r2, r3
}
 8005460:	4618      	mov	r0, r3
 8005462:	bd80      	pop	{r7, pc}
 8005464:	40023800 	.word	0x40023800
 8005468:	0801f560 	.word	0x0801f560

0800546c <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 800546c:	b580      	push	{r7, lr}
 800546e:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8005470:	f7ff ffdc 	bl	800542c <HAL_RCC_GetHCLKFreq>
 8005474:	4602      	mov	r2, r0
 8005476:	4b05      	ldr	r3, [pc, #20]	; (800548c <HAL_RCC_GetPCLK2Freq+0x20>)
 8005478:	689b      	ldr	r3, [r3, #8]
 800547a:	0b5b      	lsrs	r3, r3, #13
 800547c:	f003 0307 	and.w	r3, r3, #7
 8005480:	4903      	ldr	r1, [pc, #12]	; (8005490 <HAL_RCC_GetPCLK2Freq+0x24>)
 8005482:	5ccb      	ldrb	r3, [r1, r3]
 8005484:	fa22 f303 	lsr.w	r3, r2, r3
}
 8005488:	4618      	mov	r0, r3
 800548a:	bd80      	pop	{r7, pc}
 800548c:	40023800 	.word	0x40023800
 8005490:	0801f560 	.word	0x0801f560

08005494 <HAL_RCC_GetClockConfig>:
  * will be configured.
  * @param  pFLatency Pointer on the Flash Latency.
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
 8005494:	b480      	push	{r7}
 8005496:	b083      	sub	sp, #12
 8005498:	af00      	add	r7, sp, #0
 800549a:	6078      	str	r0, [r7, #4]
 800549c:	6039      	str	r1, [r7, #0]
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800549e:	687b      	ldr	r3, [r7, #4]
 80054a0:	220f      	movs	r2, #15
 80054a2:	601a      	str	r2, [r3, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80054a4:	4b12      	ldr	r3, [pc, #72]	; (80054f0 <HAL_RCC_GetClockConfig+0x5c>)
 80054a6:	689b      	ldr	r3, [r3, #8]
 80054a8:	f003 0203 	and.w	r2, r3, #3
 80054ac:	687b      	ldr	r3, [r7, #4]
 80054ae:	605a      	str	r2, [r3, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 80054b0:	4b0f      	ldr	r3, [pc, #60]	; (80054f0 <HAL_RCC_GetClockConfig+0x5c>)
 80054b2:	689b      	ldr	r3, [r3, #8]
 80054b4:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 80054b8:	687b      	ldr	r3, [r7, #4]
 80054ba:	609a      	str	r2, [r3, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 80054bc:	4b0c      	ldr	r3, [pc, #48]	; (80054f0 <HAL_RCC_GetClockConfig+0x5c>)
 80054be:	689b      	ldr	r3, [r3, #8]
 80054c0:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 80054c4:	687b      	ldr	r3, [r7, #4]
 80054c6:	60da      	str	r2, [r3, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 80054c8:	4b09      	ldr	r3, [pc, #36]	; (80054f0 <HAL_RCC_GetClockConfig+0x5c>)
 80054ca:	689b      	ldr	r3, [r3, #8]
 80054cc:	08db      	lsrs	r3, r3, #3
 80054ce:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 80054d2:	687b      	ldr	r3, [r7, #4]
 80054d4:	611a      	str	r2, [r3, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80054d6:	4b07      	ldr	r3, [pc, #28]	; (80054f4 <HAL_RCC_GetClockConfig+0x60>)
 80054d8:	681b      	ldr	r3, [r3, #0]
 80054da:	f003 020f 	and.w	r2, r3, #15
 80054de:	683b      	ldr	r3, [r7, #0]
 80054e0:	601a      	str	r2, [r3, #0]
}
 80054e2:	bf00      	nop
 80054e4:	370c      	adds	r7, #12
 80054e6:	46bd      	mov	sp, r7
 80054e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054ec:	4770      	bx	lr
 80054ee:	bf00      	nop
 80054f0:	40023800 	.word	0x40023800
 80054f4:	40023c00 	.word	0x40023c00

080054f8 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 80054f8:	b580      	push	{r7, lr}
 80054fa:	b086      	sub	sp, #24
 80054fc:	af00      	add	r7, sp, #0
 80054fe:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0U;
 8005500:	2300      	movs	r3, #0
 8005502:	617b      	str	r3, [r7, #20]
  uint32_t tmpreg1 = 0U;
 8005504:	2300      	movs	r3, #0
 8005506:	613b      	str	r3, [r7, #16]

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8005508:	687b      	ldr	r3, [r7, #4]
 800550a:	681b      	ldr	r3, [r3, #0]
 800550c:	f003 0301 	and.w	r3, r3, #1
 8005510:	2b00      	cmp	r3, #0
 8005512:	d10b      	bne.n	800552c <HAL_RCCEx_PeriphCLKConfig+0x34>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8005514:	687b      	ldr	r3, [r7, #4]
 8005516:	681b      	ldr	r3, [r3, #0]
 8005518:	f003 0302 	and.w	r3, r3, #2
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800551c:	2b00      	cmp	r3, #0
 800551e:	d105      	bne.n	800552c <HAL_RCCEx_PeriphCLKConfig+0x34>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 8005520:	687b      	ldr	r3, [r7, #4]
 8005522:	681b      	ldr	r3, [r3, #0]
 8005524:	f003 0340 	and.w	r3, r3, #64	; 0x40
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8005528:	2b00      	cmp	r3, #0
 800552a:	d075      	beq.n	8005618 <HAL_RCCEx_PeriphCLKConfig+0x120>
  {
    /* check for Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 800552c:	4b91      	ldr	r3, [pc, #580]	; (8005774 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 800552e:	2200      	movs	r2, #0
 8005530:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8005532:	f7fd f91d 	bl	8002770 <HAL_GetTick>
 8005536:	6178      	str	r0, [r7, #20]
    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005538:	e008      	b.n	800554c <HAL_RCCEx_PeriphCLKConfig+0x54>
    {
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800553a:	f7fd f919 	bl	8002770 <HAL_GetTick>
 800553e:	4602      	mov	r2, r0
 8005540:	697b      	ldr	r3, [r7, #20]
 8005542:	1ad3      	subs	r3, r2, r3
 8005544:	2b02      	cmp	r3, #2
 8005546:	d901      	bls.n	800554c <HAL_RCCEx_PeriphCLKConfig+0x54>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8005548:	2303      	movs	r3, #3
 800554a:	e189      	b.n	8005860 <HAL_RCCEx_PeriphCLKConfig+0x368>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800554c:	4b8a      	ldr	r3, [pc, #552]	; (8005778 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800554e:	681b      	ldr	r3, [r3, #0]
 8005550:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8005554:	2b00      	cmp	r3, #0
 8005556:	d1f0      	bne.n	800553a <HAL_RCCEx_PeriphCLKConfig+0x42>
    }

    /*---------------------------- I2S configuration -------------------------*/
    /* In Case of I2S Clock Configuration through PLLI2S, PLLI2SR must be added
      only for I2S configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8005558:	687b      	ldr	r3, [r7, #4]
 800555a:	681b      	ldr	r3, [r3, #0]
 800555c:	f003 0301 	and.w	r3, r3, #1
 8005560:	2b00      	cmp	r3, #0
 8005562:	d009      	beq.n	8005578 <HAL_RCCEx_PeriphCLKConfig+0x80>
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) * (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8005564:	687b      	ldr	r3, [r7, #4]
 8005566:	685b      	ldr	r3, [r3, #4]
 8005568:	019a      	lsls	r2, r3, #6
 800556a:	687b      	ldr	r3, [r7, #4]
 800556c:	689b      	ldr	r3, [r3, #8]
 800556e:	071b      	lsls	r3, r3, #28
 8005570:	4981      	ldr	r1, [pc, #516]	; (8005778 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8005572:	4313      	orrs	r3, r2
 8005574:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLI2S, PLLI2SQ and PLLI2S_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8005578:	687b      	ldr	r3, [r7, #4]
 800557a:	681b      	ldr	r3, [r3, #0]
 800557c:	f003 0302 	and.w	r3, r3, #2
 8005580:	2b00      	cmp	r3, #0
 8005582:	d01f      	beq.n	80055c4 <HAL_RCCEx_PeriphCLKConfig+0xcc>
      /* Check the PLLI2S division factors */
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));

      /* Read PLLI2SR value from PLLI2SCFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005584:	4b7c      	ldr	r3, [pc, #496]	; (8005778 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8005586:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800558a:	0f1b      	lsrs	r3, r3, #28
 800558c:	f003 0307 	and.w	r3, r3, #7
 8005590:	613b      	str	r3, [r7, #16]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
      /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8005592:	687b      	ldr	r3, [r7, #4]
 8005594:	685b      	ldr	r3, [r3, #4]
 8005596:	019a      	lsls	r2, r3, #6
 8005598:	687b      	ldr	r3, [r7, #4]
 800559a:	68db      	ldr	r3, [r3, #12]
 800559c:	061b      	lsls	r3, r3, #24
 800559e:	431a      	orrs	r2, r3
 80055a0:	693b      	ldr	r3, [r7, #16]
 80055a2:	071b      	lsls	r3, r3, #28
 80055a4:	4974      	ldr	r1, [pc, #464]	; (8005778 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80055a6:	4313      	orrs	r3, r2
 80055a8:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80055ac:	4b72      	ldr	r3, [pc, #456]	; (8005778 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80055ae:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80055b2:	f023 021f 	bic.w	r2, r3, #31
 80055b6:	687b      	ldr	r3, [r7, #4]
 80055b8:	69db      	ldr	r3, [r3, #28]
 80055ba:	3b01      	subs	r3, #1
 80055bc:	496e      	ldr	r1, [pc, #440]	; (8005778 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80055be:	4313      	orrs	r3, r2
 80055c0:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80055c4:	687b      	ldr	r3, [r7, #4]
 80055c6:	681b      	ldr	r3, [r3, #0]
 80055c8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80055cc:	2b00      	cmp	r3, #0
 80055ce:	d00d      	beq.n	80055ec <HAL_RCCEx_PeriphCLKConfig+0xf4>
      /* Check for Parameters */
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Configure the PLLI2S multiplication and division factors */
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 80055d0:	687b      	ldr	r3, [r7, #4]
 80055d2:	685b      	ldr	r3, [r3, #4]
 80055d4:	019a      	lsls	r2, r3, #6
 80055d6:	687b      	ldr	r3, [r7, #4]
 80055d8:	68db      	ldr	r3, [r3, #12]
 80055da:	061b      	lsls	r3, r3, #24
 80055dc:	431a      	orrs	r2, r3
 80055de:	687b      	ldr	r3, [r7, #4]
 80055e0:	689b      	ldr	r3, [r3, #8]
 80055e2:	071b      	lsls	r3, r3, #28
 80055e4:	4964      	ldr	r1, [pc, #400]	; (8005778 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80055e6:	4313      	orrs	r3, r2
 80055e8:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 80055ec:	4b61      	ldr	r3, [pc, #388]	; (8005774 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 80055ee:	2201      	movs	r2, #1
 80055f0:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 80055f2:	f7fd f8bd 	bl	8002770 <HAL_GetTick>
 80055f6:	6178      	str	r0, [r7, #20]
    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80055f8:	e008      	b.n	800560c <HAL_RCCEx_PeriphCLKConfig+0x114>
    {
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80055fa:	f7fd f8b9 	bl	8002770 <HAL_GetTick>
 80055fe:	4602      	mov	r2, r0
 8005600:	697b      	ldr	r3, [r7, #20]
 8005602:	1ad3      	subs	r3, r2, r3
 8005604:	2b02      	cmp	r3, #2
 8005606:	d901      	bls.n	800560c <HAL_RCCEx_PeriphCLKConfig+0x114>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8005608:	2303      	movs	r3, #3
 800560a:	e129      	b.n	8005860 <HAL_RCCEx_PeriphCLKConfig+0x368>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800560c:	4b5a      	ldr	r3, [pc, #360]	; (8005778 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800560e:	681b      	ldr	r3, [r3, #0]
 8005610:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8005614:	2b00      	cmp	r3, #0
 8005616:	d0f0      	beq.n	80055fa <HAL_RCCEx_PeriphCLKConfig+0x102>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8005618:	687b      	ldr	r3, [r7, #4]
 800561a:	681b      	ldr	r3, [r3, #0]
 800561c:	f003 0304 	and.w	r3, r3, #4
 8005620:	2b00      	cmp	r3, #0
 8005622:	d105      	bne.n	8005630 <HAL_RCCEx_PeriphCLKConfig+0x138>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC))
 8005624:	687b      	ldr	r3, [r7, #4]
 8005626:	681b      	ldr	r3, [r3, #0]
 8005628:	f003 0308 	and.w	r3, r3, #8
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800562c:	2b00      	cmp	r3, #0
 800562e:	d079      	beq.n	8005724 <HAL_RCCEx_PeriphCLKConfig+0x22c>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8005630:	4b52      	ldr	r3, [pc, #328]	; (800577c <HAL_RCCEx_PeriphCLKConfig+0x284>)
 8005632:	2200      	movs	r2, #0
 8005634:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8005636:	f7fd f89b 	bl	8002770 <HAL_GetTick>
 800563a:	6178      	str	r0, [r7, #20]
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800563c:	e008      	b.n	8005650 <HAL_RCCEx_PeriphCLKConfig+0x158>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800563e:	f7fd f897 	bl	8002770 <HAL_GetTick>
 8005642:	4602      	mov	r2, r0
 8005644:	697b      	ldr	r3, [r7, #20]
 8005646:	1ad3      	subs	r3, r2, r3
 8005648:	2b02      	cmp	r3, #2
 800564a:	d901      	bls.n	8005650 <HAL_RCCEx_PeriphCLKConfig+0x158>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 800564c:	2303      	movs	r3, #3
 800564e:	e107      	b.n	8005860 <HAL_RCCEx_PeriphCLKConfig+0x368>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005650:	4b49      	ldr	r3, [pc, #292]	; (8005778 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8005652:	681b      	ldr	r3, [r3, #0]
 8005654:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8005658:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800565c:	d0ef      	beq.n	800563e <HAL_RCCEx_PeriphCLKConfig+0x146>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800565e:	687b      	ldr	r3, [r7, #4]
 8005660:	681b      	ldr	r3, [r3, #0]
 8005662:	f003 0304 	and.w	r3, r3, #4
 8005666:	2b00      	cmp	r3, #0
 8005668:	d020      	beq.n	80056ac <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800566a:	4b43      	ldr	r3, [pc, #268]	; (8005778 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800566c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005670:	0f1b      	lsrs	r3, r3, #28
 8005672:	f003 0307 	and.w	r3, r3, #7
 8005676:	613b      	str	r3, [r7, #16]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8005678:	687b      	ldr	r3, [r7, #4]
 800567a:	691b      	ldr	r3, [r3, #16]
 800567c:	019a      	lsls	r2, r3, #6
 800567e:	687b      	ldr	r3, [r7, #4]
 8005680:	695b      	ldr	r3, [r3, #20]
 8005682:	061b      	lsls	r3, r3, #24
 8005684:	431a      	orrs	r2, r3
 8005686:	693b      	ldr	r3, [r7, #16]
 8005688:	071b      	lsls	r3, r3, #28
 800568a:	493b      	ldr	r1, [pc, #236]	; (8005778 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800568c:	4313      	orrs	r3, r2
 800568e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8005692:	4b39      	ldr	r3, [pc, #228]	; (8005778 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8005694:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005698:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 800569c:	687b      	ldr	r3, [r7, #4]
 800569e:	6a1b      	ldr	r3, [r3, #32]
 80056a0:	3b01      	subs	r3, #1
 80056a2:	021b      	lsls	r3, r3, #8
 80056a4:	4934      	ldr	r1, [pc, #208]	; (8005778 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80056a6:	4313      	orrs	r3, r2
 80056a8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80056ac:	687b      	ldr	r3, [r7, #4]
 80056ae:	681b      	ldr	r3, [r3, #0]
 80056b0:	f003 0308 	and.w	r3, r3, #8
 80056b4:	2b00      	cmp	r3, #0
 80056b6:	d01e      	beq.n	80056f6 <HAL_RCCEx_PeriphCLKConfig+0x1fe>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80056b8:	4b2f      	ldr	r3, [pc, #188]	; (8005778 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80056ba:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80056be:	0e1b      	lsrs	r3, r3, #24
 80056c0:	f003 030f 	and.w	r3, r3, #15
 80056c4:	613b      	str	r3, [r7, #16]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80056c6:	687b      	ldr	r3, [r7, #4]
 80056c8:	691b      	ldr	r3, [r3, #16]
 80056ca:	019a      	lsls	r2, r3, #6
 80056cc:	693b      	ldr	r3, [r7, #16]
 80056ce:	061b      	lsls	r3, r3, #24
 80056d0:	431a      	orrs	r2, r3
 80056d2:	687b      	ldr	r3, [r7, #4]
 80056d4:	699b      	ldr	r3, [r3, #24]
 80056d6:	071b      	lsls	r3, r3, #28
 80056d8:	4927      	ldr	r1, [pc, #156]	; (8005778 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80056da:	4313      	orrs	r3, r2
 80056dc:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80056e0:	4b25      	ldr	r3, [pc, #148]	; (8005778 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80056e2:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80056e6:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 80056ea:	687b      	ldr	r3, [r7, #4]
 80056ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056ee:	4922      	ldr	r1, [pc, #136]	; (8005778 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 80056f0:	4313      	orrs	r3, r2
 80056f2:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80056f6:	4b21      	ldr	r3, [pc, #132]	; (800577c <HAL_RCCEx_PeriphCLKConfig+0x284>)
 80056f8:	2201      	movs	r2, #1
 80056fa:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 80056fc:	f7fd f838 	bl	8002770 <HAL_GetTick>
 8005700:	6178      	str	r0, [r7, #20]
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005702:	e008      	b.n	8005716 <HAL_RCCEx_PeriphCLKConfig+0x21e>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8005704:	f7fd f834 	bl	8002770 <HAL_GetTick>
 8005708:	4602      	mov	r2, r0
 800570a:	697b      	ldr	r3, [r7, #20]
 800570c:	1ad3      	subs	r3, r2, r3
 800570e:	2b02      	cmp	r3, #2
 8005710:	d901      	bls.n	8005716 <HAL_RCCEx_PeriphCLKConfig+0x21e>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8005712:	2303      	movs	r3, #3
 8005714:	e0a4      	b.n	8005860 <HAL_RCCEx_PeriphCLKConfig+0x368>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005716:	4b18      	ldr	r3, [pc, #96]	; (8005778 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8005718:	681b      	ldr	r3, [r3, #0]
 800571a:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800571e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8005722:	d1ef      	bne.n	8005704 <HAL_RCCEx_PeriphCLKConfig+0x20c>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8005724:	687b      	ldr	r3, [r7, #4]
 8005726:	681b      	ldr	r3, [r3, #0]
 8005728:	f003 0320 	and.w	r3, r3, #32
 800572c:	2b00      	cmp	r3, #0
 800572e:	f000 808b 	beq.w	8005848 <HAL_RCCEx_PeriphCLKConfig+0x350>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8005732:	2300      	movs	r3, #0
 8005734:	60fb      	str	r3, [r7, #12]
 8005736:	4b10      	ldr	r3, [pc, #64]	; (8005778 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8005738:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800573a:	4a0f      	ldr	r2, [pc, #60]	; (8005778 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 800573c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005740:	6413      	str	r3, [r2, #64]	; 0x40
 8005742:	4b0d      	ldr	r3, [pc, #52]	; (8005778 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8005744:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005746:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800574a:	60fb      	str	r3, [r7, #12]
 800574c:	68fb      	ldr	r3, [r7, #12]

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 800574e:	4b0c      	ldr	r3, [pc, #48]	; (8005780 <HAL_RCCEx_PeriphCLKConfig+0x288>)
 8005750:	681b      	ldr	r3, [r3, #0]
 8005752:	4a0b      	ldr	r2, [pc, #44]	; (8005780 <HAL_RCCEx_PeriphCLKConfig+0x288>)
 8005754:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005758:	6013      	str	r3, [r2, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 800575a:	f7fd f809 	bl	8002770 <HAL_GetTick>
 800575e:	6178      	str	r0, [r7, #20]

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8005760:	e010      	b.n	8005784 <HAL_RCCEx_PeriphCLKConfig+0x28c>
    {
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8005762:	f7fd f805 	bl	8002770 <HAL_GetTick>
 8005766:	4602      	mov	r2, r0
 8005768:	697b      	ldr	r3, [r7, #20]
 800576a:	1ad3      	subs	r3, r2, r3
 800576c:	2b02      	cmp	r3, #2
 800576e:	d909      	bls.n	8005784 <HAL_RCCEx_PeriphCLKConfig+0x28c>
      {
        return HAL_TIMEOUT;
 8005770:	2303      	movs	r3, #3
 8005772:	e075      	b.n	8005860 <HAL_RCCEx_PeriphCLKConfig+0x368>
 8005774:	42470068 	.word	0x42470068
 8005778:	40023800 	.word	0x40023800
 800577c:	42470070 	.word	0x42470070
 8005780:	40007000 	.word	0x40007000
    while((PWR->CR & PWR_CR_DBP) == RESET)
 8005784:	4b38      	ldr	r3, [pc, #224]	; (8005868 <HAL_RCCEx_PeriphCLKConfig+0x370>)
 8005786:	681b      	ldr	r3, [r3, #0]
 8005788:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800578c:	2b00      	cmp	r3, #0
 800578e:	d0e8      	beq.n	8005762 <HAL_RCCEx_PeriphCLKConfig+0x26a>
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8005790:	4b36      	ldr	r3, [pc, #216]	; (800586c <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8005792:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005794:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005798:	613b      	str	r3, [r7, #16]
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800579a:	693b      	ldr	r3, [r7, #16]
 800579c:	2b00      	cmp	r3, #0
 800579e:	d02f      	beq.n	8005800 <HAL_RCCEx_PeriphCLKConfig+0x308>
 80057a0:	687b      	ldr	r3, [r7, #4]
 80057a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80057a4:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80057a8:	693a      	ldr	r2, [r7, #16]
 80057aa:	429a      	cmp	r2, r3
 80057ac:	d028      	beq.n	8005800 <HAL_RCCEx_PeriphCLKConfig+0x308>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80057ae:	4b2f      	ldr	r3, [pc, #188]	; (800586c <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80057b0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80057b2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80057b6:	613b      	str	r3, [r7, #16]
      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 80057b8:	4b2d      	ldr	r3, [pc, #180]	; (8005870 <HAL_RCCEx_PeriphCLKConfig+0x378>)
 80057ba:	2201      	movs	r2, #1
 80057bc:	601a      	str	r2, [r3, #0]
      __HAL_RCC_BACKUPRESET_RELEASE();
 80057be:	4b2c      	ldr	r3, [pc, #176]	; (8005870 <HAL_RCCEx_PeriphCLKConfig+0x378>)
 80057c0:	2200      	movs	r2, #0
 80057c2:	601a      	str	r2, [r3, #0]
      /* Restore the Content of BDCR register */
      RCC->BDCR = tmpreg1;
 80057c4:	4a29      	ldr	r2, [pc, #164]	; (800586c <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80057c6:	693b      	ldr	r3, [r7, #16]
 80057c8:	6713      	str	r3, [r2, #112]	; 0x70

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 80057ca:	4b28      	ldr	r3, [pc, #160]	; (800586c <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80057cc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80057ce:	f003 0301 	and.w	r3, r3, #1
 80057d2:	2b01      	cmp	r3, #1
 80057d4:	d114      	bne.n	8005800 <HAL_RCCEx_PeriphCLKConfig+0x308>
      {
        /* Get tick */
        tickstart = HAL_GetTick();
 80057d6:	f7fc ffcb 	bl	8002770 <HAL_GetTick>
 80057da:	6178      	str	r0, [r7, #20]

        /* Wait till LSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80057dc:	e00a      	b.n	80057f4 <HAL_RCCEx_PeriphCLKConfig+0x2fc>
        {
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80057de:	f7fc ffc7 	bl	8002770 <HAL_GetTick>
 80057e2:	4602      	mov	r2, r0
 80057e4:	697b      	ldr	r3, [r7, #20]
 80057e6:	1ad3      	subs	r3, r2, r3
 80057e8:	f241 3288 	movw	r2, #5000	; 0x1388
 80057ec:	4293      	cmp	r3, r2
 80057ee:	d901      	bls.n	80057f4 <HAL_RCCEx_PeriphCLKConfig+0x2fc>
          {
            return HAL_TIMEOUT;
 80057f0:	2303      	movs	r3, #3
 80057f2:	e035      	b.n	8005860 <HAL_RCCEx_PeriphCLKConfig+0x368>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80057f4:	4b1d      	ldr	r3, [pc, #116]	; (800586c <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80057f6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80057f8:	f003 0302 	and.w	r3, r3, #2
 80057fc:	2b00      	cmp	r3, #0
 80057fe:	d0ee      	beq.n	80057de <HAL_RCCEx_PeriphCLKConfig+0x2e6>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8005800:	687b      	ldr	r3, [r7, #4]
 8005802:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005804:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005808:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800580c:	d10d      	bne.n	800582a <HAL_RCCEx_PeriphCLKConfig+0x332>
 800580e:	4b17      	ldr	r3, [pc, #92]	; (800586c <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8005810:	689b      	ldr	r3, [r3, #8]
 8005812:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 8005816:	687b      	ldr	r3, [r7, #4]
 8005818:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800581a:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
 800581e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005822:	4912      	ldr	r1, [pc, #72]	; (800586c <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8005824:	4313      	orrs	r3, r2
 8005826:	608b      	str	r3, [r1, #8]
 8005828:	e005      	b.n	8005836 <HAL_RCCEx_PeriphCLKConfig+0x33e>
 800582a:	4b10      	ldr	r3, [pc, #64]	; (800586c <HAL_RCCEx_PeriphCLKConfig+0x374>)
 800582c:	689b      	ldr	r3, [r3, #8]
 800582e:	4a0f      	ldr	r2, [pc, #60]	; (800586c <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8005830:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 8005834:	6093      	str	r3, [r2, #8]
 8005836:	4b0d      	ldr	r3, [pc, #52]	; (800586c <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8005838:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800583a:	687b      	ldr	r3, [r7, #4]
 800583c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800583e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005842:	490a      	ldr	r1, [pc, #40]	; (800586c <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8005844:	4313      	orrs	r3, r2
 8005846:	670b      	str	r3, [r1, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8005848:	687b      	ldr	r3, [r7, #4]
 800584a:	681b      	ldr	r3, [r3, #0]
 800584c:	f003 0310 	and.w	r3, r3, #16
 8005850:	2b00      	cmp	r3, #0
 8005852:	d004      	beq.n	800585e <HAL_RCCEx_PeriphCLKConfig+0x366>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8005854:	687b      	ldr	r3, [r7, #4]
 8005856:	f893 202c 	ldrb.w	r2, [r3, #44]	; 0x2c
 800585a:	4b06      	ldr	r3, [pc, #24]	; (8005874 <HAL_RCCEx_PeriphCLKConfig+0x37c>)
 800585c:	601a      	str	r2, [r3, #0]
  }
  return HAL_OK;
 800585e:	2300      	movs	r3, #0
}
 8005860:	4618      	mov	r0, r3
 8005862:	3718      	adds	r7, #24
 8005864:	46bd      	mov	sp, r7
 8005866:	bd80      	pop	{r7, pc}
 8005868:	40007000 	.word	0x40007000
 800586c:	40023800 	.word	0x40023800
 8005870:	42470e40 	.word	0x42470e40
 8005874:	424711e0 	.word	0x424711e0

08005878 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8005878:	b580      	push	{r7, lr}
 800587a:	b082      	sub	sp, #8
 800587c:	af00      	add	r7, sp, #0
 800587e:	6078      	str	r0, [r7, #4]
 8005880:	6039      	str	r1, [r7, #0]
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8005882:	687b      	ldr	r3, [r7, #4]
 8005884:	2b00      	cmp	r3, #0
 8005886:	d101      	bne.n	800588c <HAL_SDRAM_Init+0x14>
  {
    return HAL_ERROR;
 8005888:	2301      	movs	r3, #1
 800588a:	e025      	b.n	80058d8 <HAL_SDRAM_Init+0x60>
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800588c:	687b      	ldr	r3, [r7, #4]
 800588e:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8005892:	b2db      	uxtb	r3, r3
 8005894:	2b00      	cmp	r3, #0
 8005896:	d106      	bne.n	80058a6 <HAL_SDRAM_Init+0x2e>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8005898:	687b      	ldr	r3, [r7, #4]
 800589a:	2200      	movs	r2, #0
 800589c:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80058a0:	6878      	ldr	r0, [r7, #4]
 80058a2:	f7fb fde5 	bl	8001470 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80058a6:	687b      	ldr	r3, [r7, #4]
 80058a8:	2202      	movs	r2, #2
 80058aa:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80058ae:	687b      	ldr	r3, [r7, #4]
 80058b0:	681a      	ldr	r2, [r3, #0]
 80058b2:	687b      	ldr	r3, [r7, #4]
 80058b4:	3304      	adds	r3, #4
 80058b6:	4619      	mov	r1, r3
 80058b8:	4610      	mov	r0, r2
 80058ba:	f001 fd33 	bl	8007324 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 80058be:	687b      	ldr	r3, [r7, #4]
 80058c0:	6818      	ldr	r0, [r3, #0]
 80058c2:	687b      	ldr	r3, [r7, #4]
 80058c4:	685b      	ldr	r3, [r3, #4]
 80058c6:	461a      	mov	r2, r3
 80058c8:	6839      	ldr	r1, [r7, #0]
 80058ca:	f001 fd88 	bl	80073de <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80058ce:	687b      	ldr	r3, [r7, #4]
 80058d0:	2201      	movs	r2, #1
 80058d2:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c

  return HAL_OK;
 80058d6:	2300      	movs	r3, #0
}
 80058d8:	4618      	mov	r0, r3
 80058da:	3708      	adds	r7, #8
 80058dc:	46bd      	mov	sp, r7
 80058de:	bd80      	pop	{r7, pc}

080058e0 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 80058e0:	b580      	push	{r7, lr}
 80058e2:	b082      	sub	sp, #8
 80058e4:	af00      	add	r7, sp, #0
 80058e6:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 80058e8:	687b      	ldr	r3, [r7, #4]
 80058ea:	2b00      	cmp	r3, #0
 80058ec:	d101      	bne.n	80058f2 <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 80058ee:	2301      	movs	r3, #1
 80058f0:	e07b      	b.n	80059ea <HAL_SPI_Init+0x10a>
  assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 80058f2:	687b      	ldr	r3, [r7, #4]
 80058f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80058f6:	2b00      	cmp	r3, #0
 80058f8:	d108      	bne.n	800590c <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 80058fa:	687b      	ldr	r3, [r7, #4]
 80058fc:	685b      	ldr	r3, [r3, #4]
 80058fe:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005902:	d009      	beq.n	8005918 <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8005904:	687b      	ldr	r3, [r7, #4]
 8005906:	2200      	movs	r2, #0
 8005908:	61da      	str	r2, [r3, #28]
 800590a:	e005      	b.n	8005918 <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800590c:	687b      	ldr	r3, [r7, #4]
 800590e:	2200      	movs	r2, #0
 8005910:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8005912:	687b      	ldr	r3, [r7, #4]
 8005914:	2200      	movs	r2, #0
 8005916:	615a      	str	r2, [r3, #20]
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005918:	687b      	ldr	r3, [r7, #4]
 800591a:	2200      	movs	r2, #0
 800591c:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 800591e:	687b      	ldr	r3, [r7, #4]
 8005920:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8005924:	b2db      	uxtb	r3, r3
 8005926:	2b00      	cmp	r3, #0
 8005928:	d106      	bne.n	8005938 <HAL_SPI_Init+0x58>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 800592a:	687b      	ldr	r3, [r7, #4]
 800592c:	2200      	movs	r2, #0
 800592e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8005932:	6878      	ldr	r0, [r7, #4]
 8005934:	f7fb fc3a 	bl	80011ac <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8005938:	687b      	ldr	r3, [r7, #4]
 800593a:	2202      	movs	r2, #2
 800593c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8005940:	687b      	ldr	r3, [r7, #4]
 8005942:	681b      	ldr	r3, [r3, #0]
 8005944:	681a      	ldr	r2, [r3, #0]
 8005946:	687b      	ldr	r3, [r7, #4]
 8005948:	681b      	ldr	r3, [r3, #0]
 800594a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800594e:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8005950:	687b      	ldr	r3, [r7, #4]
 8005952:	685b      	ldr	r3, [r3, #4]
 8005954:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8005958:	687b      	ldr	r3, [r7, #4]
 800595a:	689b      	ldr	r3, [r3, #8]
 800595c:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8005960:	431a      	orrs	r2, r3
 8005962:	687b      	ldr	r3, [r7, #4]
 8005964:	68db      	ldr	r3, [r3, #12]
 8005966:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800596a:	431a      	orrs	r2, r3
 800596c:	687b      	ldr	r3, [r7, #4]
 800596e:	691b      	ldr	r3, [r3, #16]
 8005970:	f003 0302 	and.w	r3, r3, #2
 8005974:	431a      	orrs	r2, r3
 8005976:	687b      	ldr	r3, [r7, #4]
 8005978:	695b      	ldr	r3, [r3, #20]
 800597a:	f003 0301 	and.w	r3, r3, #1
 800597e:	431a      	orrs	r2, r3
 8005980:	687b      	ldr	r3, [r7, #4]
 8005982:	699b      	ldr	r3, [r3, #24]
 8005984:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8005988:	431a      	orrs	r2, r3
 800598a:	687b      	ldr	r3, [r7, #4]
 800598c:	69db      	ldr	r3, [r3, #28]
 800598e:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8005992:	431a      	orrs	r2, r3
 8005994:	687b      	ldr	r3, [r7, #4]
 8005996:	6a1b      	ldr	r3, [r3, #32]
 8005998:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800599c:	ea42 0103 	orr.w	r1, r2, r3
 80059a0:	687b      	ldr	r3, [r7, #4]
 80059a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80059a4:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 80059a8:	687b      	ldr	r3, [r7, #4]
 80059aa:	681b      	ldr	r3, [r3, #0]
 80059ac:	430a      	orrs	r2, r1
 80059ae:	601a      	str	r2, [r3, #0]
                                  (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
                                  (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
                                  (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 80059b0:	687b      	ldr	r3, [r7, #4]
 80059b2:	699b      	ldr	r3, [r3, #24]
 80059b4:	0c1b      	lsrs	r3, r3, #16
 80059b6:	f003 0104 	and.w	r1, r3, #4
 80059ba:	687b      	ldr	r3, [r7, #4]
 80059bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80059be:	f003 0210 	and.w	r2, r3, #16
 80059c2:	687b      	ldr	r3, [r7, #4]
 80059c4:	681b      	ldr	r3, [r3, #0]
 80059c6:	430a      	orrs	r2, r1
 80059c8:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 80059ca:	687b      	ldr	r3, [r7, #4]
 80059cc:	681b      	ldr	r3, [r3, #0]
 80059ce:	69da      	ldr	r2, [r3, #28]
 80059d0:	687b      	ldr	r3, [r7, #4]
 80059d2:	681b      	ldr	r3, [r3, #0]
 80059d4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80059d8:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80059da:	687b      	ldr	r3, [r7, #4]
 80059dc:	2200      	movs	r2, #0
 80059de:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 80059e0:	687b      	ldr	r3, [r7, #4]
 80059e2:	2201      	movs	r2, #1
 80059e4:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  return HAL_OK;
 80059e8:	2300      	movs	r3, #0
}
 80059ea:	4618      	mov	r0, r3
 80059ec:	3708      	adds	r7, #8
 80059ee:	46bd      	mov	sp, r7
 80059f0:	bd80      	pop	{r7, pc}

080059f2 <HAL_SPI_DeInit>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_DeInit(SPI_HandleTypeDef *hspi)
{
 80059f2:	b580      	push	{r7, lr}
 80059f4:	b082      	sub	sp, #8
 80059f6:	af00      	add	r7, sp, #0
 80059f8:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 80059fa:	687b      	ldr	r3, [r7, #4]
 80059fc:	2b00      	cmp	r3, #0
 80059fe:	d101      	bne.n	8005a04 <HAL_SPI_DeInit+0x12>
  {
    return HAL_ERROR;
 8005a00:	2301      	movs	r3, #1
 8005a02:	e01a      	b.n	8005a3a <HAL_SPI_DeInit+0x48>
  }

  /* Check SPI Instance parameter */
  assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));

  hspi->State = HAL_SPI_STATE_BUSY;
 8005a04:	687b      	ldr	r3, [r7, #4]
 8005a06:	2202      	movs	r2, #2
 8005a08:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Disable the SPI Peripheral Clock */
  __HAL_SPI_DISABLE(hspi);
 8005a0c:	687b      	ldr	r3, [r7, #4]
 8005a0e:	681b      	ldr	r3, [r3, #0]
 8005a10:	681a      	ldr	r2, [r3, #0]
 8005a12:	687b      	ldr	r3, [r7, #4]
 8005a14:	681b      	ldr	r3, [r3, #0]
 8005a16:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005a1a:	601a      	str	r2, [r3, #0]

  /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
  hspi->MspDeInitCallback(hspi);
#else
  /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
  HAL_SPI_MspDeInit(hspi);
 8005a1c:	6878      	ldr	r0, [r7, #4]
 8005a1e:	f7fb fc0d 	bl	800123c <HAL_SPI_MspDeInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8005a22:	687b      	ldr	r3, [r7, #4]
 8005a24:	2200      	movs	r2, #0
 8005a26:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State = HAL_SPI_STATE_RESET;
 8005a28:	687b      	ldr	r3, [r7, #4]
 8005a2a:	2200      	movs	r2, #0
 8005a2c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Release Lock */
  __HAL_UNLOCK(hspi);
 8005a30:	687b      	ldr	r3, [r7, #4]
 8005a32:	2200      	movs	r2, #0
 8005a34:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  return HAL_OK;
 8005a38:	2300      	movs	r3, #0
}
 8005a3a:	4618      	mov	r0, r3
 8005a3c:	3708      	adds	r7, #8
 8005a3e:	46bd      	mov	sp, r7
 8005a40:	bd80      	pop	{r7, pc}

08005a42 <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8005a42:	b580      	push	{r7, lr}
 8005a44:	b088      	sub	sp, #32
 8005a46:	af00      	add	r7, sp, #0
 8005a48:	60f8      	str	r0, [r7, #12]
 8005a4a:	60b9      	str	r1, [r7, #8]
 8005a4c:	603b      	str	r3, [r7, #0]
 8005a4e:	4613      	mov	r3, r2
 8005a50:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 8005a52:	2300      	movs	r3, #0
 8005a54:	77fb      	strb	r3, [r7, #31]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8005a56:	68fb      	ldr	r3, [r7, #12]
 8005a58:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8005a5c:	2b01      	cmp	r3, #1
 8005a5e:	d101      	bne.n	8005a64 <HAL_SPI_Transmit+0x22>
 8005a60:	2302      	movs	r3, #2
 8005a62:	e126      	b.n	8005cb2 <HAL_SPI_Transmit+0x270>
 8005a64:	68fb      	ldr	r3, [r7, #12]
 8005a66:	2201      	movs	r2, #1
 8005a68:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8005a6c:	f7fc fe80 	bl	8002770 <HAL_GetTick>
 8005a70:	61b8      	str	r0, [r7, #24]
  initial_TxXferCount = Size;
 8005a72:	88fb      	ldrh	r3, [r7, #6]
 8005a74:	82fb      	strh	r3, [r7, #22]

  if (hspi->State != HAL_SPI_STATE_READY)
 8005a76:	68fb      	ldr	r3, [r7, #12]
 8005a78:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8005a7c:	b2db      	uxtb	r3, r3
 8005a7e:	2b01      	cmp	r3, #1
 8005a80:	d002      	beq.n	8005a88 <HAL_SPI_Transmit+0x46>
  {
    errorcode = HAL_BUSY;
 8005a82:	2302      	movs	r3, #2
 8005a84:	77fb      	strb	r3, [r7, #31]
    goto error;
 8005a86:	e10b      	b.n	8005ca0 <HAL_SPI_Transmit+0x25e>
  }

  if ((pData == NULL) || (Size == 0U))
 8005a88:	68bb      	ldr	r3, [r7, #8]
 8005a8a:	2b00      	cmp	r3, #0
 8005a8c:	d002      	beq.n	8005a94 <HAL_SPI_Transmit+0x52>
 8005a8e:	88fb      	ldrh	r3, [r7, #6]
 8005a90:	2b00      	cmp	r3, #0
 8005a92:	d102      	bne.n	8005a9a <HAL_SPI_Transmit+0x58>
  {
    errorcode = HAL_ERROR;
 8005a94:	2301      	movs	r3, #1
 8005a96:	77fb      	strb	r3, [r7, #31]
    goto error;
 8005a98:	e102      	b.n	8005ca0 <HAL_SPI_Transmit+0x25e>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8005a9a:	68fb      	ldr	r3, [r7, #12]
 8005a9c:	2203      	movs	r2, #3
 8005a9e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005aa2:	68fb      	ldr	r3, [r7, #12]
 8005aa4:	2200      	movs	r2, #0
 8005aa6:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8005aa8:	68fb      	ldr	r3, [r7, #12]
 8005aaa:	68ba      	ldr	r2, [r7, #8]
 8005aac:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = Size;
 8005aae:	68fb      	ldr	r3, [r7, #12]
 8005ab0:	88fa      	ldrh	r2, [r7, #6]
 8005ab2:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = Size;
 8005ab4:	68fb      	ldr	r3, [r7, #12]
 8005ab6:	88fa      	ldrh	r2, [r7, #6]
 8005ab8:	86da      	strh	r2, [r3, #54]	; 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8005aba:	68fb      	ldr	r3, [r7, #12]
 8005abc:	2200      	movs	r2, #0
 8005abe:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 8005ac0:	68fb      	ldr	r3, [r7, #12]
 8005ac2:	2200      	movs	r2, #0
 8005ac4:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 8005ac6:	68fb      	ldr	r3, [r7, #12]
 8005ac8:	2200      	movs	r2, #0
 8005aca:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->TxISR       = NULL;
 8005acc:	68fb      	ldr	r3, [r7, #12]
 8005ace:	2200      	movs	r2, #0
 8005ad0:	645a      	str	r2, [r3, #68]	; 0x44
  hspi->RxISR       = NULL;
 8005ad2:	68fb      	ldr	r3, [r7, #12]
 8005ad4:	2200      	movs	r2, #0
 8005ad6:	641a      	str	r2, [r3, #64]	; 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005ad8:	68fb      	ldr	r3, [r7, #12]
 8005ada:	689b      	ldr	r3, [r3, #8]
 8005adc:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8005ae0:	d10f      	bne.n	8005b02 <HAL_SPI_Transmit+0xc0>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8005ae2:	68fb      	ldr	r3, [r7, #12]
 8005ae4:	681b      	ldr	r3, [r3, #0]
 8005ae6:	681a      	ldr	r2, [r3, #0]
 8005ae8:	68fb      	ldr	r3, [r7, #12]
 8005aea:	681b      	ldr	r3, [r3, #0]
 8005aec:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005af0:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8005af2:	68fb      	ldr	r3, [r7, #12]
 8005af4:	681b      	ldr	r3, [r3, #0]
 8005af6:	681a      	ldr	r2, [r3, #0]
 8005af8:	68fb      	ldr	r3, [r7, #12]
 8005afa:	681b      	ldr	r3, [r3, #0]
 8005afc:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8005b00:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005b02:	68fb      	ldr	r3, [r7, #12]
 8005b04:	681b      	ldr	r3, [r3, #0]
 8005b06:	681b      	ldr	r3, [r3, #0]
 8005b08:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005b0c:	2b40      	cmp	r3, #64	; 0x40
 8005b0e:	d007      	beq.n	8005b20 <HAL_SPI_Transmit+0xde>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8005b10:	68fb      	ldr	r3, [r7, #12]
 8005b12:	681b      	ldr	r3, [r3, #0]
 8005b14:	681a      	ldr	r2, [r3, #0]
 8005b16:	68fb      	ldr	r3, [r7, #12]
 8005b18:	681b      	ldr	r3, [r3, #0]
 8005b1a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8005b1e:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005b20:	68fb      	ldr	r3, [r7, #12]
 8005b22:	68db      	ldr	r3, [r3, #12]
 8005b24:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8005b28:	d14b      	bne.n	8005bc2 <HAL_SPI_Transmit+0x180>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005b2a:	68fb      	ldr	r3, [r7, #12]
 8005b2c:	685b      	ldr	r3, [r3, #4]
 8005b2e:	2b00      	cmp	r3, #0
 8005b30:	d002      	beq.n	8005b38 <HAL_SPI_Transmit+0xf6>
 8005b32:	8afb      	ldrh	r3, [r7, #22]
 8005b34:	2b01      	cmp	r3, #1
 8005b36:	d13e      	bne.n	8005bb6 <HAL_SPI_Transmit+0x174>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005b38:	68fb      	ldr	r3, [r7, #12]
 8005b3a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005b3c:	881a      	ldrh	r2, [r3, #0]
 8005b3e:	68fb      	ldr	r3, [r7, #12]
 8005b40:	681b      	ldr	r3, [r3, #0]
 8005b42:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8005b44:	68fb      	ldr	r3, [r7, #12]
 8005b46:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005b48:	1c9a      	adds	r2, r3, #2
 8005b4a:	68fb      	ldr	r3, [r7, #12]
 8005b4c:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8005b4e:	68fb      	ldr	r3, [r7, #12]
 8005b50:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005b52:	b29b      	uxth	r3, r3
 8005b54:	3b01      	subs	r3, #1
 8005b56:	b29a      	uxth	r2, r3
 8005b58:	68fb      	ldr	r3, [r7, #12]
 8005b5a:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 8005b5c:	e02b      	b.n	8005bb6 <HAL_SPI_Transmit+0x174>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8005b5e:	68fb      	ldr	r3, [r7, #12]
 8005b60:	681b      	ldr	r3, [r3, #0]
 8005b62:	689b      	ldr	r3, [r3, #8]
 8005b64:	f003 0302 	and.w	r3, r3, #2
 8005b68:	2b02      	cmp	r3, #2
 8005b6a:	d112      	bne.n	8005b92 <HAL_SPI_Transmit+0x150>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005b6c:	68fb      	ldr	r3, [r7, #12]
 8005b6e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005b70:	881a      	ldrh	r2, [r3, #0]
 8005b72:	68fb      	ldr	r3, [r7, #12]
 8005b74:	681b      	ldr	r3, [r3, #0]
 8005b76:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8005b78:	68fb      	ldr	r3, [r7, #12]
 8005b7a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005b7c:	1c9a      	adds	r2, r3, #2
 8005b7e:	68fb      	ldr	r3, [r7, #12]
 8005b80:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8005b82:	68fb      	ldr	r3, [r7, #12]
 8005b84:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005b86:	b29b      	uxth	r3, r3
 8005b88:	3b01      	subs	r3, #1
 8005b8a:	b29a      	uxth	r2, r3
 8005b8c:	68fb      	ldr	r3, [r7, #12]
 8005b8e:	86da      	strh	r2, [r3, #54]	; 0x36
 8005b90:	e011      	b.n	8005bb6 <HAL_SPI_Transmit+0x174>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005b92:	f7fc fded 	bl	8002770 <HAL_GetTick>
 8005b96:	4602      	mov	r2, r0
 8005b98:	69bb      	ldr	r3, [r7, #24]
 8005b9a:	1ad3      	subs	r3, r2, r3
 8005b9c:	683a      	ldr	r2, [r7, #0]
 8005b9e:	429a      	cmp	r2, r3
 8005ba0:	d803      	bhi.n	8005baa <HAL_SPI_Transmit+0x168>
 8005ba2:	683b      	ldr	r3, [r7, #0]
 8005ba4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005ba8:	d102      	bne.n	8005bb0 <HAL_SPI_Transmit+0x16e>
 8005baa:	683b      	ldr	r3, [r7, #0]
 8005bac:	2b00      	cmp	r3, #0
 8005bae:	d102      	bne.n	8005bb6 <HAL_SPI_Transmit+0x174>
        {
          errorcode = HAL_TIMEOUT;
 8005bb0:	2303      	movs	r3, #3
 8005bb2:	77fb      	strb	r3, [r7, #31]
          goto error;
 8005bb4:	e074      	b.n	8005ca0 <HAL_SPI_Transmit+0x25e>
    while (hspi->TxXferCount > 0U)
 8005bb6:	68fb      	ldr	r3, [r7, #12]
 8005bb8:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005bba:	b29b      	uxth	r3, r3
 8005bbc:	2b00      	cmp	r3, #0
 8005bbe:	d1ce      	bne.n	8005b5e <HAL_SPI_Transmit+0x11c>
 8005bc0:	e04c      	b.n	8005c5c <HAL_SPI_Transmit+0x21a>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005bc2:	68fb      	ldr	r3, [r7, #12]
 8005bc4:	685b      	ldr	r3, [r3, #4]
 8005bc6:	2b00      	cmp	r3, #0
 8005bc8:	d002      	beq.n	8005bd0 <HAL_SPI_Transmit+0x18e>
 8005bca:	8afb      	ldrh	r3, [r7, #22]
 8005bcc:	2b01      	cmp	r3, #1
 8005bce:	d140      	bne.n	8005c52 <HAL_SPI_Transmit+0x210>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8005bd0:	68fb      	ldr	r3, [r7, #12]
 8005bd2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005bd4:	68fb      	ldr	r3, [r7, #12]
 8005bd6:	681b      	ldr	r3, [r3, #0]
 8005bd8:	330c      	adds	r3, #12
 8005bda:	7812      	ldrb	r2, [r2, #0]
 8005bdc:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8005bde:	68fb      	ldr	r3, [r7, #12]
 8005be0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005be2:	1c5a      	adds	r2, r3, #1
 8005be4:	68fb      	ldr	r3, [r7, #12]
 8005be6:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8005be8:	68fb      	ldr	r3, [r7, #12]
 8005bea:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005bec:	b29b      	uxth	r3, r3
 8005bee:	3b01      	subs	r3, #1
 8005bf0:	b29a      	uxth	r2, r3
 8005bf2:	68fb      	ldr	r3, [r7, #12]
 8005bf4:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    while (hspi->TxXferCount > 0U)
 8005bf6:	e02c      	b.n	8005c52 <HAL_SPI_Transmit+0x210>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8005bf8:	68fb      	ldr	r3, [r7, #12]
 8005bfa:	681b      	ldr	r3, [r3, #0]
 8005bfc:	689b      	ldr	r3, [r3, #8]
 8005bfe:	f003 0302 	and.w	r3, r3, #2
 8005c02:	2b02      	cmp	r3, #2
 8005c04:	d113      	bne.n	8005c2e <HAL_SPI_Transmit+0x1ec>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8005c06:	68fb      	ldr	r3, [r7, #12]
 8005c08:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005c0a:	68fb      	ldr	r3, [r7, #12]
 8005c0c:	681b      	ldr	r3, [r3, #0]
 8005c0e:	330c      	adds	r3, #12
 8005c10:	7812      	ldrb	r2, [r2, #0]
 8005c12:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8005c14:	68fb      	ldr	r3, [r7, #12]
 8005c16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005c18:	1c5a      	adds	r2, r3, #1
 8005c1a:	68fb      	ldr	r3, [r7, #12]
 8005c1c:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8005c1e:	68fb      	ldr	r3, [r7, #12]
 8005c20:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005c22:	b29b      	uxth	r3, r3
 8005c24:	3b01      	subs	r3, #1
 8005c26:	b29a      	uxth	r2, r3
 8005c28:	68fb      	ldr	r3, [r7, #12]
 8005c2a:	86da      	strh	r2, [r3, #54]	; 0x36
 8005c2c:	e011      	b.n	8005c52 <HAL_SPI_Transmit+0x210>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005c2e:	f7fc fd9f 	bl	8002770 <HAL_GetTick>
 8005c32:	4602      	mov	r2, r0
 8005c34:	69bb      	ldr	r3, [r7, #24]
 8005c36:	1ad3      	subs	r3, r2, r3
 8005c38:	683a      	ldr	r2, [r7, #0]
 8005c3a:	429a      	cmp	r2, r3
 8005c3c:	d803      	bhi.n	8005c46 <HAL_SPI_Transmit+0x204>
 8005c3e:	683b      	ldr	r3, [r7, #0]
 8005c40:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005c44:	d102      	bne.n	8005c4c <HAL_SPI_Transmit+0x20a>
 8005c46:	683b      	ldr	r3, [r7, #0]
 8005c48:	2b00      	cmp	r3, #0
 8005c4a:	d102      	bne.n	8005c52 <HAL_SPI_Transmit+0x210>
        {
          errorcode = HAL_TIMEOUT;
 8005c4c:	2303      	movs	r3, #3
 8005c4e:	77fb      	strb	r3, [r7, #31]
          goto error;
 8005c50:	e026      	b.n	8005ca0 <HAL_SPI_Transmit+0x25e>
    while (hspi->TxXferCount > 0U)
 8005c52:	68fb      	ldr	r3, [r7, #12]
 8005c54:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005c56:	b29b      	uxth	r3, r3
 8005c58:	2b00      	cmp	r3, #0
 8005c5a:	d1cd      	bne.n	8005bf8 <HAL_SPI_Transmit+0x1b6>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8005c5c:	69ba      	ldr	r2, [r7, #24]
 8005c5e:	6839      	ldr	r1, [r7, #0]
 8005c60:	68f8      	ldr	r0, [r7, #12]
 8005c62:	f000 fbd9 	bl	8006418 <SPI_EndRxTxTransaction>
 8005c66:	4603      	mov	r3, r0
 8005c68:	2b00      	cmp	r3, #0
 8005c6a:	d002      	beq.n	8005c72 <HAL_SPI_Transmit+0x230>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8005c6c:	68fb      	ldr	r3, [r7, #12]
 8005c6e:	2220      	movs	r2, #32
 8005c70:	655a      	str	r2, [r3, #84]	; 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8005c72:	68fb      	ldr	r3, [r7, #12]
 8005c74:	689b      	ldr	r3, [r3, #8]
 8005c76:	2b00      	cmp	r3, #0
 8005c78:	d10a      	bne.n	8005c90 <HAL_SPI_Transmit+0x24e>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8005c7a:	2300      	movs	r3, #0
 8005c7c:	613b      	str	r3, [r7, #16]
 8005c7e:	68fb      	ldr	r3, [r7, #12]
 8005c80:	681b      	ldr	r3, [r3, #0]
 8005c82:	68db      	ldr	r3, [r3, #12]
 8005c84:	613b      	str	r3, [r7, #16]
 8005c86:	68fb      	ldr	r3, [r7, #12]
 8005c88:	681b      	ldr	r3, [r3, #0]
 8005c8a:	689b      	ldr	r3, [r3, #8]
 8005c8c:	613b      	str	r3, [r7, #16]
 8005c8e:	693b      	ldr	r3, [r7, #16]
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005c90:	68fb      	ldr	r3, [r7, #12]
 8005c92:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005c94:	2b00      	cmp	r3, #0
 8005c96:	d002      	beq.n	8005c9e <HAL_SPI_Transmit+0x25c>
  {
    errorcode = HAL_ERROR;
 8005c98:	2301      	movs	r3, #1
 8005c9a:	77fb      	strb	r3, [r7, #31]
 8005c9c:	e000      	b.n	8005ca0 <HAL_SPI_Transmit+0x25e>
  }

error:
 8005c9e:	bf00      	nop
  hspi->State = HAL_SPI_STATE_READY;
 8005ca0:	68fb      	ldr	r3, [r7, #12]
 8005ca2:	2201      	movs	r2, #1
 8005ca4:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8005ca8:	68fb      	ldr	r3, [r7, #12]
 8005caa:	2200      	movs	r2, #0
 8005cac:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 8005cb0:	7ffb      	ldrb	r3, [r7, #31]
}
 8005cb2:	4618      	mov	r0, r3
 8005cb4:	3720      	adds	r7, #32
 8005cb6:	46bd      	mov	sp, r7
 8005cb8:	bd80      	pop	{r7, pc}

08005cba <HAL_SPI_Receive>:
  * @param  Size amount of data to be received
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8005cba:	b580      	push	{r7, lr}
 8005cbc:	b088      	sub	sp, #32
 8005cbe:	af02      	add	r7, sp, #8
 8005cc0:	60f8      	str	r0, [r7, #12]
 8005cc2:	60b9      	str	r1, [r7, #8]
 8005cc4:	603b      	str	r3, [r7, #0]
 8005cc6:	4613      	mov	r3, r2
 8005cc8:	80fb      	strh	r3, [r7, #6]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 8005cca:	2300      	movs	r3, #0
 8005ccc:	75fb      	strb	r3, [r7, #23]

  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8005cce:	68fb      	ldr	r3, [r7, #12]
 8005cd0:	685b      	ldr	r3, [r3, #4]
 8005cd2:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005cd6:	d112      	bne.n	8005cfe <HAL_SPI_Receive+0x44>
 8005cd8:	68fb      	ldr	r3, [r7, #12]
 8005cda:	689b      	ldr	r3, [r3, #8]
 8005cdc:	2b00      	cmp	r3, #0
 8005cde:	d10e      	bne.n	8005cfe <HAL_SPI_Receive+0x44>
  {
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8005ce0:	68fb      	ldr	r3, [r7, #12]
 8005ce2:	2204      	movs	r2, #4
 8005ce4:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
    /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line */
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8005ce8:	88fa      	ldrh	r2, [r7, #6]
 8005cea:	683b      	ldr	r3, [r7, #0]
 8005cec:	9300      	str	r3, [sp, #0]
 8005cee:	4613      	mov	r3, r2
 8005cf0:	68ba      	ldr	r2, [r7, #8]
 8005cf2:	68b9      	ldr	r1, [r7, #8]
 8005cf4:	68f8      	ldr	r0, [r7, #12]
 8005cf6:	f000 f8f1 	bl	8005edc <HAL_SPI_TransmitReceive>
 8005cfa:	4603      	mov	r3, r0
 8005cfc:	e0ea      	b.n	8005ed4 <HAL_SPI_Receive+0x21a>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 8005cfe:	68fb      	ldr	r3, [r7, #12]
 8005d00:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8005d04:	2b01      	cmp	r3, #1
 8005d06:	d101      	bne.n	8005d0c <HAL_SPI_Receive+0x52>
 8005d08:	2302      	movs	r3, #2
 8005d0a:	e0e3      	b.n	8005ed4 <HAL_SPI_Receive+0x21a>
 8005d0c:	68fb      	ldr	r3, [r7, #12]
 8005d0e:	2201      	movs	r2, #1
 8005d10:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8005d14:	f7fc fd2c 	bl	8002770 <HAL_GetTick>
 8005d18:	6138      	str	r0, [r7, #16]

  if (hspi->State != HAL_SPI_STATE_READY)
 8005d1a:	68fb      	ldr	r3, [r7, #12]
 8005d1c:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8005d20:	b2db      	uxtb	r3, r3
 8005d22:	2b01      	cmp	r3, #1
 8005d24:	d002      	beq.n	8005d2c <HAL_SPI_Receive+0x72>
  {
    errorcode = HAL_BUSY;
 8005d26:	2302      	movs	r3, #2
 8005d28:	75fb      	strb	r3, [r7, #23]
    goto error;
 8005d2a:	e0ca      	b.n	8005ec2 <HAL_SPI_Receive+0x208>
  }

  if ((pData == NULL) || (Size == 0U))
 8005d2c:	68bb      	ldr	r3, [r7, #8]
 8005d2e:	2b00      	cmp	r3, #0
 8005d30:	d002      	beq.n	8005d38 <HAL_SPI_Receive+0x7e>
 8005d32:	88fb      	ldrh	r3, [r7, #6]
 8005d34:	2b00      	cmp	r3, #0
 8005d36:	d102      	bne.n	8005d3e <HAL_SPI_Receive+0x84>
  {
    errorcode = HAL_ERROR;
 8005d38:	2301      	movs	r3, #1
 8005d3a:	75fb      	strb	r3, [r7, #23]
    goto error;
 8005d3c:	e0c1      	b.n	8005ec2 <HAL_SPI_Receive+0x208>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8005d3e:	68fb      	ldr	r3, [r7, #12]
 8005d40:	2204      	movs	r2, #4
 8005d42:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005d46:	68fb      	ldr	r3, [r7, #12]
 8005d48:	2200      	movs	r2, #0
 8005d4a:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8005d4c:	68fb      	ldr	r3, [r7, #12]
 8005d4e:	68ba      	ldr	r2, [r7, #8]
 8005d50:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferSize  = Size;
 8005d52:	68fb      	ldr	r3, [r7, #12]
 8005d54:	88fa      	ldrh	r2, [r7, #6]
 8005d56:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = Size;
 8005d58:	68fb      	ldr	r3, [r7, #12]
 8005d5a:	88fa      	ldrh	r2, [r7, #6]
 8005d5c:	87da      	strh	r2, [r3, #62]	; 0x3e

  /*Init field not used in handle to zero */
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8005d5e:	68fb      	ldr	r3, [r7, #12]
 8005d60:	2200      	movs	r2, #0
 8005d62:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 8005d64:	68fb      	ldr	r3, [r7, #12]
 8005d66:	2200      	movs	r2, #0
 8005d68:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = 0U;
 8005d6a:	68fb      	ldr	r3, [r7, #12]
 8005d6c:	2200      	movs	r2, #0
 8005d6e:	86da      	strh	r2, [r3, #54]	; 0x36
  hspi->RxISR       = NULL;
 8005d70:	68fb      	ldr	r3, [r7, #12]
 8005d72:	2200      	movs	r2, #0
 8005d74:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->TxISR       = NULL;
 8005d76:	68fb      	ldr	r3, [r7, #12]
 8005d78:	2200      	movs	r2, #0
 8005d7a:	645a      	str	r2, [r3, #68]	; 0x44
    hspi->RxXferCount--;
  }
#endif /* USE_SPI_CRC */

  /* Configure communication direction: 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005d7c:	68fb      	ldr	r3, [r7, #12]
 8005d7e:	689b      	ldr	r3, [r3, #8]
 8005d80:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8005d84:	d10f      	bne.n	8005da6 <HAL_SPI_Receive+0xec>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8005d86:	68fb      	ldr	r3, [r7, #12]
 8005d88:	681b      	ldr	r3, [r3, #0]
 8005d8a:	681a      	ldr	r2, [r3, #0]
 8005d8c:	68fb      	ldr	r3, [r7, #12]
 8005d8e:	681b      	ldr	r3, [r3, #0]
 8005d90:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005d94:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8005d96:	68fb      	ldr	r3, [r7, #12]
 8005d98:	681b      	ldr	r3, [r3, #0]
 8005d9a:	681a      	ldr	r2, [r3, #0]
 8005d9c:	68fb      	ldr	r3, [r7, #12]
 8005d9e:	681b      	ldr	r3, [r3, #0]
 8005da0:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8005da4:	601a      	str	r2, [r3, #0]
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005da6:	68fb      	ldr	r3, [r7, #12]
 8005da8:	681b      	ldr	r3, [r3, #0]
 8005daa:	681b      	ldr	r3, [r3, #0]
 8005dac:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005db0:	2b40      	cmp	r3, #64	; 0x40
 8005db2:	d007      	beq.n	8005dc4 <HAL_SPI_Receive+0x10a>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8005db4:	68fb      	ldr	r3, [r7, #12]
 8005db6:	681b      	ldr	r3, [r3, #0]
 8005db8:	681a      	ldr	r2, [r3, #0]
 8005dba:	68fb      	ldr	r3, [r7, #12]
 8005dbc:	681b      	ldr	r3, [r3, #0]
 8005dbe:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8005dc2:	601a      	str	r2, [r3, #0]
  }

  /* Receive data in 8 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8005dc4:	68fb      	ldr	r3, [r7, #12]
 8005dc6:	68db      	ldr	r3, [r3, #12]
 8005dc8:	2b00      	cmp	r3, #0
 8005dca:	d162      	bne.n	8005e92 <HAL_SPI_Receive+0x1d8>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
 8005dcc:	e02e      	b.n	8005e2c <HAL_SPI_Receive+0x172>
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8005dce:	68fb      	ldr	r3, [r7, #12]
 8005dd0:	681b      	ldr	r3, [r3, #0]
 8005dd2:	689b      	ldr	r3, [r3, #8]
 8005dd4:	f003 0301 	and.w	r3, r3, #1
 8005dd8:	2b01      	cmp	r3, #1
 8005dda:	d115      	bne.n	8005e08 <HAL_SPI_Receive+0x14e>
      {
        /* read the received data */
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8005ddc:	68fb      	ldr	r3, [r7, #12]
 8005dde:	681b      	ldr	r3, [r3, #0]
 8005de0:	f103 020c 	add.w	r2, r3, #12
 8005de4:	68fb      	ldr	r3, [r7, #12]
 8005de6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005de8:	7812      	ldrb	r2, [r2, #0]
 8005dea:	b2d2      	uxtb	r2, r2
 8005dec:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8005dee:	68fb      	ldr	r3, [r7, #12]
 8005df0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005df2:	1c5a      	adds	r2, r3, #1
 8005df4:	68fb      	ldr	r3, [r7, #12]
 8005df6:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 8005df8:	68fb      	ldr	r3, [r7, #12]
 8005dfa:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005dfc:	b29b      	uxth	r3, r3
 8005dfe:	3b01      	subs	r3, #1
 8005e00:	b29a      	uxth	r2, r3
 8005e02:	68fb      	ldr	r3, [r7, #12]
 8005e04:	87da      	strh	r2, [r3, #62]	; 0x3e
 8005e06:	e011      	b.n	8005e2c <HAL_SPI_Receive+0x172>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005e08:	f7fc fcb2 	bl	8002770 <HAL_GetTick>
 8005e0c:	4602      	mov	r2, r0
 8005e0e:	693b      	ldr	r3, [r7, #16]
 8005e10:	1ad3      	subs	r3, r2, r3
 8005e12:	683a      	ldr	r2, [r7, #0]
 8005e14:	429a      	cmp	r2, r3
 8005e16:	d803      	bhi.n	8005e20 <HAL_SPI_Receive+0x166>
 8005e18:	683b      	ldr	r3, [r7, #0]
 8005e1a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005e1e:	d102      	bne.n	8005e26 <HAL_SPI_Receive+0x16c>
 8005e20:	683b      	ldr	r3, [r7, #0]
 8005e22:	2b00      	cmp	r3, #0
 8005e24:	d102      	bne.n	8005e2c <HAL_SPI_Receive+0x172>
        {
          errorcode = HAL_TIMEOUT;
 8005e26:	2303      	movs	r3, #3
 8005e28:	75fb      	strb	r3, [r7, #23]
          goto error;
 8005e2a:	e04a      	b.n	8005ec2 <HAL_SPI_Receive+0x208>
    while (hspi->RxXferCount > 0U)
 8005e2c:	68fb      	ldr	r3, [r7, #12]
 8005e2e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005e30:	b29b      	uxth	r3, r3
 8005e32:	2b00      	cmp	r3, #0
 8005e34:	d1cb      	bne.n	8005dce <HAL_SPI_Receive+0x114>
 8005e36:	e031      	b.n	8005e9c <HAL_SPI_Receive+0x1e2>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8005e38:	68fb      	ldr	r3, [r7, #12]
 8005e3a:	681b      	ldr	r3, [r3, #0]
 8005e3c:	689b      	ldr	r3, [r3, #8]
 8005e3e:	f003 0301 	and.w	r3, r3, #1
 8005e42:	2b01      	cmp	r3, #1
 8005e44:	d113      	bne.n	8005e6e <HAL_SPI_Receive+0x1b4>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8005e46:	68fb      	ldr	r3, [r7, #12]
 8005e48:	681b      	ldr	r3, [r3, #0]
 8005e4a:	68da      	ldr	r2, [r3, #12]
 8005e4c:	68fb      	ldr	r3, [r7, #12]
 8005e4e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005e50:	b292      	uxth	r2, r2
 8005e52:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8005e54:	68fb      	ldr	r3, [r7, #12]
 8005e56:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005e58:	1c9a      	adds	r2, r3, #2
 8005e5a:	68fb      	ldr	r3, [r7, #12]
 8005e5c:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 8005e5e:	68fb      	ldr	r3, [r7, #12]
 8005e60:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005e62:	b29b      	uxth	r3, r3
 8005e64:	3b01      	subs	r3, #1
 8005e66:	b29a      	uxth	r2, r3
 8005e68:	68fb      	ldr	r3, [r7, #12]
 8005e6a:	87da      	strh	r2, [r3, #62]	; 0x3e
 8005e6c:	e011      	b.n	8005e92 <HAL_SPI_Receive+0x1d8>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005e6e:	f7fc fc7f 	bl	8002770 <HAL_GetTick>
 8005e72:	4602      	mov	r2, r0
 8005e74:	693b      	ldr	r3, [r7, #16]
 8005e76:	1ad3      	subs	r3, r2, r3
 8005e78:	683a      	ldr	r2, [r7, #0]
 8005e7a:	429a      	cmp	r2, r3
 8005e7c:	d803      	bhi.n	8005e86 <HAL_SPI_Receive+0x1cc>
 8005e7e:	683b      	ldr	r3, [r7, #0]
 8005e80:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005e84:	d102      	bne.n	8005e8c <HAL_SPI_Receive+0x1d2>
 8005e86:	683b      	ldr	r3, [r7, #0]
 8005e88:	2b00      	cmp	r3, #0
 8005e8a:	d102      	bne.n	8005e92 <HAL_SPI_Receive+0x1d8>
        {
          errorcode = HAL_TIMEOUT;
 8005e8c:	2303      	movs	r3, #3
 8005e8e:	75fb      	strb	r3, [r7, #23]
          goto error;
 8005e90:	e017      	b.n	8005ec2 <HAL_SPI_Receive+0x208>
    while (hspi->RxXferCount > 0U)
 8005e92:	68fb      	ldr	r3, [r7, #12]
 8005e94:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005e96:	b29b      	uxth	r3, r3
 8005e98:	2b00      	cmp	r3, #0
 8005e9a:	d1cd      	bne.n	8005e38 <HAL_SPI_Receive+0x17e>
    UNUSED(tmpreg);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8005e9c:	693a      	ldr	r2, [r7, #16]
 8005e9e:	6839      	ldr	r1, [r7, #0]
 8005ea0:	68f8      	ldr	r0, [r7, #12]
 8005ea2:	f000 fa53 	bl	800634c <SPI_EndRxTransaction>
 8005ea6:	4603      	mov	r3, r0
 8005ea8:	2b00      	cmp	r3, #0
 8005eaa:	d002      	beq.n	8005eb2 <HAL_SPI_Receive+0x1f8>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8005eac:	68fb      	ldr	r3, [r7, #12]
 8005eae:	2220      	movs	r2, #32
 8005eb0:	655a      	str	r2, [r3, #84]	; 0x54
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
    __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
  }
#endif /* USE_SPI_CRC */

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005eb2:	68fb      	ldr	r3, [r7, #12]
 8005eb4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005eb6:	2b00      	cmp	r3, #0
 8005eb8:	d002      	beq.n	8005ec0 <HAL_SPI_Receive+0x206>
  {
    errorcode = HAL_ERROR;
 8005eba:	2301      	movs	r3, #1
 8005ebc:	75fb      	strb	r3, [r7, #23]
 8005ebe:	e000      	b.n	8005ec2 <HAL_SPI_Receive+0x208>
  }

error :
 8005ec0:	bf00      	nop
  hspi->State = HAL_SPI_STATE_READY;
 8005ec2:	68fb      	ldr	r3, [r7, #12]
 8005ec4:	2201      	movs	r2, #1
 8005ec6:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8005eca:	68fb      	ldr	r3, [r7, #12]
 8005ecc:	2200      	movs	r2, #0
 8005ece:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 8005ed2:	7dfb      	ldrb	r3, [r7, #23]
}
 8005ed4:	4618      	mov	r0, r3
 8005ed6:	3718      	adds	r7, #24
 8005ed8:	46bd      	mov	sp, r7
 8005eda:	bd80      	pop	{r7, pc}

08005edc <HAL_SPI_TransmitReceive>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxData, uint16_t Size,
                                          uint32_t Timeout)
{
 8005edc:	b580      	push	{r7, lr}
 8005ede:	b08c      	sub	sp, #48	; 0x30
 8005ee0:	af00      	add	r7, sp, #0
 8005ee2:	60f8      	str	r0, [r7, #12]
 8005ee4:	60b9      	str	r1, [r7, #8]
 8005ee6:	607a      	str	r2, [r7, #4]
 8005ee8:	807b      	strh	r3, [r7, #2]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */

  /* Variable used to alternate Rx and Tx during transfer */
  uint32_t             txallowed = 1U;
 8005eea:	2301      	movs	r3, #1
 8005eec:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_StatusTypeDef    errorcode = HAL_OK;
 8005eee:	2300      	movs	r3, #0
 8005ef0:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8005ef4:	68fb      	ldr	r3, [r7, #12]
 8005ef6:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8005efa:	2b01      	cmp	r3, #1
 8005efc:	d101      	bne.n	8005f02 <HAL_SPI_TransmitReceive+0x26>
 8005efe:	2302      	movs	r3, #2
 8005f00:	e18a      	b.n	8006218 <HAL_SPI_TransmitReceive+0x33c>
 8005f02:	68fb      	ldr	r3, [r7, #12]
 8005f04:	2201      	movs	r2, #1
 8005f06:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8005f0a:	f7fc fc31 	bl	8002770 <HAL_GetTick>
 8005f0e:	6278      	str	r0, [r7, #36]	; 0x24

  /* Init temporary variables */
  tmp_state           = hspi->State;
 8005f10:	68fb      	ldr	r3, [r7, #12]
 8005f12:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8005f16:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
  tmp_mode            = hspi->Init.Mode;
 8005f1a:	68fb      	ldr	r3, [r7, #12]
 8005f1c:	685b      	ldr	r3, [r3, #4]
 8005f1e:	61fb      	str	r3, [r7, #28]
  initial_TxXferCount = Size;
 8005f20:	887b      	ldrh	r3, [r7, #2]
 8005f22:	837b      	strh	r3, [r7, #26]

  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8005f24:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8005f28:	2b01      	cmp	r3, #1
 8005f2a:	d00f      	beq.n	8005f4c <HAL_SPI_TransmitReceive+0x70>
 8005f2c:	69fb      	ldr	r3, [r7, #28]
 8005f2e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005f32:	d107      	bne.n	8005f44 <HAL_SPI_TransmitReceive+0x68>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8005f34:	68fb      	ldr	r3, [r7, #12]
 8005f36:	689b      	ldr	r3, [r3, #8]
 8005f38:	2b00      	cmp	r3, #0
 8005f3a:	d103      	bne.n	8005f44 <HAL_SPI_TransmitReceive+0x68>
 8005f3c:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8005f40:	2b04      	cmp	r3, #4
 8005f42:	d003      	beq.n	8005f4c <HAL_SPI_TransmitReceive+0x70>
  {
    errorcode = HAL_BUSY;
 8005f44:	2302      	movs	r3, #2
 8005f46:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
    goto error;
 8005f4a:	e15b      	b.n	8006204 <HAL_SPI_TransmitReceive+0x328>
  }

  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8005f4c:	68bb      	ldr	r3, [r7, #8]
 8005f4e:	2b00      	cmp	r3, #0
 8005f50:	d005      	beq.n	8005f5e <HAL_SPI_TransmitReceive+0x82>
 8005f52:	687b      	ldr	r3, [r7, #4]
 8005f54:	2b00      	cmp	r3, #0
 8005f56:	d002      	beq.n	8005f5e <HAL_SPI_TransmitReceive+0x82>
 8005f58:	887b      	ldrh	r3, [r7, #2]
 8005f5a:	2b00      	cmp	r3, #0
 8005f5c:	d103      	bne.n	8005f66 <HAL_SPI_TransmitReceive+0x8a>
  {
    errorcode = HAL_ERROR;
 8005f5e:	2301      	movs	r3, #1
 8005f60:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
    goto error;
 8005f64:	e14e      	b.n	8006204 <HAL_SPI_TransmitReceive+0x328>
  }

  /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8005f66:	68fb      	ldr	r3, [r7, #12]
 8005f68:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8005f6c:	b2db      	uxtb	r3, r3
 8005f6e:	2b04      	cmp	r3, #4
 8005f70:	d003      	beq.n	8005f7a <HAL_SPI_TransmitReceive+0x9e>
  {
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8005f72:	68fb      	ldr	r3, [r7, #12]
 8005f74:	2205      	movs	r2, #5
 8005f76:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  }

  /* Set the transaction information */
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005f7a:	68fb      	ldr	r3, [r7, #12]
 8005f7c:	2200      	movs	r2, #0
 8005f7e:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8005f80:	68fb      	ldr	r3, [r7, #12]
 8005f82:	687a      	ldr	r2, [r7, #4]
 8005f84:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferCount = Size;
 8005f86:	68fb      	ldr	r3, [r7, #12]
 8005f88:	887a      	ldrh	r2, [r7, #2]
 8005f8a:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->RxXferSize  = Size;
 8005f8c:	68fb      	ldr	r3, [r7, #12]
 8005f8e:	887a      	ldrh	r2, [r7, #2]
 8005f90:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8005f92:	68fb      	ldr	r3, [r7, #12]
 8005f94:	68ba      	ldr	r2, [r7, #8]
 8005f96:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferCount = Size;
 8005f98:	68fb      	ldr	r3, [r7, #12]
 8005f9a:	887a      	ldrh	r2, [r7, #2]
 8005f9c:	86da      	strh	r2, [r3, #54]	; 0x36
  hspi->TxXferSize  = Size;
 8005f9e:	68fb      	ldr	r3, [r7, #12]
 8005fa0:	887a      	ldrh	r2, [r7, #2]
 8005fa2:	869a      	strh	r2, [r3, #52]	; 0x34

  /*Init field not used in handle to zero */
  hspi->RxISR       = NULL;
 8005fa4:	68fb      	ldr	r3, [r7, #12]
 8005fa6:	2200      	movs	r2, #0
 8005fa8:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->TxISR       = NULL;
 8005faa:	68fb      	ldr	r3, [r7, #12]
 8005fac:	2200      	movs	r2, #0
 8005fae:	645a      	str	r2, [r3, #68]	; 0x44
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005fb0:	68fb      	ldr	r3, [r7, #12]
 8005fb2:	681b      	ldr	r3, [r3, #0]
 8005fb4:	681b      	ldr	r3, [r3, #0]
 8005fb6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005fba:	2b40      	cmp	r3, #64	; 0x40
 8005fbc:	d007      	beq.n	8005fce <HAL_SPI_TransmitReceive+0xf2>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8005fbe:	68fb      	ldr	r3, [r7, #12]
 8005fc0:	681b      	ldr	r3, [r3, #0]
 8005fc2:	681a      	ldr	r2, [r3, #0]
 8005fc4:	68fb      	ldr	r3, [r7, #12]
 8005fc6:	681b      	ldr	r3, [r3, #0]
 8005fc8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8005fcc:	601a      	str	r2, [r3, #0]
  }

  /* Transmit and Receive data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005fce:	68fb      	ldr	r3, [r7, #12]
 8005fd0:	68db      	ldr	r3, [r3, #12]
 8005fd2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8005fd6:	d178      	bne.n	80060ca <HAL_SPI_TransmitReceive+0x1ee>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005fd8:	68fb      	ldr	r3, [r7, #12]
 8005fda:	685b      	ldr	r3, [r3, #4]
 8005fdc:	2b00      	cmp	r3, #0
 8005fde:	d002      	beq.n	8005fe6 <HAL_SPI_TransmitReceive+0x10a>
 8005fe0:	8b7b      	ldrh	r3, [r7, #26]
 8005fe2:	2b01      	cmp	r3, #1
 8005fe4:	d166      	bne.n	80060b4 <HAL_SPI_TransmitReceive+0x1d8>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005fe6:	68fb      	ldr	r3, [r7, #12]
 8005fe8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005fea:	881a      	ldrh	r2, [r3, #0]
 8005fec:	68fb      	ldr	r3, [r7, #12]
 8005fee:	681b      	ldr	r3, [r3, #0]
 8005ff0:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8005ff2:	68fb      	ldr	r3, [r7, #12]
 8005ff4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005ff6:	1c9a      	adds	r2, r3, #2
 8005ff8:	68fb      	ldr	r3, [r7, #12]
 8005ffa:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8005ffc:	68fb      	ldr	r3, [r7, #12]
 8005ffe:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006000:	b29b      	uxth	r3, r3
 8006002:	3b01      	subs	r3, #1
 8006004:	b29a      	uxth	r2, r3
 8006006:	68fb      	ldr	r3, [r7, #12]
 8006008:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800600a:	e053      	b.n	80060b4 <HAL_SPI_TransmitReceive+0x1d8>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800600c:	68fb      	ldr	r3, [r7, #12]
 800600e:	681b      	ldr	r3, [r3, #0]
 8006010:	689b      	ldr	r3, [r3, #8]
 8006012:	f003 0302 	and.w	r3, r3, #2
 8006016:	2b02      	cmp	r3, #2
 8006018:	d11b      	bne.n	8006052 <HAL_SPI_TransmitReceive+0x176>
 800601a:	68fb      	ldr	r3, [r7, #12]
 800601c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800601e:	b29b      	uxth	r3, r3
 8006020:	2b00      	cmp	r3, #0
 8006022:	d016      	beq.n	8006052 <HAL_SPI_TransmitReceive+0x176>
 8006024:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006026:	2b01      	cmp	r3, #1
 8006028:	d113      	bne.n	8006052 <HAL_SPI_TransmitReceive+0x176>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800602a:	68fb      	ldr	r3, [r7, #12]
 800602c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800602e:	881a      	ldrh	r2, [r3, #0]
 8006030:	68fb      	ldr	r3, [r7, #12]
 8006032:	681b      	ldr	r3, [r3, #0]
 8006034:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006036:	68fb      	ldr	r3, [r7, #12]
 8006038:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800603a:	1c9a      	adds	r2, r3, #2
 800603c:	68fb      	ldr	r3, [r7, #12]
 800603e:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8006040:	68fb      	ldr	r3, [r7, #12]
 8006042:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006044:	b29b      	uxth	r3, r3
 8006046:	3b01      	subs	r3, #1
 8006048:	b29a      	uxth	r2, r3
 800604a:	68fb      	ldr	r3, [r7, #12]
 800604c:	86da      	strh	r2, [r3, #54]	; 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 800604e:	2300      	movs	r3, #0
 8006050:	62fb      	str	r3, [r7, #44]	; 0x2c
        }
#endif /* USE_SPI_CRC */
      }

      /* Check RXNE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006052:	68fb      	ldr	r3, [r7, #12]
 8006054:	681b      	ldr	r3, [r3, #0]
 8006056:	689b      	ldr	r3, [r3, #8]
 8006058:	f003 0301 	and.w	r3, r3, #1
 800605c:	2b01      	cmp	r3, #1
 800605e:	d119      	bne.n	8006094 <HAL_SPI_TransmitReceive+0x1b8>
 8006060:	68fb      	ldr	r3, [r7, #12]
 8006062:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006064:	b29b      	uxth	r3, r3
 8006066:	2b00      	cmp	r3, #0
 8006068:	d014      	beq.n	8006094 <HAL_SPI_TransmitReceive+0x1b8>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800606a:	68fb      	ldr	r3, [r7, #12]
 800606c:	681b      	ldr	r3, [r3, #0]
 800606e:	68da      	ldr	r2, [r3, #12]
 8006070:	68fb      	ldr	r3, [r7, #12]
 8006072:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006074:	b292      	uxth	r2, r2
 8006076:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006078:	68fb      	ldr	r3, [r7, #12]
 800607a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800607c:	1c9a      	adds	r2, r3, #2
 800607e:	68fb      	ldr	r3, [r7, #12]
 8006080:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 8006082:	68fb      	ldr	r3, [r7, #12]
 8006084:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006086:	b29b      	uxth	r3, r3
 8006088:	3b01      	subs	r3, #1
 800608a:	b29a      	uxth	r2, r3
 800608c:	68fb      	ldr	r3, [r7, #12]
 800608e:	87da      	strh	r2, [r3, #62]	; 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8006090:	2301      	movs	r3, #1
 8006092:	62fb      	str	r3, [r7, #44]	; 0x2c
      }
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8006094:	f7fc fb6c 	bl	8002770 <HAL_GetTick>
 8006098:	4602      	mov	r2, r0
 800609a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800609c:	1ad3      	subs	r3, r2, r3
 800609e:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80060a0:	429a      	cmp	r2, r3
 80060a2:	d807      	bhi.n	80060b4 <HAL_SPI_TransmitReceive+0x1d8>
 80060a4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80060a6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80060aa:	d003      	beq.n	80060b4 <HAL_SPI_TransmitReceive+0x1d8>
      {
        errorcode = HAL_TIMEOUT;
 80060ac:	2303      	movs	r3, #3
 80060ae:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
        goto error;
 80060b2:	e0a7      	b.n	8006204 <HAL_SPI_TransmitReceive+0x328>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80060b4:	68fb      	ldr	r3, [r7, #12]
 80060b6:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80060b8:	b29b      	uxth	r3, r3
 80060ba:	2b00      	cmp	r3, #0
 80060bc:	d1a6      	bne.n	800600c <HAL_SPI_TransmitReceive+0x130>
 80060be:	68fb      	ldr	r3, [r7, #12]
 80060c0:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80060c2:	b29b      	uxth	r3, r3
 80060c4:	2b00      	cmp	r3, #0
 80060c6:	d1a1      	bne.n	800600c <HAL_SPI_TransmitReceive+0x130>
 80060c8:	e07c      	b.n	80061c4 <HAL_SPI_TransmitReceive+0x2e8>
    }
  }
  /* Transmit and Receive data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80060ca:	68fb      	ldr	r3, [r7, #12]
 80060cc:	685b      	ldr	r3, [r3, #4]
 80060ce:	2b00      	cmp	r3, #0
 80060d0:	d002      	beq.n	80060d8 <HAL_SPI_TransmitReceive+0x1fc>
 80060d2:	8b7b      	ldrh	r3, [r7, #26]
 80060d4:	2b01      	cmp	r3, #1
 80060d6:	d16b      	bne.n	80061b0 <HAL_SPI_TransmitReceive+0x2d4>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80060d8:	68fb      	ldr	r3, [r7, #12]
 80060da:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80060dc:	68fb      	ldr	r3, [r7, #12]
 80060de:	681b      	ldr	r3, [r3, #0]
 80060e0:	330c      	adds	r3, #12
 80060e2:	7812      	ldrb	r2, [r2, #0]
 80060e4:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80060e6:	68fb      	ldr	r3, [r7, #12]
 80060e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80060ea:	1c5a      	adds	r2, r3, #1
 80060ec:	68fb      	ldr	r3, [r7, #12]
 80060ee:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 80060f0:	68fb      	ldr	r3, [r7, #12]
 80060f2:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80060f4:	b29b      	uxth	r3, r3
 80060f6:	3b01      	subs	r3, #1
 80060f8:	b29a      	uxth	r2, r3
 80060fa:	68fb      	ldr	r3, [r7, #12]
 80060fc:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80060fe:	e057      	b.n	80061b0 <HAL_SPI_TransmitReceive+0x2d4>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006100:	68fb      	ldr	r3, [r7, #12]
 8006102:	681b      	ldr	r3, [r3, #0]
 8006104:	689b      	ldr	r3, [r3, #8]
 8006106:	f003 0302 	and.w	r3, r3, #2
 800610a:	2b02      	cmp	r3, #2
 800610c:	d11c      	bne.n	8006148 <HAL_SPI_TransmitReceive+0x26c>
 800610e:	68fb      	ldr	r3, [r7, #12]
 8006110:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006112:	b29b      	uxth	r3, r3
 8006114:	2b00      	cmp	r3, #0
 8006116:	d017      	beq.n	8006148 <HAL_SPI_TransmitReceive+0x26c>
 8006118:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800611a:	2b01      	cmp	r3, #1
 800611c:	d114      	bne.n	8006148 <HAL_SPI_TransmitReceive+0x26c>
      {
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800611e:	68fb      	ldr	r3, [r7, #12]
 8006120:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006122:	68fb      	ldr	r3, [r7, #12]
 8006124:	681b      	ldr	r3, [r3, #0]
 8006126:	330c      	adds	r3, #12
 8006128:	7812      	ldrb	r2, [r2, #0]
 800612a:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr++;
 800612c:	68fb      	ldr	r3, [r7, #12]
 800612e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006130:	1c5a      	adds	r2, r3, #1
 8006132:	68fb      	ldr	r3, [r7, #12]
 8006134:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8006136:	68fb      	ldr	r3, [r7, #12]
 8006138:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800613a:	b29b      	uxth	r3, r3
 800613c:	3b01      	subs	r3, #1
 800613e:	b29a      	uxth	r2, r3
 8006140:	68fb      	ldr	r3, [r7, #12]
 8006142:	86da      	strh	r2, [r3, #54]	; 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 8006144:	2300      	movs	r3, #0
 8006146:	62fb      	str	r3, [r7, #44]	; 0x2c
        }
#endif /* USE_SPI_CRC */
      }

      /* Wait until RXNE flag is reset */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006148:	68fb      	ldr	r3, [r7, #12]
 800614a:	681b      	ldr	r3, [r3, #0]
 800614c:	689b      	ldr	r3, [r3, #8]
 800614e:	f003 0301 	and.w	r3, r3, #1
 8006152:	2b01      	cmp	r3, #1
 8006154:	d119      	bne.n	800618a <HAL_SPI_TransmitReceive+0x2ae>
 8006156:	68fb      	ldr	r3, [r7, #12]
 8006158:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800615a:	b29b      	uxth	r3, r3
 800615c:	2b00      	cmp	r3, #0
 800615e:	d014      	beq.n	800618a <HAL_SPI_TransmitReceive+0x2ae>
      {
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8006160:	68fb      	ldr	r3, [r7, #12]
 8006162:	681b      	ldr	r3, [r3, #0]
 8006164:	68da      	ldr	r2, [r3, #12]
 8006166:	68fb      	ldr	r3, [r7, #12]
 8006168:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800616a:	b2d2      	uxtb	r2, r2
 800616c:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 800616e:	68fb      	ldr	r3, [r7, #12]
 8006170:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006172:	1c5a      	adds	r2, r3, #1
 8006174:	68fb      	ldr	r3, [r7, #12]
 8006176:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->RxXferCount--;
 8006178:	68fb      	ldr	r3, [r7, #12]
 800617a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800617c:	b29b      	uxth	r3, r3
 800617e:	3b01      	subs	r3, #1
 8006180:	b29a      	uxth	r2, r3
 8006182:	68fb      	ldr	r3, [r7, #12]
 8006184:	87da      	strh	r2, [r3, #62]	; 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8006186:	2301      	movs	r3, #1
 8006188:	62fb      	str	r3, [r7, #44]	; 0x2c
      }
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800618a:	f7fc faf1 	bl	8002770 <HAL_GetTick>
 800618e:	4602      	mov	r2, r0
 8006190:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006192:	1ad3      	subs	r3, r2, r3
 8006194:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8006196:	429a      	cmp	r2, r3
 8006198:	d803      	bhi.n	80061a2 <HAL_SPI_TransmitReceive+0x2c6>
 800619a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800619c:	f1b3 3fff 	cmp.w	r3, #4294967295
 80061a0:	d102      	bne.n	80061a8 <HAL_SPI_TransmitReceive+0x2cc>
 80061a2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80061a4:	2b00      	cmp	r3, #0
 80061a6:	d103      	bne.n	80061b0 <HAL_SPI_TransmitReceive+0x2d4>
      {
        errorcode = HAL_TIMEOUT;
 80061a8:	2303      	movs	r3, #3
 80061aa:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
        goto error;
 80061ae:	e029      	b.n	8006204 <HAL_SPI_TransmitReceive+0x328>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80061b0:	68fb      	ldr	r3, [r7, #12]
 80061b2:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80061b4:	b29b      	uxth	r3, r3
 80061b6:	2b00      	cmp	r3, #0
 80061b8:	d1a2      	bne.n	8006100 <HAL_SPI_TransmitReceive+0x224>
 80061ba:	68fb      	ldr	r3, [r7, #12]
 80061bc:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80061be:	b29b      	uxth	r3, r3
 80061c0:	2b00      	cmp	r3, #0
 80061c2:	d19d      	bne.n	8006100 <HAL_SPI_TransmitReceive+0x224>
    errorcode = HAL_ERROR;
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80061c4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80061c6:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 80061c8:	68f8      	ldr	r0, [r7, #12]
 80061ca:	f000 f925 	bl	8006418 <SPI_EndRxTxTransaction>
 80061ce:	4603      	mov	r3, r0
 80061d0:	2b00      	cmp	r3, #0
 80061d2:	d006      	beq.n	80061e2 <HAL_SPI_TransmitReceive+0x306>
  {
    errorcode = HAL_ERROR;
 80061d4:	2301      	movs	r3, #1
 80061d6:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80061da:	68fb      	ldr	r3, [r7, #12]
 80061dc:	2220      	movs	r2, #32
 80061de:	655a      	str	r2, [r3, #84]	; 0x54
    goto error;
 80061e0:	e010      	b.n	8006204 <HAL_SPI_TransmitReceive+0x328>
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80061e2:	68fb      	ldr	r3, [r7, #12]
 80061e4:	689b      	ldr	r3, [r3, #8]
 80061e6:	2b00      	cmp	r3, #0
 80061e8:	d10b      	bne.n	8006202 <HAL_SPI_TransmitReceive+0x326>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80061ea:	2300      	movs	r3, #0
 80061ec:	617b      	str	r3, [r7, #20]
 80061ee:	68fb      	ldr	r3, [r7, #12]
 80061f0:	681b      	ldr	r3, [r3, #0]
 80061f2:	68db      	ldr	r3, [r3, #12]
 80061f4:	617b      	str	r3, [r7, #20]
 80061f6:	68fb      	ldr	r3, [r7, #12]
 80061f8:	681b      	ldr	r3, [r3, #0]
 80061fa:	689b      	ldr	r3, [r3, #8]
 80061fc:	617b      	str	r3, [r7, #20]
 80061fe:	697b      	ldr	r3, [r7, #20]
 8006200:	e000      	b.n	8006204 <HAL_SPI_TransmitReceive+0x328>
  }

error :
 8006202:	bf00      	nop
  hspi->State = HAL_SPI_STATE_READY;
 8006204:	68fb      	ldr	r3, [r7, #12]
 8006206:	2201      	movs	r2, #1
 8006208:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800620c:	68fb      	ldr	r3, [r7, #12]
 800620e:	2200      	movs	r2, #0
 8006210:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 8006214:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
}
 8006218:	4618      	mov	r0, r3
 800621a:	3730      	adds	r7, #48	; 0x30
 800621c:	46bd      	mov	sp, r7
 800621e:	bd80      	pop	{r7, pc}

08006220 <HAL_SPI_GetState>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval SPI state
  */
HAL_SPI_StateTypeDef HAL_SPI_GetState(SPI_HandleTypeDef *hspi)
{
 8006220:	b480      	push	{r7}
 8006222:	b083      	sub	sp, #12
 8006224:	af00      	add	r7, sp, #0
 8006226:	6078      	str	r0, [r7, #4]
  /* Return SPI handle state */
  return hspi->State;
 8006228:	687b      	ldr	r3, [r7, #4]
 800622a:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800622e:	b2db      	uxtb	r3, r3
}
 8006230:	4618      	mov	r0, r3
 8006232:	370c      	adds	r7, #12
 8006234:	46bd      	mov	sp, r7
 8006236:	f85d 7b04 	ldr.w	r7, [sp], #4
 800623a:	4770      	bx	lr

0800623c <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 800623c:	b580      	push	{r7, lr}
 800623e:	b088      	sub	sp, #32
 8006240:	af00      	add	r7, sp, #0
 8006242:	60f8      	str	r0, [r7, #12]
 8006244:	60b9      	str	r1, [r7, #8]
 8006246:	603b      	str	r3, [r7, #0]
 8006248:	4613      	mov	r3, r2
 800624a:	71fb      	strb	r3, [r7, #7]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800624c:	f7fc fa90 	bl	8002770 <HAL_GetTick>
 8006250:	4602      	mov	r2, r0
 8006252:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006254:	1a9b      	subs	r3, r3, r2
 8006256:	683a      	ldr	r2, [r7, #0]
 8006258:	4413      	add	r3, r2
 800625a:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 800625c:	f7fc fa88 	bl	8002770 <HAL_GetTick>
 8006260:	61b8      	str	r0, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8006262:	4b39      	ldr	r3, [pc, #228]	; (8006348 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8006264:	681b      	ldr	r3, [r3, #0]
 8006266:	015b      	lsls	r3, r3, #5
 8006268:	0d1b      	lsrs	r3, r3, #20
 800626a:	69fa      	ldr	r2, [r7, #28]
 800626c:	fb02 f303 	mul.w	r3, r2, r3
 8006270:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006272:	e054      	b.n	800631e <SPI_WaitFlagStateUntilTimeout+0xe2>
  {
    if (Timeout != HAL_MAX_DELAY)
 8006274:	683b      	ldr	r3, [r7, #0]
 8006276:	f1b3 3fff 	cmp.w	r3, #4294967295
 800627a:	d050      	beq.n	800631e <SPI_WaitFlagStateUntilTimeout+0xe2>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800627c:	f7fc fa78 	bl	8002770 <HAL_GetTick>
 8006280:	4602      	mov	r2, r0
 8006282:	69bb      	ldr	r3, [r7, #24]
 8006284:	1ad3      	subs	r3, r2, r3
 8006286:	69fa      	ldr	r2, [r7, #28]
 8006288:	429a      	cmp	r2, r3
 800628a:	d902      	bls.n	8006292 <SPI_WaitFlagStateUntilTimeout+0x56>
 800628c:	69fb      	ldr	r3, [r7, #28]
 800628e:	2b00      	cmp	r3, #0
 8006290:	d13d      	bne.n	800630e <SPI_WaitFlagStateUntilTimeout+0xd2>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8006292:	68fb      	ldr	r3, [r7, #12]
 8006294:	681b      	ldr	r3, [r3, #0]
 8006296:	685a      	ldr	r2, [r3, #4]
 8006298:	68fb      	ldr	r3, [r7, #12]
 800629a:	681b      	ldr	r3, [r3, #0]
 800629c:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 80062a0:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80062a2:	68fb      	ldr	r3, [r7, #12]
 80062a4:	685b      	ldr	r3, [r3, #4]
 80062a6:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80062aa:	d111      	bne.n	80062d0 <SPI_WaitFlagStateUntilTimeout+0x94>
 80062ac:	68fb      	ldr	r3, [r7, #12]
 80062ae:	689b      	ldr	r3, [r3, #8]
 80062b0:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80062b4:	d004      	beq.n	80062c0 <SPI_WaitFlagStateUntilTimeout+0x84>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80062b6:	68fb      	ldr	r3, [r7, #12]
 80062b8:	689b      	ldr	r3, [r3, #8]
 80062ba:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80062be:	d107      	bne.n	80062d0 <SPI_WaitFlagStateUntilTimeout+0x94>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 80062c0:	68fb      	ldr	r3, [r7, #12]
 80062c2:	681b      	ldr	r3, [r3, #0]
 80062c4:	681a      	ldr	r2, [r3, #0]
 80062c6:	68fb      	ldr	r3, [r7, #12]
 80062c8:	681b      	ldr	r3, [r3, #0]
 80062ca:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80062ce:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 80062d0:	68fb      	ldr	r3, [r7, #12]
 80062d2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80062d4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80062d8:	d10f      	bne.n	80062fa <SPI_WaitFlagStateUntilTimeout+0xbe>
        {
          SPI_RESET_CRC(hspi);
 80062da:	68fb      	ldr	r3, [r7, #12]
 80062dc:	681b      	ldr	r3, [r3, #0]
 80062de:	681a      	ldr	r2, [r3, #0]
 80062e0:	68fb      	ldr	r3, [r7, #12]
 80062e2:	681b      	ldr	r3, [r3, #0]
 80062e4:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80062e8:	601a      	str	r2, [r3, #0]
 80062ea:	68fb      	ldr	r3, [r7, #12]
 80062ec:	681b      	ldr	r3, [r3, #0]
 80062ee:	681a      	ldr	r2, [r3, #0]
 80062f0:	68fb      	ldr	r3, [r7, #12]
 80062f2:	681b      	ldr	r3, [r3, #0]
 80062f4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80062f8:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 80062fa:	68fb      	ldr	r3, [r7, #12]
 80062fc:	2201      	movs	r2, #1
 80062fe:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8006302:	68fb      	ldr	r3, [r7, #12]
 8006304:	2200      	movs	r2, #0
 8006306:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

        return HAL_TIMEOUT;
 800630a:	2303      	movs	r3, #3
 800630c:	e017      	b.n	800633e <SPI_WaitFlagStateUntilTimeout+0x102>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 800630e:	697b      	ldr	r3, [r7, #20]
 8006310:	2b00      	cmp	r3, #0
 8006312:	d101      	bne.n	8006318 <SPI_WaitFlagStateUntilTimeout+0xdc>
      {
        tmp_timeout = 0U;
 8006314:	2300      	movs	r3, #0
 8006316:	61fb      	str	r3, [r7, #28]
      }
      count--;
 8006318:	697b      	ldr	r3, [r7, #20]
 800631a:	3b01      	subs	r3, #1
 800631c:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800631e:	68fb      	ldr	r3, [r7, #12]
 8006320:	681b      	ldr	r3, [r3, #0]
 8006322:	689a      	ldr	r2, [r3, #8]
 8006324:	68bb      	ldr	r3, [r7, #8]
 8006326:	4013      	ands	r3, r2
 8006328:	68ba      	ldr	r2, [r7, #8]
 800632a:	429a      	cmp	r2, r3
 800632c:	bf0c      	ite	eq
 800632e:	2301      	moveq	r3, #1
 8006330:	2300      	movne	r3, #0
 8006332:	b2db      	uxtb	r3, r3
 8006334:	461a      	mov	r2, r3
 8006336:	79fb      	ldrb	r3, [r7, #7]
 8006338:	429a      	cmp	r2, r3
 800633a:	d19b      	bne.n	8006274 <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 800633c:	2300      	movs	r3, #0
}
 800633e:	4618      	mov	r0, r3
 8006340:	3720      	adds	r7, #32
 8006342:	46bd      	mov	sp, r7
 8006344:	bd80      	pop	{r7, pc}
 8006346:	bf00      	nop
 8006348:	20000004 	.word	0x20000004

0800634c <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800634c:	b580      	push	{r7, lr}
 800634e:	b086      	sub	sp, #24
 8006350:	af02      	add	r7, sp, #8
 8006352:	60f8      	str	r0, [r7, #12]
 8006354:	60b9      	str	r1, [r7, #8]
 8006356:	607a      	str	r2, [r7, #4]
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006358:	68fb      	ldr	r3, [r7, #12]
 800635a:	685b      	ldr	r3, [r3, #4]
 800635c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8006360:	d111      	bne.n	8006386 <SPI_EndRxTransaction+0x3a>
 8006362:	68fb      	ldr	r3, [r7, #12]
 8006364:	689b      	ldr	r3, [r3, #8]
 8006366:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800636a:	d004      	beq.n	8006376 <SPI_EndRxTransaction+0x2a>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800636c:	68fb      	ldr	r3, [r7, #12]
 800636e:	689b      	ldr	r3, [r3, #8]
 8006370:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8006374:	d107      	bne.n	8006386 <SPI_EndRxTransaction+0x3a>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8006376:	68fb      	ldr	r3, [r7, #12]
 8006378:	681b      	ldr	r3, [r3, #0]
 800637a:	681a      	ldr	r2, [r3, #0]
 800637c:	68fb      	ldr	r3, [r7, #12]
 800637e:	681b      	ldr	r3, [r3, #0]
 8006380:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006384:	601a      	str	r2, [r3, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006386:	68fb      	ldr	r3, [r7, #12]
 8006388:	685b      	ldr	r3, [r3, #4]
 800638a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800638e:	d12a      	bne.n	80063e6 <SPI_EndRxTransaction+0x9a>
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8006390:	68fb      	ldr	r3, [r7, #12]
 8006392:	689b      	ldr	r3, [r3, #8]
 8006394:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8006398:	d012      	beq.n	80063c0 <SPI_EndRxTransaction+0x74>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800639a:	687b      	ldr	r3, [r7, #4]
 800639c:	9300      	str	r3, [sp, #0]
 800639e:	68bb      	ldr	r3, [r7, #8]
 80063a0:	2200      	movs	r2, #0
 80063a2:	2180      	movs	r1, #128	; 0x80
 80063a4:	68f8      	ldr	r0, [r7, #12]
 80063a6:	f7ff ff49 	bl	800623c <SPI_WaitFlagStateUntilTimeout>
 80063aa:	4603      	mov	r3, r0
 80063ac:	2b00      	cmp	r3, #0
 80063ae:	d02d      	beq.n	800640c <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80063b0:	68fb      	ldr	r3, [r7, #12]
 80063b2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80063b4:	f043 0220 	orr.w	r2, r3, #32
 80063b8:	68fb      	ldr	r3, [r7, #12]
 80063ba:	655a      	str	r2, [r3, #84]	; 0x54
        return HAL_TIMEOUT;
 80063bc:	2303      	movs	r3, #3
 80063be:	e026      	b.n	800640e <SPI_EndRxTransaction+0xc2>
      }
    }
    else
    {
      /* Wait the RXNE reset */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80063c0:	687b      	ldr	r3, [r7, #4]
 80063c2:	9300      	str	r3, [sp, #0]
 80063c4:	68bb      	ldr	r3, [r7, #8]
 80063c6:	2200      	movs	r2, #0
 80063c8:	2101      	movs	r1, #1
 80063ca:	68f8      	ldr	r0, [r7, #12]
 80063cc:	f7ff ff36 	bl	800623c <SPI_WaitFlagStateUntilTimeout>
 80063d0:	4603      	mov	r3, r0
 80063d2:	2b00      	cmp	r3, #0
 80063d4:	d01a      	beq.n	800640c <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80063d6:	68fb      	ldr	r3, [r7, #12]
 80063d8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80063da:	f043 0220 	orr.w	r2, r3, #32
 80063de:	68fb      	ldr	r3, [r7, #12]
 80063e0:	655a      	str	r2, [r3, #84]	; 0x54
        return HAL_TIMEOUT;
 80063e2:	2303      	movs	r3, #3
 80063e4:	e013      	b.n	800640e <SPI_EndRxTransaction+0xc2>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80063e6:	687b      	ldr	r3, [r7, #4]
 80063e8:	9300      	str	r3, [sp, #0]
 80063ea:	68bb      	ldr	r3, [r7, #8]
 80063ec:	2200      	movs	r2, #0
 80063ee:	2101      	movs	r1, #1
 80063f0:	68f8      	ldr	r0, [r7, #12]
 80063f2:	f7ff ff23 	bl	800623c <SPI_WaitFlagStateUntilTimeout>
 80063f6:	4603      	mov	r3, r0
 80063f8:	2b00      	cmp	r3, #0
 80063fa:	d007      	beq.n	800640c <SPI_EndRxTransaction+0xc0>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80063fc:	68fb      	ldr	r3, [r7, #12]
 80063fe:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006400:	f043 0220 	orr.w	r2, r3, #32
 8006404:	68fb      	ldr	r3, [r7, #12]
 8006406:	655a      	str	r2, [r3, #84]	; 0x54
      return HAL_TIMEOUT;
 8006408:	2303      	movs	r3, #3
 800640a:	e000      	b.n	800640e <SPI_EndRxTransaction+0xc2>
    }
  }
  return HAL_OK;
 800640c:	2300      	movs	r3, #0
}
 800640e:	4618      	mov	r0, r3
 8006410:	3710      	adds	r7, #16
 8006412:	46bd      	mov	sp, r7
 8006414:	bd80      	pop	{r7, pc}
	...

08006418 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8006418:	b580      	push	{r7, lr}
 800641a:	b088      	sub	sp, #32
 800641c:	af02      	add	r7, sp, #8
 800641e:	60f8      	str	r0, [r7, #12]
 8006420:	60b9      	str	r1, [r7, #8]
 8006422:	607a      	str	r2, [r7, #4]
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006424:	4b1b      	ldr	r3, [pc, #108]	; (8006494 <SPI_EndRxTxTransaction+0x7c>)
 8006426:	681b      	ldr	r3, [r3, #0]
 8006428:	4a1b      	ldr	r2, [pc, #108]	; (8006498 <SPI_EndRxTxTransaction+0x80>)
 800642a:	fba2 2303 	umull	r2, r3, r2, r3
 800642e:	0d5b      	lsrs	r3, r3, #21
 8006430:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8006434:	fb02 f303 	mul.w	r3, r2, r3
 8006438:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800643a:	68fb      	ldr	r3, [r7, #12]
 800643c:	685b      	ldr	r3, [r3, #4]
 800643e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8006442:	d112      	bne.n	800646a <SPI_EndRxTxTransaction+0x52>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006444:	687b      	ldr	r3, [r7, #4]
 8006446:	9300      	str	r3, [sp, #0]
 8006448:	68bb      	ldr	r3, [r7, #8]
 800644a:	2200      	movs	r2, #0
 800644c:	2180      	movs	r1, #128	; 0x80
 800644e:	68f8      	ldr	r0, [r7, #12]
 8006450:	f7ff fef4 	bl	800623c <SPI_WaitFlagStateUntilTimeout>
 8006454:	4603      	mov	r3, r0
 8006456:	2b00      	cmp	r3, #0
 8006458:	d016      	beq.n	8006488 <SPI_EndRxTxTransaction+0x70>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800645a:	68fb      	ldr	r3, [r7, #12]
 800645c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800645e:	f043 0220 	orr.w	r2, r3, #32
 8006462:	68fb      	ldr	r3, [r7, #12]
 8006464:	655a      	str	r2, [r3, #84]	; 0x54
      return HAL_TIMEOUT;
 8006466:	2303      	movs	r3, #3
 8006468:	e00f      	b.n	800648a <SPI_EndRxTxTransaction+0x72>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 800646a:	697b      	ldr	r3, [r7, #20]
 800646c:	2b00      	cmp	r3, #0
 800646e:	d00a      	beq.n	8006486 <SPI_EndRxTxTransaction+0x6e>
      {
        break;
      }
      count--;
 8006470:	697b      	ldr	r3, [r7, #20]
 8006472:	3b01      	subs	r3, #1
 8006474:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8006476:	68fb      	ldr	r3, [r7, #12]
 8006478:	681b      	ldr	r3, [r3, #0]
 800647a:	689b      	ldr	r3, [r3, #8]
 800647c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006480:	2b80      	cmp	r3, #128	; 0x80
 8006482:	d0f2      	beq.n	800646a <SPI_EndRxTxTransaction+0x52>
 8006484:	e000      	b.n	8006488 <SPI_EndRxTxTransaction+0x70>
        break;
 8006486:	bf00      	nop
  }

  return HAL_OK;
 8006488:	2300      	movs	r3, #0
}
 800648a:	4618      	mov	r0, r3
 800648c:	3718      	adds	r7, #24
 800648e:	46bd      	mov	sp, r7
 8006490:	bd80      	pop	{r7, pc}
 8006492:	bf00      	nop
 8006494:	20000004 	.word	0x20000004
 8006498:	165e9f81 	.word	0x165e9f81

0800649c <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 800649c:	b580      	push	{r7, lr}
 800649e:	b082      	sub	sp, #8
 80064a0:	af00      	add	r7, sp, #0
 80064a2:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 80064a4:	687b      	ldr	r3, [r7, #4]
 80064a6:	2b00      	cmp	r3, #0
 80064a8:	d101      	bne.n	80064ae <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 80064aa:	2301      	movs	r3, #1
 80064ac:	e041      	b.n	8006532 <HAL_TIM_Base_Init+0x96>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 80064ae:	687b      	ldr	r3, [r7, #4]
 80064b0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80064b4:	b2db      	uxtb	r3, r3
 80064b6:	2b00      	cmp	r3, #0
 80064b8:	d106      	bne.n	80064c8 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 80064ba:	687b      	ldr	r3, [r7, #4]
 80064bc:	2200      	movs	r2, #0
 80064be:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 80064c2:	6878      	ldr	r0, [r7, #4]
 80064c4:	f7fa fed8 	bl	8001278 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80064c8:	687b      	ldr	r3, [r7, #4]
 80064ca:	2202      	movs	r2, #2
 80064cc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80064d0:	687b      	ldr	r3, [r7, #4]
 80064d2:	681a      	ldr	r2, [r3, #0]
 80064d4:	687b      	ldr	r3, [r7, #4]
 80064d6:	3304      	adds	r3, #4
 80064d8:	4619      	mov	r1, r3
 80064da:	4610      	mov	r0, r2
 80064dc:	f000 fa96 	bl	8006a0c <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80064e0:	687b      	ldr	r3, [r7, #4]
 80064e2:	2201      	movs	r2, #1
 80064e4:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80064e8:	687b      	ldr	r3, [r7, #4]
 80064ea:	2201      	movs	r2, #1
 80064ec:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80064f0:	687b      	ldr	r3, [r7, #4]
 80064f2:	2201      	movs	r2, #1
 80064f4:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80064f8:	687b      	ldr	r3, [r7, #4]
 80064fa:	2201      	movs	r2, #1
 80064fc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8006500:	687b      	ldr	r3, [r7, #4]
 8006502:	2201      	movs	r2, #1
 8006504:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006508:	687b      	ldr	r3, [r7, #4]
 800650a:	2201      	movs	r2, #1
 800650c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8006510:	687b      	ldr	r3, [r7, #4]
 8006512:	2201      	movs	r2, #1
 8006514:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8006518:	687b      	ldr	r3, [r7, #4]
 800651a:	2201      	movs	r2, #1
 800651c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8006520:	687b      	ldr	r3, [r7, #4]
 8006522:	2201      	movs	r2, #1
 8006524:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8006528:	687b      	ldr	r3, [r7, #4]
 800652a:	2201      	movs	r2, #1
 800652c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 8006530:	2300      	movs	r3, #0
}
 8006532:	4618      	mov	r0, r3
 8006534:	3708      	adds	r7, #8
 8006536:	46bd      	mov	sp, r7
 8006538:	bd80      	pop	{r7, pc}
	...

0800653c <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 800653c:	b480      	push	{r7}
 800653e:	b085      	sub	sp, #20
 8006540:	af00      	add	r7, sp, #0
 8006542:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8006544:	687b      	ldr	r3, [r7, #4]
 8006546:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800654a:	b2db      	uxtb	r3, r3
 800654c:	2b01      	cmp	r3, #1
 800654e:	d001      	beq.n	8006554 <HAL_TIM_Base_Start_IT+0x18>
  {
    return HAL_ERROR;
 8006550:	2301      	movs	r3, #1
 8006552:	e04e      	b.n	80065f2 <HAL_TIM_Base_Start_IT+0xb6>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006554:	687b      	ldr	r3, [r7, #4]
 8006556:	2202      	movs	r2, #2
 8006558:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800655c:	687b      	ldr	r3, [r7, #4]
 800655e:	681b      	ldr	r3, [r3, #0]
 8006560:	68da      	ldr	r2, [r3, #12]
 8006562:	687b      	ldr	r3, [r7, #4]
 8006564:	681b      	ldr	r3, [r3, #0]
 8006566:	f042 0201 	orr.w	r2, r2, #1
 800656a:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800656c:	687b      	ldr	r3, [r7, #4]
 800656e:	681b      	ldr	r3, [r3, #0]
 8006570:	4a23      	ldr	r2, [pc, #140]	; (8006600 <HAL_TIM_Base_Start_IT+0xc4>)
 8006572:	4293      	cmp	r3, r2
 8006574:	d022      	beq.n	80065bc <HAL_TIM_Base_Start_IT+0x80>
 8006576:	687b      	ldr	r3, [r7, #4]
 8006578:	681b      	ldr	r3, [r3, #0]
 800657a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800657e:	d01d      	beq.n	80065bc <HAL_TIM_Base_Start_IT+0x80>
 8006580:	687b      	ldr	r3, [r7, #4]
 8006582:	681b      	ldr	r3, [r3, #0]
 8006584:	4a1f      	ldr	r2, [pc, #124]	; (8006604 <HAL_TIM_Base_Start_IT+0xc8>)
 8006586:	4293      	cmp	r3, r2
 8006588:	d018      	beq.n	80065bc <HAL_TIM_Base_Start_IT+0x80>
 800658a:	687b      	ldr	r3, [r7, #4]
 800658c:	681b      	ldr	r3, [r3, #0]
 800658e:	4a1e      	ldr	r2, [pc, #120]	; (8006608 <HAL_TIM_Base_Start_IT+0xcc>)
 8006590:	4293      	cmp	r3, r2
 8006592:	d013      	beq.n	80065bc <HAL_TIM_Base_Start_IT+0x80>
 8006594:	687b      	ldr	r3, [r7, #4]
 8006596:	681b      	ldr	r3, [r3, #0]
 8006598:	4a1c      	ldr	r2, [pc, #112]	; (800660c <HAL_TIM_Base_Start_IT+0xd0>)
 800659a:	4293      	cmp	r3, r2
 800659c:	d00e      	beq.n	80065bc <HAL_TIM_Base_Start_IT+0x80>
 800659e:	687b      	ldr	r3, [r7, #4]
 80065a0:	681b      	ldr	r3, [r3, #0]
 80065a2:	4a1b      	ldr	r2, [pc, #108]	; (8006610 <HAL_TIM_Base_Start_IT+0xd4>)
 80065a4:	4293      	cmp	r3, r2
 80065a6:	d009      	beq.n	80065bc <HAL_TIM_Base_Start_IT+0x80>
 80065a8:	687b      	ldr	r3, [r7, #4]
 80065aa:	681b      	ldr	r3, [r3, #0]
 80065ac:	4a19      	ldr	r2, [pc, #100]	; (8006614 <HAL_TIM_Base_Start_IT+0xd8>)
 80065ae:	4293      	cmp	r3, r2
 80065b0:	d004      	beq.n	80065bc <HAL_TIM_Base_Start_IT+0x80>
 80065b2:	687b      	ldr	r3, [r7, #4]
 80065b4:	681b      	ldr	r3, [r3, #0]
 80065b6:	4a18      	ldr	r2, [pc, #96]	; (8006618 <HAL_TIM_Base_Start_IT+0xdc>)
 80065b8:	4293      	cmp	r3, r2
 80065ba:	d111      	bne.n	80065e0 <HAL_TIM_Base_Start_IT+0xa4>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80065bc:	687b      	ldr	r3, [r7, #4]
 80065be:	681b      	ldr	r3, [r3, #0]
 80065c0:	689b      	ldr	r3, [r3, #8]
 80065c2:	f003 0307 	and.w	r3, r3, #7
 80065c6:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80065c8:	68fb      	ldr	r3, [r7, #12]
 80065ca:	2b06      	cmp	r3, #6
 80065cc:	d010      	beq.n	80065f0 <HAL_TIM_Base_Start_IT+0xb4>
    {
      __HAL_TIM_ENABLE(htim);
 80065ce:	687b      	ldr	r3, [r7, #4]
 80065d0:	681b      	ldr	r3, [r3, #0]
 80065d2:	681a      	ldr	r2, [r3, #0]
 80065d4:	687b      	ldr	r3, [r7, #4]
 80065d6:	681b      	ldr	r3, [r3, #0]
 80065d8:	f042 0201 	orr.w	r2, r2, #1
 80065dc:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80065de:	e007      	b.n	80065f0 <HAL_TIM_Base_Start_IT+0xb4>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 80065e0:	687b      	ldr	r3, [r7, #4]
 80065e2:	681b      	ldr	r3, [r3, #0]
 80065e4:	681a      	ldr	r2, [r3, #0]
 80065e6:	687b      	ldr	r3, [r7, #4]
 80065e8:	681b      	ldr	r3, [r3, #0]
 80065ea:	f042 0201 	orr.w	r2, r2, #1
 80065ee:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 80065f0:	2300      	movs	r3, #0
}
 80065f2:	4618      	mov	r0, r3
 80065f4:	3714      	adds	r7, #20
 80065f6:	46bd      	mov	sp, r7
 80065f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065fc:	4770      	bx	lr
 80065fe:	bf00      	nop
 8006600:	40010000 	.word	0x40010000
 8006604:	40000400 	.word	0x40000400
 8006608:	40000800 	.word	0x40000800
 800660c:	40000c00 	.word	0x40000c00
 8006610:	40010400 	.word	0x40010400
 8006614:	40014000 	.word	0x40014000
 8006618:	40001800 	.word	0x40001800

0800661c <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 800661c:	b580      	push	{r7, lr}
 800661e:	b082      	sub	sp, #8
 8006620:	af00      	add	r7, sp, #0
 8006622:	6078      	str	r0, [r7, #4]
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006624:	687b      	ldr	r3, [r7, #4]
 8006626:	681b      	ldr	r3, [r3, #0]
 8006628:	691b      	ldr	r3, [r3, #16]
 800662a:	f003 0302 	and.w	r3, r3, #2
 800662e:	2b02      	cmp	r3, #2
 8006630:	d122      	bne.n	8006678 <HAL_TIM_IRQHandler+0x5c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8006632:	687b      	ldr	r3, [r7, #4]
 8006634:	681b      	ldr	r3, [r3, #0]
 8006636:	68db      	ldr	r3, [r3, #12]
 8006638:	f003 0302 	and.w	r3, r3, #2
 800663c:	2b02      	cmp	r3, #2
 800663e:	d11b      	bne.n	8006678 <HAL_TIM_IRQHandler+0x5c>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8006640:	687b      	ldr	r3, [r7, #4]
 8006642:	681b      	ldr	r3, [r3, #0]
 8006644:	f06f 0202 	mvn.w	r2, #2
 8006648:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800664a:	687b      	ldr	r3, [r7, #4]
 800664c:	2201      	movs	r2, #1
 800664e:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006650:	687b      	ldr	r3, [r7, #4]
 8006652:	681b      	ldr	r3, [r3, #0]
 8006654:	699b      	ldr	r3, [r3, #24]
 8006656:	f003 0303 	and.w	r3, r3, #3
 800665a:	2b00      	cmp	r3, #0
 800665c:	d003      	beq.n	8006666 <HAL_TIM_IRQHandler+0x4a>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 800665e:	6878      	ldr	r0, [r7, #4]
 8006660:	f000 f9b5 	bl	80069ce <HAL_TIM_IC_CaptureCallback>
 8006664:	e005      	b.n	8006672 <HAL_TIM_IRQHandler+0x56>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8006666:	6878      	ldr	r0, [r7, #4]
 8006668:	f000 f9a7 	bl	80069ba <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800666c:	6878      	ldr	r0, [r7, #4]
 800666e:	f000 f9b8 	bl	80069e2 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006672:	687b      	ldr	r3, [r7, #4]
 8006674:	2200      	movs	r2, #0
 8006676:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8006678:	687b      	ldr	r3, [r7, #4]
 800667a:	681b      	ldr	r3, [r3, #0]
 800667c:	691b      	ldr	r3, [r3, #16]
 800667e:	f003 0304 	and.w	r3, r3, #4
 8006682:	2b04      	cmp	r3, #4
 8006684:	d122      	bne.n	80066cc <HAL_TIM_IRQHandler+0xb0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8006686:	687b      	ldr	r3, [r7, #4]
 8006688:	681b      	ldr	r3, [r3, #0]
 800668a:	68db      	ldr	r3, [r3, #12]
 800668c:	f003 0304 	and.w	r3, r3, #4
 8006690:	2b04      	cmp	r3, #4
 8006692:	d11b      	bne.n	80066cc <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8006694:	687b      	ldr	r3, [r7, #4]
 8006696:	681b      	ldr	r3, [r3, #0]
 8006698:	f06f 0204 	mvn.w	r2, #4
 800669c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800669e:	687b      	ldr	r3, [r7, #4]
 80066a0:	2202      	movs	r2, #2
 80066a2:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80066a4:	687b      	ldr	r3, [r7, #4]
 80066a6:	681b      	ldr	r3, [r3, #0]
 80066a8:	699b      	ldr	r3, [r3, #24]
 80066aa:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80066ae:	2b00      	cmp	r3, #0
 80066b0:	d003      	beq.n	80066ba <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80066b2:	6878      	ldr	r0, [r7, #4]
 80066b4:	f000 f98b 	bl	80069ce <HAL_TIM_IC_CaptureCallback>
 80066b8:	e005      	b.n	80066c6 <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80066ba:	6878      	ldr	r0, [r7, #4]
 80066bc:	f000 f97d 	bl	80069ba <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80066c0:	6878      	ldr	r0, [r7, #4]
 80066c2:	f000 f98e 	bl	80069e2 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80066c6:	687b      	ldr	r3, [r7, #4]
 80066c8:	2200      	movs	r2, #0
 80066ca:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80066cc:	687b      	ldr	r3, [r7, #4]
 80066ce:	681b      	ldr	r3, [r3, #0]
 80066d0:	691b      	ldr	r3, [r3, #16]
 80066d2:	f003 0308 	and.w	r3, r3, #8
 80066d6:	2b08      	cmp	r3, #8
 80066d8:	d122      	bne.n	8006720 <HAL_TIM_IRQHandler+0x104>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80066da:	687b      	ldr	r3, [r7, #4]
 80066dc:	681b      	ldr	r3, [r3, #0]
 80066de:	68db      	ldr	r3, [r3, #12]
 80066e0:	f003 0308 	and.w	r3, r3, #8
 80066e4:	2b08      	cmp	r3, #8
 80066e6:	d11b      	bne.n	8006720 <HAL_TIM_IRQHandler+0x104>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80066e8:	687b      	ldr	r3, [r7, #4]
 80066ea:	681b      	ldr	r3, [r3, #0]
 80066ec:	f06f 0208 	mvn.w	r2, #8
 80066f0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80066f2:	687b      	ldr	r3, [r7, #4]
 80066f4:	2204      	movs	r2, #4
 80066f6:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80066f8:	687b      	ldr	r3, [r7, #4]
 80066fa:	681b      	ldr	r3, [r3, #0]
 80066fc:	69db      	ldr	r3, [r3, #28]
 80066fe:	f003 0303 	and.w	r3, r3, #3
 8006702:	2b00      	cmp	r3, #0
 8006704:	d003      	beq.n	800670e <HAL_TIM_IRQHandler+0xf2>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006706:	6878      	ldr	r0, [r7, #4]
 8006708:	f000 f961 	bl	80069ce <HAL_TIM_IC_CaptureCallback>
 800670c:	e005      	b.n	800671a <HAL_TIM_IRQHandler+0xfe>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800670e:	6878      	ldr	r0, [r7, #4]
 8006710:	f000 f953 	bl	80069ba <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006714:	6878      	ldr	r0, [r7, #4]
 8006716:	f000 f964 	bl	80069e2 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800671a:	687b      	ldr	r3, [r7, #4]
 800671c:	2200      	movs	r2, #0
 800671e:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8006720:	687b      	ldr	r3, [r7, #4]
 8006722:	681b      	ldr	r3, [r3, #0]
 8006724:	691b      	ldr	r3, [r3, #16]
 8006726:	f003 0310 	and.w	r3, r3, #16
 800672a:	2b10      	cmp	r3, #16
 800672c:	d122      	bne.n	8006774 <HAL_TIM_IRQHandler+0x158>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800672e:	687b      	ldr	r3, [r7, #4]
 8006730:	681b      	ldr	r3, [r3, #0]
 8006732:	68db      	ldr	r3, [r3, #12]
 8006734:	f003 0310 	and.w	r3, r3, #16
 8006738:	2b10      	cmp	r3, #16
 800673a:	d11b      	bne.n	8006774 <HAL_TIM_IRQHandler+0x158>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800673c:	687b      	ldr	r3, [r7, #4]
 800673e:	681b      	ldr	r3, [r3, #0]
 8006740:	f06f 0210 	mvn.w	r2, #16
 8006744:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006746:	687b      	ldr	r3, [r7, #4]
 8006748:	2208      	movs	r2, #8
 800674a:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800674c:	687b      	ldr	r3, [r7, #4]
 800674e:	681b      	ldr	r3, [r3, #0]
 8006750:	69db      	ldr	r3, [r3, #28]
 8006752:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006756:	2b00      	cmp	r3, #0
 8006758:	d003      	beq.n	8006762 <HAL_TIM_IRQHandler+0x146>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800675a:	6878      	ldr	r0, [r7, #4]
 800675c:	f000 f937 	bl	80069ce <HAL_TIM_IC_CaptureCallback>
 8006760:	e005      	b.n	800676e <HAL_TIM_IRQHandler+0x152>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006762:	6878      	ldr	r0, [r7, #4]
 8006764:	f000 f929 	bl	80069ba <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006768:	6878      	ldr	r0, [r7, #4]
 800676a:	f000 f93a 	bl	80069e2 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800676e:	687b      	ldr	r3, [r7, #4]
 8006770:	2200      	movs	r2, #0
 8006772:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8006774:	687b      	ldr	r3, [r7, #4]
 8006776:	681b      	ldr	r3, [r3, #0]
 8006778:	691b      	ldr	r3, [r3, #16]
 800677a:	f003 0301 	and.w	r3, r3, #1
 800677e:	2b01      	cmp	r3, #1
 8006780:	d10e      	bne.n	80067a0 <HAL_TIM_IRQHandler+0x184>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8006782:	687b      	ldr	r3, [r7, #4]
 8006784:	681b      	ldr	r3, [r3, #0]
 8006786:	68db      	ldr	r3, [r3, #12]
 8006788:	f003 0301 	and.w	r3, r3, #1
 800678c:	2b01      	cmp	r3, #1
 800678e:	d107      	bne.n	80067a0 <HAL_TIM_IRQHandler+0x184>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8006790:	687b      	ldr	r3, [r7, #4]
 8006792:	681b      	ldr	r3, [r3, #0]
 8006794:	f06f 0201 	mvn.w	r2, #1
 8006798:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800679a:	6878      	ldr	r0, [r7, #4]
 800679c:	f7fa fabc 	bl	8000d18 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 80067a0:	687b      	ldr	r3, [r7, #4]
 80067a2:	681b      	ldr	r3, [r3, #0]
 80067a4:	691b      	ldr	r3, [r3, #16]
 80067a6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80067aa:	2b80      	cmp	r3, #128	; 0x80
 80067ac:	d10e      	bne.n	80067cc <HAL_TIM_IRQHandler+0x1b0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 80067ae:	687b      	ldr	r3, [r7, #4]
 80067b0:	681b      	ldr	r3, [r3, #0]
 80067b2:	68db      	ldr	r3, [r3, #12]
 80067b4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80067b8:	2b80      	cmp	r3, #128	; 0x80
 80067ba:	d107      	bne.n	80067cc <HAL_TIM_IRQHandler+0x1b0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 80067bc:	687b      	ldr	r3, [r7, #4]
 80067be:	681b      	ldr	r3, [r3, #0]
 80067c0:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80067c4:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 80067c6:	6878      	ldr	r0, [r7, #4]
 80067c8:	f000 fae0 	bl	8006d8c <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 80067cc:	687b      	ldr	r3, [r7, #4]
 80067ce:	681b      	ldr	r3, [r3, #0]
 80067d0:	691b      	ldr	r3, [r3, #16]
 80067d2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80067d6:	2b40      	cmp	r3, #64	; 0x40
 80067d8:	d10e      	bne.n	80067f8 <HAL_TIM_IRQHandler+0x1dc>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 80067da:	687b      	ldr	r3, [r7, #4]
 80067dc:	681b      	ldr	r3, [r3, #0]
 80067de:	68db      	ldr	r3, [r3, #12]
 80067e0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80067e4:	2b40      	cmp	r3, #64	; 0x40
 80067e6:	d107      	bne.n	80067f8 <HAL_TIM_IRQHandler+0x1dc>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 80067e8:	687b      	ldr	r3, [r7, #4]
 80067ea:	681b      	ldr	r3, [r3, #0]
 80067ec:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80067f0:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 80067f2:	6878      	ldr	r0, [r7, #4]
 80067f4:	f000 f8ff 	bl	80069f6 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 80067f8:	687b      	ldr	r3, [r7, #4]
 80067fa:	681b      	ldr	r3, [r3, #0]
 80067fc:	691b      	ldr	r3, [r3, #16]
 80067fe:	f003 0320 	and.w	r3, r3, #32
 8006802:	2b20      	cmp	r3, #32
 8006804:	d10e      	bne.n	8006824 <HAL_TIM_IRQHandler+0x208>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8006806:	687b      	ldr	r3, [r7, #4]
 8006808:	681b      	ldr	r3, [r3, #0]
 800680a:	68db      	ldr	r3, [r3, #12]
 800680c:	f003 0320 	and.w	r3, r3, #32
 8006810:	2b20      	cmp	r3, #32
 8006812:	d107      	bne.n	8006824 <HAL_TIM_IRQHandler+0x208>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006814:	687b      	ldr	r3, [r7, #4]
 8006816:	681b      	ldr	r3, [r3, #0]
 8006818:	f06f 0220 	mvn.w	r2, #32
 800681c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 800681e:	6878      	ldr	r0, [r7, #4]
 8006820:	f000 faaa 	bl	8006d78 <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8006824:	bf00      	nop
 8006826:	3708      	adds	r7, #8
 8006828:	46bd      	mov	sp, r7
 800682a:	bd80      	pop	{r7, pc}

0800682c <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 800682c:	b580      	push	{r7, lr}
 800682e:	b084      	sub	sp, #16
 8006830:	af00      	add	r7, sp, #0
 8006832:	6078      	str	r0, [r7, #4]
 8006834:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8006836:	2300      	movs	r3, #0
 8006838:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 800683a:	687b      	ldr	r3, [r7, #4]
 800683c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006840:	2b01      	cmp	r3, #1
 8006842:	d101      	bne.n	8006848 <HAL_TIM_ConfigClockSource+0x1c>
 8006844:	2302      	movs	r3, #2
 8006846:	e0b4      	b.n	80069b2 <HAL_TIM_ConfigClockSource+0x186>
 8006848:	687b      	ldr	r3, [r7, #4]
 800684a:	2201      	movs	r2, #1
 800684c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 8006850:	687b      	ldr	r3, [r7, #4]
 8006852:	2202      	movs	r2, #2
 8006854:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 8006858:	687b      	ldr	r3, [r7, #4]
 800685a:	681b      	ldr	r3, [r3, #0]
 800685c:	689b      	ldr	r3, [r3, #8]
 800685e:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 8006860:	68bb      	ldr	r3, [r7, #8]
 8006862:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8006866:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8006868:	68bb      	ldr	r3, [r7, #8]
 800686a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800686e:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 8006870:	687b      	ldr	r3, [r7, #4]
 8006872:	681b      	ldr	r3, [r3, #0]
 8006874:	68ba      	ldr	r2, [r7, #8]
 8006876:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 8006878:	683b      	ldr	r3, [r7, #0]
 800687a:	681b      	ldr	r3, [r3, #0]
 800687c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006880:	d03e      	beq.n	8006900 <HAL_TIM_ConfigClockSource+0xd4>
 8006882:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006886:	f200 8087 	bhi.w	8006998 <HAL_TIM_ConfigClockSource+0x16c>
 800688a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800688e:	f000 8086 	beq.w	800699e <HAL_TIM_ConfigClockSource+0x172>
 8006892:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006896:	d87f      	bhi.n	8006998 <HAL_TIM_ConfigClockSource+0x16c>
 8006898:	2b70      	cmp	r3, #112	; 0x70
 800689a:	d01a      	beq.n	80068d2 <HAL_TIM_ConfigClockSource+0xa6>
 800689c:	2b70      	cmp	r3, #112	; 0x70
 800689e:	d87b      	bhi.n	8006998 <HAL_TIM_ConfigClockSource+0x16c>
 80068a0:	2b60      	cmp	r3, #96	; 0x60
 80068a2:	d050      	beq.n	8006946 <HAL_TIM_ConfigClockSource+0x11a>
 80068a4:	2b60      	cmp	r3, #96	; 0x60
 80068a6:	d877      	bhi.n	8006998 <HAL_TIM_ConfigClockSource+0x16c>
 80068a8:	2b50      	cmp	r3, #80	; 0x50
 80068aa:	d03c      	beq.n	8006926 <HAL_TIM_ConfigClockSource+0xfa>
 80068ac:	2b50      	cmp	r3, #80	; 0x50
 80068ae:	d873      	bhi.n	8006998 <HAL_TIM_ConfigClockSource+0x16c>
 80068b0:	2b40      	cmp	r3, #64	; 0x40
 80068b2:	d058      	beq.n	8006966 <HAL_TIM_ConfigClockSource+0x13a>
 80068b4:	2b40      	cmp	r3, #64	; 0x40
 80068b6:	d86f      	bhi.n	8006998 <HAL_TIM_ConfigClockSource+0x16c>
 80068b8:	2b30      	cmp	r3, #48	; 0x30
 80068ba:	d064      	beq.n	8006986 <HAL_TIM_ConfigClockSource+0x15a>
 80068bc:	2b30      	cmp	r3, #48	; 0x30
 80068be:	d86b      	bhi.n	8006998 <HAL_TIM_ConfigClockSource+0x16c>
 80068c0:	2b20      	cmp	r3, #32
 80068c2:	d060      	beq.n	8006986 <HAL_TIM_ConfigClockSource+0x15a>
 80068c4:	2b20      	cmp	r3, #32
 80068c6:	d867      	bhi.n	8006998 <HAL_TIM_ConfigClockSource+0x16c>
 80068c8:	2b00      	cmp	r3, #0
 80068ca:	d05c      	beq.n	8006986 <HAL_TIM_ConfigClockSource+0x15a>
 80068cc:	2b10      	cmp	r3, #16
 80068ce:	d05a      	beq.n	8006986 <HAL_TIM_ConfigClockSource+0x15a>
 80068d0:	e062      	b.n	8006998 <HAL_TIM_ConfigClockSource+0x16c>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 80068d2:	687b      	ldr	r3, [r7, #4]
 80068d4:	6818      	ldr	r0, [r3, #0]
 80068d6:	683b      	ldr	r3, [r7, #0]
 80068d8:	6899      	ldr	r1, [r3, #8]
 80068da:	683b      	ldr	r3, [r7, #0]
 80068dc:	685a      	ldr	r2, [r3, #4]
 80068de:	683b      	ldr	r3, [r7, #0]
 80068e0:	68db      	ldr	r3, [r3, #12]
 80068e2:	f000 f9ad 	bl	8006c40 <TIM_ETR_SetConfig>
                        sClockSourceConfig->ClockPrescaler,
                        sClockSourceConfig->ClockPolarity,
                        sClockSourceConfig->ClockFilter);

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 80068e6:	687b      	ldr	r3, [r7, #4]
 80068e8:	681b      	ldr	r3, [r3, #0]
 80068ea:	689b      	ldr	r3, [r3, #8]
 80068ec:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 80068ee:	68bb      	ldr	r3, [r7, #8]
 80068f0:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 80068f4:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 80068f6:	687b      	ldr	r3, [r7, #4]
 80068f8:	681b      	ldr	r3, [r3, #0]
 80068fa:	68ba      	ldr	r2, [r7, #8]
 80068fc:	609a      	str	r2, [r3, #8]
      break;
 80068fe:	e04f      	b.n	80069a0 <HAL_TIM_ConfigClockSource+0x174>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 8006900:	687b      	ldr	r3, [r7, #4]
 8006902:	6818      	ldr	r0, [r3, #0]
 8006904:	683b      	ldr	r3, [r7, #0]
 8006906:	6899      	ldr	r1, [r3, #8]
 8006908:	683b      	ldr	r3, [r7, #0]
 800690a:	685a      	ldr	r2, [r3, #4]
 800690c:	683b      	ldr	r3, [r7, #0]
 800690e:	68db      	ldr	r3, [r3, #12]
 8006910:	f000 f996 	bl	8006c40 <TIM_ETR_SetConfig>
                        sClockSourceConfig->ClockPrescaler,
                        sClockSourceConfig->ClockPolarity,
                        sClockSourceConfig->ClockFilter);
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8006914:	687b      	ldr	r3, [r7, #4]
 8006916:	681b      	ldr	r3, [r3, #0]
 8006918:	689a      	ldr	r2, [r3, #8]
 800691a:	687b      	ldr	r3, [r7, #4]
 800691c:	681b      	ldr	r3, [r3, #0]
 800691e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8006922:	609a      	str	r2, [r3, #8]
      break;
 8006924:	e03c      	b.n	80069a0 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 8006926:	687b      	ldr	r3, [r7, #4]
 8006928:	6818      	ldr	r0, [r3, #0]
 800692a:	683b      	ldr	r3, [r7, #0]
 800692c:	6859      	ldr	r1, [r3, #4]
 800692e:	683b      	ldr	r3, [r7, #0]
 8006930:	68db      	ldr	r3, [r3, #12]
 8006932:	461a      	mov	r2, r3
 8006934:	f000 f90a 	bl	8006b4c <TIM_TI1_ConfigInputStage>
                               sClockSourceConfig->ClockPolarity,
                               sClockSourceConfig->ClockFilter);
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 8006938:	687b      	ldr	r3, [r7, #4]
 800693a:	681b      	ldr	r3, [r3, #0]
 800693c:	2150      	movs	r1, #80	; 0x50
 800693e:	4618      	mov	r0, r3
 8006940:	f000 f963 	bl	8006c0a <TIM_ITRx_SetConfig>
      break;
 8006944:	e02c      	b.n	80069a0 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 8006946:	687b      	ldr	r3, [r7, #4]
 8006948:	6818      	ldr	r0, [r3, #0]
 800694a:	683b      	ldr	r3, [r7, #0]
 800694c:	6859      	ldr	r1, [r3, #4]
 800694e:	683b      	ldr	r3, [r7, #0]
 8006950:	68db      	ldr	r3, [r3, #12]
 8006952:	461a      	mov	r2, r3
 8006954:	f000 f929 	bl	8006baa <TIM_TI2_ConfigInputStage>
                               sClockSourceConfig->ClockPolarity,
                               sClockSourceConfig->ClockFilter);
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 8006958:	687b      	ldr	r3, [r7, #4]
 800695a:	681b      	ldr	r3, [r3, #0]
 800695c:	2160      	movs	r1, #96	; 0x60
 800695e:	4618      	mov	r0, r3
 8006960:	f000 f953 	bl	8006c0a <TIM_ITRx_SetConfig>
      break;
 8006964:	e01c      	b.n	80069a0 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 8006966:	687b      	ldr	r3, [r7, #4]
 8006968:	6818      	ldr	r0, [r3, #0]
 800696a:	683b      	ldr	r3, [r7, #0]
 800696c:	6859      	ldr	r1, [r3, #4]
 800696e:	683b      	ldr	r3, [r7, #0]
 8006970:	68db      	ldr	r3, [r3, #12]
 8006972:	461a      	mov	r2, r3
 8006974:	f000 f8ea 	bl	8006b4c <TIM_TI1_ConfigInputStage>
                               sClockSourceConfig->ClockPolarity,
                               sClockSourceConfig->ClockFilter);
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 8006978:	687b      	ldr	r3, [r7, #4]
 800697a:	681b      	ldr	r3, [r3, #0]
 800697c:	2140      	movs	r1, #64	; 0x40
 800697e:	4618      	mov	r0, r3
 8006980:	f000 f943 	bl	8006c0a <TIM_ITRx_SetConfig>
      break;
 8006984:	e00c      	b.n	80069a0 <HAL_TIM_ConfigClockSource+0x174>
    case TIM_CLOCKSOURCE_ITR3:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 8006986:	687b      	ldr	r3, [r7, #4]
 8006988:	681a      	ldr	r2, [r3, #0]
 800698a:	683b      	ldr	r3, [r7, #0]
 800698c:	681b      	ldr	r3, [r3, #0]
 800698e:	4619      	mov	r1, r3
 8006990:	4610      	mov	r0, r2
 8006992:	f000 f93a 	bl	8006c0a <TIM_ITRx_SetConfig>
      break;
 8006996:	e003      	b.n	80069a0 <HAL_TIM_ConfigClockSource+0x174>
    }

    default:
      status = HAL_ERROR;
 8006998:	2301      	movs	r3, #1
 800699a:	73fb      	strb	r3, [r7, #15]
      break;
 800699c:	e000      	b.n	80069a0 <HAL_TIM_ConfigClockSource+0x174>
      break;
 800699e:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 80069a0:	687b      	ldr	r3, [r7, #4]
 80069a2:	2201      	movs	r2, #1
 80069a4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 80069a8:	687b      	ldr	r3, [r7, #4]
 80069aa:	2200      	movs	r2, #0
 80069ac:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return status;
 80069b0:	7bfb      	ldrb	r3, [r7, #15]
}
 80069b2:	4618      	mov	r0, r3
 80069b4:	3710      	adds	r7, #16
 80069b6:	46bd      	mov	sp, r7
 80069b8:	bd80      	pop	{r7, pc}

080069ba <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 80069ba:	b480      	push	{r7}
 80069bc:	b083      	sub	sp, #12
 80069be:	af00      	add	r7, sp, #0
 80069c0:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 80069c2:	bf00      	nop
 80069c4:	370c      	adds	r7, #12
 80069c6:	46bd      	mov	sp, r7
 80069c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069cc:	4770      	bx	lr

080069ce <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 80069ce:	b480      	push	{r7}
 80069d0:	b083      	sub	sp, #12
 80069d2:	af00      	add	r7, sp, #0
 80069d4:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 80069d6:	bf00      	nop
 80069d8:	370c      	adds	r7, #12
 80069da:	46bd      	mov	sp, r7
 80069dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069e0:	4770      	bx	lr

080069e2 <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 80069e2:	b480      	push	{r7}
 80069e4:	b083      	sub	sp, #12
 80069e6:	af00      	add	r7, sp, #0
 80069e8:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 80069ea:	bf00      	nop
 80069ec:	370c      	adds	r7, #12
 80069ee:	46bd      	mov	sp, r7
 80069f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069f4:	4770      	bx	lr

080069f6 <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 80069f6:	b480      	push	{r7}
 80069f8:	b083      	sub	sp, #12
 80069fa:	af00      	add	r7, sp, #0
 80069fc:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 80069fe:	bf00      	nop
 8006a00:	370c      	adds	r7, #12
 8006a02:	46bd      	mov	sp, r7
 8006a04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a08:	4770      	bx	lr
	...

08006a0c <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, TIM_Base_InitTypeDef *Structure)
{
 8006a0c:	b480      	push	{r7}
 8006a0e:	b085      	sub	sp, #20
 8006a10:	af00      	add	r7, sp, #0
 8006a12:	6078      	str	r0, [r7, #4]
 8006a14:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 8006a16:	687b      	ldr	r3, [r7, #4]
 8006a18:	681b      	ldr	r3, [r3, #0]
 8006a1a:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006a1c:	687b      	ldr	r3, [r7, #4]
 8006a1e:	4a40      	ldr	r2, [pc, #256]	; (8006b20 <TIM_Base_SetConfig+0x114>)
 8006a20:	4293      	cmp	r3, r2
 8006a22:	d013      	beq.n	8006a4c <TIM_Base_SetConfig+0x40>
 8006a24:	687b      	ldr	r3, [r7, #4]
 8006a26:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006a2a:	d00f      	beq.n	8006a4c <TIM_Base_SetConfig+0x40>
 8006a2c:	687b      	ldr	r3, [r7, #4]
 8006a2e:	4a3d      	ldr	r2, [pc, #244]	; (8006b24 <TIM_Base_SetConfig+0x118>)
 8006a30:	4293      	cmp	r3, r2
 8006a32:	d00b      	beq.n	8006a4c <TIM_Base_SetConfig+0x40>
 8006a34:	687b      	ldr	r3, [r7, #4]
 8006a36:	4a3c      	ldr	r2, [pc, #240]	; (8006b28 <TIM_Base_SetConfig+0x11c>)
 8006a38:	4293      	cmp	r3, r2
 8006a3a:	d007      	beq.n	8006a4c <TIM_Base_SetConfig+0x40>
 8006a3c:	687b      	ldr	r3, [r7, #4]
 8006a3e:	4a3b      	ldr	r2, [pc, #236]	; (8006b2c <TIM_Base_SetConfig+0x120>)
 8006a40:	4293      	cmp	r3, r2
 8006a42:	d003      	beq.n	8006a4c <TIM_Base_SetConfig+0x40>
 8006a44:	687b      	ldr	r3, [r7, #4]
 8006a46:	4a3a      	ldr	r2, [pc, #232]	; (8006b30 <TIM_Base_SetConfig+0x124>)
 8006a48:	4293      	cmp	r3, r2
 8006a4a:	d108      	bne.n	8006a5e <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8006a4c:	68fb      	ldr	r3, [r7, #12]
 8006a4e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006a52:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 8006a54:	683b      	ldr	r3, [r7, #0]
 8006a56:	685b      	ldr	r3, [r3, #4]
 8006a58:	68fa      	ldr	r2, [r7, #12]
 8006a5a:	4313      	orrs	r3, r2
 8006a5c:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8006a5e:	687b      	ldr	r3, [r7, #4]
 8006a60:	4a2f      	ldr	r2, [pc, #188]	; (8006b20 <TIM_Base_SetConfig+0x114>)
 8006a62:	4293      	cmp	r3, r2
 8006a64:	d02b      	beq.n	8006abe <TIM_Base_SetConfig+0xb2>
 8006a66:	687b      	ldr	r3, [r7, #4]
 8006a68:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006a6c:	d027      	beq.n	8006abe <TIM_Base_SetConfig+0xb2>
 8006a6e:	687b      	ldr	r3, [r7, #4]
 8006a70:	4a2c      	ldr	r2, [pc, #176]	; (8006b24 <TIM_Base_SetConfig+0x118>)
 8006a72:	4293      	cmp	r3, r2
 8006a74:	d023      	beq.n	8006abe <TIM_Base_SetConfig+0xb2>
 8006a76:	687b      	ldr	r3, [r7, #4]
 8006a78:	4a2b      	ldr	r2, [pc, #172]	; (8006b28 <TIM_Base_SetConfig+0x11c>)
 8006a7a:	4293      	cmp	r3, r2
 8006a7c:	d01f      	beq.n	8006abe <TIM_Base_SetConfig+0xb2>
 8006a7e:	687b      	ldr	r3, [r7, #4]
 8006a80:	4a2a      	ldr	r2, [pc, #168]	; (8006b2c <TIM_Base_SetConfig+0x120>)
 8006a82:	4293      	cmp	r3, r2
 8006a84:	d01b      	beq.n	8006abe <TIM_Base_SetConfig+0xb2>
 8006a86:	687b      	ldr	r3, [r7, #4]
 8006a88:	4a29      	ldr	r2, [pc, #164]	; (8006b30 <TIM_Base_SetConfig+0x124>)
 8006a8a:	4293      	cmp	r3, r2
 8006a8c:	d017      	beq.n	8006abe <TIM_Base_SetConfig+0xb2>
 8006a8e:	687b      	ldr	r3, [r7, #4]
 8006a90:	4a28      	ldr	r2, [pc, #160]	; (8006b34 <TIM_Base_SetConfig+0x128>)
 8006a92:	4293      	cmp	r3, r2
 8006a94:	d013      	beq.n	8006abe <TIM_Base_SetConfig+0xb2>
 8006a96:	687b      	ldr	r3, [r7, #4]
 8006a98:	4a27      	ldr	r2, [pc, #156]	; (8006b38 <TIM_Base_SetConfig+0x12c>)
 8006a9a:	4293      	cmp	r3, r2
 8006a9c:	d00f      	beq.n	8006abe <TIM_Base_SetConfig+0xb2>
 8006a9e:	687b      	ldr	r3, [r7, #4]
 8006aa0:	4a26      	ldr	r2, [pc, #152]	; (8006b3c <TIM_Base_SetConfig+0x130>)
 8006aa2:	4293      	cmp	r3, r2
 8006aa4:	d00b      	beq.n	8006abe <TIM_Base_SetConfig+0xb2>
 8006aa6:	687b      	ldr	r3, [r7, #4]
 8006aa8:	4a25      	ldr	r2, [pc, #148]	; (8006b40 <TIM_Base_SetConfig+0x134>)
 8006aaa:	4293      	cmp	r3, r2
 8006aac:	d007      	beq.n	8006abe <TIM_Base_SetConfig+0xb2>
 8006aae:	687b      	ldr	r3, [r7, #4]
 8006ab0:	4a24      	ldr	r2, [pc, #144]	; (8006b44 <TIM_Base_SetConfig+0x138>)
 8006ab2:	4293      	cmp	r3, r2
 8006ab4:	d003      	beq.n	8006abe <TIM_Base_SetConfig+0xb2>
 8006ab6:	687b      	ldr	r3, [r7, #4]
 8006ab8:	4a23      	ldr	r2, [pc, #140]	; (8006b48 <TIM_Base_SetConfig+0x13c>)
 8006aba:	4293      	cmp	r3, r2
 8006abc:	d108      	bne.n	8006ad0 <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8006abe:	68fb      	ldr	r3, [r7, #12]
 8006ac0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006ac4:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006ac6:	683b      	ldr	r3, [r7, #0]
 8006ac8:	68db      	ldr	r3, [r3, #12]
 8006aca:	68fa      	ldr	r2, [r7, #12]
 8006acc:	4313      	orrs	r3, r2
 8006ace:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006ad0:	68fb      	ldr	r3, [r7, #12]
 8006ad2:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8006ad6:	683b      	ldr	r3, [r7, #0]
 8006ad8:	695b      	ldr	r3, [r3, #20]
 8006ada:	4313      	orrs	r3, r2
 8006adc:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 8006ade:	687b      	ldr	r3, [r7, #4]
 8006ae0:	68fa      	ldr	r2, [r7, #12]
 8006ae2:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8006ae4:	683b      	ldr	r3, [r7, #0]
 8006ae6:	689a      	ldr	r2, [r3, #8]
 8006ae8:	687b      	ldr	r3, [r7, #4]
 8006aea:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8006aec:	683b      	ldr	r3, [r7, #0]
 8006aee:	681a      	ldr	r2, [r3, #0]
 8006af0:	687b      	ldr	r3, [r7, #4]
 8006af2:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8006af4:	687b      	ldr	r3, [r7, #4]
 8006af6:	4a0a      	ldr	r2, [pc, #40]	; (8006b20 <TIM_Base_SetConfig+0x114>)
 8006af8:	4293      	cmp	r3, r2
 8006afa:	d003      	beq.n	8006b04 <TIM_Base_SetConfig+0xf8>
 8006afc:	687b      	ldr	r3, [r7, #4]
 8006afe:	4a0c      	ldr	r2, [pc, #48]	; (8006b30 <TIM_Base_SetConfig+0x124>)
 8006b00:	4293      	cmp	r3, r2
 8006b02:	d103      	bne.n	8006b0c <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8006b04:	683b      	ldr	r3, [r7, #0]
 8006b06:	691a      	ldr	r2, [r3, #16]
 8006b08:	687b      	ldr	r3, [r7, #4]
 8006b0a:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006b0c:	687b      	ldr	r3, [r7, #4]
 8006b0e:	2201      	movs	r2, #1
 8006b10:	615a      	str	r2, [r3, #20]
}
 8006b12:	bf00      	nop
 8006b14:	3714      	adds	r7, #20
 8006b16:	46bd      	mov	sp, r7
 8006b18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b1c:	4770      	bx	lr
 8006b1e:	bf00      	nop
 8006b20:	40010000 	.word	0x40010000
 8006b24:	40000400 	.word	0x40000400
 8006b28:	40000800 	.word	0x40000800
 8006b2c:	40000c00 	.word	0x40000c00
 8006b30:	40010400 	.word	0x40010400
 8006b34:	40014000 	.word	0x40014000
 8006b38:	40014400 	.word	0x40014400
 8006b3c:	40014800 	.word	0x40014800
 8006b40:	40001800 	.word	0x40001800
 8006b44:	40001c00 	.word	0x40001c00
 8006b48:	40002000 	.word	0x40002000

08006b4c <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8006b4c:	b480      	push	{r7}
 8006b4e:	b087      	sub	sp, #28
 8006b50:	af00      	add	r7, sp, #0
 8006b52:	60f8      	str	r0, [r7, #12]
 8006b54:	60b9      	str	r1, [r7, #8]
 8006b56:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 8006b58:	68fb      	ldr	r3, [r7, #12]
 8006b5a:	6a1b      	ldr	r3, [r3, #32]
 8006b5c:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8006b5e:	68fb      	ldr	r3, [r7, #12]
 8006b60:	6a1b      	ldr	r3, [r3, #32]
 8006b62:	f023 0201 	bic.w	r2, r3, #1
 8006b66:	68fb      	ldr	r3, [r7, #12]
 8006b68:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8006b6a:	68fb      	ldr	r3, [r7, #12]
 8006b6c:	699b      	ldr	r3, [r3, #24]
 8006b6e:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8006b70:	693b      	ldr	r3, [r7, #16]
 8006b72:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8006b76:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8006b78:	687b      	ldr	r3, [r7, #4]
 8006b7a:	011b      	lsls	r3, r3, #4
 8006b7c:	693a      	ldr	r2, [r7, #16]
 8006b7e:	4313      	orrs	r3, r2
 8006b80:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8006b82:	697b      	ldr	r3, [r7, #20]
 8006b84:	f023 030a 	bic.w	r3, r3, #10
 8006b88:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 8006b8a:	697a      	ldr	r2, [r7, #20]
 8006b8c:	68bb      	ldr	r3, [r7, #8]
 8006b8e:	4313      	orrs	r3, r2
 8006b90:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 8006b92:	68fb      	ldr	r3, [r7, #12]
 8006b94:	693a      	ldr	r2, [r7, #16]
 8006b96:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8006b98:	68fb      	ldr	r3, [r7, #12]
 8006b9a:	697a      	ldr	r2, [r7, #20]
 8006b9c:	621a      	str	r2, [r3, #32]
}
 8006b9e:	bf00      	nop
 8006ba0:	371c      	adds	r7, #28
 8006ba2:	46bd      	mov	sp, r7
 8006ba4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ba8:	4770      	bx	lr

08006baa <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8006baa:	b480      	push	{r7}
 8006bac:	b087      	sub	sp, #28
 8006bae:	af00      	add	r7, sp, #0
 8006bb0:	60f8      	str	r0, [r7, #12]
 8006bb2:	60b9      	str	r1, [r7, #8]
 8006bb4:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8006bb6:	68fb      	ldr	r3, [r7, #12]
 8006bb8:	6a1b      	ldr	r3, [r3, #32]
 8006bba:	f023 0210 	bic.w	r2, r3, #16
 8006bbe:	68fb      	ldr	r3, [r7, #12]
 8006bc0:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8006bc2:	68fb      	ldr	r3, [r7, #12]
 8006bc4:	699b      	ldr	r3, [r3, #24]
 8006bc6:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 8006bc8:	68fb      	ldr	r3, [r7, #12]
 8006bca:	6a1b      	ldr	r3, [r3, #32]
 8006bcc:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8006bce:	697b      	ldr	r3, [r7, #20]
 8006bd0:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8006bd4:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8006bd6:	687b      	ldr	r3, [r7, #4]
 8006bd8:	031b      	lsls	r3, r3, #12
 8006bda:	697a      	ldr	r2, [r7, #20]
 8006bdc:	4313      	orrs	r3, r2
 8006bde:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8006be0:	693b      	ldr	r3, [r7, #16]
 8006be2:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8006be6:	613b      	str	r3, [r7, #16]
  tmpccer |= (TIM_ICPolarity << 4U);
 8006be8:	68bb      	ldr	r3, [r7, #8]
 8006bea:	011b      	lsls	r3, r3, #4
 8006bec:	693a      	ldr	r2, [r7, #16]
 8006bee:	4313      	orrs	r3, r2
 8006bf0:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 8006bf2:	68fb      	ldr	r3, [r7, #12]
 8006bf4:	697a      	ldr	r2, [r7, #20]
 8006bf6:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8006bf8:	68fb      	ldr	r3, [r7, #12]
 8006bfa:	693a      	ldr	r2, [r7, #16]
 8006bfc:	621a      	str	r2, [r3, #32]
}
 8006bfe:	bf00      	nop
 8006c00:	371c      	adds	r7, #28
 8006c02:	46bd      	mov	sp, r7
 8006c04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c08:	4770      	bx	lr

08006c0a <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 8006c0a:	b480      	push	{r7}
 8006c0c:	b085      	sub	sp, #20
 8006c0e:	af00      	add	r7, sp, #0
 8006c10:	6078      	str	r0, [r7, #4]
 8006c12:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8006c14:	687b      	ldr	r3, [r7, #4]
 8006c16:	689b      	ldr	r3, [r3, #8]
 8006c18:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8006c1a:	68fb      	ldr	r3, [r7, #12]
 8006c1c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006c20:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8006c22:	683a      	ldr	r2, [r7, #0]
 8006c24:	68fb      	ldr	r3, [r7, #12]
 8006c26:	4313      	orrs	r3, r2
 8006c28:	f043 0307 	orr.w	r3, r3, #7
 8006c2c:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8006c2e:	687b      	ldr	r3, [r7, #4]
 8006c30:	68fa      	ldr	r2, [r7, #12]
 8006c32:	609a      	str	r2, [r3, #8]
}
 8006c34:	bf00      	nop
 8006c36:	3714      	adds	r7, #20
 8006c38:	46bd      	mov	sp, r7
 8006c3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c3e:	4770      	bx	lr

08006c40 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 8006c40:	b480      	push	{r7}
 8006c42:	b087      	sub	sp, #28
 8006c44:	af00      	add	r7, sp, #0
 8006c46:	60f8      	str	r0, [r7, #12]
 8006c48:	60b9      	str	r1, [r7, #8]
 8006c4a:	607a      	str	r2, [r7, #4]
 8006c4c:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8006c4e:	68fb      	ldr	r3, [r7, #12]
 8006c50:	689b      	ldr	r3, [r3, #8]
 8006c52:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8006c54:	697b      	ldr	r3, [r7, #20]
 8006c56:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8006c5a:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8006c5c:	683b      	ldr	r3, [r7, #0]
 8006c5e:	021a      	lsls	r2, r3, #8
 8006c60:	687b      	ldr	r3, [r7, #4]
 8006c62:	431a      	orrs	r2, r3
 8006c64:	68bb      	ldr	r3, [r7, #8]
 8006c66:	4313      	orrs	r3, r2
 8006c68:	697a      	ldr	r2, [r7, #20]
 8006c6a:	4313      	orrs	r3, r2
 8006c6c:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8006c6e:	68fb      	ldr	r3, [r7, #12]
 8006c70:	697a      	ldr	r2, [r7, #20]
 8006c72:	609a      	str	r2, [r3, #8]
}
 8006c74:	bf00      	nop
 8006c76:	371c      	adds	r7, #28
 8006c78:	46bd      	mov	sp, r7
 8006c7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c7e:	4770      	bx	lr

08006c80 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 8006c80:	b480      	push	{r7}
 8006c82:	b085      	sub	sp, #20
 8006c84:	af00      	add	r7, sp, #0
 8006c86:	6078      	str	r0, [r7, #4]
 8006c88:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8006c8a:	687b      	ldr	r3, [r7, #4]
 8006c8c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006c90:	2b01      	cmp	r3, #1
 8006c92:	d101      	bne.n	8006c98 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8006c94:	2302      	movs	r3, #2
 8006c96:	e05a      	b.n	8006d4e <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8006c98:	687b      	ldr	r3, [r7, #4]
 8006c9a:	2201      	movs	r2, #1
 8006c9c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006ca0:	687b      	ldr	r3, [r7, #4]
 8006ca2:	2202      	movs	r2, #2
 8006ca4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8006ca8:	687b      	ldr	r3, [r7, #4]
 8006caa:	681b      	ldr	r3, [r3, #0]
 8006cac:	685b      	ldr	r3, [r3, #4]
 8006cae:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8006cb0:	687b      	ldr	r3, [r7, #4]
 8006cb2:	681b      	ldr	r3, [r3, #0]
 8006cb4:	689b      	ldr	r3, [r3, #8]
 8006cb6:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8006cb8:	68fb      	ldr	r3, [r7, #12]
 8006cba:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006cbe:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8006cc0:	683b      	ldr	r3, [r7, #0]
 8006cc2:	681b      	ldr	r3, [r3, #0]
 8006cc4:	68fa      	ldr	r2, [r7, #12]
 8006cc6:	4313      	orrs	r3, r2
 8006cc8:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8006cca:	687b      	ldr	r3, [r7, #4]
 8006ccc:	681b      	ldr	r3, [r3, #0]
 8006cce:	68fa      	ldr	r2, [r7, #12]
 8006cd0:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006cd2:	687b      	ldr	r3, [r7, #4]
 8006cd4:	681b      	ldr	r3, [r3, #0]
 8006cd6:	4a21      	ldr	r2, [pc, #132]	; (8006d5c <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8006cd8:	4293      	cmp	r3, r2
 8006cda:	d022      	beq.n	8006d22 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006cdc:	687b      	ldr	r3, [r7, #4]
 8006cde:	681b      	ldr	r3, [r3, #0]
 8006ce0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006ce4:	d01d      	beq.n	8006d22 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006ce6:	687b      	ldr	r3, [r7, #4]
 8006ce8:	681b      	ldr	r3, [r3, #0]
 8006cea:	4a1d      	ldr	r2, [pc, #116]	; (8006d60 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8006cec:	4293      	cmp	r3, r2
 8006cee:	d018      	beq.n	8006d22 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006cf0:	687b      	ldr	r3, [r7, #4]
 8006cf2:	681b      	ldr	r3, [r3, #0]
 8006cf4:	4a1b      	ldr	r2, [pc, #108]	; (8006d64 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8006cf6:	4293      	cmp	r3, r2
 8006cf8:	d013      	beq.n	8006d22 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006cfa:	687b      	ldr	r3, [r7, #4]
 8006cfc:	681b      	ldr	r3, [r3, #0]
 8006cfe:	4a1a      	ldr	r2, [pc, #104]	; (8006d68 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8006d00:	4293      	cmp	r3, r2
 8006d02:	d00e      	beq.n	8006d22 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006d04:	687b      	ldr	r3, [r7, #4]
 8006d06:	681b      	ldr	r3, [r3, #0]
 8006d08:	4a18      	ldr	r2, [pc, #96]	; (8006d6c <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8006d0a:	4293      	cmp	r3, r2
 8006d0c:	d009      	beq.n	8006d22 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006d0e:	687b      	ldr	r3, [r7, #4]
 8006d10:	681b      	ldr	r3, [r3, #0]
 8006d12:	4a17      	ldr	r2, [pc, #92]	; (8006d70 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8006d14:	4293      	cmp	r3, r2
 8006d16:	d004      	beq.n	8006d22 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006d18:	687b      	ldr	r3, [r7, #4]
 8006d1a:	681b      	ldr	r3, [r3, #0]
 8006d1c:	4a15      	ldr	r2, [pc, #84]	; (8006d74 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8006d1e:	4293      	cmp	r3, r2
 8006d20:	d10c      	bne.n	8006d3c <HAL_TIMEx_MasterConfigSynchronization+0xbc>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8006d22:	68bb      	ldr	r3, [r7, #8]
 8006d24:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006d28:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8006d2a:	683b      	ldr	r3, [r7, #0]
 8006d2c:	685b      	ldr	r3, [r3, #4]
 8006d2e:	68ba      	ldr	r2, [r7, #8]
 8006d30:	4313      	orrs	r3, r2
 8006d32:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8006d34:	687b      	ldr	r3, [r7, #4]
 8006d36:	681b      	ldr	r3, [r3, #0]
 8006d38:	68ba      	ldr	r2, [r7, #8]
 8006d3a:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8006d3c:	687b      	ldr	r3, [r7, #4]
 8006d3e:	2201      	movs	r2, #1
 8006d40:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8006d44:	687b      	ldr	r3, [r7, #4]
 8006d46:	2200      	movs	r2, #0
 8006d48:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 8006d4c:	2300      	movs	r3, #0
}
 8006d4e:	4618      	mov	r0, r3
 8006d50:	3714      	adds	r7, #20
 8006d52:	46bd      	mov	sp, r7
 8006d54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d58:	4770      	bx	lr
 8006d5a:	bf00      	nop
 8006d5c:	40010000 	.word	0x40010000
 8006d60:	40000400 	.word	0x40000400
 8006d64:	40000800 	.word	0x40000800
 8006d68:	40000c00 	.word	0x40000c00
 8006d6c:	40010400 	.word	0x40010400
 8006d70:	40014000 	.word	0x40014000
 8006d74:	40001800 	.word	0x40001800

08006d78 <HAL_TIMEx_CommutCallback>:
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 8006d78:	b480      	push	{r7}
 8006d7a:	b083      	sub	sp, #12
 8006d7c:	af00      	add	r7, sp, #0
 8006d7e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 8006d80:	bf00      	nop
 8006d82:	370c      	adds	r7, #12
 8006d84:	46bd      	mov	sp, r7
 8006d86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d8a:	4770      	bx	lr

08006d8c <HAL_TIMEx_BreakCallback>:
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 8006d8c:	b480      	push	{r7}
 8006d8e:	b083      	sub	sp, #12
 8006d90:	af00      	add	r7, sp, #0
 8006d92:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 8006d94:	bf00      	nop
 8006d96:	370c      	adds	r7, #12
 8006d98:	46bd      	mov	sp, r7
 8006d9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d9e:	4770      	bx	lr

08006da0 <HAL_UART_Init>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8006da0:	b580      	push	{r7, lr}
 8006da2:	b082      	sub	sp, #8
 8006da4:	af00      	add	r7, sp, #0
 8006da6:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8006da8:	687b      	ldr	r3, [r7, #4]
 8006daa:	2b00      	cmp	r3, #0
 8006dac:	d101      	bne.n	8006db2 <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8006dae:	2301      	movs	r3, #1
 8006db0:	e03f      	b.n	8006e32 <HAL_UART_Init+0x92>
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));

  if (huart->gState == HAL_UART_STATE_RESET)
 8006db2:	687b      	ldr	r3, [r7, #4]
 8006db4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006db8:	b2db      	uxtb	r3, r3
 8006dba:	2b00      	cmp	r3, #0
 8006dbc:	d106      	bne.n	8006dcc <HAL_UART_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 8006dbe:	687b      	ldr	r3, [r7, #4]
 8006dc0:	2200      	movs	r2, #0
 8006dc2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8006dc6:	6878      	ldr	r0, [r7, #4]
 8006dc8:	f7fa fa78 	bl	80012bc <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8006dcc:	687b      	ldr	r3, [r7, #4]
 8006dce:	2224      	movs	r2, #36	; 0x24
 8006dd0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Disable the peripheral */
  __HAL_UART_DISABLE(huart);
 8006dd4:	687b      	ldr	r3, [r7, #4]
 8006dd6:	681b      	ldr	r3, [r3, #0]
 8006dd8:	68da      	ldr	r2, [r3, #12]
 8006dda:	687b      	ldr	r3, [r7, #4]
 8006ddc:	681b      	ldr	r3, [r3, #0]
 8006dde:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8006de2:	60da      	str	r2, [r3, #12]

  /* Set the UART Communication parameters */
  UART_SetConfig(huart);
 8006de4:	6878      	ldr	r0, [r7, #4]
 8006de6:	f000 f829 	bl	8006e3c <UART_SetConfig>

  /* In asynchronous mode, the following bits must be kept cleared:
     - LINEN and CLKEN bits in the USART_CR2 register,
     - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8006dea:	687b      	ldr	r3, [r7, #4]
 8006dec:	681b      	ldr	r3, [r3, #0]
 8006dee:	691a      	ldr	r2, [r3, #16]
 8006df0:	687b      	ldr	r3, [r7, #4]
 8006df2:	681b      	ldr	r3, [r3, #0]
 8006df4:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8006df8:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8006dfa:	687b      	ldr	r3, [r7, #4]
 8006dfc:	681b      	ldr	r3, [r3, #0]
 8006dfe:	695a      	ldr	r2, [r3, #20]
 8006e00:	687b      	ldr	r3, [r7, #4]
 8006e02:	681b      	ldr	r3, [r3, #0]
 8006e04:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8006e08:	615a      	str	r2, [r3, #20]

  /* Enable the peripheral */
  __HAL_UART_ENABLE(huart);
 8006e0a:	687b      	ldr	r3, [r7, #4]
 8006e0c:	681b      	ldr	r3, [r3, #0]
 8006e0e:	68da      	ldr	r2, [r3, #12]
 8006e10:	687b      	ldr	r3, [r7, #4]
 8006e12:	681b      	ldr	r3, [r3, #0]
 8006e14:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8006e18:	60da      	str	r2, [r3, #12]

  /* Initialize the UART state */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006e1a:	687b      	ldr	r3, [r7, #4]
 8006e1c:	2200      	movs	r2, #0
 8006e1e:	641a      	str	r2, [r3, #64]	; 0x40
  huart->gState = HAL_UART_STATE_READY;
 8006e20:	687b      	ldr	r3, [r7, #4]
 8006e22:	2220      	movs	r2, #32
 8006e24:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  huart->RxState = HAL_UART_STATE_READY;
 8006e28:	687b      	ldr	r3, [r7, #4]
 8006e2a:	2220      	movs	r2, #32
 8006e2c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

  return HAL_OK;
 8006e30:	2300      	movs	r3, #0
}
 8006e32:	4618      	mov	r0, r3
 8006e34:	3708      	adds	r7, #8
 8006e36:	46bd      	mov	sp, r7
 8006e38:	bd80      	pop	{r7, pc}
	...

08006e3c <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 8006e3c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8006e40:	b0c0      	sub	sp, #256	; 0x100
 8006e42:	af00      	add	r7, sp, #0
 8006e44:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8006e48:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006e4c:	681b      	ldr	r3, [r3, #0]
 8006e4e:	691b      	ldr	r3, [r3, #16]
 8006e50:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 8006e54:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006e58:	68d9      	ldr	r1, [r3, #12]
 8006e5a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006e5e:	681a      	ldr	r2, [r3, #0]
 8006e60:	ea40 0301 	orr.w	r3, r0, r1
 8006e64:	6113      	str	r3, [r2, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8006e66:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006e6a:	689a      	ldr	r2, [r3, #8]
 8006e6c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006e70:	691b      	ldr	r3, [r3, #16]
 8006e72:	431a      	orrs	r2, r3
 8006e74:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006e78:	695b      	ldr	r3, [r3, #20]
 8006e7a:	431a      	orrs	r2, r3
 8006e7c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006e80:	69db      	ldr	r3, [r3, #28]
 8006e82:	4313      	orrs	r3, r2
 8006e84:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
  MODIFY_REG(huart->Instance->CR1,
 8006e88:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006e8c:	681b      	ldr	r3, [r3, #0]
 8006e8e:	68db      	ldr	r3, [r3, #12]
 8006e90:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 8006e94:	f021 010c 	bic.w	r1, r1, #12
 8006e98:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006e9c:	681a      	ldr	r2, [r3, #0]
 8006e9e:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 8006ea2:	430b      	orrs	r3, r1
 8006ea4:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8006ea6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006eaa:	681b      	ldr	r3, [r3, #0]
 8006eac:	695b      	ldr	r3, [r3, #20]
 8006eae:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 8006eb2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006eb6:	6999      	ldr	r1, [r3, #24]
 8006eb8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006ebc:	681a      	ldr	r2, [r3, #0]
 8006ebe:	ea40 0301 	orr.w	r3, r0, r1
 8006ec2:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8006ec4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006ec8:	681a      	ldr	r2, [r3, #0]
 8006eca:	4b8f      	ldr	r3, [pc, #572]	; (8007108 <UART_SetConfig+0x2cc>)
 8006ecc:	429a      	cmp	r2, r3
 8006ece:	d005      	beq.n	8006edc <UART_SetConfig+0xa0>
 8006ed0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006ed4:	681a      	ldr	r2, [r3, #0]
 8006ed6:	4b8d      	ldr	r3, [pc, #564]	; (800710c <UART_SetConfig+0x2d0>)
 8006ed8:	429a      	cmp	r2, r3
 8006eda:	d104      	bne.n	8006ee6 <UART_SetConfig+0xaa>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 8006edc:	f7fe fac6 	bl	800546c <HAL_RCC_GetPCLK2Freq>
 8006ee0:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8006ee4:	e003      	b.n	8006eee <UART_SetConfig+0xb2>
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
 8006ee6:	f7fe faad 	bl	8005444 <HAL_RCC_GetPCLK1Freq>
 8006eea:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006eee:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006ef2:	69db      	ldr	r3, [r3, #28]
 8006ef4:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8006ef8:	f040 810c 	bne.w	8007114 <UART_SetConfig+0x2d8>
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8006efc:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8006f00:	2200      	movs	r2, #0
 8006f02:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 8006f06:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 8006f0a:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 8006f0e:	4622      	mov	r2, r4
 8006f10:	462b      	mov	r3, r5
 8006f12:	1891      	adds	r1, r2, r2
 8006f14:	65b9      	str	r1, [r7, #88]	; 0x58
 8006f16:	415b      	adcs	r3, r3
 8006f18:	65fb      	str	r3, [r7, #92]	; 0x5c
 8006f1a:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8006f1e:	4621      	mov	r1, r4
 8006f20:	eb12 0801 	adds.w	r8, r2, r1
 8006f24:	4629      	mov	r1, r5
 8006f26:	eb43 0901 	adc.w	r9, r3, r1
 8006f2a:	f04f 0200 	mov.w	r2, #0
 8006f2e:	f04f 0300 	mov.w	r3, #0
 8006f32:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8006f36:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8006f3a:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8006f3e:	4690      	mov	r8, r2
 8006f40:	4699      	mov	r9, r3
 8006f42:	4623      	mov	r3, r4
 8006f44:	eb18 0303 	adds.w	r3, r8, r3
 8006f48:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8006f4c:	462b      	mov	r3, r5
 8006f4e:	eb49 0303 	adc.w	r3, r9, r3
 8006f52:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8006f56:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006f5a:	685b      	ldr	r3, [r3, #4]
 8006f5c:	2200      	movs	r2, #0
 8006f5e:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8006f62:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 8006f66:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 8006f6a:	460b      	mov	r3, r1
 8006f6c:	18db      	adds	r3, r3, r3
 8006f6e:	653b      	str	r3, [r7, #80]	; 0x50
 8006f70:	4613      	mov	r3, r2
 8006f72:	eb42 0303 	adc.w	r3, r2, r3
 8006f76:	657b      	str	r3, [r7, #84]	; 0x54
 8006f78:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 8006f7c:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 8006f80:	f7f9 f986 	bl	8000290 <__aeabi_uldivmod>
 8006f84:	4602      	mov	r2, r0
 8006f86:	460b      	mov	r3, r1
 8006f88:	4b61      	ldr	r3, [pc, #388]	; (8007110 <UART_SetConfig+0x2d4>)
 8006f8a:	fba3 2302 	umull	r2, r3, r3, r2
 8006f8e:	095b      	lsrs	r3, r3, #5
 8006f90:	011c      	lsls	r4, r3, #4
 8006f92:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8006f96:	2200      	movs	r2, #0
 8006f98:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8006f9c:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 8006fa0:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 8006fa4:	4642      	mov	r2, r8
 8006fa6:	464b      	mov	r3, r9
 8006fa8:	1891      	adds	r1, r2, r2
 8006faa:	64b9      	str	r1, [r7, #72]	; 0x48
 8006fac:	415b      	adcs	r3, r3
 8006fae:	64fb      	str	r3, [r7, #76]	; 0x4c
 8006fb0:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8006fb4:	4641      	mov	r1, r8
 8006fb6:	eb12 0a01 	adds.w	sl, r2, r1
 8006fba:	4649      	mov	r1, r9
 8006fbc:	eb43 0b01 	adc.w	fp, r3, r1
 8006fc0:	f04f 0200 	mov.w	r2, #0
 8006fc4:	f04f 0300 	mov.w	r3, #0
 8006fc8:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8006fcc:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8006fd0:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8006fd4:	4692      	mov	sl, r2
 8006fd6:	469b      	mov	fp, r3
 8006fd8:	4643      	mov	r3, r8
 8006fda:	eb1a 0303 	adds.w	r3, sl, r3
 8006fde:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8006fe2:	464b      	mov	r3, r9
 8006fe4:	eb4b 0303 	adc.w	r3, fp, r3
 8006fe8:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 8006fec:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8006ff0:	685b      	ldr	r3, [r3, #4]
 8006ff2:	2200      	movs	r2, #0
 8006ff4:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8006ff8:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 8006ffc:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 8007000:	460b      	mov	r3, r1
 8007002:	18db      	adds	r3, r3, r3
 8007004:	643b      	str	r3, [r7, #64]	; 0x40
 8007006:	4613      	mov	r3, r2
 8007008:	eb42 0303 	adc.w	r3, r2, r3
 800700c:	647b      	str	r3, [r7, #68]	; 0x44
 800700e:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8007012:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 8007016:	f7f9 f93b 	bl	8000290 <__aeabi_uldivmod>
 800701a:	4602      	mov	r2, r0
 800701c:	460b      	mov	r3, r1
 800701e:	4611      	mov	r1, r2
 8007020:	4b3b      	ldr	r3, [pc, #236]	; (8007110 <UART_SetConfig+0x2d4>)
 8007022:	fba3 2301 	umull	r2, r3, r3, r1
 8007026:	095b      	lsrs	r3, r3, #5
 8007028:	2264      	movs	r2, #100	; 0x64
 800702a:	fb02 f303 	mul.w	r3, r2, r3
 800702e:	1acb      	subs	r3, r1, r3
 8007030:	00db      	lsls	r3, r3, #3
 8007032:	f103 0232 	add.w	r2, r3, #50	; 0x32
 8007036:	4b36      	ldr	r3, [pc, #216]	; (8007110 <UART_SetConfig+0x2d4>)
 8007038:	fba3 2302 	umull	r2, r3, r3, r2
 800703c:	095b      	lsrs	r3, r3, #5
 800703e:	005b      	lsls	r3, r3, #1
 8007040:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8007044:	441c      	add	r4, r3
 8007046:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800704a:	2200      	movs	r2, #0
 800704c:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8007050:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 8007054:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 8007058:	4642      	mov	r2, r8
 800705a:	464b      	mov	r3, r9
 800705c:	1891      	adds	r1, r2, r2
 800705e:	63b9      	str	r1, [r7, #56]	; 0x38
 8007060:	415b      	adcs	r3, r3
 8007062:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007064:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 8007068:	4641      	mov	r1, r8
 800706a:	1851      	adds	r1, r2, r1
 800706c:	6339      	str	r1, [r7, #48]	; 0x30
 800706e:	4649      	mov	r1, r9
 8007070:	414b      	adcs	r3, r1
 8007072:	637b      	str	r3, [r7, #52]	; 0x34
 8007074:	f04f 0200 	mov.w	r2, #0
 8007078:	f04f 0300 	mov.w	r3, #0
 800707c:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 8007080:	4659      	mov	r1, fp
 8007082:	00cb      	lsls	r3, r1, #3
 8007084:	4651      	mov	r1, sl
 8007086:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800708a:	4651      	mov	r1, sl
 800708c:	00ca      	lsls	r2, r1, #3
 800708e:	4610      	mov	r0, r2
 8007090:	4619      	mov	r1, r3
 8007092:	4603      	mov	r3, r0
 8007094:	4642      	mov	r2, r8
 8007096:	189b      	adds	r3, r3, r2
 8007098:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800709c:	464b      	mov	r3, r9
 800709e:	460a      	mov	r2, r1
 80070a0:	eb42 0303 	adc.w	r3, r2, r3
 80070a4:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80070a8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80070ac:	685b      	ldr	r3, [r3, #4]
 80070ae:	2200      	movs	r2, #0
 80070b0:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 80070b4:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 80070b8:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 80070bc:	460b      	mov	r3, r1
 80070be:	18db      	adds	r3, r3, r3
 80070c0:	62bb      	str	r3, [r7, #40]	; 0x28
 80070c2:	4613      	mov	r3, r2
 80070c4:	eb42 0303 	adc.w	r3, r2, r3
 80070c8:	62fb      	str	r3, [r7, #44]	; 0x2c
 80070ca:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 80070ce:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 80070d2:	f7f9 f8dd 	bl	8000290 <__aeabi_uldivmod>
 80070d6:	4602      	mov	r2, r0
 80070d8:	460b      	mov	r3, r1
 80070da:	4b0d      	ldr	r3, [pc, #52]	; (8007110 <UART_SetConfig+0x2d4>)
 80070dc:	fba3 1302 	umull	r1, r3, r3, r2
 80070e0:	095b      	lsrs	r3, r3, #5
 80070e2:	2164      	movs	r1, #100	; 0x64
 80070e4:	fb01 f303 	mul.w	r3, r1, r3
 80070e8:	1ad3      	subs	r3, r2, r3
 80070ea:	00db      	lsls	r3, r3, #3
 80070ec:	3332      	adds	r3, #50	; 0x32
 80070ee:	4a08      	ldr	r2, [pc, #32]	; (8007110 <UART_SetConfig+0x2d4>)
 80070f0:	fba2 2303 	umull	r2, r3, r2, r3
 80070f4:	095b      	lsrs	r3, r3, #5
 80070f6:	f003 0207 	and.w	r2, r3, #7
 80070fa:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80070fe:	681b      	ldr	r3, [r3, #0]
 8007100:	4422      	add	r2, r4
 8007102:	609a      	str	r2, [r3, #8]
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
  }
}
 8007104:	e105      	b.n	8007312 <UART_SetConfig+0x4d6>
 8007106:	bf00      	nop
 8007108:	40011000 	.word	0x40011000
 800710c:	40011400 	.word	0x40011400
 8007110:	51eb851f 	.word	0x51eb851f
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8007114:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8007118:	2200      	movs	r2, #0
 800711a:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800711e:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 8007122:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 8007126:	4642      	mov	r2, r8
 8007128:	464b      	mov	r3, r9
 800712a:	1891      	adds	r1, r2, r2
 800712c:	6239      	str	r1, [r7, #32]
 800712e:	415b      	adcs	r3, r3
 8007130:	627b      	str	r3, [r7, #36]	; 0x24
 8007132:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8007136:	4641      	mov	r1, r8
 8007138:	1854      	adds	r4, r2, r1
 800713a:	4649      	mov	r1, r9
 800713c:	eb43 0501 	adc.w	r5, r3, r1
 8007140:	f04f 0200 	mov.w	r2, #0
 8007144:	f04f 0300 	mov.w	r3, #0
 8007148:	00eb      	lsls	r3, r5, #3
 800714a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800714e:	00e2      	lsls	r2, r4, #3
 8007150:	4614      	mov	r4, r2
 8007152:	461d      	mov	r5, r3
 8007154:	4643      	mov	r3, r8
 8007156:	18e3      	adds	r3, r4, r3
 8007158:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800715c:	464b      	mov	r3, r9
 800715e:	eb45 0303 	adc.w	r3, r5, r3
 8007162:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8007166:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800716a:	685b      	ldr	r3, [r3, #4]
 800716c:	2200      	movs	r2, #0
 800716e:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8007172:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8007176:	f04f 0200 	mov.w	r2, #0
 800717a:	f04f 0300 	mov.w	r3, #0
 800717e:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 8007182:	4629      	mov	r1, r5
 8007184:	008b      	lsls	r3, r1, #2
 8007186:	4621      	mov	r1, r4
 8007188:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800718c:	4621      	mov	r1, r4
 800718e:	008a      	lsls	r2, r1, #2
 8007190:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 8007194:	f7f9 f87c 	bl	8000290 <__aeabi_uldivmod>
 8007198:	4602      	mov	r2, r0
 800719a:	460b      	mov	r3, r1
 800719c:	4b60      	ldr	r3, [pc, #384]	; (8007320 <UART_SetConfig+0x4e4>)
 800719e:	fba3 2302 	umull	r2, r3, r3, r2
 80071a2:	095b      	lsrs	r3, r3, #5
 80071a4:	011c      	lsls	r4, r3, #4
 80071a6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 80071aa:	2200      	movs	r2, #0
 80071ac:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 80071b0:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80071b4:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 80071b8:	4642      	mov	r2, r8
 80071ba:	464b      	mov	r3, r9
 80071bc:	1891      	adds	r1, r2, r2
 80071be:	61b9      	str	r1, [r7, #24]
 80071c0:	415b      	adcs	r3, r3
 80071c2:	61fb      	str	r3, [r7, #28]
 80071c4:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80071c8:	4641      	mov	r1, r8
 80071ca:	1851      	adds	r1, r2, r1
 80071cc:	6139      	str	r1, [r7, #16]
 80071ce:	4649      	mov	r1, r9
 80071d0:	414b      	adcs	r3, r1
 80071d2:	617b      	str	r3, [r7, #20]
 80071d4:	f04f 0200 	mov.w	r2, #0
 80071d8:	f04f 0300 	mov.w	r3, #0
 80071dc:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80071e0:	4659      	mov	r1, fp
 80071e2:	00cb      	lsls	r3, r1, #3
 80071e4:	4651      	mov	r1, sl
 80071e6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80071ea:	4651      	mov	r1, sl
 80071ec:	00ca      	lsls	r2, r1, #3
 80071ee:	4610      	mov	r0, r2
 80071f0:	4619      	mov	r1, r3
 80071f2:	4603      	mov	r3, r0
 80071f4:	4642      	mov	r2, r8
 80071f6:	189b      	adds	r3, r3, r2
 80071f8:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 80071fc:	464b      	mov	r3, r9
 80071fe:	460a      	mov	r2, r1
 8007200:	eb42 0303 	adc.w	r3, r2, r3
 8007204:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8007208:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800720c:	685b      	ldr	r3, [r3, #4]
 800720e:	2200      	movs	r2, #0
 8007210:	67bb      	str	r3, [r7, #120]	; 0x78
 8007212:	67fa      	str	r2, [r7, #124]	; 0x7c
 8007214:	f04f 0200 	mov.w	r2, #0
 8007218:	f04f 0300 	mov.w	r3, #0
 800721c:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 8007220:	4649      	mov	r1, r9
 8007222:	008b      	lsls	r3, r1, #2
 8007224:	4641      	mov	r1, r8
 8007226:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800722a:	4641      	mov	r1, r8
 800722c:	008a      	lsls	r2, r1, #2
 800722e:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 8007232:	f7f9 f82d 	bl	8000290 <__aeabi_uldivmod>
 8007236:	4602      	mov	r2, r0
 8007238:	460b      	mov	r3, r1
 800723a:	4b39      	ldr	r3, [pc, #228]	; (8007320 <UART_SetConfig+0x4e4>)
 800723c:	fba3 1302 	umull	r1, r3, r3, r2
 8007240:	095b      	lsrs	r3, r3, #5
 8007242:	2164      	movs	r1, #100	; 0x64
 8007244:	fb01 f303 	mul.w	r3, r1, r3
 8007248:	1ad3      	subs	r3, r2, r3
 800724a:	011b      	lsls	r3, r3, #4
 800724c:	3332      	adds	r3, #50	; 0x32
 800724e:	4a34      	ldr	r2, [pc, #208]	; (8007320 <UART_SetConfig+0x4e4>)
 8007250:	fba2 2303 	umull	r2, r3, r2, r3
 8007254:	095b      	lsrs	r3, r3, #5
 8007256:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800725a:	441c      	add	r4, r3
 800725c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8007260:	2200      	movs	r2, #0
 8007262:	673b      	str	r3, [r7, #112]	; 0x70
 8007264:	677a      	str	r2, [r7, #116]	; 0x74
 8007266:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 800726a:	4642      	mov	r2, r8
 800726c:	464b      	mov	r3, r9
 800726e:	1891      	adds	r1, r2, r2
 8007270:	60b9      	str	r1, [r7, #8]
 8007272:	415b      	adcs	r3, r3
 8007274:	60fb      	str	r3, [r7, #12]
 8007276:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800727a:	4641      	mov	r1, r8
 800727c:	1851      	adds	r1, r2, r1
 800727e:	6039      	str	r1, [r7, #0]
 8007280:	4649      	mov	r1, r9
 8007282:	414b      	adcs	r3, r1
 8007284:	607b      	str	r3, [r7, #4]
 8007286:	f04f 0200 	mov.w	r2, #0
 800728a:	f04f 0300 	mov.w	r3, #0
 800728e:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8007292:	4659      	mov	r1, fp
 8007294:	00cb      	lsls	r3, r1, #3
 8007296:	4651      	mov	r1, sl
 8007298:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800729c:	4651      	mov	r1, sl
 800729e:	00ca      	lsls	r2, r1, #3
 80072a0:	4610      	mov	r0, r2
 80072a2:	4619      	mov	r1, r3
 80072a4:	4603      	mov	r3, r0
 80072a6:	4642      	mov	r2, r8
 80072a8:	189b      	adds	r3, r3, r2
 80072aa:	66bb      	str	r3, [r7, #104]	; 0x68
 80072ac:	464b      	mov	r3, r9
 80072ae:	460a      	mov	r2, r1
 80072b0:	eb42 0303 	adc.w	r3, r2, r3
 80072b4:	66fb      	str	r3, [r7, #108]	; 0x6c
 80072b6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80072ba:	685b      	ldr	r3, [r3, #4]
 80072bc:	2200      	movs	r2, #0
 80072be:	663b      	str	r3, [r7, #96]	; 0x60
 80072c0:	667a      	str	r2, [r7, #100]	; 0x64
 80072c2:	f04f 0200 	mov.w	r2, #0
 80072c6:	f04f 0300 	mov.w	r3, #0
 80072ca:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 80072ce:	4649      	mov	r1, r9
 80072d0:	008b      	lsls	r3, r1, #2
 80072d2:	4641      	mov	r1, r8
 80072d4:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80072d8:	4641      	mov	r1, r8
 80072da:	008a      	lsls	r2, r1, #2
 80072dc:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 80072e0:	f7f8 ffd6 	bl	8000290 <__aeabi_uldivmod>
 80072e4:	4602      	mov	r2, r0
 80072e6:	460b      	mov	r3, r1
 80072e8:	4b0d      	ldr	r3, [pc, #52]	; (8007320 <UART_SetConfig+0x4e4>)
 80072ea:	fba3 1302 	umull	r1, r3, r3, r2
 80072ee:	095b      	lsrs	r3, r3, #5
 80072f0:	2164      	movs	r1, #100	; 0x64
 80072f2:	fb01 f303 	mul.w	r3, r1, r3
 80072f6:	1ad3      	subs	r3, r2, r3
 80072f8:	011b      	lsls	r3, r3, #4
 80072fa:	3332      	adds	r3, #50	; 0x32
 80072fc:	4a08      	ldr	r2, [pc, #32]	; (8007320 <UART_SetConfig+0x4e4>)
 80072fe:	fba2 2303 	umull	r2, r3, r2, r3
 8007302:	095b      	lsrs	r3, r3, #5
 8007304:	f003 020f 	and.w	r2, r3, #15
 8007308:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800730c:	681b      	ldr	r3, [r3, #0]
 800730e:	4422      	add	r2, r4
 8007310:	609a      	str	r2, [r3, #8]
}
 8007312:	bf00      	nop
 8007314:	f507 7780 	add.w	r7, r7, #256	; 0x100
 8007318:	46bd      	mov	sp, r7
 800731a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800731e:	bf00      	nop
 8007320:	51eb851f 	.word	0x51eb851f

08007324 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8007324:	b480      	push	{r7}
 8007326:	b083      	sub	sp, #12
 8007328:	af00      	add	r7, sp, #0
 800732a:	6078      	str	r0, [r7, #4]
 800732c:	6039      	str	r1, [r7, #0]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800732e:	683b      	ldr	r3, [r7, #0]
 8007330:	681b      	ldr	r3, [r3, #0]
 8007332:	2b00      	cmp	r3, #0
 8007334:	d123      	bne.n	800737e <FMC_SDRAM_Init+0x5a>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8007336:	687b      	ldr	r3, [r7, #4]
 8007338:	681b      	ldr	r3, [r3, #0]
 800733a:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800733e:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8007342:	683a      	ldr	r2, [r7, #0]
 8007344:	6851      	ldr	r1, [r2, #4]
 8007346:	683a      	ldr	r2, [r7, #0]
 8007348:	6892      	ldr	r2, [r2, #8]
 800734a:	4311      	orrs	r1, r2
 800734c:	683a      	ldr	r2, [r7, #0]
 800734e:	68d2      	ldr	r2, [r2, #12]
 8007350:	4311      	orrs	r1, r2
 8007352:	683a      	ldr	r2, [r7, #0]
 8007354:	6912      	ldr	r2, [r2, #16]
 8007356:	4311      	orrs	r1, r2
 8007358:	683a      	ldr	r2, [r7, #0]
 800735a:	6952      	ldr	r2, [r2, #20]
 800735c:	4311      	orrs	r1, r2
 800735e:	683a      	ldr	r2, [r7, #0]
 8007360:	6992      	ldr	r2, [r2, #24]
 8007362:	4311      	orrs	r1, r2
 8007364:	683a      	ldr	r2, [r7, #0]
 8007366:	69d2      	ldr	r2, [r2, #28]
 8007368:	4311      	orrs	r1, r2
 800736a:	683a      	ldr	r2, [r7, #0]
 800736c:	6a12      	ldr	r2, [r2, #32]
 800736e:	4311      	orrs	r1, r2
 8007370:	683a      	ldr	r2, [r7, #0]
 8007372:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8007374:	430a      	orrs	r2, r1
 8007376:	431a      	orrs	r2, r3
 8007378:	687b      	ldr	r3, [r7, #4]
 800737a:	601a      	str	r2, [r3, #0]
 800737c:	e028      	b.n	80073d0 <FMC_SDRAM_Init+0xac>
                Init->ReadBurst          |
                Init->ReadPipeDelay));
  }
  else /* FMC_Bank2_SDRAM */
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800737e:	687b      	ldr	r3, [r7, #4]
 8007380:	681b      	ldr	r3, [r3, #0]
 8007382:	f423 42f8 	bic.w	r2, r3, #31744	; 0x7c00
 8007386:	683b      	ldr	r3, [r7, #0]
 8007388:	69d9      	ldr	r1, [r3, #28]
 800738a:	683b      	ldr	r3, [r7, #0]
 800738c:	6a1b      	ldr	r3, [r3, #32]
 800738e:	4319      	orrs	r1, r3
 8007390:	683b      	ldr	r3, [r7, #0]
 8007392:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007394:	430b      	orrs	r3, r1
 8007396:	431a      	orrs	r2, r3
 8007398:	687b      	ldr	r3, [r7, #4]
 800739a:	601a      	str	r2, [r3, #0]
               FMC_SDCR1_RPIPE,
               (Init->SDClockPeriod      |
                Init->ReadBurst          |
                Init->ReadPipeDelay));

    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800739c:	687b      	ldr	r3, [r7, #4]
 800739e:	685b      	ldr	r3, [r3, #4]
 80073a0:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 80073a4:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 80073a8:	683a      	ldr	r2, [r7, #0]
 80073aa:	6851      	ldr	r1, [r2, #4]
 80073ac:	683a      	ldr	r2, [r7, #0]
 80073ae:	6892      	ldr	r2, [r2, #8]
 80073b0:	4311      	orrs	r1, r2
 80073b2:	683a      	ldr	r2, [r7, #0]
 80073b4:	68d2      	ldr	r2, [r2, #12]
 80073b6:	4311      	orrs	r1, r2
 80073b8:	683a      	ldr	r2, [r7, #0]
 80073ba:	6912      	ldr	r2, [r2, #16]
 80073bc:	4311      	orrs	r1, r2
 80073be:	683a      	ldr	r2, [r7, #0]
 80073c0:	6952      	ldr	r2, [r2, #20]
 80073c2:	4311      	orrs	r1, r2
 80073c4:	683a      	ldr	r2, [r7, #0]
 80073c6:	6992      	ldr	r2, [r2, #24]
 80073c8:	430a      	orrs	r2, r1
 80073ca:	431a      	orrs	r2, r3
 80073cc:	687b      	ldr	r3, [r7, #4]
 80073ce:	605a      	str	r2, [r3, #4]
                Init->InternalBankNumber |
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
 80073d0:	2300      	movs	r3, #0
}
 80073d2:	4618      	mov	r0, r3
 80073d4:	370c      	adds	r7, #12
 80073d6:	46bd      	mov	sp, r7
 80073d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073dc:	4770      	bx	lr

080073de <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 80073de:	b480      	push	{r7}
 80073e0:	b085      	sub	sp, #20
 80073e2:	af00      	add	r7, sp, #0
 80073e4:	60f8      	str	r0, [r7, #12]
 80073e6:	60b9      	str	r1, [r7, #8]
 80073e8:	607a      	str	r2, [r7, #4]
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
 80073ea:	687b      	ldr	r3, [r7, #4]
 80073ec:	2b00      	cmp	r3, #0
 80073ee:	d128      	bne.n	8007442 <FMC_SDRAM_Timing_Init+0x64>
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80073f0:	68fb      	ldr	r3, [r7, #12]
 80073f2:	689b      	ldr	r3, [r3, #8]
 80073f4:	f003 4270 	and.w	r2, r3, #4026531840	; 0xf0000000
 80073f8:	68bb      	ldr	r3, [r7, #8]
 80073fa:	681b      	ldr	r3, [r3, #0]
 80073fc:	1e59      	subs	r1, r3, #1
 80073fe:	68bb      	ldr	r3, [r7, #8]
 8007400:	685b      	ldr	r3, [r3, #4]
 8007402:	3b01      	subs	r3, #1
 8007404:	011b      	lsls	r3, r3, #4
 8007406:	4319      	orrs	r1, r3
 8007408:	68bb      	ldr	r3, [r7, #8]
 800740a:	689b      	ldr	r3, [r3, #8]
 800740c:	3b01      	subs	r3, #1
 800740e:	021b      	lsls	r3, r3, #8
 8007410:	4319      	orrs	r1, r3
 8007412:	68bb      	ldr	r3, [r7, #8]
 8007414:	68db      	ldr	r3, [r3, #12]
 8007416:	3b01      	subs	r3, #1
 8007418:	031b      	lsls	r3, r3, #12
 800741a:	4319      	orrs	r1, r3
 800741c:	68bb      	ldr	r3, [r7, #8]
 800741e:	691b      	ldr	r3, [r3, #16]
 8007420:	3b01      	subs	r3, #1
 8007422:	041b      	lsls	r3, r3, #16
 8007424:	4319      	orrs	r1, r3
 8007426:	68bb      	ldr	r3, [r7, #8]
 8007428:	695b      	ldr	r3, [r3, #20]
 800742a:	3b01      	subs	r3, #1
 800742c:	051b      	lsls	r3, r3, #20
 800742e:	4319      	orrs	r1, r3
 8007430:	68bb      	ldr	r3, [r7, #8]
 8007432:	699b      	ldr	r3, [r3, #24]
 8007434:	3b01      	subs	r3, #1
 8007436:	061b      	lsls	r3, r3, #24
 8007438:	430b      	orrs	r3, r1
 800743a:	431a      	orrs	r2, r3
 800743c:	68fb      	ldr	r3, [r7, #12]
 800743e:	609a      	str	r2, [r3, #8]
 8007440:	e02f      	b.n	80074a2 <FMC_SDRAM_Timing_Init+0xc4>
                (((Timing->RPDelay) - 1U)              << FMC_SDTR1_TRP_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }
  else /* FMC_Bank2_SDRAM */
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8007442:	68fb      	ldr	r3, [r7, #12]
 8007444:	689b      	ldr	r3, [r3, #8]
 8007446:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800744a:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800744e:	68ba      	ldr	r2, [r7, #8]
 8007450:	68d2      	ldr	r2, [r2, #12]
 8007452:	3a01      	subs	r2, #1
 8007454:	0311      	lsls	r1, r2, #12
 8007456:	68ba      	ldr	r2, [r7, #8]
 8007458:	6952      	ldr	r2, [r2, #20]
 800745a:	3a01      	subs	r2, #1
 800745c:	0512      	lsls	r2, r2, #20
 800745e:	430a      	orrs	r2, r1
 8007460:	431a      	orrs	r2, r3
 8007462:	68fb      	ldr	r3, [r7, #12]
 8007464:	609a      	str	r2, [r3, #8]
               FMC_SDTR1_TRC |
               FMC_SDTR1_TRP,
               (((Timing->RowCycleDelay) - 1U)         << FMC_SDTR1_TRC_Pos)  |
               (((Timing->RPDelay) - 1U)               << FMC_SDTR1_TRP_Pos));

    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8007466:	68fb      	ldr	r3, [r7, #12]
 8007468:	68db      	ldr	r3, [r3, #12]
 800746a:	f003 4270 	and.w	r2, r3, #4026531840	; 0xf0000000
 800746e:	68bb      	ldr	r3, [r7, #8]
 8007470:	681b      	ldr	r3, [r3, #0]
 8007472:	1e59      	subs	r1, r3, #1
 8007474:	68bb      	ldr	r3, [r7, #8]
 8007476:	685b      	ldr	r3, [r3, #4]
 8007478:	3b01      	subs	r3, #1
 800747a:	011b      	lsls	r3, r3, #4
 800747c:	4319      	orrs	r1, r3
 800747e:	68bb      	ldr	r3, [r7, #8]
 8007480:	689b      	ldr	r3, [r3, #8]
 8007482:	3b01      	subs	r3, #1
 8007484:	021b      	lsls	r3, r3, #8
 8007486:	4319      	orrs	r1, r3
 8007488:	68bb      	ldr	r3, [r7, #8]
 800748a:	691b      	ldr	r3, [r3, #16]
 800748c:	3b01      	subs	r3, #1
 800748e:	041b      	lsls	r3, r3, #16
 8007490:	4319      	orrs	r1, r3
 8007492:	68bb      	ldr	r3, [r7, #8]
 8007494:	699b      	ldr	r3, [r3, #24]
 8007496:	3b01      	subs	r3, #1
 8007498:	061b      	lsls	r3, r3, #24
 800749a:	430b      	orrs	r3, r1
 800749c:	431a      	orrs	r2, r3
 800749e:	68fb      	ldr	r3, [r7, #12]
 80074a0:	60da      	str	r2, [r3, #12]
                (((Timing->SelfRefreshTime) - 1U)      << FMC_SDTR1_TRAS_Pos) |
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
 80074a2:	2300      	movs	r3, #0
}
 80074a4:	4618      	mov	r0, r3
 80074a6:	3714      	adds	r7, #20
 80074a8:	46bd      	mov	sp, r7
 80074aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074ae:	4770      	bx	lr

080074b0 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80074b0:	b580      	push	{r7, lr}
 80074b2:	af00      	add	r7, sp, #0
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80074b4:	f003 fe0c 	bl	800b0d0 <touchgfx_init>
}
 80074b8:	bf00      	nop
 80074ba:	bd80      	pop	{r7, pc}

080074bc <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 80074bc:	b580      	push	{r7, lr}
 80074be:	af00      	add	r7, sp, #0
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80074c0:	f003 fe30 	bl	800b124 <touchgfx_taskEntry>
}
 80074c4:	bf00      	nop
 80074c6:	bd80      	pop	{r7, pc}

080074c8 <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 80074c8:	b480      	push	{r7}
 80074ca:	b083      	sub	sp, #12
 80074cc:	af00      	add	r7, sp, #0
 80074ce:	6078      	str	r0, [r7, #4]
    {
 80074d0:	4a04      	ldr	r2, [pc, #16]	; (80074e4 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 80074d2:	687b      	ldr	r3, [r7, #4]
 80074d4:	601a      	str	r2, [r3, #0]
    }
 80074d6:	687b      	ldr	r3, [r7, #4]
 80074d8:	4618      	mov	r0, r3
 80074da:	370c      	adds	r7, #12
 80074dc:	46bd      	mov	sp, r7
 80074de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074e2:	4770      	bx	lr
 80074e4:	0801f584 	.word	0x0801f584

080074e8 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 80074e8:	b580      	push	{r7, lr}
 80074ea:	b082      	sub	sp, #8
 80074ec:	af00      	add	r7, sp, #0
 80074ee:	6078      	str	r0, [r7, #4]
    }
 80074f0:	6878      	ldr	r0, [r7, #4]
 80074f2:	f7ff ffe9 	bl	80074c8 <_ZN8touchgfx12FontProviderD1Ev>
 80074f6:	2104      	movs	r1, #4
 80074f8:	6878      	ldr	r0, [r7, #4]
 80074fa:	f016 fa68 	bl	801d9ce <_ZdlPvj>
 80074fe:	687b      	ldr	r3, [r7, #4]
 8007500:	4618      	mov	r0, r3
 8007502:	3708      	adds	r7, #8
 8007504:	46bd      	mov	sp, r7
 8007506:	bd80      	pop	{r7, pc}

08007508 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8007508:	b580      	push	{r7, lr}
 800750a:	b082      	sub	sp, #8
 800750c:	af00      	add	r7, sp, #0
 800750e:	6078      	str	r0, [r7, #4]
 8007510:	460b      	mov	r3, r1
 8007512:	807b      	strh	r3, [r7, #2]
    switch (typography)
 8007514:	887b      	ldrh	r3, [r7, #2]
 8007516:	2b02      	cmp	r3, #2
 8007518:	d010      	beq.n	800753c <_ZN23ApplicationFontProvider7getFontEt+0x34>
 800751a:	2b02      	cmp	r3, #2
 800751c:	dc13      	bgt.n	8007546 <_ZN23ApplicationFontProvider7getFontEt+0x3e>
 800751e:	2b00      	cmp	r3, #0
 8007520:	d002      	beq.n	8007528 <_ZN23ApplicationFontProvider7getFontEt+0x20>
 8007522:	2b01      	cmp	r3, #1
 8007524:	d005      	beq.n	8007532 <_ZN23ApplicationFontProvider7getFontEt+0x2a>
 8007526:	e00e      	b.n	8007546 <_ZN23ApplicationFontProvider7getFontEt+0x3e>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8007528:	f002 f8a4 	bl	8009674 <_ZN17TypedTextDatabase8getFontsEv>
 800752c:	4603      	mov	r3, r0
 800752e:	681b      	ldr	r3, [r3, #0]
 8007530:	e00a      	b.n	8007548 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8007532:	f002 f89f 	bl	8009674 <_ZN17TypedTextDatabase8getFontsEv>
 8007536:	4603      	mov	r3, r0
 8007538:	685b      	ldr	r3, [r3, #4]
 800753a:	e005      	b.n	8007548 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800753c:	f002 f89a 	bl	8009674 <_ZN17TypedTextDatabase8getFontsEv>
 8007540:	4603      	mov	r3, r0
 8007542:	689b      	ldr	r3, [r3, #8]
 8007544:	e000      	b.n	8007548 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    default:
        return 0;
 8007546:	2300      	movs	r3, #0
    }
}
 8007548:	4618      	mov	r0, r3
 800754a:	3708      	adds	r7, #8
 800754c:	46bd      	mov	sp, r7
 800754e:	bd80      	pop	{r7, pc}

08007550 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8007550:	b580      	push	{r7, lr}
 8007552:	b082      	sub	sp, #8
 8007554:	af00      	add	r7, sp, #0
 8007556:	6078      	str	r0, [r7, #4]
 8007558:	4a05      	ldr	r2, [pc, #20]	; (8007570 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 800755a:	687b      	ldr	r3, [r7, #4]
 800755c:	601a      	str	r2, [r3, #0]
 800755e:	687b      	ldr	r3, [r7, #4]
 8007560:	4618      	mov	r0, r3
 8007562:	f7ff ffb1 	bl	80074c8 <_ZN8touchgfx12FontProviderD1Ev>
 8007566:	687b      	ldr	r3, [r7, #4]
 8007568:	4618      	mov	r0, r3
 800756a:	3708      	adds	r7, #8
 800756c:	46bd      	mov	sp, r7
 800756e:	bd80      	pop	{r7, pc}
 8007570:	0801f570 	.word	0x0801f570

08007574 <_ZN23ApplicationFontProviderD0Ev>:
 8007574:	b580      	push	{r7, lr}
 8007576:	b082      	sub	sp, #8
 8007578:	af00      	add	r7, sp, #0
 800757a:	6078      	str	r0, [r7, #4]
 800757c:	6878      	ldr	r0, [r7, #4]
 800757e:	f7ff ffe7 	bl	8007550 <_ZN23ApplicationFontProviderD1Ev>
 8007582:	2104      	movs	r1, #4
 8007584:	6878      	ldr	r0, [r7, #4]
 8007586:	f016 fa22 	bl	801d9ce <_ZdlPvj>
 800758a:	687b      	ldr	r3, [r7, #4]
 800758c:	4618      	mov	r0, r3
 800758e:	3708      	adds	r7, #8
 8007590:	46bd      	mov	sp, r7
 8007592:	bd80      	pop	{r7, pc}

08007594 <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 8007594:	b480      	push	{r7}
 8007596:	b083      	sub	sp, #12
 8007598:	af00      	add	r7, sp, #0
 800759a:	6078      	str	r0, [r7, #4]
    {
 800759c:	4a04      	ldr	r2, [pc, #16]	; (80075b0 <_ZN8touchgfx4FontD1Ev+0x1c>)
 800759e:	687b      	ldr	r3, [r7, #4]
 80075a0:	601a      	str	r2, [r3, #0]
    }
 80075a2:	687b      	ldr	r3, [r7, #4]
 80075a4:	4618      	mov	r0, r3
 80075a6:	370c      	adds	r7, #12
 80075a8:	46bd      	mov	sp, r7
 80075aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075ae:	4770      	bx	lr
 80075b0:	0801f830 	.word	0x0801f830

080075b4 <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 80075b4:	b580      	push	{r7, lr}
 80075b6:	b082      	sub	sp, #8
 80075b8:	af00      	add	r7, sp, #0
 80075ba:	6078      	str	r0, [r7, #4]
    }
 80075bc:	6878      	ldr	r0, [r7, #4]
 80075be:	f7ff ffe9 	bl	8007594 <_ZN8touchgfx4FontD1Ev>
 80075c2:	2110      	movs	r1, #16
 80075c4:	6878      	ldr	r0, [r7, #4]
 80075c6:	f016 fa02 	bl	801d9ce <_ZdlPvj>
 80075ca:	687b      	ldr	r3, [r7, #4]
 80075cc:	4618      	mov	r0, r3
 80075ce:	3708      	adds	r7, #8
 80075d0:	46bd      	mov	sp, r7
 80075d2:	bd80      	pop	{r7, pc}

080075d4 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80075d4:	b590      	push	{r4, r7, lr}
 80075d6:	b087      	sub	sp, #28
 80075d8:	af00      	add	r7, sp, #0
 80075da:	6078      	str	r0, [r7, #4]
 80075dc:	460b      	mov	r3, r1
 80075de:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 80075e0:	887b      	ldrh	r3, [r7, #2]
 80075e2:	2b00      	cmp	r3, #0
 80075e4:	d101      	bne.n	80075ea <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 80075e6:	2300      	movs	r3, #0
 80075e8:	e010      	b.n	800760c <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 80075ea:	2300      	movs	r3, #0
 80075ec:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 80075ee:	2300      	movs	r3, #0
 80075f0:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80075f2:	687b      	ldr	r3, [r7, #4]
 80075f4:	681b      	ldr	r3, [r3, #0]
 80075f6:	3308      	adds	r3, #8
 80075f8:	681c      	ldr	r4, [r3, #0]
 80075fa:	f107 030f 	add.w	r3, r7, #15
 80075fe:	f107 0210 	add.w	r2, r7, #16
 8007602:	8879      	ldrh	r1, [r7, #2]
 8007604:	6878      	ldr	r0, [r7, #4]
 8007606:	47a0      	blx	r4
 8007608:	6178      	str	r0, [r7, #20]
        return glyph;
 800760a:	697b      	ldr	r3, [r7, #20]
    }
 800760c:	4618      	mov	r0, r3
 800760e:	371c      	adds	r7, #28
 8007610:	46bd      	mov	sp, r7
 8007612:	bd90      	pop	{r4, r7, pc}

08007614 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 8007614:	b480      	push	{r7}
 8007616:	b083      	sub	sp, #12
 8007618:	af00      	add	r7, sp, #0
 800761a:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 800761c:	687b      	ldr	r3, [r7, #4]
 800761e:	895b      	ldrh	r3, [r3, #10]
    }
 8007620:	4618      	mov	r0, r3
 8007622:	370c      	adds	r7, #12
 8007624:	46bd      	mov	sp, r7
 8007626:	f85d 7b04 	ldr.w	r7, [sp], #4
 800762a:	4770      	bx	lr

0800762c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 800762c:	b480      	push	{r7}
 800762e:	b083      	sub	sp, #12
 8007630:	af00      	add	r7, sp, #0
 8007632:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 8007634:	687b      	ldr	r3, [r7, #4]
 8007636:	899b      	ldrh	r3, [r3, #12]
    }
 8007638:	4618      	mov	r0, r3
 800763a:	370c      	adds	r7, #12
 800763c:	46bd      	mov	sp, r7
 800763e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007642:	4770      	bx	lr

08007644 <_ZNK8touchgfx4Font13getFontHeightEv>:
     * @return The height in pixels of this font.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
 8007644:	b480      	push	{r7}
 8007646:	b083      	sub	sp, #12
 8007648:	af00      	add	r7, sp, #0
 800764a:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 800764c:	687b      	ldr	r3, [r7, #4]
 800764e:	889b      	ldrh	r3, [r3, #4]
    }
 8007650:	4618      	mov	r0, r3
 8007652:	370c      	adds	r7, #12
 8007654:	46bd      	mov	sp, r7
 8007656:	f85d 7b04 	ldr.w	r7, [sp], #4
 800765a:	4770      	bx	lr

0800765c <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     * account that certain characters (eg 'g') have pixels below the baseline, thus making
     * the text height larger than the font height.
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
 800765c:	b480      	push	{r7}
 800765e:	b083      	sub	sp, #12
 8007660:	af00      	add	r7, sp, #0
 8007662:	6078      	str	r0, [r7, #4]
    {
        return fontHeight + pixelsBelowBaseline;
 8007664:	687b      	ldr	r3, [r7, #4]
 8007666:	889a      	ldrh	r2, [r3, #4]
 8007668:	687b      	ldr	r3, [r7, #4]
 800766a:	799b      	ldrb	r3, [r3, #6]
 800766c:	b29b      	uxth	r3, r3
 800766e:	4413      	add	r3, r2
 8007670:	b29b      	uxth	r3, r3
    }
 8007672:	4618      	mov	r0, r3
 8007674:	370c      	adds	r7, #12
 8007676:	46bd      	mov	sp, r7
 8007678:	f85d 7b04 	ldr.w	r7, [sp], #4
 800767c:	4770      	bx	lr

0800767e <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 800767e:	b480      	push	{r7}
 8007680:	b083      	sub	sp, #12
 8007682:	af00      	add	r7, sp, #0
 8007684:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 8007686:	687b      	ldr	r3, [r7, #4]
 8007688:	79db      	ldrb	r3, [r3, #7]
 800768a:	f3c3 0306 	ubfx	r3, r3, #0, #7
 800768e:	b2db      	uxtb	r3, r3
    }
 8007690:	4618      	mov	r0, r3
 8007692:	370c      	adds	r7, #12
 8007694:	46bd      	mov	sp, r7
 8007696:	f85d 7b04 	ldr.w	r7, [sp], #4
 800769a:	4770      	bx	lr

0800769c <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 800769c:	b480      	push	{r7}
 800769e:	b083      	sub	sp, #12
 80076a0:	af00      	add	r7, sp, #0
 80076a2:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 80076a4:	687b      	ldr	r3, [r7, #4]
 80076a6:	79db      	ldrb	r3, [r3, #7]
 80076a8:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 80076ac:	b2db      	uxtb	r3, r3
    }
 80076ae:	4618      	mov	r0, r3
 80076b0:	370c      	adds	r7, #12
 80076b2:	46bd      	mov	sp, r7
 80076b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076b8:	4770      	bx	lr
	...

080076bc <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 80076bc:	b580      	push	{r7, lr}
 80076be:	b082      	sub	sp, #8
 80076c0:	af00      	add	r7, sp, #0
 80076c2:	6078      	str	r0, [r7, #4]
 80076c4:	4a05      	ldr	r2, [pc, #20]	; (80076dc <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 80076c6:	687b      	ldr	r3, [r7, #4]
 80076c8:	601a      	str	r2, [r3, #0]
 80076ca:	687b      	ldr	r3, [r7, #4]
 80076cc:	4618      	mov	r0, r3
 80076ce:	f7ff ff61 	bl	8007594 <_ZN8touchgfx4FontD1Ev>
 80076d2:	687b      	ldr	r3, [r7, #4]
 80076d4:	4618      	mov	r0, r3
 80076d6:	3708      	adds	r7, #8
 80076d8:	46bd      	mov	sp, r7
 80076da:	bd80      	pop	{r7, pc}
 80076dc:	08020ff4 	.word	0x08020ff4

080076e0 <_ZN8touchgfx9ConstFontD0Ev>:
 80076e0:	b580      	push	{r7, lr}
 80076e2:	b082      	sub	sp, #8
 80076e4:	af00      	add	r7, sp, #0
 80076e6:	6078      	str	r0, [r7, #4]
 80076e8:	6878      	ldr	r0, [r7, #4]
 80076ea:	f7ff ffe7 	bl	80076bc <_ZN8touchgfx9ConstFontD1Ev>
 80076ee:	2118      	movs	r1, #24
 80076f0:	6878      	ldr	r0, [r7, #4]
 80076f2:	f016 f96c 	bl	801d9ce <_ZdlPvj>
 80076f6:	687b      	ldr	r3, [r7, #4]
 80076f8:	4618      	mov	r0, r3
 80076fa:	3708      	adds	r7, #8
 80076fc:	46bd      	mov	sp, r7
 80076fe:	bd80      	pop	{r7, pc}

08007700 <_ZN8touchgfx13GeneratedFontD1Ev>:
 * An GeneratedFont has both glyph table and glyph data placed in a flash which
 * supports random access read (i.e. not a NAND flash)
 *
 * @see ConstFont
 */
class GeneratedFont : public ConstFont
 8007700:	b580      	push	{r7, lr}
 8007702:	b082      	sub	sp, #8
 8007704:	af00      	add	r7, sp, #0
 8007706:	6078      	str	r0, [r7, #4]
 8007708:	4a05      	ldr	r2, [pc, #20]	; (8007720 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 800770a:	687b      	ldr	r3, [r7, #4]
 800770c:	601a      	str	r2, [r3, #0]
 800770e:	687b      	ldr	r3, [r7, #4]
 8007710:	4618      	mov	r0, r3
 8007712:	f7ff ffd3 	bl	80076bc <_ZN8touchgfx9ConstFontD1Ev>
 8007716:	687b      	ldr	r3, [r7, #4]
 8007718:	4618      	mov	r0, r3
 800771a:	3708      	adds	r7, #8
 800771c:	46bd      	mov	sp, r7
 800771e:	bd80      	pop	{r7, pc}
 8007720:	0801f5a8 	.word	0x0801f5a8

08007724 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8007724:	b580      	push	{r7, lr}
 8007726:	b082      	sub	sp, #8
 8007728:	af00      	add	r7, sp, #0
 800772a:	6078      	str	r0, [r7, #4]
 800772c:	6878      	ldr	r0, [r7, #4]
 800772e:	f7ff ffe7 	bl	8007700 <_ZN8touchgfx13GeneratedFontD1Ev>
 8007732:	2128      	movs	r1, #40	; 0x28
 8007734:	6878      	ldr	r0, [r7, #4]
 8007736:	f016 f94a 	bl	801d9ce <_ZdlPvj>
 800773a:	687b      	ldr	r3, [r7, #4]
 800773c:	4618      	mov	r0, r3
 800773e:	3708      	adds	r7, #8
 8007740:	46bd      	mov	sp, r7
 8007742:	bd80      	pop	{r7, pc}

08007744 <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 8007744:	b480      	push	{r7}
 8007746:	b083      	sub	sp, #12
 8007748:	af00      	add	r7, sp, #0
 800774a:	6078      	str	r0, [r7, #4]
    {
 800774c:	4a04      	ldr	r2, [pc, #16]	; (8007760 <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 800774e:	687b      	ldr	r3, [r7, #4]
 8007750:	601a      	str	r2, [r3, #0]
    }
 8007752:	687b      	ldr	r3, [r7, #4]
 8007754:	4618      	mov	r0, r3
 8007756:	370c      	adds	r7, #12
 8007758:	46bd      	mov	sp, r7
 800775a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800775e:	4770      	bx	lr
 8007760:	0801f598 	.word	0x0801f598

08007764 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8007764:	b580      	push	{r7, lr}
 8007766:	b082      	sub	sp, #8
 8007768:	af00      	add	r7, sp, #0
 800776a:	6078      	str	r0, [r7, #4]
    }
 800776c:	6878      	ldr	r0, [r7, #4]
 800776e:	f7ff ffe9 	bl	8007744 <_ZN8touchgfx9TypedTextD1Ev>
 8007772:	2108      	movs	r1, #8
 8007774:	6878      	ldr	r0, [r7, #4]
 8007776:	f016 f92a 	bl	801d9ce <_ZdlPvj>
 800777a:	687b      	ldr	r3, [r7, #4]
 800777c:	4618      	mov	r0, r3
 800777e:	3708      	adds	r7, #8
 8007780:	46bd      	mov	sp, r7
 8007782:	bd80      	pop	{r7, pc}

08007784 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    /**
     * Gets GSUB table.
     *
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
 8007784:	b480      	push	{r7}
 8007786:	b083      	sub	sp, #12
 8007788:	af00      	add	r7, sp, #0
 800778a:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 800778c:	687b      	ldr	r3, [r7, #4]
 800778e:	6a1b      	ldr	r3, [r3, #32]
    }
 8007790:	4618      	mov	r0, r3
 8007792:	370c      	adds	r7, #12
 8007794:	46bd      	mov	sp, r7
 8007796:	f85d 7b04 	ldr.w	r7, [sp], #4
 800779a:	4770      	bx	lr

0800779c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
    /**
     * Gets the contextual forms table used in arabic fonts.
     *
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800779c:	b480      	push	{r7}
 800779e:	b083      	sub	sp, #12
 80077a0:	af00      	add	r7, sp, #0
 80077a2:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 80077a4:	687b      	ldr	r3, [r7, #4]
 80077a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    }
 80077a8:	4618      	mov	r0, r3
 80077aa:	370c      	adds	r7, #12
 80077ac:	46bd      	mov	sp, r7
 80077ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077b2:	4770      	bx	lr

080077b4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:

#include <fonts/GeneratedFont.hpp>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80077b4:	b580      	push	{r7, lr}
 80077b6:	b08c      	sub	sp, #48	; 0x30
 80077b8:	af08      	add	r7, sp, #32
 80077ba:	60f8      	str	r0, [r7, #12]
 80077bc:	60b9      	str	r1, [r7, #8]
 80077be:	4611      	mov	r1, r2
 80077c0:	461a      	mov	r2, r3
 80077c2:	460b      	mov	r3, r1
 80077c4:	80fb      	strh	r3, [r7, #6]
 80077c6:	4613      	mov	r3, r2
 80077c8:	80bb      	strh	r3, [r7, #4]
    : ConstFont(list, size, height, pixBelowBase, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 80077ca:	68f8      	ldr	r0, [r7, #12]
 80077cc:	88b9      	ldrh	r1, [r7, #4]
 80077ce:	88fa      	ldrh	r2, [r7, #6]
 80077d0:	8f3b      	ldrh	r3, [r7, #56]	; 0x38
 80077d2:	9306      	str	r3, [sp, #24]
 80077d4:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
 80077d6:	9305      	str	r3, [sp, #20]
 80077d8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80077dc:	9304      	str	r3, [sp, #16]
 80077de:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 80077e2:	9303      	str	r3, [sp, #12]
 80077e4:	f897 3020 	ldrb.w	r3, [r7, #32]
 80077e8:	9302      	str	r3, [sp, #8]
 80077ea:	7f3b      	ldrb	r3, [r7, #28]
 80077ec:	9301      	str	r3, [sp, #4]
 80077ee:	7e3b      	ldrb	r3, [r7, #24]
 80077f0:	9300      	str	r3, [sp, #0]
 80077f2:	460b      	mov	r3, r1
 80077f4:	68b9      	ldr	r1, [r7, #8]
 80077f6:	f008 fbbd 	bl	800ff74 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 80077fa:	4a0a      	ldr	r2, [pc, #40]	; (8007824 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x70>)
 80077fc:	68fb      	ldr	r3, [r7, #12]
 80077fe:	601a      	str	r2, [r3, #0]
 8007800:	68fb      	ldr	r3, [r7, #12]
 8007802:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8007804:	619a      	str	r2, [r3, #24]
 8007806:	68fb      	ldr	r3, [r7, #12]
 8007808:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800780a:	61da      	str	r2, [r3, #28]
 800780c:	68fb      	ldr	r3, [r7, #12]
 800780e:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8007810:	621a      	str	r2, [r3, #32]
 8007812:	68fb      	ldr	r3, [r7, #12]
 8007814:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8007816:	625a      	str	r2, [r3, #36]	; 0x24
{
}
 8007818:	68fb      	ldr	r3, [r7, #12]
 800781a:	4618      	mov	r0, r3
 800781c:	3710      	adds	r7, #16
 800781e:	46bd      	mov	sp, r7
 8007820:	bd80      	pop	{r7, pc}
 8007822:	bf00      	nop
 8007824:	0801f5a8 	.word	0x0801f5a8

08007828 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 8007828:	b480      	push	{r7}
 800782a:	b085      	sub	sp, #20
 800782c:	af00      	add	r7, sp, #0
 800782e:	6078      	str	r0, [r7, #4]
 8007830:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 8007832:	687b      	ldr	r3, [r7, #4]
 8007834:	699b      	ldr	r3, [r3, #24]
 8007836:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8007838:	683b      	ldr	r3, [r7, #0]
 800783a:	889b      	ldrh	r3, [r3, #4]
 800783c:	0adb      	lsrs	r3, r3, #11
 800783e:	b29b      	uxth	r3, r3
 8007840:	009b      	lsls	r3, r3, #2
 8007842:	68fa      	ldr	r2, [r7, #12]
 8007844:	4413      	add	r3, r2
 8007846:	681a      	ldr	r2, [r3, #0]
 8007848:	683b      	ldr	r3, [r7, #0]
 800784a:	681b      	ldr	r3, [r3, #0]
 800784c:	4413      	add	r3, r2
}
 800784e:	4618      	mov	r0, r3
 8007850:	3714      	adds	r7, #20
 8007852:	46bd      	mov	sp, r7
 8007854:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007858:	4770      	bx	lr

0800785a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800785a:	b480      	push	{r7}
 800785c:	b089      	sub	sp, #36	; 0x24
 800785e:	af00      	add	r7, sp, #0
 8007860:	60f8      	str	r0, [r7, #12]
 8007862:	460b      	mov	r3, r1
 8007864:	607a      	str	r2, [r7, #4]
 8007866:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 8007868:	687b      	ldr	r3, [r7, #4]
 800786a:	2b00      	cmp	r3, #0
 800786c:	d003      	beq.n	8007876 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800786e:	687b      	ldr	r3, [r7, #4]
 8007870:	7b1b      	ldrb	r3, [r3, #12]
 8007872:	2b00      	cmp	r3, #0
 8007874:	d101      	bne.n	800787a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 8007876:	2300      	movs	r3, #0
 8007878:	e030      	b.n	80078dc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800787a:	68fb      	ldr	r3, [r7, #12]
 800787c:	69da      	ldr	r2, [r3, #28]
 800787e:	687b      	ldr	r3, [r7, #4]
 8007880:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8007882:	697b      	ldr	r3, [r7, #20]
 8007884:	7b5b      	ldrb	r3, [r3, #13]
 8007886:	021b      	lsls	r3, r3, #8
 8007888:	b21b      	sxth	r3, r3
 800788a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800788e:	b219      	sxth	r1, r3
 8007890:	697b      	ldr	r3, [r7, #20]
 8007892:	7adb      	ldrb	r3, [r3, #11]
 8007894:	b21b      	sxth	r3, r3
 8007896:	430b      	orrs	r3, r1
 8007898:	b21b      	sxth	r3, r3
 800789a:	b29b      	uxth	r3, r3
 800789c:	009b      	lsls	r3, r3, #2
 800789e:	4413      	add	r3, r2
 80078a0:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80078a2:	687b      	ldr	r3, [r7, #4]
 80078a4:	7b1b      	ldrb	r3, [r3, #12]
 80078a6:	837b      	strh	r3, [r7, #26]
 80078a8:	8b7b      	ldrh	r3, [r7, #26]
 80078aa:	2b00      	cmp	r3, #0
 80078ac:	d015      	beq.n	80078da <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    {
        if (prevChar == kerndata->unicodePrevChar)
 80078ae:	69fb      	ldr	r3, [r7, #28]
 80078b0:	881b      	ldrh	r3, [r3, #0]
 80078b2:	897a      	ldrh	r2, [r7, #10]
 80078b4:	429a      	cmp	r2, r3
 80078b6:	d103      	bne.n	80078c0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x66>
        {
            return kerndata->distance;
 80078b8:	69fb      	ldr	r3, [r7, #28]
 80078ba:	f993 3002 	ldrsb.w	r3, [r3, #2]
 80078be:	e00d      	b.n	80078dc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        }
        if (prevChar < kerndata->unicodePrevChar)
 80078c0:	69fb      	ldr	r3, [r7, #28]
 80078c2:	881b      	ldrh	r3, [r3, #0]
 80078c4:	897a      	ldrh	r2, [r7, #10]
 80078c6:	429a      	cmp	r2, r3
 80078c8:	d306      	bcc.n	80078d8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x7e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80078ca:	8b7b      	ldrh	r3, [r7, #26]
 80078cc:	3b01      	subs	r3, #1
 80078ce:	837b      	strh	r3, [r7, #26]
 80078d0:	69fb      	ldr	r3, [r7, #28]
 80078d2:	3304      	adds	r3, #4
 80078d4:	61fb      	str	r3, [r7, #28]
 80078d6:	e7e7      	b.n	80078a8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x4e>
        {
            break;
 80078d8:	bf00      	nop
        }
    }
    return 0;
 80078da:	2300      	movs	r3, #0
}
 80078dc:	4618      	mov	r0, r3
 80078de:	3724      	adds	r7, #36	; 0x24
 80078e0:	46bd      	mov	sp, r7
 80078e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078e6:	4770      	bx	lr

080078e8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80078e8:	b580      	push	{r7, lr}
 80078ea:	af00      	add	r7, sp, #0
 80078ec:	4801      	ldr	r0, [pc, #4]	; (80078f4 <__tcf_0+0xc>)
 80078ee:	f7ff ff07 	bl	8007700 <_ZN8touchgfx13GeneratedFontD1Ev>
 80078f2:	bd80      	pop	{r7, pc}
 80078f4:	20025cdc 	.word	0x20025cdc

080078f8 <_Z23getFont_verdana_10_4bppv>:
{
 80078f8:	b580      	push	{r7, lr}
 80078fa:	b08c      	sub	sp, #48	; 0x30
 80078fc:	af0c      	add	r7, sp, #48	; 0x30
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80078fe:	4b1f      	ldr	r3, [pc, #124]	; (800797c <_Z23getFont_verdana_10_4bppv+0x84>)
 8007900:	781b      	ldrb	r3, [r3, #0]
 8007902:	f3bf 8f5b 	dmb	ish
 8007906:	b2db      	uxtb	r3, r3
 8007908:	f003 0301 	and.w	r3, r3, #1
 800790c:	2b00      	cmp	r3, #0
 800790e:	bf0c      	ite	eq
 8007910:	2301      	moveq	r3, #1
 8007912:	2300      	movne	r3, #0
 8007914:	b2db      	uxtb	r3, r3
 8007916:	2b00      	cmp	r3, #0
 8007918:	d02c      	beq.n	8007974 <_Z23getFont_verdana_10_4bppv+0x7c>
 800791a:	4818      	ldr	r0, [pc, #96]	; (800797c <_Z23getFont_verdana_10_4bppv+0x84>)
 800791c:	f016 f859 	bl	801d9d2 <__cxa_guard_acquire>
 8007920:	4603      	mov	r3, r0
 8007922:	2b00      	cmp	r3, #0
 8007924:	bf14      	ite	ne
 8007926:	2301      	movne	r3, #1
 8007928:	2300      	moveq	r3, #0
 800792a:	b2db      	uxtb	r3, r3
 800792c:	2b00      	cmp	r3, #0
 800792e:	d021      	beq.n	8007974 <_Z23getFont_verdana_10_4bppv+0x7c>
 8007930:	2300      	movs	r3, #0
 8007932:	930a      	str	r3, [sp, #40]	; 0x28
 8007934:	2300      	movs	r3, #0
 8007936:	9309      	str	r3, [sp, #36]	; 0x24
 8007938:	2300      	movs	r3, #0
 800793a:	9308      	str	r3, [sp, #32]
 800793c:	233f      	movs	r3, #63	; 0x3f
 800793e:	9307      	str	r3, [sp, #28]
 8007940:	4b0f      	ldr	r3, [pc, #60]	; (8007980 <_Z23getFont_verdana_10_4bppv+0x88>)
 8007942:	9306      	str	r3, [sp, #24]
 8007944:	4b0f      	ldr	r3, [pc, #60]	; (8007984 <_Z23getFont_verdana_10_4bppv+0x8c>)
 8007946:	9305      	str	r3, [sp, #20]
 8007948:	2300      	movs	r3, #0
 800794a:	9304      	str	r3, [sp, #16]
 800794c:	2300      	movs	r3, #0
 800794e:	9303      	str	r3, [sp, #12]
 8007950:	2301      	movs	r3, #1
 8007952:	9302      	str	r3, [sp, #8]
 8007954:	2304      	movs	r3, #4
 8007956:	9301      	str	r3, [sp, #4]
 8007958:	2300      	movs	r3, #0
 800795a:	9300      	str	r3, [sp, #0]
 800795c:	230a      	movs	r3, #10
 800795e:	2201      	movs	r2, #1
 8007960:	4909      	ldr	r1, [pc, #36]	; (8007988 <_Z23getFont_verdana_10_4bppv+0x90>)
 8007962:	480a      	ldr	r0, [pc, #40]	; (800798c <_Z23getFont_verdana_10_4bppv+0x94>)
 8007964:	f7ff ff26 	bl	80077b4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007968:	4809      	ldr	r0, [pc, #36]	; (8007990 <_Z23getFont_verdana_10_4bppv+0x98>)
 800796a:	f016 f87d 	bl	801da68 <atexit>
 800796e:	4803      	ldr	r0, [pc, #12]	; (800797c <_Z23getFont_verdana_10_4bppv+0x84>)
 8007970:	f016 f83b 	bl	801d9ea <__cxa_guard_release>
    return verdana_10_4bpp;
 8007974:	4b05      	ldr	r3, [pc, #20]	; (800798c <_Z23getFont_verdana_10_4bppv+0x94>)
}
 8007976:	4618      	mov	r0, r3
 8007978:	46bd      	mov	sp, r7
 800797a:	bd80      	pop	{r7, pc}
 800797c:	20025d04 	.word	0x20025d04
 8007980:	08022928 	.word	0x08022928
 8007984:	08022934 	.word	0x08022934
 8007988:	08022888 	.word	0x08022888
 800798c:	20025cdc 	.word	0x20025cdc
 8007990:	080078e9 	.word	0x080078e9

08007994 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 9, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8007994:	b580      	push	{r7, lr}
 8007996:	af00      	add	r7, sp, #0
 8007998:	4801      	ldr	r0, [pc, #4]	; (80079a0 <__tcf_0+0xc>)
 800799a:	f7ff feb1 	bl	8007700 <_ZN8touchgfx13GeneratedFontD1Ev>
 800799e:	bd80      	pop	{r7, pc}
 80079a0:	20025d08 	.word	0x20025d08

080079a4 <_Z23getFont_verdana_20_4bppv>:
{
 80079a4:	b580      	push	{r7, lr}
 80079a6:	b08c      	sub	sp, #48	; 0x30
 80079a8:	af0c      	add	r7, sp, #48	; 0x30
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 9, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80079aa:	4b1f      	ldr	r3, [pc, #124]	; (8007a28 <_Z23getFont_verdana_20_4bppv+0x84>)
 80079ac:	781b      	ldrb	r3, [r3, #0]
 80079ae:	f3bf 8f5b 	dmb	ish
 80079b2:	b2db      	uxtb	r3, r3
 80079b4:	f003 0301 	and.w	r3, r3, #1
 80079b8:	2b00      	cmp	r3, #0
 80079ba:	bf0c      	ite	eq
 80079bc:	2301      	moveq	r3, #1
 80079be:	2300      	movne	r3, #0
 80079c0:	b2db      	uxtb	r3, r3
 80079c2:	2b00      	cmp	r3, #0
 80079c4:	d02c      	beq.n	8007a20 <_Z23getFont_verdana_20_4bppv+0x7c>
 80079c6:	4818      	ldr	r0, [pc, #96]	; (8007a28 <_Z23getFont_verdana_20_4bppv+0x84>)
 80079c8:	f016 f803 	bl	801d9d2 <__cxa_guard_acquire>
 80079cc:	4603      	mov	r3, r0
 80079ce:	2b00      	cmp	r3, #0
 80079d0:	bf14      	ite	ne
 80079d2:	2301      	movne	r3, #1
 80079d4:	2300      	moveq	r3, #0
 80079d6:	b2db      	uxtb	r3, r3
 80079d8:	2b00      	cmp	r3, #0
 80079da:	d021      	beq.n	8007a20 <_Z23getFont_verdana_20_4bppv+0x7c>
 80079dc:	2300      	movs	r3, #0
 80079de:	930a      	str	r3, [sp, #40]	; 0x28
 80079e0:	2300      	movs	r3, #0
 80079e2:	9309      	str	r3, [sp, #36]	; 0x24
 80079e4:	2300      	movs	r3, #0
 80079e6:	9308      	str	r3, [sp, #32]
 80079e8:	233f      	movs	r3, #63	; 0x3f
 80079ea:	9307      	str	r3, [sp, #28]
 80079ec:	4b0f      	ldr	r3, [pc, #60]	; (8007a2c <_Z23getFont_verdana_20_4bppv+0x88>)
 80079ee:	9306      	str	r3, [sp, #24]
 80079f0:	4b0f      	ldr	r3, [pc, #60]	; (8007a30 <_Z23getFont_verdana_20_4bppv+0x8c>)
 80079f2:	9305      	str	r3, [sp, #20]
 80079f4:	2300      	movs	r3, #0
 80079f6:	9304      	str	r3, [sp, #16]
 80079f8:	2300      	movs	r3, #0
 80079fa:	9303      	str	r3, [sp, #12]
 80079fc:	2301      	movs	r3, #1
 80079fe:	9302      	str	r3, [sp, #8]
 8007a00:	2304      	movs	r3, #4
 8007a02:	9301      	str	r3, [sp, #4]
 8007a04:	2300      	movs	r3, #0
 8007a06:	9300      	str	r3, [sp, #0]
 8007a08:	2314      	movs	r3, #20
 8007a0a:	2209      	movs	r2, #9
 8007a0c:	4909      	ldr	r1, [pc, #36]	; (8007a34 <_Z23getFont_verdana_20_4bppv+0x90>)
 8007a0e:	480a      	ldr	r0, [pc, #40]	; (8007a38 <_Z23getFont_verdana_20_4bppv+0x94>)
 8007a10:	f7ff fed0 	bl	80077b4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007a14:	4809      	ldr	r0, [pc, #36]	; (8007a3c <_Z23getFont_verdana_20_4bppv+0x98>)
 8007a16:	f016 f827 	bl	801da68 <atexit>
 8007a1a:	4803      	ldr	r0, [pc, #12]	; (8007a28 <_Z23getFont_verdana_20_4bppv+0x84>)
 8007a1c:	f015 ffe5 	bl	801d9ea <__cxa_guard_release>
    return verdana_20_4bpp;
 8007a20:	4b05      	ldr	r3, [pc, #20]	; (8007a38 <_Z23getFont_verdana_20_4bppv+0x94>)
}
 8007a22:	4618      	mov	r0, r3
 8007a24:	46bd      	mov	sp, r7
 8007a26:	bd80      	pop	{r7, pc}
 8007a28:	20025d30 	.word	0x20025d30
 8007a2c:	0802292c 	.word	0x0802292c
 8007a30:	08022938 	.word	0x08022938
 8007a34:	08022898 	.word	0x08022898
 8007a38:	20025d08 	.word	0x20025d08
 8007a3c:	08007995 	.word	0x08007995

08007a40 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007a40:	b580      	push	{r7, lr}
 8007a42:	af00      	add	r7, sp, #0
 8007a44:	4801      	ldr	r0, [pc, #4]	; (8007a4c <__tcf_0+0xc>)
 8007a46:	f7ff fe5b 	bl	8007700 <_ZN8touchgfx13GeneratedFontD1Ev>
 8007a4a:	bd80      	pop	{r7, pc}
 8007a4c:	20025d34 	.word	0x20025d34

08007a50 <_Z23getFont_verdana_40_4bppv>:
{
 8007a50:	b580      	push	{r7, lr}
 8007a52:	b08c      	sub	sp, #48	; 0x30
 8007a54:	af0c      	add	r7, sp, #48	; 0x30
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007a56:	4b1f      	ldr	r3, [pc, #124]	; (8007ad4 <_Z23getFont_verdana_40_4bppv+0x84>)
 8007a58:	781b      	ldrb	r3, [r3, #0]
 8007a5a:	f3bf 8f5b 	dmb	ish
 8007a5e:	b2db      	uxtb	r3, r3
 8007a60:	f003 0301 	and.w	r3, r3, #1
 8007a64:	2b00      	cmp	r3, #0
 8007a66:	bf0c      	ite	eq
 8007a68:	2301      	moveq	r3, #1
 8007a6a:	2300      	movne	r3, #0
 8007a6c:	b2db      	uxtb	r3, r3
 8007a6e:	2b00      	cmp	r3, #0
 8007a70:	d02c      	beq.n	8007acc <_Z23getFont_verdana_40_4bppv+0x7c>
 8007a72:	4818      	ldr	r0, [pc, #96]	; (8007ad4 <_Z23getFont_verdana_40_4bppv+0x84>)
 8007a74:	f015 ffad 	bl	801d9d2 <__cxa_guard_acquire>
 8007a78:	4603      	mov	r3, r0
 8007a7a:	2b00      	cmp	r3, #0
 8007a7c:	bf14      	ite	ne
 8007a7e:	2301      	movne	r3, #1
 8007a80:	2300      	moveq	r3, #0
 8007a82:	b2db      	uxtb	r3, r3
 8007a84:	2b00      	cmp	r3, #0
 8007a86:	d021      	beq.n	8007acc <_Z23getFont_verdana_40_4bppv+0x7c>
 8007a88:	2300      	movs	r3, #0
 8007a8a:	930a      	str	r3, [sp, #40]	; 0x28
 8007a8c:	2300      	movs	r3, #0
 8007a8e:	9309      	str	r3, [sp, #36]	; 0x24
 8007a90:	2300      	movs	r3, #0
 8007a92:	9308      	str	r3, [sp, #32]
 8007a94:	233f      	movs	r3, #63	; 0x3f
 8007a96:	9307      	str	r3, [sp, #28]
 8007a98:	4b0f      	ldr	r3, [pc, #60]	; (8007ad8 <_Z23getFont_verdana_40_4bppv+0x88>)
 8007a9a:	9306      	str	r3, [sp, #24]
 8007a9c:	4b0f      	ldr	r3, [pc, #60]	; (8007adc <_Z23getFont_verdana_40_4bppv+0x8c>)
 8007a9e:	9305      	str	r3, [sp, #20]
 8007aa0:	2300      	movs	r3, #0
 8007aa2:	9304      	str	r3, [sp, #16]
 8007aa4:	2300      	movs	r3, #0
 8007aa6:	9303      	str	r3, [sp, #12]
 8007aa8:	2301      	movs	r3, #1
 8007aaa:	9302      	str	r3, [sp, #8]
 8007aac:	2304      	movs	r3, #4
 8007aae:	9301      	str	r3, [sp, #4]
 8007ab0:	2300      	movs	r3, #0
 8007ab2:	9300      	str	r3, [sp, #0]
 8007ab4:	2328      	movs	r3, #40	; 0x28
 8007ab6:	2201      	movs	r2, #1
 8007ab8:	4909      	ldr	r1, [pc, #36]	; (8007ae0 <_Z23getFont_verdana_40_4bppv+0x90>)
 8007aba:	480a      	ldr	r0, [pc, #40]	; (8007ae4 <_Z23getFont_verdana_40_4bppv+0x94>)
 8007abc:	f7ff fe7a 	bl	80077b4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007ac0:	4809      	ldr	r0, [pc, #36]	; (8007ae8 <_Z23getFont_verdana_40_4bppv+0x98>)
 8007ac2:	f015 ffd1 	bl	801da68 <atexit>
 8007ac6:	4803      	ldr	r0, [pc, #12]	; (8007ad4 <_Z23getFont_verdana_40_4bppv+0x84>)
 8007ac8:	f015 ff8f 	bl	801d9ea <__cxa_guard_release>
    return verdana_40_4bpp;
 8007acc:	4b05      	ldr	r3, [pc, #20]	; (8007ae4 <_Z23getFont_verdana_40_4bppv+0x94>)
}
 8007ace:	4618      	mov	r0, r3
 8007ad0:	46bd      	mov	sp, r7
 8007ad2:	bd80      	pop	{r7, pc}
 8007ad4:	20025d5c 	.word	0x20025d5c
 8007ad8:	08022930 	.word	0x08022930
 8007adc:	0802293c 	.word	0x0802293c
 8007ae0:	08022918 	.word	0x08022918
 8007ae4:	20025d34 	.word	0x20025d34
 8007ae8:	08007a41 	.word	0x08007a41

08007aec <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 8007aec:	b480      	push	{r7}
 8007aee:	b083      	sub	sp, #12
 8007af0:	af00      	add	r7, sp, #0
 8007af2:	6078      	str	r0, [r7, #4]
 8007af4:	6039      	str	r1, [r7, #0]
 8007af6:	683b      	ldr	r3, [r7, #0]
 8007af8:	4618      	mov	r0, r3
 8007afa:	370c      	adds	r7, #12
 8007afc:	46bd      	mov	sp, r7
 8007afe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b02:	4770      	bx	lr

08007b04 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8007b04:	b480      	push	{r7}
 8007b06:	b083      	sub	sp, #12
 8007b08:	af00      	add	r7, sp, #0
 8007b0a:	6078      	str	r0, [r7, #4]
 8007b0c:	6039      	str	r1, [r7, #0]
    {
    }
 8007b0e:	bf00      	nop
 8007b10:	370c      	adds	r7, #12
 8007b12:	46bd      	mov	sp, r7
 8007b14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b18:	4770      	bx	lr

08007b1a <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 8007b1a:	b480      	push	{r7}
 8007b1c:	b083      	sub	sp, #12
 8007b1e:	af00      	add	r7, sp, #0
 8007b20:	6078      	str	r0, [r7, #4]
 8007b22:	6039      	str	r1, [r7, #0]
    {
    }
 8007b24:	bf00      	nop
 8007b26:	370c      	adds	r7, #12
 8007b28:	46bd      	mov	sp, r7
 8007b2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b2e:	4770      	bx	lr

08007b30 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 8007b30:	b480      	push	{r7}
 8007b32:	b083      	sub	sp, #12
 8007b34:	af00      	add	r7, sp, #0
 8007b36:	6078      	str	r0, [r7, #4]
 8007b38:	6039      	str	r1, [r7, #0]
    {
    }
 8007b3a:	bf00      	nop
 8007b3c:	370c      	adds	r7, #12
 8007b3e:	46bd      	mov	sp, r7
 8007b40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b44:	4770      	bx	lr

08007b46 <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 8007b46:	b480      	push	{r7}
 8007b48:	b083      	sub	sp, #12
 8007b4a:	af00      	add	r7, sp, #0
 8007b4c:	6078      	str	r0, [r7, #4]
 8007b4e:	460b      	mov	r3, r1
 8007b50:	70fb      	strb	r3, [r7, #3]
    {
    }
 8007b52:	bf00      	nop
 8007b54:	370c      	adds	r7, #12
 8007b56:	46bd      	mov	sp, r7
 8007b58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b5c:	4770      	bx	lr

08007b5e <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 8007b5e:	b480      	push	{r7}
 8007b60:	b083      	sub	sp, #12
 8007b62:	af00      	add	r7, sp, #0
 8007b64:	6078      	str	r0, [r7, #4]
    {
    }
 8007b66:	bf00      	nop
 8007b68:	370c      	adds	r7, #12
 8007b6a:	46bd      	mov	sp, r7
 8007b6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b70:	4770      	bx	lr

08007b72 <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 8007b72:	b480      	push	{r7}
 8007b74:	b083      	sub	sp, #12
 8007b76:	af00      	add	r7, sp, #0
 8007b78:	6078      	str	r0, [r7, #4]
    {
    }
 8007b7a:	bf00      	nop
 8007b7c:	370c      	adds	r7, #12
 8007b7e:	46bd      	mov	sp, r7
 8007b80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b84:	4770      	bx	lr
	...

08007b88 <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 8007b88:	b480      	push	{r7}
 8007b8a:	b083      	sub	sp, #12
 8007b8c:	af00      	add	r7, sp, #0
 8007b8e:	6078      	str	r0, [r7, #4]
    {
 8007b90:	4a04      	ldr	r2, [pc, #16]	; (8007ba4 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 8007b92:	687b      	ldr	r3, [r7, #4]
 8007b94:	601a      	str	r2, [r3, #0]
    }
 8007b96:	687b      	ldr	r3, [r7, #4]
 8007b98:	4618      	mov	r0, r3
 8007b9a:	370c      	adds	r7, #12
 8007b9c:	46bd      	mov	sp, r7
 8007b9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ba2:	4770      	bx	lr
 8007ba4:	0801f710 	.word	0x0801f710

08007ba8 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 8007ba8:	b580      	push	{r7, lr}
 8007baa:	b082      	sub	sp, #8
 8007bac:	af00      	add	r7, sp, #0
 8007bae:	6078      	str	r0, [r7, #4]
    }
 8007bb0:	6878      	ldr	r0, [r7, #4]
 8007bb2:	f7ff ffe9 	bl	8007b88 <_ZN8touchgfx15UIEventListenerD1Ev>
 8007bb6:	2104      	movs	r1, #4
 8007bb8:	6878      	ldr	r0, [r7, #4]
 8007bba:	f015 ff08 	bl	801d9ce <_ZdlPvj>
 8007bbe:	687b      	ldr	r3, [r7, #4]
 8007bc0:	4618      	mov	r0, r3
 8007bc2:	3708      	adds	r7, #8
 8007bc4:	46bd      	mov	sp, r7
 8007bc6:	bd80      	pop	{r7, pc}

08007bc8 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 8007bc8:	b480      	push	{r7}
 8007bca:	b083      	sub	sp, #12
 8007bcc:	af00      	add	r7, sp, #0
 8007bce:	6078      	str	r0, [r7, #4]
    {
    }
 8007bd0:	bf00      	nop
 8007bd2:	370c      	adds	r7, #12
 8007bd4:	46bd      	mov	sp, r7
 8007bd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007bda:	4770      	bx	lr

08007bdc <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 8007bdc:	b480      	push	{r7}
 8007bde:	b083      	sub	sp, #12
 8007be0:	af00      	add	r7, sp, #0
 8007be2:	6078      	str	r0, [r7, #4]
 8007be4:	460b      	mov	r3, r1
 8007be6:	70fb      	strb	r3, [r7, #3]
    {
    }
 8007be8:	bf00      	nop
 8007bea:	370c      	adds	r7, #12
 8007bec:	46bd      	mov	sp, r7
 8007bee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007bf2:	4770      	bx	lr

08007bf4 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 8007bf4:	b480      	push	{r7}
 8007bf6:	b083      	sub	sp, #12
 8007bf8:	af00      	add	r7, sp, #0
 8007bfa:	6078      	str	r0, [r7, #4]
 8007bfc:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 8007bfe:	687b      	ldr	r3, [r7, #4]
 8007c00:	683a      	ldr	r2, [r7, #0]
 8007c02:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 8007c06:	6810      	ldr	r0, [r2, #0]
 8007c08:	6851      	ldr	r1, [r2, #4]
 8007c0a:	c303      	stmia	r3!, {r0, r1}
    }
 8007c0c:	bf00      	nop
 8007c0e:	370c      	adds	r7, #12
 8007c10:	46bd      	mov	sp, r7
 8007c12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c16:	4770      	bx	lr

08007c18 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 8007c18:	b480      	push	{r7}
 8007c1a:	b083      	sub	sp, #12
 8007c1c:	af00      	add	r7, sp, #0
 8007c1e:	6078      	str	r0, [r7, #4]
    {
 8007c20:	4a04      	ldr	r2, [pc, #16]	; (8007c34 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 8007c22:	687b      	ldr	r3, [r7, #4]
 8007c24:	601a      	str	r2, [r3, #0]
    }
 8007c26:	687b      	ldr	r3, [r7, #4]
 8007c28:	4618      	mov	r0, r3
 8007c2a:	370c      	adds	r7, #12
 8007c2c:	46bd      	mov	sp, r7
 8007c2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c32:	4770      	bx	lr
 8007c34:	0801f6f8 	.word	0x0801f6f8

08007c38 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 8007c38:	b580      	push	{r7, lr}
 8007c3a:	b082      	sub	sp, #8
 8007c3c:	af00      	add	r7, sp, #0
 8007c3e:	6078      	str	r0, [r7, #4]
    }
 8007c40:	6878      	ldr	r0, [r7, #4]
 8007c42:	f7ff ffe9 	bl	8007c18 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 8007c46:	2104      	movs	r1, #4
 8007c48:	6878      	ldr	r0, [r7, #4]
 8007c4a:	f015 fec0 	bl	801d9ce <_ZdlPvj>
 8007c4e:	687b      	ldr	r3, [r7, #4]
 8007c50:	4618      	mov	r0, r3
 8007c52:	3708      	adds	r7, #8
 8007c54:	46bd      	mov	sp, r7
 8007c56:	bd80      	pop	{r7, pc}

08007c58 <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 8007c58:	b480      	push	{r7}
 8007c5a:	af00      	add	r7, sp, #0
    {
        return instance;
 8007c5c:	4b03      	ldr	r3, [pc, #12]	; (8007c6c <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 8007c5e:	681b      	ldr	r3, [r3, #0]
    }
 8007c60:	4618      	mov	r0, r3
 8007c62:	46bd      	mov	sp, r7
 8007c64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c68:	4770      	bx	lr
 8007c6a:	bf00      	nop
 8007c6c:	20026f00 	.word	0x20026f00

08007c70 <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 8007c70:	b480      	push	{r7}
 8007c72:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8007c74:	4b0b      	ldr	r3, [pc, #44]	; (8007ca4 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8007c76:	681b      	ldr	r3, [r3, #0]
 8007c78:	f893 3076 	ldrb.w	r3, [r3, #118]	; 0x76
 8007c7c:	2b00      	cmp	r3, #0
 8007c7e:	d008      	beq.n	8007c92 <_ZN8touchgfx3HAL3lcdEv+0x22>
 8007c80:	4b08      	ldr	r3, [pc, #32]	; (8007ca4 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8007c82:	681b      	ldr	r3, [r3, #0]
 8007c84:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007c86:	2b00      	cmp	r3, #0
 8007c88:	d003      	beq.n	8007c92 <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 8007c8a:	4b06      	ldr	r3, [pc, #24]	; (8007ca4 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8007c8c:	681b      	ldr	r3, [r3, #0]
 8007c8e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007c90:	e002      	b.n	8007c98 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 8007c92:	4b04      	ldr	r3, [pc, #16]	; (8007ca4 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8007c94:	681b      	ldr	r3, [r3, #0]
 8007c96:	689b      	ldr	r3, [r3, #8]
    }
 8007c98:	4618      	mov	r0, r3
 8007c9a:	46bd      	mov	sp, r7
 8007c9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ca0:	4770      	bx	lr
 8007ca2:	bf00      	nop
 8007ca4:	20026f00 	.word	0x20026f00

08007ca8 <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 8007ca8:	b480      	push	{r7}
 8007caa:	b083      	sub	sp, #12
 8007cac:	af00      	add	r7, sp, #0
 8007cae:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 8007cb0:	4a07      	ldr	r2, [pc, #28]	; (8007cd0 <_ZN8touchgfx10TransitionC1Ev+0x28>)
 8007cb2:	687b      	ldr	r3, [r7, #4]
 8007cb4:	601a      	str	r2, [r3, #0]
 8007cb6:	687b      	ldr	r3, [r7, #4]
 8007cb8:	2200      	movs	r2, #0
 8007cba:	605a      	str	r2, [r3, #4]
 8007cbc:	687b      	ldr	r3, [r7, #4]
 8007cbe:	2200      	movs	r2, #0
 8007cc0:	721a      	strb	r2, [r3, #8]
    {
    }
 8007cc2:	687b      	ldr	r3, [r7, #4]
 8007cc4:	4618      	mov	r0, r3
 8007cc6:	370c      	adds	r7, #12
 8007cc8:	46bd      	mov	sp, r7
 8007cca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cce:	4770      	bx	lr
 8007cd0:	0801f6d4 	.word	0x0801f6d4

08007cd4 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 8007cd4:	b480      	push	{r7}
 8007cd6:	b083      	sub	sp, #12
 8007cd8:	af00      	add	r7, sp, #0
 8007cda:	6078      	str	r0, [r7, #4]
    {
 8007cdc:	4a04      	ldr	r2, [pc, #16]	; (8007cf0 <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 8007cde:	687b      	ldr	r3, [r7, #4]
 8007ce0:	601a      	str	r2, [r3, #0]
    }
 8007ce2:	687b      	ldr	r3, [r7, #4]
 8007ce4:	4618      	mov	r0, r3
 8007ce6:	370c      	adds	r7, #12
 8007ce8:	46bd      	mov	sp, r7
 8007cea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cee:	4770      	bx	lr
 8007cf0:	0801f6d4 	.word	0x0801f6d4

08007cf4 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 8007cf4:	b580      	push	{r7, lr}
 8007cf6:	b082      	sub	sp, #8
 8007cf8:	af00      	add	r7, sp, #0
 8007cfa:	6078      	str	r0, [r7, #4]
    }
 8007cfc:	6878      	ldr	r0, [r7, #4]
 8007cfe:	f7ff ffe9 	bl	8007cd4 <_ZN8touchgfx10TransitionD1Ev>
 8007d02:	210c      	movs	r1, #12
 8007d04:	6878      	ldr	r0, [r7, #4]
 8007d06:	f015 fe62 	bl	801d9ce <_ZdlPvj>
 8007d0a:	687b      	ldr	r3, [r7, #4]
 8007d0c:	4618      	mov	r0, r3
 8007d0e:	3708      	adds	r7, #8
 8007d10:	46bd      	mov	sp, r7
 8007d12:	bd80      	pop	{r7, pc}

08007d14 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 8007d14:	b480      	push	{r7}
 8007d16:	b083      	sub	sp, #12
 8007d18:	af00      	add	r7, sp, #0
 8007d1a:	6078      	str	r0, [r7, #4]
    {
    }
 8007d1c:	bf00      	nop
 8007d1e:	370c      	adds	r7, #12
 8007d20:	46bd      	mov	sp, r7
 8007d22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d26:	4770      	bx	lr

08007d28 <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 8007d28:	b480      	push	{r7}
 8007d2a:	b083      	sub	sp, #12
 8007d2c:	af00      	add	r7, sp, #0
 8007d2e:	6078      	str	r0, [r7, #4]
    {
    }
 8007d30:	bf00      	nop
 8007d32:	370c      	adds	r7, #12
 8007d34:	46bd      	mov	sp, r7
 8007d36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d3a:	4770      	bx	lr

08007d3c <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 8007d3c:	b480      	push	{r7}
 8007d3e:	b083      	sub	sp, #12
 8007d40:	af00      	add	r7, sp, #0
 8007d42:	6078      	str	r0, [r7, #4]
    {
    }
 8007d44:	bf00      	nop
 8007d46:	370c      	adds	r7, #12
 8007d48:	46bd      	mov	sp, r7
 8007d4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d4e:	4770      	bx	lr

08007d50 <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 8007d50:	b580      	push	{r7, lr}
 8007d52:	b082      	sub	sp, #8
 8007d54:	af00      	add	r7, sp, #0
 8007d56:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 8007d58:	f007 f8d2 	bl	800ef00 <_ZN8touchgfx11Application11getInstanceEv>
 8007d5c:	4603      	mov	r3, r0
 8007d5e:	4618      	mov	r0, r3
 8007d60:	f007 fc96 	bl	800f690 <_ZN8touchgfx11Application10invalidateEv>
    }
 8007d64:	bf00      	nop
 8007d66:	3708      	adds	r7, #8
 8007d68:	46bd      	mov	sp, r7
 8007d6a:	bd80      	pop	{r7, pc}

08007d6c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 8007d6c:	b480      	push	{r7}
 8007d6e:	b083      	sub	sp, #12
 8007d70:	af00      	add	r7, sp, #0
 8007d72:	6078      	str	r0, [r7, #4]
 8007d74:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 8007d76:	687b      	ldr	r3, [r7, #4]
 8007d78:	683a      	ldr	r2, [r7, #0]
 8007d7a:	605a      	str	r2, [r3, #4]
    }
 8007d7c:	bf00      	nop
 8007d7e:	370c      	adds	r7, #12
 8007d80:	46bd      	mov	sp, r7
 8007d82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d86:	4770      	bx	lr

08007d88 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 8007d88:	b580      	push	{r7, lr}
 8007d8a:	b082      	sub	sp, #8
 8007d8c:	af00      	add	r7, sp, #0
 8007d8e:	6078      	str	r0, [r7, #4]
 8007d90:	4a05      	ldr	r2, [pc, #20]	; (8007da8 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 8007d92:	687b      	ldr	r3, [r7, #4]
 8007d94:	601a      	str	r2, [r3, #0]
 8007d96:	687b      	ldr	r3, [r7, #4]
 8007d98:	4618      	mov	r0, r3
 8007d9a:	f7ff fef5 	bl	8007b88 <_ZN8touchgfx15UIEventListenerD1Ev>
 8007d9e:	687b      	ldr	r3, [r7, #4]
 8007da0:	4618      	mov	r0, r3
 8007da2:	3708      	adds	r7, #8
 8007da4:	46bd      	mov	sp, r7
 8007da6:	bd80      	pop	{r7, pc}
 8007da8:	08020d6c 	.word	0x08020d6c

08007dac <_ZN8touchgfx11ApplicationD0Ev>:
 8007dac:	b580      	push	{r7, lr}
 8007dae:	b082      	sub	sp, #8
 8007db0:	af00      	add	r7, sp, #0
 8007db2:	6078      	str	r0, [r7, #4]
 8007db4:	6878      	ldr	r0, [r7, #4]
 8007db6:	f7ff ffe7 	bl	8007d88 <_ZN8touchgfx11ApplicationD1Ev>
 8007dba:	f44f 719c 	mov.w	r1, #312	; 0x138
 8007dbe:	6878      	ldr	r0, [r7, #4]
 8007dc0:	f015 fe05 	bl	801d9ce <_ZdlPvj>
 8007dc4:	687b      	ldr	r3, [r7, #4]
 8007dc6:	4618      	mov	r0, r3
 8007dc8:	3708      	adds	r7, #8
 8007dca:	46bd      	mov	sp, r7
 8007dcc:	bd80      	pop	{r7, pc}
	...

08007dd0 <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 8007dd0:	b580      	push	{r7, lr}
 8007dd2:	b082      	sub	sp, #8
 8007dd4:	af00      	add	r7, sp, #0
 8007dd6:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 8007dd8:	687b      	ldr	r3, [r7, #4]
 8007dda:	4618      	mov	r0, r3
 8007ddc:	f007 f8b0 	bl	800ef40 <_ZN8touchgfx11ApplicationC1Ev>
 8007de0:	4a09      	ldr	r2, [pc, #36]	; (8007e08 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 8007de2:	687b      	ldr	r3, [r7, #4]
 8007de4:	601a      	str	r2, [r3, #0]
 8007de6:	687b      	ldr	r3, [r7, #4]
 8007de8:	2200      	movs	r2, #0
 8007dea:	f8c3 2138 	str.w	r2, [r3, #312]	; 0x138
 8007dee:	687b      	ldr	r3, [r7, #4]
 8007df0:	2200      	movs	r2, #0
 8007df2:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
    {
        instance = this;
 8007df6:	687b      	ldr	r3, [r7, #4]
 8007df8:	4a04      	ldr	r2, [pc, #16]	; (8007e0c <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 8007dfa:	6013      	str	r3, [r2, #0]
    }
 8007dfc:	687b      	ldr	r3, [r7, #4]
 8007dfe:	4618      	mov	r0, r3
 8007e00:	3708      	adds	r7, #8
 8007e02:	46bd      	mov	sp, r7
 8007e04:	bd80      	pop	{r7, pc}
 8007e06:	bf00      	nop
 8007e08:	0801f688 	.word	0x0801f688
 8007e0c:	20026f4c 	.word	0x20026f4c

08007e10 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8007e10:	b580      	push	{r7, lr}
 8007e12:	b082      	sub	sp, #8
 8007e14:	af00      	add	r7, sp, #0
 8007e16:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 8007e18:	6878      	ldr	r0, [r7, #4]
 8007e1a:	f000 f804 	bl	8007e26 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 8007e1e:	bf00      	nop
 8007e20:	3708      	adds	r7, #8
 8007e22:	46bd      	mov	sp, r7
 8007e24:	bd80      	pop	{r7, pc}

08007e26 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 8007e26:	b580      	push	{r7, lr}
 8007e28:	b082      	sub	sp, #8
 8007e2a:	af00      	add	r7, sp, #0
 8007e2c:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8007e2e:	687b      	ldr	r3, [r7, #4]
 8007e30:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 8007e34:	2b00      	cmp	r3, #0
 8007e36:	d00f      	beq.n	8007e58 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 8007e38:	687b      	ldr	r3, [r7, #4]
 8007e3a:	f8d3 213c 	ldr.w	r2, [r3, #316]	; 0x13c
 8007e3e:	687b      	ldr	r3, [r7, #4]
 8007e40:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 8007e44:	681b      	ldr	r3, [r3, #0]
 8007e46:	330c      	adds	r3, #12
 8007e48:	681b      	ldr	r3, [r3, #0]
 8007e4a:	4610      	mov	r0, r2
 8007e4c:	4798      	blx	r3
 8007e4e:	4603      	mov	r3, r0
 8007e50:	2b00      	cmp	r3, #0
 8007e52:	d001      	beq.n	8007e58 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 8007e54:	2301      	movs	r3, #1
 8007e56:	e000      	b.n	8007e5a <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 8007e58:	2300      	movs	r3, #0
 8007e5a:	2b00      	cmp	r3, #0
 8007e5c:	d00e      	beq.n	8007e7c <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 8007e5e:	687b      	ldr	r3, [r7, #4]
 8007e60:	f8d3 213c 	ldr.w	r2, [r3, #316]	; 0x13c
 8007e64:	687b      	ldr	r3, [r7, #4]
 8007e66:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 8007e6a:	681b      	ldr	r3, [r3, #0]
 8007e6c:	3308      	adds	r3, #8
 8007e6e:	681b      	ldr	r3, [r3, #0]
 8007e70:	4610      	mov	r0, r2
 8007e72:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8007e74:	687b      	ldr	r3, [r7, #4]
 8007e76:	2200      	movs	r2, #0
 8007e78:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
        }
    }
 8007e7c:	bf00      	nop
 8007e7e:	3708      	adds	r7, #8
 8007e80:	46bd      	mov	sp, r7
 8007e82:	bd80      	pop	{r7, pc}

08007e84 <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 8007e84:	b480      	push	{r7}
 8007e86:	b083      	sub	sp, #12
 8007e88:	af00      	add	r7, sp, #0
 8007e8a:	6078      	str	r0, [r7, #4]
 8007e8c:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 8007e8e:	687b      	ldr	r3, [r7, #4]
 8007e90:	683a      	ldr	r2, [r7, #0]
 8007e92:	601a      	str	r2, [r3, #0]
    }
 8007e94:	bf00      	nop
 8007e96:	370c      	adds	r7, #12
 8007e98:	46bd      	mov	sp, r7
 8007e9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e9e:	4770      	bx	lr

08007ea0 <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 8007ea0:	b580      	push	{r7, lr}
 8007ea2:	b082      	sub	sp, #8
 8007ea4:	af00      	add	r7, sp, #0
 8007ea6:	6078      	str	r0, [r7, #4]
 8007ea8:	4a05      	ldr	r2, [pc, #20]	; (8007ec0 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 8007eaa:	687b      	ldr	r3, [r7, #4]
 8007eac:	601a      	str	r2, [r3, #0]
 8007eae:	687b      	ldr	r3, [r7, #4]
 8007eb0:	4618      	mov	r0, r3
 8007eb2:	f7ff ff69 	bl	8007d88 <_ZN8touchgfx11ApplicationD1Ev>
 8007eb6:	687b      	ldr	r3, [r7, #4]
 8007eb8:	4618      	mov	r0, r3
 8007eba:	3708      	adds	r7, #8
 8007ebc:	46bd      	mov	sp, r7
 8007ebe:	bd80      	pop	{r7, pc}
 8007ec0:	0801f688 	.word	0x0801f688

08007ec4 <_ZN8touchgfx14MVPApplicationD0Ev>:
 8007ec4:	b580      	push	{r7, lr}
 8007ec6:	b082      	sub	sp, #8
 8007ec8:	af00      	add	r7, sp, #0
 8007eca:	6078      	str	r0, [r7, #4]
 8007ecc:	6878      	ldr	r0, [r7, #4]
 8007ece:	f7ff ffe7 	bl	8007ea0 <_ZN8touchgfx14MVPApplicationD1Ev>
 8007ed2:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8007ed6:	6878      	ldr	r0, [r7, #4]
 8007ed8:	f015 fd79 	bl	801d9ce <_ZdlPvj>
 8007edc:	687b      	ldr	r3, [r7, #4]
 8007ede:	4618      	mov	r0, r3
 8007ee0:	3708      	adds	r7, #8
 8007ee2:	46bd      	mov	sp, r7
 8007ee4:	bd80      	pop	{r7, pc}
	...

08007ee8 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8007ee8:	b580      	push	{r7, lr}
 8007eea:	b082      	sub	sp, #8
 8007eec:	af00      	add	r7, sp, #0
 8007eee:	6078      	str	r0, [r7, #4]
 8007ef0:	4a08      	ldr	r2, [pc, #32]	; (8007f14 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 8007ef2:	687b      	ldr	r3, [r7, #4]
 8007ef4:	601a      	str	r2, [r3, #0]
 8007ef6:	687b      	ldr	r3, [r7, #4]
 8007ef8:	f503 73a0 	add.w	r3, r3, #320	; 0x140
 8007efc:	4618      	mov	r0, r3
 8007efe:	f000 fac9 	bl	8008494 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 8007f02:	687b      	ldr	r3, [r7, #4]
 8007f04:	4618      	mov	r0, r3
 8007f06:	f7ff ffcb 	bl	8007ea0 <_ZN8touchgfx14MVPApplicationD1Ev>
 8007f0a:	687b      	ldr	r3, [r7, #4]
 8007f0c:	4618      	mov	r0, r3
 8007f0e:	3708      	adds	r7, #8
 8007f10:	46bd      	mov	sp, r7
 8007f12:	bd80      	pop	{r7, pc}
 8007f14:	0801f624 	.word	0x0801f624

08007f18 <_ZN23FrontendApplicationBaseD0Ev>:
 8007f18:	b580      	push	{r7, lr}
 8007f1a:	b082      	sub	sp, #8
 8007f1c:	af00      	add	r7, sp, #0
 8007f1e:	6078      	str	r0, [r7, #4]
 8007f20:	6878      	ldr	r0, [r7, #4]
 8007f22:	f7ff ffe1 	bl	8007ee8 <_ZN23FrontendApplicationBaseD1Ev>
 8007f26:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8007f2a:	6878      	ldr	r0, [r7, #4]
 8007f2c:	f015 fd4f 	bl	801d9ce <_ZdlPvj>
 8007f30:	687b      	ldr	r3, [r7, #4]
 8007f32:	4618      	mov	r0, r3
 8007f34:	3708      	adds	r7, #8
 8007f36:	46bd      	mov	sp, r7
 8007f38:	bd80      	pop	{r7, pc}

08007f3a <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 8007f3a:	b580      	push	{r7, lr}
 8007f3c:	b082      	sub	sp, #8
 8007f3e:	af00      	add	r7, sp, #0
 8007f40:	6078      	str	r0, [r7, #4]
    {
        gotoScreen1ScreenNoTransition();
 8007f42:	6878      	ldr	r0, [r7, #4]
 8007f44:	f000 f87c 	bl	8008040 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    }
 8007f48:	bf00      	nop
 8007f4a:	3708      	adds	r7, #8
 8007f4c:	46bd      	mov	sp, r7
 8007f4e:	bd80      	pop	{r7, pc}

08007f50 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 8007f50:	b480      	push	{r7}
 8007f52:	b083      	sub	sp, #12
 8007f54:	af00      	add	r7, sp, #0
 8007f56:	6078      	str	r0, [r7, #4]
    {
        done = true;
 8007f58:	687b      	ldr	r3, [r7, #4]
 8007f5a:	2201      	movs	r2, #1
 8007f5c:	721a      	strb	r2, [r3, #8]
    }
 8007f5e:	bf00      	nop
 8007f60:	370c      	adds	r7, #12
 8007f62:	46bd      	mov	sp, r7
 8007f64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f68:	4770      	bx	lr

08007f6a <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 8007f6a:	b480      	push	{r7}
 8007f6c:	b083      	sub	sp, #12
 8007f6e:	af00      	add	r7, sp, #0
 8007f70:	6078      	str	r0, [r7, #4]
 8007f72:	6039      	str	r1, [r7, #0]
    {
        model = m;
 8007f74:	687b      	ldr	r3, [r7, #4]
 8007f76:	683a      	ldr	r2, [r7, #0]
 8007f78:	605a      	str	r2, [r3, #4]
    }
 8007f7a:	bf00      	nop
 8007f7c:	370c      	adds	r7, #12
 8007f7e:	46bd      	mov	sp, r7
 8007f80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f84:	4770      	bx	lr
	...

08007f88 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8007f88:	b580      	push	{r7, lr}
 8007f8a:	b084      	sub	sp, #16
 8007f8c:	af00      	add	r7, sp, #0
 8007f8e:	60f8      	str	r0, [r7, #12]
 8007f90:	60b9      	str	r1, [r7, #8]
 8007f92:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8007f94:	68fb      	ldr	r3, [r7, #12]
 8007f96:	4618      	mov	r0, r3
 8007f98:	f7ff ff1a 	bl	8007dd0 <_ZN8touchgfx14MVPApplicationC1Ev>
 8007f9c:	4a13      	ldr	r2, [pc, #76]	; (8007fec <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 8007f9e:	68fb      	ldr	r3, [r7, #12]
 8007fa0:	601a      	str	r2, [r3, #0]
 8007fa2:	68fb      	ldr	r3, [r7, #12]
 8007fa4:	f503 73a0 	add.w	r3, r3, #320	; 0x140
 8007fa8:	4618      	mov	r0, r3
 8007faa:	f000 f89f 	bl	80080ec <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
 8007fae:	68fb      	ldr	r3, [r7, #12]
 8007fb0:	687a      	ldr	r2, [r7, #4]
 8007fb2:	f8c3 2150 	str.w	r2, [r3, #336]	; 0x150
 8007fb6:	68fb      	ldr	r3, [r7, #12]
 8007fb8:	68ba      	ldr	r2, [r7, #8]
 8007fba:	f8c3 2154 	str.w	r2, [r3, #340]	; 0x154
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8007fbe:	f7ff fe4b 	bl	8007c58 <_ZN8touchgfx3HAL11getInstanceEv>
 8007fc2:	4603      	mov	r3, r0
 8007fc4:	681a      	ldr	r2, [r3, #0]
 8007fc6:	3208      	adds	r2, #8
 8007fc8:	6812      	ldr	r2, [r2, #0]
 8007fca:	2101      	movs	r1, #1
 8007fcc:	4618      	mov	r0, r3
 8007fce:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 8007fd0:	2000      	movs	r0, #0
 8007fd2:	f001 fad7 	bl	8009584 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8007fd6:	f7ff fe4b 	bl	8007c70 <_ZN8touchgfx3HAL3lcdEv>
 8007fda:	4603      	mov	r3, r0
 8007fdc:	4618      	mov	r0, r3
 8007fde:	f00e fbc4 	bl	801676a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8007fe2:	68fb      	ldr	r3, [r7, #12]
 8007fe4:	4618      	mov	r0, r3
 8007fe6:	3710      	adds	r7, #16
 8007fe8:	46bd      	mov	sp, r7
 8007fea:	bd80      	pop	{r7, pc}
 8007fec:	0801f624 	.word	0x0801f624

08007ff0 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 8007ff0:	b480      	push	{r7}
 8007ff2:	b083      	sub	sp, #12
 8007ff4:	af00      	add	r7, sp, #0
 8007ff6:	6078      	str	r0, [r7, #4]
 8007ff8:	6039      	str	r1, [r7, #0]
 8007ffa:	687b      	ldr	r3, [r7, #4]
 8007ffc:	4618      	mov	r0, r3
 8007ffe:	370c      	adds	r7, #12
 8008000:	46bd      	mov	sp, r7
 8008002:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008006:	4770      	bx	lr

08008008 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8008008:	b580      	push	{r7, lr}
 800800a:	b082      	sub	sp, #8
 800800c:	af00      	add	r7, sp, #0
 800800e:	6078      	str	r0, [r7, #4]
 8008010:	6039      	str	r1, [r7, #0]
 8008012:	687b      	ldr	r3, [r7, #4]
 8008014:	683a      	ldr	r2, [r7, #0]
 8008016:	4611      	mov	r1, r2
 8008018:	4618      	mov	r0, r3
 800801a:	f7ff ffe9 	bl	8007ff0 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 800801e:	683b      	ldr	r3, [r7, #0]
 8008020:	685a      	ldr	r2, [r3, #4]
 8008022:	687b      	ldr	r3, [r7, #4]
 8008024:	605a      	str	r2, [r3, #4]
 8008026:	687b      	ldr	r3, [r7, #4]
 8008028:	683a      	ldr	r2, [r7, #0]
 800802a:	3308      	adds	r3, #8
 800802c:	3208      	adds	r2, #8
 800802e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008032:	e883 0003 	stmia.w	r3, {r0, r1}
 8008036:	687b      	ldr	r3, [r7, #4]
 8008038:	4618      	mov	r0, r3
 800803a:	3708      	adds	r7, #8
 800803c:	46bd      	mov	sp, r7
 800803e:	bd80      	pop	{r7, pc}

08008040 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
 */

// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
 8008040:	b590      	push	{r4, r7, lr}
 8008042:	b089      	sub	sp, #36	; 0x24
 8008044:	af00      	add	r7, sp, #0
 8008046:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
 8008048:	687b      	ldr	r3, [r7, #4]
 800804a:	f503 74a0 	add.w	r4, r3, #320	; 0x140
 800804e:	4b10      	ldr	r3, [pc, #64]	; (8008090 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x50>)
 8008050:	61bb      	str	r3, [r7, #24]
 8008052:	2300      	movs	r3, #0
 8008054:	61fb      	str	r3, [r7, #28]
 8008056:	f107 0008 	add.w	r0, r7, #8
 800805a:	f107 0318 	add.w	r3, r7, #24
 800805e:	cb0c      	ldmia	r3, {r2, r3}
 8008060:	6879      	ldr	r1, [r7, #4]
 8008062:	f000 f85f 	bl	8008124 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8008066:	f107 0308 	add.w	r3, r7, #8
 800806a:	4619      	mov	r1, r3
 800806c:	4620      	mov	r0, r4
 800806e:	f7ff ffcb 	bl	8008008 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8008072:	f107 0308 	add.w	r3, r7, #8
 8008076:	4618      	mov	r0, r3
 8008078:	f000 fa0c 	bl	8008494 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800807c:	687b      	ldr	r3, [r7, #4]
 800807e:	f503 72a0 	add.w	r2, r3, #320	; 0x140
 8008082:	687b      	ldr	r3, [r7, #4]
 8008084:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
}
 8008088:	bf00      	nop
 800808a:	3724      	adds	r7, #36	; 0x24
 800808c:	46bd      	mov	sp, r7
 800808e:	bd90      	pop	{r4, r7, pc}
 8008090:	08008095 	.word	0x08008095

08008094 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8008094:	b580      	push	{r7, lr}
 8008096:	b084      	sub	sp, #16
 8008098:	af02      	add	r7, sp, #8
 800809a:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800809c:	687b      	ldr	r3, [r7, #4]
 800809e:	f503 719c 	add.w	r1, r3, #312	; 0x138
 80080a2:	687b      	ldr	r3, [r7, #4]
 80080a4:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
 80080a8:	461a      	mov	r2, r3
 80080aa:	687b      	ldr	r3, [r7, #4]
 80080ac:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 80080b0:	9300      	str	r3, [sp, #0]
 80080b2:	4b04      	ldr	r3, [pc, #16]	; (80080c4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x30>)
 80080b4:	4804      	ldr	r0, [pc, #16]	; (80080c8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x34>)
 80080b6:	f000 f867 	bl	8008188 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 80080ba:	bf00      	nop
 80080bc:	3708      	adds	r7, #8
 80080be:	46bd      	mov	sp, r7
 80080c0:	bd80      	pop	{r7, pc}
 80080c2:	bf00      	nop
 80080c4:	20026f40 	.word	0x20026f40
 80080c8:	20026f3c 	.word	0x20026f3c

080080cc <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 80080cc:	b480      	push	{r7}
 80080ce:	b083      	sub	sp, #12
 80080d0:	af00      	add	r7, sp, #0
 80080d2:	6078      	str	r0, [r7, #4]
 80080d4:	4a04      	ldr	r2, [pc, #16]	; (80080e8 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 80080d6:	687b      	ldr	r3, [r7, #4]
 80080d8:	601a      	str	r2, [r3, #0]
 80080da:	687b      	ldr	r3, [r7, #4]
 80080dc:	4618      	mov	r0, r3
 80080de:	370c      	adds	r7, #12
 80080e0:	46bd      	mov	sp, r7
 80080e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080e6:	4770      	bx	lr
 80080e8:	0801f6f8 	.word	0x0801f6f8

080080ec <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 80080ec:	b580      	push	{r7, lr}
 80080ee:	b082      	sub	sp, #8
 80080f0:	af00      	add	r7, sp, #0
 80080f2:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun_0(0)
 80080f4:	687b      	ldr	r3, [r7, #4]
 80080f6:	4618      	mov	r0, r3
 80080f8:	f7ff ffe8 	bl	80080cc <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 80080fc:	4a08      	ldr	r2, [pc, #32]	; (8008120 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 80080fe:	687b      	ldr	r3, [r7, #4]
 8008100:	601a      	str	r2, [r3, #0]
 8008102:	687b      	ldr	r3, [r7, #4]
 8008104:	2200      	movs	r2, #0
 8008106:	605a      	str	r2, [r3, #4]
 8008108:	687b      	ldr	r3, [r7, #4]
 800810a:	2200      	movs	r2, #0
 800810c:	609a      	str	r2, [r3, #8]
 800810e:	687b      	ldr	r3, [r7, #4]
 8008110:	2200      	movs	r2, #0
 8008112:	60da      	str	r2, [r3, #12]
    {
    }
 8008114:	687b      	ldr	r3, [r7, #4]
 8008116:	4618      	mov	r0, r3
 8008118:	3708      	adds	r7, #8
 800811a:	46bd      	mov	sp, r7
 800811c:	bd80      	pop	{r7, pc}
 800811e:	bf00      	nop
 8008120:	0801f670 	.word	0x0801f670

08008124 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pobject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes
     *                       zero arguments.
     */
    Callback(dest_type* pobject, void (dest_type::*pmemfun_0)())
 8008124:	b580      	push	{r7, lr}
 8008126:	b084      	sub	sp, #16
 8008128:	af00      	add	r7, sp, #0
 800812a:	60f8      	str	r0, [r7, #12]
 800812c:	60b9      	str	r1, [r7, #8]
 800812e:	4639      	mov	r1, r7
 8008130:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8008134:	68fb      	ldr	r3, [r7, #12]
 8008136:	4618      	mov	r0, r3
 8008138:	f7ff ffc8 	bl	80080cc <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800813c:	4a08      	ldr	r2, [pc, #32]	; (8008160 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 800813e:	68fb      	ldr	r3, [r7, #12]
 8008140:	601a      	str	r2, [r3, #0]
 8008142:	68fb      	ldr	r3, [r7, #12]
 8008144:	68ba      	ldr	r2, [r7, #8]
 8008146:	605a      	str	r2, [r3, #4]
 8008148:	68fb      	ldr	r3, [r7, #12]
 800814a:	3308      	adds	r3, #8
 800814c:	463a      	mov	r2, r7
 800814e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008152:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 8008156:	68fb      	ldr	r3, [r7, #12]
 8008158:	4618      	mov	r0, r3
 800815a:	3710      	adds	r7, #16
 800815c:	46bd      	mov	sp, r7
 800815e:	bd80      	pop	{r7, pc}
 8008160:	0801f670 	.word	0x0801f670

08008164 <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 8008164:	b580      	push	{r7, lr}
 8008166:	b082      	sub	sp, #8
 8008168:	af00      	add	r7, sp, #0
 800816a:	6078      	str	r0, [r7, #4]
 800816c:	687b      	ldr	r3, [r7, #4]
 800816e:	4618      	mov	r0, r3
 8008170:	f7ff fd9a 	bl	8007ca8 <_ZN8touchgfx10TransitionC1Ev>
 8008174:	4a03      	ldr	r2, [pc, #12]	; (8008184 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 8008176:	687b      	ldr	r3, [r7, #4]
 8008178:	601a      	str	r2, [r3, #0]
 800817a:	687b      	ldr	r3, [r7, #4]
 800817c:	4618      	mov	r0, r3
 800817e:	3708      	adds	r7, #8
 8008180:	46bd      	mov	sp, r7
 8008182:	bd80      	pop	{r7, pc}
 8008184:	0801f600 	.word	0x0801f600

08008188 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8008188:	b590      	push	{r4, r7, lr}
 800818a:	b08f      	sub	sp, #60	; 0x3c
 800818c:	af00      	add	r7, sp, #0
 800818e:	60f8      	str	r0, [r7, #12]
 8008190:	60b9      	str	r1, [r7, #8]
 8008192:	607a      	str	r2, [r7, #4]
 8008194:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8008196:	687b      	ldr	r3, [r7, #4]
 8008198:	689a      	ldr	r2, [r3, #8]
 800819a:	687b      	ldr	r3, [r7, #4]
 800819c:	689b      	ldr	r3, [r3, #8]
 800819e:	681b      	ldr	r3, [r3, #0]
 80081a0:	3320      	adds	r3, #32
 80081a2:	681b      	ldr	r3, [r3, #0]
 80081a4:	4610      	mov	r0, r2
 80081a6:	4798      	blx	r3
 80081a8:	4603      	mov	r3, r0
 80081aa:	f5b3 7f8a 	cmp.w	r3, #276	; 0x114
 80081ae:	d205      	bcs.n	80081bc <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 80081b0:	4b7e      	ldr	r3, [pc, #504]	; (80083ac <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 80081b2:	4a7f      	ldr	r2, [pc, #508]	; (80083b0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 80081b4:	21a3      	movs	r1, #163	; 0xa3
 80081b6:	487f      	ldr	r0, [pc, #508]	; (80083b4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 80081b8:	f015 fc38 	bl	801da2c <__assert_func>
 80081bc:	bf00      	nop
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80081be:	687b      	ldr	r3, [r7, #4]
 80081c0:	685a      	ldr	r2, [r3, #4]
 80081c2:	687b      	ldr	r3, [r7, #4]
 80081c4:	685b      	ldr	r3, [r3, #4]
 80081c6:	681b      	ldr	r3, [r3, #0]
 80081c8:	3320      	adds	r3, #32
 80081ca:	681b      	ldr	r3, [r3, #0]
 80081cc:	4610      	mov	r0, r2
 80081ce:	4798      	blx	r3
 80081d0:	4603      	mov	r3, r0
 80081d2:	2b0f      	cmp	r3, #15
 80081d4:	d805      	bhi.n	80081e2 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x5a>
 80081d6:	4b78      	ldr	r3, [pc, #480]	; (80083b8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 80081d8:	4a75      	ldr	r2, [pc, #468]	; (80083b0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 80081da:	21a4      	movs	r1, #164	; 0xa4
 80081dc:	4875      	ldr	r0, [pc, #468]	; (80083b4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 80081de:	f015 fc25 	bl	801da2c <__assert_func>
 80081e2:	bf00      	nop
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80081e4:	687b      	ldr	r3, [r7, #4]
 80081e6:	68da      	ldr	r2, [r3, #12]
 80081e8:	687b      	ldr	r3, [r7, #4]
 80081ea:	68db      	ldr	r3, [r3, #12]
 80081ec:	681b      	ldr	r3, [r3, #0]
 80081ee:	3320      	adds	r3, #32
 80081f0:	681b      	ldr	r3, [r3, #0]
 80081f2:	4610      	mov	r0, r2
 80081f4:	4798      	blx	r3
 80081f6:	4603      	mov	r3, r0
 80081f8:	2b0b      	cmp	r3, #11
 80081fa:	d805      	bhi.n	8008208 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x80>
 80081fc:	4b6f      	ldr	r3, [pc, #444]	; (80083bc <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x234>)
 80081fe:	4a6c      	ldr	r2, [pc, #432]	; (80083b0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008200:	21a5      	movs	r1, #165	; 0xa5
 8008202:	486c      	ldr	r0, [pc, #432]	; (80083b4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 8008204:	f015 fc12 	bl	801da2c <__assert_func>
 8008208:	bf00      	nop
 800820a:	68fb      	ldr	r3, [r7, #12]
 800820c:	62bb      	str	r3, [r7, #40]	; 0x28
 800820e:	68bb      	ldr	r3, [r7, #8]
 8008210:	627b      	str	r3, [r7, #36]	; 0x24
 8008212:	683b      	ldr	r3, [r7, #0]
 8008214:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 8008216:	f006 fe73 	bl	800ef00 <_ZN8touchgfx11Application11getInstanceEv>
 800821a:	4603      	mov	r3, r0
 800821c:	4618      	mov	r0, r3
 800821e:	f006 fe75 	bl	800ef0c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8008222:	6a3b      	ldr	r3, [r7, #32]
 8008224:	681b      	ldr	r3, [r3, #0]
 8008226:	2b00      	cmp	r3, #0
 8008228:	d008      	beq.n	800823c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb4>
        (*currentTrans)->tearDown();
 800822a:	6a3b      	ldr	r3, [r7, #32]
 800822c:	681a      	ldr	r2, [r3, #0]
 800822e:	6a3b      	ldr	r3, [r7, #32]
 8008230:	681b      	ldr	r3, [r3, #0]
 8008232:	681b      	ldr	r3, [r3, #0]
 8008234:	330c      	adds	r3, #12
 8008236:	681b      	ldr	r3, [r3, #0]
 8008238:	4610      	mov	r0, r2
 800823a:	4798      	blx	r3
    if (*currentTrans)
 800823c:	6a3b      	ldr	r3, [r7, #32]
 800823e:	681b      	ldr	r3, [r3, #0]
 8008240:	2b00      	cmp	r3, #0
 8008242:	d007      	beq.n	8008254 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xcc>
        (*currentTrans)->~Transition();
 8008244:	6a3b      	ldr	r3, [r7, #32]
 8008246:	681a      	ldr	r2, [r3, #0]
 8008248:	6a3b      	ldr	r3, [r7, #32]
 800824a:	681b      	ldr	r3, [r3, #0]
 800824c:	681b      	ldr	r3, [r3, #0]
 800824e:	681b      	ldr	r3, [r3, #0]
 8008250:	4610      	mov	r0, r2
 8008252:	4798      	blx	r3
    if (*currentScreen)
 8008254:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008256:	681b      	ldr	r3, [r3, #0]
 8008258:	2b00      	cmp	r3, #0
 800825a:	d008      	beq.n	800826e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe6>
        (*currentScreen)->tearDownScreen();
 800825c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800825e:	681a      	ldr	r2, [r3, #0]
 8008260:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008262:	681b      	ldr	r3, [r3, #0]
 8008264:	681b      	ldr	r3, [r3, #0]
 8008266:	3314      	adds	r3, #20
 8008268:	681b      	ldr	r3, [r3, #0]
 800826a:	4610      	mov	r0, r2
 800826c:	4798      	blx	r3
    if (*currentPresenter)
 800826e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008270:	681b      	ldr	r3, [r3, #0]
 8008272:	2b00      	cmp	r3, #0
 8008274:	d008      	beq.n	8008288 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x100>
        (*currentPresenter)->deactivate();
 8008276:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008278:	681a      	ldr	r2, [r3, #0]
 800827a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800827c:	681b      	ldr	r3, [r3, #0]
 800827e:	681b      	ldr	r3, [r3, #0]
 8008280:	3304      	adds	r3, #4
 8008282:	681b      	ldr	r3, [r3, #0]
 8008284:	4610      	mov	r0, r2
 8008286:	4798      	blx	r3
    if (*currentScreen)
 8008288:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800828a:	681b      	ldr	r3, [r3, #0]
 800828c:	2b00      	cmp	r3, #0
 800828e:	d007      	beq.n	80082a0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x118>
        (*currentScreen)->~Screen();
 8008290:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008292:	681a      	ldr	r2, [r3, #0]
 8008294:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008296:	681b      	ldr	r3, [r3, #0]
 8008298:	681b      	ldr	r3, [r3, #0]
 800829a:	681b      	ldr	r3, [r3, #0]
 800829c:	4610      	mov	r0, r2
 800829e:	4798      	blx	r3
    if (*currentPresenter)
 80082a0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80082a2:	681b      	ldr	r3, [r3, #0]
 80082a4:	2b00      	cmp	r3, #0
 80082a6:	d008      	beq.n	80082ba <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x132>
        (*currentPresenter)->~Presenter();
 80082a8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80082aa:	681a      	ldr	r2, [r3, #0]
 80082ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80082ae:	681b      	ldr	r3, [r3, #0]
 80082b0:	681b      	ldr	r3, [r3, #0]
 80082b2:	3308      	adds	r3, #8
 80082b4:	681b      	ldr	r3, [r3, #0]
 80082b6:	4610      	mov	r0, r2
 80082b8:	4798      	blx	r3
}
 80082ba:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80082bc:	687b      	ldr	r3, [r7, #4]
 80082be:	68db      	ldr	r3, [r3, #12]
 80082c0:	2100      	movs	r1, #0
 80082c2:	4618      	mov	r0, r3
 80082c4:	f000 f87c 	bl	80083c0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 80082c8:	4603      	mov	r3, r0
 80082ca:	4619      	mov	r1, r3
 80082cc:	200c      	movs	r0, #12
 80082ce:	f7ff fc0d 	bl	8007aec <_ZnwjPv>
 80082d2:	4604      	mov	r4, r0
 80082d4:	4620      	mov	r0, r4
 80082d6:	f7ff ff45 	bl	8008164 <_ZN8touchgfx12NoTransitionC1Ev>
 80082da:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80082dc:	687b      	ldr	r3, [r7, #4]
 80082de:	689b      	ldr	r3, [r3, #8]
 80082e0:	2100      	movs	r1, #0
 80082e2:	4618      	mov	r0, r3
 80082e4:	f000 f87f 	bl	80083e6 <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>
 80082e8:	4603      	mov	r3, r0
 80082ea:	4619      	mov	r1, r3
 80082ec:	f44f 708a 	mov.w	r0, #276	; 0x114
 80082f0:	f7ff fbfc 	bl	8007aec <_ZnwjPv>
 80082f4:	4604      	mov	r4, r0
 80082f6:	4620      	mov	r0, r4
 80082f8:	f001 fb58 	bl	80099ac <_ZN11Screen1ViewC1Ev>
 80082fc:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80082fe:	687b      	ldr	r3, [r7, #4]
 8008300:	685b      	ldr	r3, [r3, #4]
 8008302:	2100      	movs	r1, #0
 8008304:	4618      	mov	r0, r3
 8008306:	f000 f881 	bl	800840c <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>
 800830a:	4603      	mov	r3, r0
 800830c:	4619      	mov	r1, r3
 800830e:	2010      	movs	r0, #16
 8008310:	f7ff fbec 	bl	8007aec <_ZnwjPv>
 8008314:	4604      	mov	r4, r0
 8008316:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8008318:	4620      	mov	r0, r4
 800831a:	f001 faef 	bl	80098fc <_ZN16Screen1PresenterC1ER11Screen1View>
 800831e:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 8008320:	683b      	ldr	r3, [r7, #0]
 8008322:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8008324:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 8008326:	68bb      	ldr	r3, [r7, #8]
 8008328:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800832a:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800832c:	68fb      	ldr	r3, [r7, #12]
 800832e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8008330:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 8008332:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008334:	2b00      	cmp	r3, #0
 8008336:	d002      	beq.n	800833e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b6>
 8008338:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800833a:	3304      	adds	r3, #4
 800833c:	e000      	b.n	8008340 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b8>
 800833e:	2300      	movs	r3, #0
 8008340:	4619      	mov	r1, r3
 8008342:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 8008344:	f7ff fd9e 	bl	8007e84 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 8008348:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800834a:	3304      	adds	r3, #4
 800834c:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800834e:	4618      	mov	r0, r3
 8008350:	f7ff fe0b 	bl	8007f6a <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 8008354:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008356:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8008358:	4618      	mov	r0, r3
 800835a:	f000 f86a 	bl	8008432 <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>
 800835e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008360:	61fb      	str	r3, [r7, #28]
 8008362:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008364:	61bb      	str	r3, [r7, #24]
 8008366:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008368:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800836a:	69fb      	ldr	r3, [r7, #28]
 800836c:	681b      	ldr	r3, [r3, #0]
 800836e:	330c      	adds	r3, #12
 8008370:	681b      	ldr	r3, [r3, #0]
 8008372:	69f8      	ldr	r0, [r7, #28]
 8008374:	4798      	blx	r3
    newPresenter->activate();
 8008376:	69bb      	ldr	r3, [r7, #24]
 8008378:	681b      	ldr	r3, [r3, #0]
 800837a:	681b      	ldr	r3, [r3, #0]
 800837c:	69b8      	ldr	r0, [r7, #24]
 800837e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8008380:	6979      	ldr	r1, [r7, #20]
 8008382:	69f8      	ldr	r0, [r7, #28]
 8008384:	f008 f98e 	bl	80106a4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8008388:	697b      	ldr	r3, [r7, #20]
 800838a:	681b      	ldr	r3, [r3, #0]
 800838c:	3310      	adds	r3, #16
 800838e:	681b      	ldr	r3, [r3, #0]
 8008390:	6978      	ldr	r0, [r7, #20]
 8008392:	4798      	blx	r3
    newTransition->invalidate();
 8008394:	697b      	ldr	r3, [r7, #20]
 8008396:	681b      	ldr	r3, [r3, #0]
 8008398:	3314      	adds	r3, #20
 800839a:	681b      	ldr	r3, [r3, #0]
 800839c:	6978      	ldr	r0, [r7, #20]
 800839e:	4798      	blx	r3
}
 80083a0:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 80083a2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 80083a4:	4618      	mov	r0, r3
 80083a6:	373c      	adds	r7, #60	; 0x3c
 80083a8:	46bd      	mov	sp, r7
 80083aa:	bd90      	pop	{r4, r7, pc}
 80083ac:	0801eba4 	.word	0x0801eba4
 80083b0:	0801ec34 	.word	0x0801ec34
 80083b4:	0801ed38 	.word	0x0801ed38
 80083b8:	0801ed7c 	.word	0x0801ed7c
 80083bc:	0801ee20 	.word	0x0801ee20

080083c0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 80083c0:	b580      	push	{r7, lr}
 80083c2:	b082      	sub	sp, #8
 80083c4:	af00      	add	r7, sp, #0
 80083c6:	6078      	str	r0, [r7, #4]
 80083c8:	460b      	mov	r3, r1
 80083ca:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 80083cc:	687b      	ldr	r3, [r7, #4]
 80083ce:	681b      	ldr	r3, [r3, #0]
 80083d0:	3324      	adds	r3, #36	; 0x24
 80083d2:	681b      	ldr	r3, [r3, #0]
 80083d4:	887a      	ldrh	r2, [r7, #2]
 80083d6:	4611      	mov	r1, r2
 80083d8:	6878      	ldr	r0, [r7, #4]
 80083da:	4798      	blx	r3
 80083dc:	4603      	mov	r3, r0
    }
 80083de:	4618      	mov	r0, r3
 80083e0:	3708      	adds	r7, #8
 80083e2:	46bd      	mov	sp, r7
 80083e4:	bd80      	pop	{r7, pc}

080083e6 <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>:
    T& at(const uint16_t index)
 80083e6:	b580      	push	{r7, lr}
 80083e8:	b082      	sub	sp, #8
 80083ea:	af00      	add	r7, sp, #0
 80083ec:	6078      	str	r0, [r7, #4]
 80083ee:	460b      	mov	r3, r1
 80083f0:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 80083f2:	687b      	ldr	r3, [r7, #4]
 80083f4:	681b      	ldr	r3, [r3, #0]
 80083f6:	3324      	adds	r3, #36	; 0x24
 80083f8:	681b      	ldr	r3, [r3, #0]
 80083fa:	887a      	ldrh	r2, [r7, #2]
 80083fc:	4611      	mov	r1, r2
 80083fe:	6878      	ldr	r0, [r7, #4]
 8008400:	4798      	blx	r3
 8008402:	4603      	mov	r3, r0
    }
 8008404:	4618      	mov	r0, r3
 8008406:	3708      	adds	r7, #8
 8008408:	46bd      	mov	sp, r7
 800840a:	bd80      	pop	{r7, pc}

0800840c <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>:
    T& at(const uint16_t index)
 800840c:	b580      	push	{r7, lr}
 800840e:	b082      	sub	sp, #8
 8008410:	af00      	add	r7, sp, #0
 8008412:	6078      	str	r0, [r7, #4]
 8008414:	460b      	mov	r3, r1
 8008416:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8008418:	687b      	ldr	r3, [r7, #4]
 800841a:	681b      	ldr	r3, [r3, #0]
 800841c:	3324      	adds	r3, #36	; 0x24
 800841e:	681b      	ldr	r3, [r3, #0]
 8008420:	887a      	ldrh	r2, [r7, #2]
 8008422:	4611      	mov	r1, r2
 8008424:	6878      	ldr	r0, [r7, #4]
 8008426:	4798      	blx	r3
 8008428:	4603      	mov	r3, r0
    }
 800842a:	4618      	mov	r0, r3
 800842c:	3708      	adds	r7, #8
 800842e:	46bd      	mov	sp, r7
 8008430:	bd80      	pop	{r7, pc}

08008432 <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This
     * function is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
 8008432:	b480      	push	{r7}
 8008434:	b083      	sub	sp, #12
 8008436:	af00      	add	r7, sp, #0
 8008438:	6078      	str	r0, [r7, #4]
 800843a:	6039      	str	r1, [r7, #0]
    {
        this->presenter = &presenter;
 800843c:	687b      	ldr	r3, [r7, #4]
 800843e:	683a      	ldr	r2, [r7, #0]
 8008440:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 8008442:	bf00      	nop
 8008444:	370c      	adds	r7, #12
 8008446:	46bd      	mov	sp, r7
 8008448:	f85d 7b04 	ldr.w	r7, [sp], #4
 800844c:	4770      	bx	lr
	...

08008450 <_ZN8touchgfx12NoTransitionD1Ev>:
 8008450:	b580      	push	{r7, lr}
 8008452:	b082      	sub	sp, #8
 8008454:	af00      	add	r7, sp, #0
 8008456:	6078      	str	r0, [r7, #4]
 8008458:	4a05      	ldr	r2, [pc, #20]	; (8008470 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 800845a:	687b      	ldr	r3, [r7, #4]
 800845c:	601a      	str	r2, [r3, #0]
 800845e:	687b      	ldr	r3, [r7, #4]
 8008460:	4618      	mov	r0, r3
 8008462:	f7ff fc37 	bl	8007cd4 <_ZN8touchgfx10TransitionD1Ev>
 8008466:	687b      	ldr	r3, [r7, #4]
 8008468:	4618      	mov	r0, r3
 800846a:	3708      	adds	r7, #8
 800846c:	46bd      	mov	sp, r7
 800846e:	bd80      	pop	{r7, pc}
 8008470:	0801f600 	.word	0x0801f600

08008474 <_ZN8touchgfx12NoTransitionD0Ev>:
 8008474:	b580      	push	{r7, lr}
 8008476:	b082      	sub	sp, #8
 8008478:	af00      	add	r7, sp, #0
 800847a:	6078      	str	r0, [r7, #4]
 800847c:	6878      	ldr	r0, [r7, #4]
 800847e:	f7ff ffe7 	bl	8008450 <_ZN8touchgfx12NoTransitionD1Ev>
 8008482:	210c      	movs	r1, #12
 8008484:	6878      	ldr	r0, [r7, #4]
 8008486:	f015 faa2 	bl	801d9ce <_ZdlPvj>
 800848a:	687b      	ldr	r3, [r7, #4]
 800848c:	4618      	mov	r0, r3
 800848e:	3708      	adds	r7, #8
 8008490:	46bd      	mov	sp, r7
 8008492:	bd80      	pop	{r7, pc}

08008494 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8008494:	b580      	push	{r7, lr}
 8008496:	b082      	sub	sp, #8
 8008498:	af00      	add	r7, sp, #0
 800849a:	6078      	str	r0, [r7, #4]
 800849c:	4a05      	ldr	r2, [pc, #20]	; (80084b4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 800849e:	687b      	ldr	r3, [r7, #4]
 80084a0:	601a      	str	r2, [r3, #0]
 80084a2:	687b      	ldr	r3, [r7, #4]
 80084a4:	4618      	mov	r0, r3
 80084a6:	f7ff fbb7 	bl	8007c18 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 80084aa:	687b      	ldr	r3, [r7, #4]
 80084ac:	4618      	mov	r0, r3
 80084ae:	3708      	adds	r7, #8
 80084b0:	46bd      	mov	sp, r7
 80084b2:	bd80      	pop	{r7, pc}
 80084b4:	0801f670 	.word	0x0801f670

080084b8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 80084b8:	b580      	push	{r7, lr}
 80084ba:	b082      	sub	sp, #8
 80084bc:	af00      	add	r7, sp, #0
 80084be:	6078      	str	r0, [r7, #4]
 80084c0:	6878      	ldr	r0, [r7, #4]
 80084c2:	f7ff ffe7 	bl	8008494 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 80084c6:	2110      	movs	r1, #16
 80084c8:	6878      	ldr	r0, [r7, #4]
 80084ca:	f015 fa80 	bl	801d9ce <_ZdlPvj>
 80084ce:	687b      	ldr	r3, [r7, #4]
 80084d0:	4618      	mov	r0, r3
 80084d2:	3708      	adds	r7, #8
 80084d4:	46bd      	mov	sp, r7
 80084d6:	bd80      	pop	{r7, pc}

080084d8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80084d8:	b580      	push	{r7, lr}
 80084da:	b082      	sub	sp, #8
 80084dc:	af00      	add	r7, sp, #0
 80084de:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun_0)();
 80084e0:	687b      	ldr	r3, [r7, #4]
 80084e2:	685b      	ldr	r3, [r3, #4]
 80084e4:	687a      	ldr	r2, [r7, #4]
 80084e6:	68d2      	ldr	r2, [r2, #12]
 80084e8:	1052      	asrs	r2, r2, #1
 80084ea:	1899      	adds	r1, r3, r2
 80084ec:	687b      	ldr	r3, [r7, #4]
 80084ee:	68db      	ldr	r3, [r3, #12]
 80084f0:	f003 0301 	and.w	r3, r3, #1
 80084f4:	2b00      	cmp	r3, #0
 80084f6:	d102      	bne.n	80084fe <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 80084f8:	687b      	ldr	r3, [r7, #4]
 80084fa:	689b      	ldr	r3, [r3, #8]
 80084fc:	e00a      	b.n	8008514 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 80084fe:	687b      	ldr	r3, [r7, #4]
 8008500:	685b      	ldr	r3, [r3, #4]
 8008502:	687a      	ldr	r2, [r7, #4]
 8008504:	68d2      	ldr	r2, [r2, #12]
 8008506:	1052      	asrs	r2, r2, #1
 8008508:	4413      	add	r3, r2
 800850a:	681b      	ldr	r3, [r3, #0]
 800850c:	687a      	ldr	r2, [r7, #4]
 800850e:	6892      	ldr	r2, [r2, #8]
 8008510:	4413      	add	r3, r2
 8008512:	681b      	ldr	r3, [r3, #0]
 8008514:	4608      	mov	r0, r1
 8008516:	4798      	blx	r3
    }
 8008518:	bf00      	nop
 800851a:	3708      	adds	r7, #8
 800851c:	46bd      	mov	sp, r7
 800851e:	bd80      	pop	{r7, pc}

08008520 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8008520:	b480      	push	{r7}
 8008522:	b083      	sub	sp, #12
 8008524:	af00      	add	r7, sp, #0
 8008526:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 8008528:	687b      	ldr	r3, [r7, #4]
 800852a:	685b      	ldr	r3, [r3, #4]
 800852c:	2b00      	cmp	r3, #0
 800852e:	d010      	beq.n	8008552 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8008530:	687b      	ldr	r3, [r7, #4]
 8008532:	689b      	ldr	r3, [r3, #8]
 8008534:	2b00      	cmp	r3, #0
 8008536:	d107      	bne.n	8008548 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8008538:	687b      	ldr	r3, [r7, #4]
 800853a:	68db      	ldr	r3, [r3, #12]
 800853c:	f003 0301 	and.w	r3, r3, #1
 8008540:	2b00      	cmp	r3, #0
 8008542:	d101      	bne.n	8008548 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8008544:	2301      	movs	r3, #1
 8008546:	e000      	b.n	800854a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 8008548:	2300      	movs	r3, #0
 800854a:	2b01      	cmp	r3, #1
 800854c:	d001      	beq.n	8008552 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800854e:	2301      	movs	r3, #1
 8008550:	e000      	b.n	8008554 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 8008552:	2300      	movs	r3, #0
    }
 8008554:	4618      	mov	r0, r3
 8008556:	370c      	adds	r7, #12
 8008558:	46bd      	mov	sp, r7
 800855a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800855e:	4770      	bx	lr

08008560 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFrom24BitRGB
     */
    colortype(uint32_t col)
 8008560:	b480      	push	{r7}
 8008562:	b083      	sub	sp, #12
 8008564:	af00      	add	r7, sp, #0
 8008566:	6078      	str	r0, [r7, #4]
 8008568:	6039      	str	r1, [r7, #0]
        : color(col)
 800856a:	687b      	ldr	r3, [r7, #4]
 800856c:	683a      	ldr	r2, [r7, #0]
 800856e:	601a      	str	r2, [r3, #0]
    {
    }
 8008570:	687b      	ldr	r3, [r7, #4]
 8008572:	4618      	mov	r0, r3
 8008574:	370c      	adds	r7, #12
 8008576:	46bd      	mov	sp, r7
 8008578:	f85d 7b04 	ldr.w	r7, [sp], #4
 800857c:	4770      	bx	lr

0800857e <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 800857e:	b480      	push	{r7}
 8008580:	b083      	sub	sp, #12
 8008582:	af00      	add	r7, sp, #0
 8008584:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 8008586:	687b      	ldr	r3, [r7, #4]
 8008588:	2200      	movs	r2, #0
 800858a:	801a      	strh	r2, [r3, #0]
 800858c:	687b      	ldr	r3, [r7, #4]
 800858e:	2200      	movs	r2, #0
 8008590:	805a      	strh	r2, [r3, #2]
 8008592:	687b      	ldr	r3, [r7, #4]
 8008594:	2200      	movs	r2, #0
 8008596:	809a      	strh	r2, [r3, #4]
 8008598:	687b      	ldr	r3, [r7, #4]
 800859a:	2200      	movs	r2, #0
 800859c:	80da      	strh	r2, [r3, #6]
    {
    }
 800859e:	687b      	ldr	r3, [r7, #4]
 80085a0:	4618      	mov	r0, r3
 80085a2:	370c      	adds	r7, #12
 80085a4:	46bd      	mov	sp, r7
 80085a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085aa:	4770      	bx	lr

080085ac <_ZN8touchgfx6BitmapC1Et>:
     * Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
 80085ac:	b480      	push	{r7}
 80085ae:	b083      	sub	sp, #12
 80085b0:	af00      	add	r7, sp, #0
 80085b2:	6078      	str	r0, [r7, #4]
 80085b4:	460b      	mov	r3, r1
 80085b6:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 80085b8:	687b      	ldr	r3, [r7, #4]
 80085ba:	887a      	ldrh	r2, [r7, #2]
 80085bc:	801a      	strh	r2, [r3, #0]
    {
    }
 80085be:	687b      	ldr	r3, [r7, #4]
 80085c0:	4618      	mov	r0, r3
 80085c2:	370c      	adds	r7, #12
 80085c4:	46bd      	mov	sp, r7
 80085c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085ca:	4770      	bx	lr

080085cc <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 80085cc:	b580      	push	{r7, lr}
 80085ce:	b082      	sub	sp, #8
 80085d0:	af00      	add	r7, sp, #0
 80085d2:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 80085d4:	4a14      	ldr	r2, [pc, #80]	; (8008628 <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 80085d6:	687b      	ldr	r3, [r7, #4]
 80085d8:	601a      	str	r2, [r3, #0]
 80085da:	687b      	ldr	r3, [r7, #4]
 80085dc:	3304      	adds	r3, #4
 80085de:	4618      	mov	r0, r3
 80085e0:	f7ff ffcd 	bl	800857e <_ZN8touchgfx4RectC1Ev>
 80085e4:	687b      	ldr	r3, [r7, #4]
 80085e6:	330c      	adds	r3, #12
 80085e8:	4618      	mov	r0, r3
 80085ea:	f7ff ffc8 	bl	800857e <_ZN8touchgfx4RectC1Ev>
 80085ee:	687b      	ldr	r3, [r7, #4]
 80085f0:	2200      	movs	r2, #0
 80085f2:	615a      	str	r2, [r3, #20]
 80085f4:	687b      	ldr	r3, [r7, #4]
 80085f6:	2200      	movs	r2, #0
 80085f8:	619a      	str	r2, [r3, #24]
 80085fa:	687b      	ldr	r3, [r7, #4]
 80085fc:	2200      	movs	r2, #0
 80085fe:	61da      	str	r2, [r3, #28]
 8008600:	687b      	ldr	r3, [r7, #4]
 8008602:	2200      	movs	r2, #0
 8008604:	841a      	strh	r2, [r3, #32]
 8008606:	687b      	ldr	r3, [r7, #4]
 8008608:	2200      	movs	r2, #0
 800860a:	845a      	strh	r2, [r3, #34]	; 0x22
 800860c:	687b      	ldr	r3, [r7, #4]
 800860e:	2200      	movs	r2, #0
 8008610:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8008614:	687b      	ldr	r3, [r7, #4]
 8008616:	2201      	movs	r2, #1
 8008618:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    {
    }
 800861c:	687b      	ldr	r3, [r7, #4]
 800861e:	4618      	mov	r0, r3
 8008620:	3708      	adds	r7, #8
 8008622:	46bd      	mov	sp, r7
 8008624:	bd80      	pop	{r7, pc}
 8008626:	bf00      	nop
 8008628:	08020f8c 	.word	0x08020f8c

0800862c <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 800862c:	b480      	push	{r7}
 800862e:	b083      	sub	sp, #12
 8008630:	af00      	add	r7, sp, #0
 8008632:	6078      	str	r0, [r7, #4]
    {
 8008634:	4a04      	ldr	r2, [pc, #16]	; (8008648 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 8008636:	687b      	ldr	r3, [r7, #4]
 8008638:	601a      	str	r2, [r3, #0]
    }
 800863a:	687b      	ldr	r3, [r7, #4]
 800863c:	4618      	mov	r0, r3
 800863e:	370c      	adds	r7, #12
 8008640:	46bd      	mov	sp, r7
 8008642:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008646:	4770      	bx	lr
 8008648:	08020f8c 	.word	0x08020f8c

0800864c <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 800864c:	b580      	push	{r7, lr}
 800864e:	b082      	sub	sp, #8
 8008650:	af00      	add	r7, sp, #0
 8008652:	6078      	str	r0, [r7, #4]
    }
 8008654:	6878      	ldr	r0, [r7, #4]
 8008656:	f7ff ffe9 	bl	800862c <_ZN8touchgfx8DrawableD1Ev>
 800865a:	2128      	movs	r1, #40	; 0x28
 800865c:	6878      	ldr	r0, [r7, #4]
 800865e:	f015 f9b6 	bl	801d9ce <_ZdlPvj>
 8008662:	687b      	ldr	r3, [r7, #4]
 8008664:	4618      	mov	r0, r3
 8008666:	3708      	adds	r7, #8
 8008668:	46bd      	mov	sp, r7
 800866a:	bd80      	pop	{r7, pc}

0800866c <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 800866c:	b580      	push	{r7, lr}
 800866e:	b082      	sub	sp, #8
 8008670:	af00      	add	r7, sp, #0
 8008672:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 8008674:	687b      	ldr	r3, [r7, #4]
 8008676:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 800867a:	2b00      	cmp	r3, #0
 800867c:	d005      	beq.n	800868a <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 800867e:	687b      	ldr	r3, [r7, #4]
 8008680:	681b      	ldr	r3, [r3, #0]
 8008682:	3314      	adds	r3, #20
 8008684:	681b      	ldr	r3, [r3, #0]
 8008686:	6878      	ldr	r0, [r7, #4]
 8008688:	4798      	blx	r3
        }
    }
 800868a:	bf00      	nop
 800868c:	3708      	adds	r7, #8
 800868e:	46bd      	mov	sp, r7
 8008690:	bd80      	pop	{r7, pc}

08008692 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 8008692:	b480      	push	{r7}
 8008694:	b083      	sub	sp, #12
 8008696:	af00      	add	r7, sp, #0
 8008698:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800869a:	2300      	movs	r3, #0
    }
 800869c:	4618      	mov	r0, r3
 800869e:	370c      	adds	r7, #12
 80086a0:	46bd      	mov	sp, r7
 80086a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086a6:	4770      	bx	lr

080086a8 <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80086a8:	b580      	push	{r7, lr}
 80086aa:	b084      	sub	sp, #16
 80086ac:	af00      	add	r7, sp, #0
 80086ae:	60f8      	str	r0, [r7, #12]
 80086b0:	4608      	mov	r0, r1
 80086b2:	4611      	mov	r1, r2
 80086b4:	461a      	mov	r2, r3
 80086b6:	4603      	mov	r3, r0
 80086b8:	817b      	strh	r3, [r7, #10]
 80086ba:	460b      	mov	r3, r1
 80086bc:	813b      	strh	r3, [r7, #8]
 80086be:	4613      	mov	r3, r2
 80086c0:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 80086c2:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 80086c6:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80086ca:	4619      	mov	r1, r3
 80086cc:	68f8      	ldr	r0, [r7, #12]
 80086ce:	f000 f82a 	bl	8008726 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80086d2:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 80086d6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80086da:	4619      	mov	r1, r3
 80086dc:	68f8      	ldr	r0, [r7, #12]
 80086de:	f000 f87e 	bl	80087de <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 80086e2:	bf00      	nop
 80086e4:	3710      	adds	r7, #16
 80086e6:	46bd      	mov	sp, r7
 80086e8:	bd80      	pop	{r7, pc}

080086ea <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 80086ea:	b480      	push	{r7}
 80086ec:	b083      	sub	sp, #12
 80086ee:	af00      	add	r7, sp, #0
 80086f0:	6078      	str	r0, [r7, #4]
 80086f2:	460b      	mov	r3, r1
 80086f4:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 80086f6:	687b      	ldr	r3, [r7, #4]
 80086f8:	887a      	ldrh	r2, [r7, #2]
 80086fa:	809a      	strh	r2, [r3, #4]
    }
 80086fc:	bf00      	nop
 80086fe:	370c      	adds	r7, #12
 8008700:	46bd      	mov	sp, r7
 8008702:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008706:	4770      	bx	lr

08008708 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 8008708:	b480      	push	{r7}
 800870a:	b083      	sub	sp, #12
 800870c:	af00      	add	r7, sp, #0
 800870e:	6078      	str	r0, [r7, #4]
 8008710:	460b      	mov	r3, r1
 8008712:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 8008714:	687b      	ldr	r3, [r7, #4]
 8008716:	887a      	ldrh	r2, [r7, #2]
 8008718:	80da      	strh	r2, [r3, #6]
    }
 800871a:	bf00      	nop
 800871c:	370c      	adds	r7, #12
 800871e:	46bd      	mov	sp, r7
 8008720:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008724:	4770      	bx	lr

08008726 <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 8008726:	b580      	push	{r7, lr}
 8008728:	b082      	sub	sp, #8
 800872a:	af00      	add	r7, sp, #0
 800872c:	6078      	str	r0, [r7, #4]
 800872e:	460b      	mov	r3, r1
 8008730:	807b      	strh	r3, [r7, #2]
 8008732:	4613      	mov	r3, r2
 8008734:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 8008736:	687b      	ldr	r3, [r7, #4]
 8008738:	681b      	ldr	r3, [r3, #0]
 800873a:	3330      	adds	r3, #48	; 0x30
 800873c:	681b      	ldr	r3, [r3, #0]
 800873e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8008742:	4611      	mov	r1, r2
 8008744:	6878      	ldr	r0, [r7, #4]
 8008746:	4798      	blx	r3
        setY(y);
 8008748:	687b      	ldr	r3, [r7, #4]
 800874a:	681b      	ldr	r3, [r3, #0]
 800874c:	3334      	adds	r3, #52	; 0x34
 800874e:	681b      	ldr	r3, [r3, #0]
 8008750:	f9b7 2000 	ldrsh.w	r2, [r7]
 8008754:	4611      	mov	r1, r2
 8008756:	6878      	ldr	r0, [r7, #4]
 8008758:	4798      	blx	r3
    }
 800875a:	bf00      	nop
 800875c:	3708      	adds	r7, #8
 800875e:	46bd      	mov	sp, r7
 8008760:	bd80      	pop	{r7, pc}

08008762 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 8008762:	b480      	push	{r7}
 8008764:	b083      	sub	sp, #12
 8008766:	af00      	add	r7, sp, #0
 8008768:	6078      	str	r0, [r7, #4]
 800876a:	460b      	mov	r3, r1
 800876c:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 800876e:	687b      	ldr	r3, [r7, #4]
 8008770:	887a      	ldrh	r2, [r7, #2]
 8008772:	811a      	strh	r2, [r3, #8]
    }
 8008774:	bf00      	nop
 8008776:	370c      	adds	r7, #12
 8008778:	46bd      	mov	sp, r7
 800877a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800877e:	4770      	bx	lr

08008780 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 8008780:	b480      	push	{r7}
 8008782:	b083      	sub	sp, #12
 8008784:	af00      	add	r7, sp, #0
 8008786:	6078      	str	r0, [r7, #4]
 8008788:	460b      	mov	r3, r1
 800878a:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 800878c:	687b      	ldr	r3, [r7, #4]
 800878e:	887a      	ldrh	r2, [r7, #2]
 8008790:	815a      	strh	r2, [r3, #10]
    }
 8008792:	bf00      	nop
 8008794:	370c      	adds	r7, #12
 8008796:	46bd      	mov	sp, r7
 8008798:	f85d 7b04 	ldr.w	r7, [sp], #4
 800879c:	4770      	bx	lr

0800879e <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 800879e:	b480      	push	{r7}
 80087a0:	b083      	sub	sp, #12
 80087a2:	af00      	add	r7, sp, #0
 80087a4:	6078      	str	r0, [r7, #4]
    {
    }
 80087a6:	bf00      	nop
 80087a8:	370c      	adds	r7, #12
 80087aa:	46bd      	mov	sp, r7
 80087ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087b0:	4770      	bx	lr

080087b2 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 80087b2:	b480      	push	{r7}
 80087b4:	b083      	sub	sp, #12
 80087b6:	af00      	add	r7, sp, #0
 80087b8:	6078      	str	r0, [r7, #4]
 80087ba:	6039      	str	r1, [r7, #0]
    {
    }
 80087bc:	bf00      	nop
 80087be:	370c      	adds	r7, #12
 80087c0:	46bd      	mov	sp, r7
 80087c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087c6:	4770      	bx	lr

080087c8 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 80087c8:	b480      	push	{r7}
 80087ca:	b083      	sub	sp, #12
 80087cc:	af00      	add	r7, sp, #0
 80087ce:	6078      	str	r0, [r7, #4]
 80087d0:	6039      	str	r1, [r7, #0]
    {
    }
 80087d2:	bf00      	nop
 80087d4:	370c      	adds	r7, #12
 80087d6:	46bd      	mov	sp, r7
 80087d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087dc:	4770      	bx	lr

080087de <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 80087de:	b580      	push	{r7, lr}
 80087e0:	b082      	sub	sp, #8
 80087e2:	af00      	add	r7, sp, #0
 80087e4:	6078      	str	r0, [r7, #4]
 80087e6:	460b      	mov	r3, r1
 80087e8:	807b      	strh	r3, [r7, #2]
 80087ea:	4613      	mov	r3, r2
 80087ec:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 80087ee:	687b      	ldr	r3, [r7, #4]
 80087f0:	681b      	ldr	r3, [r3, #0]
 80087f2:	3338      	adds	r3, #56	; 0x38
 80087f4:	681b      	ldr	r3, [r3, #0]
 80087f6:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80087fa:	4611      	mov	r1, r2
 80087fc:	6878      	ldr	r0, [r7, #4]
 80087fe:	4798      	blx	r3
        setHeight(height);
 8008800:	687b      	ldr	r3, [r7, #4]
 8008802:	681b      	ldr	r3, [r3, #0]
 8008804:	333c      	adds	r3, #60	; 0x3c
 8008806:	681b      	ldr	r3, [r3, #0]
 8008808:	f9b7 2000 	ldrsh.w	r2, [r7]
 800880c:	4611      	mov	r1, r2
 800880e:	6878      	ldr	r0, [r7, #4]
 8008810:	4798      	blx	r3
    }
 8008812:	bf00      	nop
 8008814:	3708      	adds	r7, #8
 8008816:	46bd      	mov	sp, r7
 8008818:	bd80      	pop	{r7, pc}

0800881a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800881a:	b480      	push	{r7}
 800881c:	b083      	sub	sp, #12
 800881e:	af00      	add	r7, sp, #0
 8008820:	6078      	str	r0, [r7, #4]
 8008822:	6039      	str	r1, [r7, #0]
    {
    }
 8008824:	bf00      	nop
 8008826:	370c      	adds	r7, #12
 8008828:	46bd      	mov	sp, r7
 800882a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800882e:	4770      	bx	lr

08008830 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 8008830:	b480      	push	{r7}
 8008832:	b083      	sub	sp, #12
 8008834:	af00      	add	r7, sp, #0
 8008836:	6078      	str	r0, [r7, #4]
    {
    }
 8008838:	bf00      	nop
 800883a:	370c      	adds	r7, #12
 800883c:	46bd      	mov	sp, r7
 800883e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008842:	4770      	bx	lr

08008844 <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 8008844:	b480      	push	{r7}
 8008846:	b083      	sub	sp, #12
 8008848:	af00      	add	r7, sp, #0
 800884a:	6078      	str	r0, [r7, #4]
    {
        return visible;
 800884c:	687b      	ldr	r3, [r7, #4]
 800884e:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
    }
 8008852:	4618      	mov	r0, r3
 8008854:	370c      	adds	r7, #12
 8008856:	46bd      	mov	sp, r7
 8008858:	f85d 7b04 	ldr.w	r7, [sp], #4
 800885c:	4770      	bx	lr

0800885e <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 800885e:	b480      	push	{r7}
 8008860:	b083      	sub	sp, #12
 8008862:	af00      	add	r7, sp, #0
 8008864:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 8008866:	687b      	ldr	r3, [r7, #4]
 8008868:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    }
 800886c:	4618      	mov	r0, r3
 800886e:	370c      	adds	r7, #12
 8008870:	46bd      	mov	sp, r7
 8008872:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008876:	4770      	bx	lr

08008878 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8008878:	b580      	push	{r7, lr}
 800887a:	b082      	sub	sp, #8
 800887c:	af00      	add	r7, sp, #0
 800887e:	6078      	str	r0, [r7, #4]
 8008880:	460b      	mov	r3, r1
 8008882:	807b      	strh	r3, [r7, #2]
 8008884:	4613      	mov	r3, r2
 8008886:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 8008888:	687b      	ldr	r3, [r7, #4]
 800888a:	681b      	ldr	r3, [r3, #0]
 800888c:	3354      	adds	r3, #84	; 0x54
 800888e:	681b      	ldr	r3, [r3, #0]
 8008890:	8879      	ldrh	r1, [r7, #2]
 8008892:	687a      	ldr	r2, [r7, #4]
 8008894:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 8008898:	b292      	uxth	r2, r2
 800889a:	1a8a      	subs	r2, r1, r2
 800889c:	b292      	uxth	r2, r2
 800889e:	b210      	sxth	r0, r2
 80088a0:	8839      	ldrh	r1, [r7, #0]
 80088a2:	687a      	ldr	r2, [r7, #4]
 80088a4:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 80088a8:	b292      	uxth	r2, r2
 80088aa:	1a8a      	subs	r2, r1, r2
 80088ac:	b292      	uxth	r2, r2
 80088ae:	b212      	sxth	r2, r2
 80088b0:	4601      	mov	r1, r0
 80088b2:	6878      	ldr	r0, [r7, #4]
 80088b4:	4798      	blx	r3
    }
 80088b6:	bf00      	nop
 80088b8:	3708      	adds	r7, #8
 80088ba:	46bd      	mov	sp, r7
 80088bc:	bd80      	pop	{r7, pc}

080088be <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 80088be:	b480      	push	{r7}
 80088c0:	b083      	sub	sp, #12
 80088c2:	af00      	add	r7, sp, #0
 80088c4:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80088c6:	687b      	ldr	r3, [r7, #4]
 80088c8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80088cc:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80088ce:	687b      	ldr	r3, [r7, #4]
 80088d0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80088d4:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 80088d6:	687b      	ldr	r3, [r7, #4]
 80088d8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80088dc:	845a      	strh	r2, [r3, #34]	; 0x22
    }
 80088de:	bf00      	nop
 80088e0:	370c      	adds	r7, #12
 80088e2:	46bd      	mov	sp, r7
 80088e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088e8:	4770      	bx	lr

080088ea <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 80088ea:	b580      	push	{r7, lr}
 80088ec:	b084      	sub	sp, #16
 80088ee:	af00      	add	r7, sp, #0
 80088f0:	60f8      	str	r0, [r7, #12]
 80088f2:	60b9      	str	r1, [r7, #8]
 80088f4:	607a      	str	r2, [r7, #4]
    {
        resetDrawChainCache();
 80088f6:	68f8      	ldr	r0, [r7, #12]
 80088f8:	f7ff ffe1 	bl	80088be <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 80088fc:	687b      	ldr	r3, [r7, #4]
 80088fe:	681a      	ldr	r2, [r3, #0]
 8008900:	68fb      	ldr	r3, [r7, #12]
 8008902:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 8008904:	687b      	ldr	r3, [r7, #4]
 8008906:	68fa      	ldr	r2, [r7, #12]
 8008908:	601a      	str	r2, [r3, #0]
    }
 800890a:	bf00      	nop
 800890c:	3710      	adds	r7, #16
 800890e:	46bd      	mov	sp, r7
 8008910:	bd80      	pop	{r7, pc}
	...

08008914 <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 8008914:	b580      	push	{r7, lr}
 8008916:	b082      	sub	sp, #8
 8008918:	af00      	add	r7, sp, #0
 800891a:	6078      	str	r0, [r7, #4]
    {
 800891c:	4a06      	ldr	r2, [pc, #24]	; (8008938 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 800891e:	687b      	ldr	r3, [r7, #4]
 8008920:	601a      	str	r2, [r3, #0]
 8008922:	687b      	ldr	r3, [r7, #4]
 8008924:	3304      	adds	r3, #4
 8008926:	4618      	mov	r0, r3
 8008928:	f000 fc50 	bl	80091cc <_ZN8touchgfx9ContainerD1Ev>
    }
 800892c:	687b      	ldr	r3, [r7, #4]
 800892e:	4618      	mov	r0, r3
 8008930:	3708      	adds	r7, #8
 8008932:	46bd      	mov	sp, r7
 8008934:	bd80      	pop	{r7, pc}
 8008936:	bf00      	nop
 8008938:	08021088 	.word	0x08021088

0800893c <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 800893c:	b580      	push	{r7, lr}
 800893e:	b082      	sub	sp, #8
 8008940:	af00      	add	r7, sp, #0
 8008942:	6078      	str	r0, [r7, #4]
    }
 8008944:	6878      	ldr	r0, [r7, #4]
 8008946:	f7ff ffe5 	bl	8008914 <_ZN8touchgfx6ScreenD1Ev>
 800894a:	213c      	movs	r1, #60	; 0x3c
 800894c:	6878      	ldr	r0, [r7, #4]
 800894e:	f015 f83e 	bl	801d9ce <_ZdlPvj>
 8008952:	687b      	ldr	r3, [r7, #4]
 8008954:	4618      	mov	r0, r3
 8008956:	3708      	adds	r7, #8
 8008958:	46bd      	mov	sp, r7
 800895a:	bd80      	pop	{r7, pc}

0800895c <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 800895c:	b480      	push	{r7}
 800895e:	b083      	sub	sp, #12
 8008960:	af00      	add	r7, sp, #0
 8008962:	6078      	str	r0, [r7, #4]
    {
    }
 8008964:	bf00      	nop
 8008966:	370c      	adds	r7, #12
 8008968:	46bd      	mov	sp, r7
 800896a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800896e:	4770      	bx	lr

08008970 <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 8008970:	b480      	push	{r7}
 8008972:	b083      	sub	sp, #12
 8008974:	af00      	add	r7, sp, #0
 8008976:	6078      	str	r0, [r7, #4]
    {
    }
 8008978:	bf00      	nop
 800897a:	370c      	adds	r7, #12
 800897c:	46bd      	mov	sp, r7
 800897e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008982:	4770      	bx	lr

08008984 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 8008984:	b480      	push	{r7}
 8008986:	b083      	sub	sp, #12
 8008988:	af00      	add	r7, sp, #0
 800898a:	6078      	str	r0, [r7, #4]
    {
    }
 800898c:	bf00      	nop
 800898e:	370c      	adds	r7, #12
 8008990:	46bd      	mov	sp, r7
 8008992:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008996:	4770      	bx	lr

08008998 <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 8008998:	b480      	push	{r7}
 800899a:	b083      	sub	sp, #12
 800899c:	af00      	add	r7, sp, #0
 800899e:	6078      	str	r0, [r7, #4]
    {
    }
 80089a0:	bf00      	nop
 80089a2:	370c      	adds	r7, #12
 80089a4:	46bd      	mov	sp, r7
 80089a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089aa:	4770      	bx	lr

080089ac <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 80089ac:	b480      	push	{r7}
 80089ae:	b083      	sub	sp, #12
 80089b0:	af00      	add	r7, sp, #0
 80089b2:	6078      	str	r0, [r7, #4]
 80089b4:	460b      	mov	r3, r1
 80089b6:	70fb      	strb	r3, [r7, #3]
    {
    }
 80089b8:	bf00      	nop
 80089ba:	370c      	adds	r7, #12
 80089bc:	46bd      	mov	sp, r7
 80089be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089c2:	4770      	bx	lr

080089c4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 80089c4:	b580      	push	{r7, lr}
 80089c6:	b082      	sub	sp, #8
 80089c8:	af00      	add	r7, sp, #0
 80089ca:	6078      	str	r0, [r7, #4]
 80089cc:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 80089ce:	687b      	ldr	r3, [r7, #4]
 80089d0:	3304      	adds	r3, #4
 80089d2:	6839      	ldr	r1, [r7, #0]
 80089d4:	4618      	mov	r0, r3
 80089d6:	f003 f8cb 	bl	800bb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 80089da:	bf00      	nop
 80089dc:	3708      	adds	r7, #8
 80089de:	46bd      	mov	sp, r7
 80089e0:	bd80      	pop	{r7, pc}

080089e2 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param       x    Not used since this Widget is the only "child".
     * @param       y    Not used since this Widget is the only "child".
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
 80089e2:	b580      	push	{r7, lr}
 80089e4:	b084      	sub	sp, #16
 80089e6:	af00      	add	r7, sp, #0
 80089e8:	60f8      	str	r0, [r7, #12]
 80089ea:	607b      	str	r3, [r7, #4]
 80089ec:	460b      	mov	r3, r1
 80089ee:	817b      	strh	r3, [r7, #10]
 80089f0:	4613      	mov	r3, r2
 80089f2:	813b      	strh	r3, [r7, #8]
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 80089f4:	68fb      	ldr	r3, [r7, #12]
 80089f6:	4618      	mov	r0, r3
 80089f8:	f7ff ff24 	bl	8008844 <_ZNK8touchgfx8Drawable9isVisibleEv>
 80089fc:	4603      	mov	r3, r0
 80089fe:	2b00      	cmp	r3, #0
 8008a00:	d008      	beq.n	8008a14 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 8008a02:	68fb      	ldr	r3, [r7, #12]
 8008a04:	4618      	mov	r0, r3
 8008a06:	f7ff ff2a 	bl	800885e <_ZNK8touchgfx8Drawable11isTouchableEv>
 8008a0a:	4603      	mov	r3, r0
 8008a0c:	2b00      	cmp	r3, #0
 8008a0e:	d001      	beq.n	8008a14 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 8008a10:	2301      	movs	r3, #1
 8008a12:	e000      	b.n	8008a16 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 8008a14:	2300      	movs	r3, #0
 8008a16:	2b00      	cmp	r3, #0
 8008a18:	d002      	beq.n	8008a20 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 8008a1a:	68fa      	ldr	r2, [r7, #12]
 8008a1c:	687b      	ldr	r3, [r7, #4]
 8008a1e:	601a      	str	r2, [r3, #0]
        }
    }
 8008a20:	bf00      	nop
 8008a22:	3710      	adds	r7, #16
 8008a24:	46bd      	mov	sp, r7
 8008a26:	bd80      	pop	{r7, pc}

08008a28 <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 8008a28:	b580      	push	{r7, lr}
 8008a2a:	b082      	sub	sp, #8
 8008a2c:	af00      	add	r7, sp, #0
 8008a2e:	6078      	str	r0, [r7, #4]
 8008a30:	687b      	ldr	r3, [r7, #4]
 8008a32:	4618      	mov	r0, r3
 8008a34:	f7ff fdca 	bl	80085cc <_ZN8touchgfx8DrawableC1Ev>
 8008a38:	4a03      	ldr	r2, [pc, #12]	; (8008a48 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8008a3a:	687b      	ldr	r3, [r7, #4]
 8008a3c:	601a      	str	r2, [r3, #0]
 8008a3e:	687b      	ldr	r3, [r7, #4]
 8008a40:	4618      	mov	r0, r3
 8008a42:	3708      	adds	r7, #8
 8008a44:	46bd      	mov	sp, r7
 8008a46:	bd80      	pop	{r7, pc}
 8008a48:	0801f7a0 	.word	0x0801f7a0

08008a4c <_ZN8touchgfx6WidgetD1Ev>:
 8008a4c:	b580      	push	{r7, lr}
 8008a4e:	b082      	sub	sp, #8
 8008a50:	af00      	add	r7, sp, #0
 8008a52:	6078      	str	r0, [r7, #4]
 8008a54:	4a05      	ldr	r2, [pc, #20]	; (8008a6c <_ZN8touchgfx6WidgetD1Ev+0x20>)
 8008a56:	687b      	ldr	r3, [r7, #4]
 8008a58:	601a      	str	r2, [r3, #0]
 8008a5a:	687b      	ldr	r3, [r7, #4]
 8008a5c:	4618      	mov	r0, r3
 8008a5e:	f7ff fde5 	bl	800862c <_ZN8touchgfx8DrawableD1Ev>
 8008a62:	687b      	ldr	r3, [r7, #4]
 8008a64:	4618      	mov	r0, r3
 8008a66:	3708      	adds	r7, #8
 8008a68:	46bd      	mov	sp, r7
 8008a6a:	bd80      	pop	{r7, pc}
 8008a6c:	0801f7a0 	.word	0x0801f7a0

08008a70 <_ZN8touchgfx6WidgetD0Ev>:
 8008a70:	b580      	push	{r7, lr}
 8008a72:	b082      	sub	sp, #8
 8008a74:	af00      	add	r7, sp, #0
 8008a76:	6078      	str	r0, [r7, #4]
 8008a78:	6878      	ldr	r0, [r7, #4]
 8008a7a:	f7ff ffe7 	bl	8008a4c <_ZN8touchgfx6WidgetD1Ev>
 8008a7e:	2128      	movs	r1, #40	; 0x28
 8008a80:	6878      	ldr	r0, [r7, #4]
 8008a82:	f014 ffa4 	bl	801d9ce <_ZdlPvj>
 8008a86:	687b      	ldr	r3, [r7, #4]
 8008a88:	4618      	mov	r0, r3
 8008a8a:	3708      	adds	r7, #8
 8008a8c:	46bd      	mov	sp, r7
 8008a8e:	bd80      	pop	{r7, pc}

08008a90 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 8008a90:	b580      	push	{r7, lr}
 8008a92:	b082      	sub	sp, #8
 8008a94:	af00      	add	r7, sp, #0
 8008a96:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 8008a98:	687b      	ldr	r3, [r7, #4]
 8008a9a:	4618      	mov	r0, r3
 8008a9c:	2326      	movs	r3, #38	; 0x26
 8008a9e:	461a      	mov	r2, r3
 8008aa0:	2100      	movs	r1, #0
 8008aa2:	f015 f84f 	bl	801db44 <memset>
 8008aa6:	687b      	ldr	r3, [r7, #4]
 8008aa8:	4618      	mov	r0, r3
 8008aaa:	f7ff ffbd 	bl	8008a28 <_ZN8touchgfx6WidgetC1Ev>
 8008aae:	4a09      	ldr	r2, [pc, #36]	; (8008ad4 <_ZN8touchgfx3BoxC1Ev+0x44>)
 8008ab0:	687b      	ldr	r3, [r7, #4]
 8008ab2:	601a      	str	r2, [r3, #0]
 8008ab4:	687b      	ldr	r3, [r7, #4]
 8008ab6:	22ff      	movs	r2, #255	; 0xff
 8008ab8:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 8008abc:	687b      	ldr	r3, [r7, #4]
 8008abe:	3328      	adds	r3, #40	; 0x28
 8008ac0:	2100      	movs	r1, #0
 8008ac2:	4618      	mov	r0, r3
 8008ac4:	f7ff fd4c 	bl	8008560 <_ZN8touchgfx9colortypeC1Em>
    {
    }
 8008ac8:	687b      	ldr	r3, [r7, #4]
 8008aca:	4618      	mov	r0, r3
 8008acc:	3708      	adds	r7, #8
 8008ace:	46bd      	mov	sp, r7
 8008ad0:	bd80      	pop	{r7, pc}
 8008ad2:	bf00      	nop
 8008ad4:	0802094c 	.word	0x0802094c

08008ad8 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  color The color of the box.
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
 8008ad8:	b480      	push	{r7}
 8008ada:	b083      	sub	sp, #12
 8008adc:	af00      	add	r7, sp, #0
 8008ade:	6078      	str	r0, [r7, #4]
 8008ae0:	6039      	str	r1, [r7, #0]
    {
        this->color = color;
 8008ae2:	687b      	ldr	r3, [r7, #4]
 8008ae4:	683a      	ldr	r2, [r7, #0]
 8008ae6:	629a      	str	r2, [r3, #40]	; 0x28
    }
 8008ae8:	bf00      	nop
 8008aea:	370c      	adds	r7, #12
 8008aec:	46bd      	mov	sp, r7
 8008aee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008af2:	4770      	bx	lr

08008af4 <_ZN8touchgfx9TypedTextC1Et>:
    explicit TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 8008af4:	b480      	push	{r7}
 8008af6:	b083      	sub	sp, #12
 8008af8:	af00      	add	r7, sp, #0
 8008afa:	6078      	str	r0, [r7, #4]
 8008afc:	460b      	mov	r3, r1
 8008afe:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 8008b00:	4a06      	ldr	r2, [pc, #24]	; (8008b1c <_ZN8touchgfx9TypedTextC1Et+0x28>)
 8008b02:	687b      	ldr	r3, [r7, #4]
 8008b04:	601a      	str	r2, [r3, #0]
 8008b06:	687b      	ldr	r3, [r7, #4]
 8008b08:	887a      	ldrh	r2, [r7, #2]
 8008b0a:	809a      	strh	r2, [r3, #4]
    }
 8008b0c:	687b      	ldr	r3, [r7, #4]
 8008b0e:	4618      	mov	r0, r3
 8008b10:	370c      	adds	r7, #12
 8008b12:	46bd      	mov	sp, r7
 8008b14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b18:	4770      	bx	lr
 8008b1a:	bf00      	nop
 8008b1c:	0801f598 	.word	0x0801f598

08008b20 <_ZN8touchgfx14AbstractButtonD1Ev>:
/**
 * This class defines an abstract interface for button-like elements. A button is a clickable
 * element that has two states: pressed and released. A button also has an action that
 * is executed when the button goes from state pressed to state released.
 */
class AbstractButton : public Widget
 8008b20:	b580      	push	{r7, lr}
 8008b22:	b082      	sub	sp, #8
 8008b24:	af00      	add	r7, sp, #0
 8008b26:	6078      	str	r0, [r7, #4]
 8008b28:	4a05      	ldr	r2, [pc, #20]	; (8008b40 <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
 8008b2a:	687b      	ldr	r3, [r7, #4]
 8008b2c:	601a      	str	r2, [r3, #0]
 8008b2e:	687b      	ldr	r3, [r7, #4]
 8008b30:	4618      	mov	r0, r3
 8008b32:	f7ff ff8b 	bl	8008a4c <_ZN8touchgfx6WidgetD1Ev>
 8008b36:	687b      	ldr	r3, [r7, #4]
 8008b38:	4618      	mov	r0, r3
 8008b3a:	3708      	adds	r7, #8
 8008b3c:	46bd      	mov	sp, r7
 8008b3e:	bd80      	pop	{r7, pc}
 8008b40:	080208dc 	.word	0x080208dc

08008b44 <_ZN8touchgfx14AbstractButtonD0Ev>:
 8008b44:	b580      	push	{r7, lr}
 8008b46:	b082      	sub	sp, #8
 8008b48:	af00      	add	r7, sp, #0
 8008b4a:	6078      	str	r0, [r7, #4]
 8008b4c:	6878      	ldr	r0, [r7, #4]
 8008b4e:	f7ff ffe7 	bl	8008b20 <_ZN8touchgfx14AbstractButtonD1Ev>
 8008b52:	2130      	movs	r1, #48	; 0x30
 8008b54:	6878      	ldr	r0, [r7, #4]
 8008b56:	f014 ff3a 	bl	801d9ce <_ZdlPvj>
 8008b5a:	687b      	ldr	r3, [r7, #4]
 8008b5c:	4618      	mov	r0, r3
 8008b5e:	3708      	adds	r7, #8
 8008b60:	46bd      	mov	sp, r7
 8008b62:	bd80      	pop	{r7, pc}

08008b64 <_ZN8touchgfx9TypedTextaSERKS0_>:
class TypedText
 8008b64:	b480      	push	{r7}
 8008b66:	b083      	sub	sp, #12
 8008b68:	af00      	add	r7, sp, #0
 8008b6a:	6078      	str	r0, [r7, #4]
 8008b6c:	6039      	str	r1, [r7, #0]
 8008b6e:	683b      	ldr	r3, [r7, #0]
 8008b70:	889a      	ldrh	r2, [r3, #4]
 8008b72:	687b      	ldr	r3, [r7, #4]
 8008b74:	809a      	strh	r2, [r3, #4]
 8008b76:	687b      	ldr	r3, [r7, #4]
 8008b78:	4618      	mov	r0, r3
 8008b7a:	370c      	adds	r7, #12
 8008b7c:	46bd      	mov	sp, r7
 8008b7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b82:	4770      	bx	lr

08008b84 <_ZN8touchgfx15ButtonWithLabel12setLabelTextENS_9TypedTextE>:
     *
     * @param  t The text to display.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void setLabelText(TypedText t)
 8008b84:	b580      	push	{r7, lr}
 8008b86:	b082      	sub	sp, #8
 8008b88:	af00      	add	r7, sp, #0
 8008b8a:	6078      	str	r0, [r7, #4]
 8008b8c:	6039      	str	r1, [r7, #0]
    {
        typedText = t;
 8008b8e:	687b      	ldr	r3, [r7, #4]
 8008b90:	3334      	adds	r3, #52	; 0x34
 8008b92:	6839      	ldr	r1, [r7, #0]
 8008b94:	4618      	mov	r0, r3
 8008b96:	f7ff ffe5 	bl	8008b64 <_ZN8touchgfx9TypedTextaSERKS0_>
        updateTextPosition();
 8008b9a:	6878      	ldr	r0, [r7, #4]
 8008b9c:	f000 f820 	bl	8008be0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    }
 8008ba0:	bf00      	nop
 8008ba2:	3708      	adds	r7, #8
 8008ba4:	46bd      	mov	sp, r7
 8008ba6:	bd80      	pop	{r7, pc}

08008ba8 <_ZN8touchgfx15ButtonWithLabel13setLabelColorENS_9colortypeE>:
     *
     * @note If the button is currently in the normal, released state, the button should be forced
     *       to redraw itself. This is done by calling invalidate() on the ButtonWithLabel.
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void setLabelColor(colortype col)
 8008ba8:	b480      	push	{r7}
 8008baa:	b083      	sub	sp, #12
 8008bac:	af00      	add	r7, sp, #0
 8008bae:	6078      	str	r0, [r7, #4]
 8008bb0:	6039      	str	r1, [r7, #0]
    {
        color = col;
 8008bb2:	687b      	ldr	r3, [r7, #4]
 8008bb4:	683a      	ldr	r2, [r7, #0]
 8008bb6:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 8008bb8:	bf00      	nop
 8008bba:	370c      	adds	r7, #12
 8008bbc:	46bd      	mov	sp, r7
 8008bbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008bc2:	4770      	bx	lr

08008bc4 <_ZN8touchgfx15ButtonWithLabel20setLabelColorPressedENS_9colortypeE>:
     *
     * @note If the button is currently in the pressed state, the button should be forced to
     *       redraw itself. This is done by calling invalidate() on the ButtonWithLabel.
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void setLabelColorPressed(colortype col)
 8008bc4:	b480      	push	{r7}
 8008bc6:	b083      	sub	sp, #12
 8008bc8:	af00      	add	r7, sp, #0
 8008bca:	6078      	str	r0, [r7, #4]
 8008bcc:	6039      	str	r1, [r7, #0]
    {
        colorPressed = col;
 8008bce:	687b      	ldr	r3, [r7, #4]
 8008bd0:	683a      	ldr	r2, [r7, #0]
 8008bd2:	641a      	str	r2, [r3, #64]	; 0x40
    }
 8008bd4:	bf00      	nop
 8008bd6:	370c      	adds	r7, #12
 8008bd8:	46bd      	mov	sp, r7
 8008bda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008bde:	4770      	bx	lr

08008be0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8008be0:	b590      	push	{r4, r7, lr}
 8008be2:	b08d      	sub	sp, #52	; 0x34
 8008be4:	af00      	add	r7, sp, #0
 8008be6:	6078      	str	r0, [r7, #4]
    {
        if (typedText.hasValidId())
 8008be8:	687b      	ldr	r3, [r7, #4]
 8008bea:	3334      	adds	r3, #52	; 0x34
 8008bec:	627b      	str	r3, [r7, #36]	; 0x24
     *
     * @return Is the id valid.
     */
    FORCE_INLINE_FUNCTION bool hasValidId() const
    {
        return typedTextId < numberOfTypedTexts;
 8008bee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008bf0:	889a      	ldrh	r2, [r3, #4]
 8008bf2:	4b4a      	ldr	r3, [pc, #296]	; (8008d1c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x13c>)
 8008bf4:	881b      	ldrh	r3, [r3, #0]
 8008bf6:	429a      	cmp	r2, r3
 8008bf8:	bf34      	ite	cc
 8008bfa:	2301      	movcc	r3, #1
 8008bfc:	2300      	movcs	r3, #0
 8008bfe:	b2db      	uxtb	r3, r3
 8008c00:	2b00      	cmp	r3, #0
 8008c02:	f000 8083 	beq.w	8008d0c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x12c>
        {
            const Font* f = typedText.getFont();
 8008c06:	687b      	ldr	r3, [r7, #4]
 8008c08:	3334      	adds	r3, #52	; 0x34
 8008c0a:	617b      	str	r3, [r7, #20]
 8008c0c:	697b      	ldr	r3, [r7, #20]
 8008c0e:	613b      	str	r3, [r7, #16]
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008c10:	4b43      	ldr	r3, [pc, #268]	; (8008d20 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x140>)
 8008c12:	681b      	ldr	r3, [r3, #0]
 8008c14:	2b00      	cmp	r3, #0
 8008c16:	d105      	bne.n	8008c24 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x44>
 8008c18:	4b42      	ldr	r3, [pc, #264]	; (8008d24 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x144>)
 8008c1a:	4a43      	ldr	r2, [pc, #268]	; (8008d28 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x148>)
 8008c1c:	21ae      	movs	r1, #174	; 0xae
 8008c1e:	4843      	ldr	r0, [pc, #268]	; (8008d2c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x14c>)
 8008c20:	f014 ff04 	bl	801da2c <__assert_func>
 8008c24:	693b      	ldr	r3, [r7, #16]
 8008c26:	60fb      	str	r3, [r7, #12]
        return typedTextId < numberOfTypedTexts;
 8008c28:	68fb      	ldr	r3, [r7, #12]
 8008c2a:	889a      	ldrh	r2, [r3, #4]
 8008c2c:	4b3b      	ldr	r3, [pc, #236]	; (8008d1c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x13c>)
 8008c2e:	881b      	ldrh	r3, [r3, #0]
 8008c30:	429a      	cmp	r2, r3
 8008c32:	bf34      	ite	cc
 8008c34:	2301      	movcc	r3, #1
 8008c36:	2300      	movcs	r3, #0
 8008c38:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008c3a:	2b00      	cmp	r3, #0
 8008c3c:	d105      	bne.n	8008c4a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6a>
 8008c3e:	4b3c      	ldr	r3, [pc, #240]	; (8008d30 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x150>)
 8008c40:	4a39      	ldr	r2, [pc, #228]	; (8008d28 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x148>)
 8008c42:	21af      	movs	r1, #175	; 0xaf
 8008c44:	4839      	ldr	r0, [pc, #228]	; (8008d2c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x14c>)
 8008c46:	f014 fef1 	bl	801da2c <__assert_func>
 8008c4a:	bf00      	nop
    }
 8008c4c:	bf00      	nop
        return fonts[typedTexts[typedTextId].fontIdx];
 8008c4e:	4b39      	ldr	r3, [pc, #228]	; (8008d34 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x154>)
 8008c50:	681a      	ldr	r2, [r3, #0]
 8008c52:	4b33      	ldr	r3, [pc, #204]	; (8008d20 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x140>)
 8008c54:	6819      	ldr	r1, [r3, #0]
 8008c56:	697b      	ldr	r3, [r7, #20]
 8008c58:	889b      	ldrh	r3, [r3, #4]
 8008c5a:	005b      	lsls	r3, r3, #1
 8008c5c:	440b      	add	r3, r1
 8008c5e:	781b      	ldrb	r3, [r3, #0]
 8008c60:	009b      	lsls	r3, r3, #2
 8008c62:	4413      	add	r3, r2
 8008c64:	681b      	ldr	r3, [r3, #0]
 8008c66:	62fb      	str	r3, [r7, #44]	; 0x2c
            const Unicode::UnicodeChar* s = typedText.getText();
 8008c68:	687b      	ldr	r3, [r7, #4]
 8008c6a:	3334      	adds	r3, #52	; 0x34
 8008c6c:	623b      	str	r3, [r7, #32]
 8008c6e:	6a3b      	ldr	r3, [r7, #32]
 8008c70:	61fb      	str	r3, [r7, #28]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008c72:	4b2b      	ldr	r3, [pc, #172]	; (8008d20 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x140>)
 8008c74:	681b      	ldr	r3, [r3, #0]
 8008c76:	2b00      	cmp	r3, #0
 8008c78:	d105      	bne.n	8008c86 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0xa6>
 8008c7a:	4b2a      	ldr	r3, [pc, #168]	; (8008d24 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x144>)
 8008c7c:	4a2a      	ldr	r2, [pc, #168]	; (8008d28 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x148>)
 8008c7e:	21ae      	movs	r1, #174	; 0xae
 8008c80:	482a      	ldr	r0, [pc, #168]	; (8008d2c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x14c>)
 8008c82:	f014 fed3 	bl	801da2c <__assert_func>
 8008c86:	69fb      	ldr	r3, [r7, #28]
 8008c88:	61bb      	str	r3, [r7, #24]
        return typedTextId < numberOfTypedTexts;
 8008c8a:	69bb      	ldr	r3, [r7, #24]
 8008c8c:	889a      	ldrh	r2, [r3, #4]
 8008c8e:	4b23      	ldr	r3, [pc, #140]	; (8008d1c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x13c>)
 8008c90:	881b      	ldrh	r3, [r3, #0]
 8008c92:	429a      	cmp	r2, r3
 8008c94:	bf34      	ite	cc
 8008c96:	2301      	movcc	r3, #1
 8008c98:	2300      	movcs	r3, #0
 8008c9a:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008c9c:	2b00      	cmp	r3, #0
 8008c9e:	d105      	bne.n	8008cac <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0xcc>
 8008ca0:	4b23      	ldr	r3, [pc, #140]	; (8008d30 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x150>)
 8008ca2:	4a21      	ldr	r2, [pc, #132]	; (8008d28 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x148>)
 8008ca4:	21af      	movs	r1, #175	; 0xaf
 8008ca6:	4821      	ldr	r0, [pc, #132]	; (8008d2c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x14c>)
 8008ca8:	f014 fec0 	bl	801da2c <__assert_func>
 8008cac:	bf00      	nop
    }
 8008cae:	bf00      	nop
        return texts->getText(typedTextId);
 8008cb0:	4b21      	ldr	r3, [pc, #132]	; (8008d38 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x158>)
 8008cb2:	681a      	ldr	r2, [r3, #0]
 8008cb4:	6a3b      	ldr	r3, [r7, #32]
 8008cb6:	889b      	ldrh	r3, [r3, #4]
 8008cb8:	4619      	mov	r1, r3
 8008cba:	4610      	mov	r0, r2
 8008cbc:	f000 fcb8 	bl	8009630 <_ZNK8touchgfx5Texts7getTextEt>
 8008cc0:	4603      	mov	r3, r0
 8008cc2:	bf00      	nop
 8008cc4:	62bb      	str	r3, [r7, #40]	; 0x28
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8008cc6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008cc8:	681b      	ldr	r3, [r3, #0]
 8008cca:	3328      	adds	r3, #40	; 0x28
 8008ccc:	681b      	ldr	r3, [r3, #0]
 8008cce:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8008cd0:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8008cd2:	4798      	blx	r3
 8008cd4:	4603      	mov	r3, r0
 8008cd6:	b2dc      	uxtb	r4, r3
 8008cd8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008cda:	681b      	ldr	r3, [r3, #0]
 8008cdc:	3340      	adds	r3, #64	; 0x40
 8008cde:	681b      	ldr	r3, [r3, #0]
 8008ce0:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8008ce2:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8008ce4:	4798      	blx	r3
 8008ce6:	4603      	mov	r3, r0
 8008ce8:	b2db      	uxtb	r3, r3
 8008cea:	fb14 f303 	smulbb	r3, r4, r3
 8008cee:	b2dc      	uxtb	r4, r3
 8008cf0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008cf2:	681b      	ldr	r3, [r3, #0]
 8008cf4:	3324      	adds	r3, #36	; 0x24
 8008cf6:	681b      	ldr	r3, [r3, #0]
 8008cf8:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8008cfa:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8008cfc:	4798      	blx	r3
 8008cfe:	4603      	mov	r3, r0
 8008d00:	4423      	add	r3, r4
 8008d02:	b2da      	uxtb	r2, r3
 8008d04:	687b      	ldr	r3, [r7, #4]
 8008d06:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8008d0a:	e003      	b.n	8008d14 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x134>
            textHeightIncludingSpacing = 0;
 8008d0c:	687b      	ldr	r3, [r7, #4]
 8008d0e:	2200      	movs	r2, #0
 8008d10:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
    }
 8008d14:	bf00      	nop
 8008d16:	3734      	adds	r7, #52	; 0x34
 8008d18:	46bd      	mov	sp, r7
 8008d1a:	bd90      	pop	{r4, r7, pc}
 8008d1c:	20026f54 	.word	0x20026f54
 8008d20:	20026f50 	.word	0x20026f50
 8008d24:	0801eec4 	.word	0x0801eec4
 8008d28:	0801ef08 	.word	0x0801ef08
 8008d2c:	0801ef38 	.word	0x0801ef38
 8008d30:	0801ef7c 	.word	0x0801ef7c
 8008d34:	20026f58 	.word	0x20026f58
 8008d38:	20026f5c 	.word	0x20026f5c

08008d3c <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 8008d3c:	b580      	push	{r7, lr}
 8008d3e:	b082      	sub	sp, #8
 8008d40:	af00      	add	r7, sp, #0
 8008d42:	6078      	str	r0, [r7, #4]
 8008d44:	4a05      	ldr	r2, [pc, #20]	; (8008d5c <_ZN8touchgfx3BoxD1Ev+0x20>)
 8008d46:	687b      	ldr	r3, [r7, #4]
 8008d48:	601a      	str	r2, [r3, #0]
 8008d4a:	687b      	ldr	r3, [r7, #4]
 8008d4c:	4618      	mov	r0, r3
 8008d4e:	f7ff fe7d 	bl	8008a4c <_ZN8touchgfx6WidgetD1Ev>
 8008d52:	687b      	ldr	r3, [r7, #4]
 8008d54:	4618      	mov	r0, r3
 8008d56:	3708      	adds	r7, #8
 8008d58:	46bd      	mov	sp, r7
 8008d5a:	bd80      	pop	{r7, pc}
 8008d5c:	0802094c 	.word	0x0802094c

08008d60 <_ZN8touchgfx3BoxD0Ev>:
 8008d60:	b580      	push	{r7, lr}
 8008d62:	b082      	sub	sp, #8
 8008d64:	af00      	add	r7, sp, #0
 8008d66:	6078      	str	r0, [r7, #4]
 8008d68:	6878      	ldr	r0, [r7, #4]
 8008d6a:	f7ff ffe7 	bl	8008d3c <_ZN8touchgfx3BoxD1Ev>
 8008d6e:	212c      	movs	r1, #44	; 0x2c
 8008d70:	6878      	ldr	r0, [r7, #4]
 8008d72:	f014 fe2c 	bl	801d9ce <_ZdlPvj>
 8008d76:	687b      	ldr	r3, [r7, #4]
 8008d78:	4618      	mov	r0, r3
 8008d7a:	3708      	adds	r7, #8
 8008d7c:	46bd      	mov	sp, r7
 8008d7e:	bd80      	pop	{r7, pc}

08008d80 <_ZN8touchgfx13BoxWithBorderC1Ev>:
 * BoxWithBorder will function just like a Box.
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
 8008d80:	b580      	push	{r7, lr}
 8008d82:	b082      	sub	sp, #8
 8008d84:	af00      	add	r7, sp, #0
 8008d86:	6078      	str	r0, [r7, #4]
        : Box(), borderColor(0), borderSize(0)
 8008d88:	687b      	ldr	r3, [r7, #4]
 8008d8a:	4618      	mov	r0, r3
 8008d8c:	f7ff fe80 	bl	8008a90 <_ZN8touchgfx3BoxC1Ev>
 8008d90:	4a08      	ldr	r2, [pc, #32]	; (8008db4 <_ZN8touchgfx13BoxWithBorderC1Ev+0x34>)
 8008d92:	687b      	ldr	r3, [r7, #4]
 8008d94:	601a      	str	r2, [r3, #0]
 8008d96:	687b      	ldr	r3, [r7, #4]
 8008d98:	332c      	adds	r3, #44	; 0x2c
 8008d9a:	2100      	movs	r1, #0
 8008d9c:	4618      	mov	r0, r3
 8008d9e:	f7ff fbdf 	bl	8008560 <_ZN8touchgfx9colortypeC1Em>
 8008da2:	687b      	ldr	r3, [r7, #4]
 8008da4:	2200      	movs	r2, #0
 8008da6:	861a      	strh	r2, [r3, #48]	; 0x30
    {
    }
 8008da8:	687b      	ldr	r3, [r7, #4]
 8008daa:	4618      	mov	r0, r3
 8008dac:	3708      	adds	r7, #8
 8008dae:	46bd      	mov	sp, r7
 8008db0:	bd80      	pop	{r7, pc}
 8008db2:	bf00      	nop
 8008db4:	08020ac0 	.word	0x08020ac0

08008db8 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>:
     * Sets the color of the border drawn along the edge of the BoxWithBorder.
     *
     * @param  color The color of the border.
     * @see setColor, getBorderColor, Color::getColorFrom24BitRGB
     */
    void setBorderColor(colortype color)
 8008db8:	b480      	push	{r7}
 8008dba:	b083      	sub	sp, #12
 8008dbc:	af00      	add	r7, sp, #0
 8008dbe:	6078      	str	r0, [r7, #4]
 8008dc0:	6039      	str	r1, [r7, #0]
    {
        borderColor = color;
 8008dc2:	687b      	ldr	r3, [r7, #4]
 8008dc4:	683a      	ldr	r2, [r7, #0]
 8008dc6:	62da      	str	r2, [r3, #44]	; 0x2c
    }
 8008dc8:	bf00      	nop
 8008dca:	370c      	adds	r7, #12
 8008dcc:	46bd      	mov	sp, r7
 8008dce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008dd2:	4770      	bx	lr

08008dd4 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>:
     *
     * @param  size The width of the border.
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
 8008dd4:	b480      	push	{r7}
 8008dd6:	b083      	sub	sp, #12
 8008dd8:	af00      	add	r7, sp, #0
 8008dda:	6078      	str	r0, [r7, #4]
 8008ddc:	460b      	mov	r3, r1
 8008dde:	807b      	strh	r3, [r7, #2]
    {
        borderSize = size;
 8008de0:	687b      	ldr	r3, [r7, #4]
 8008de2:	887a      	ldrh	r2, [r7, #2]
 8008de4:	861a      	strh	r2, [r3, #48]	; 0x30
    }
 8008de6:	bf00      	nop
 8008de8:	370c      	adds	r7, #12
 8008dea:	46bd      	mov	sp, r7
 8008dec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008df0:	4770      	bx	lr
	...

08008df4 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>:
class View : public Screen
 8008df4:	b580      	push	{r7, lr}
 8008df6:	b082      	sub	sp, #8
 8008df8:	af00      	add	r7, sp, #0
 8008dfa:	6078      	str	r0, [r7, #4]
 8008dfc:	4a05      	ldr	r2, [pc, #20]	; (8008e14 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev+0x20>)
 8008dfe:	687b      	ldr	r3, [r7, #4]
 8008e00:	601a      	str	r2, [r3, #0]
 8008e02:	687b      	ldr	r3, [r7, #4]
 8008e04:	4618      	mov	r0, r3
 8008e06:	f7ff fd85 	bl	8008914 <_ZN8touchgfx6ScreenD1Ev>
 8008e0a:	687b      	ldr	r3, [r7, #4]
 8008e0c:	4618      	mov	r0, r3
 8008e0e:	3708      	adds	r7, #8
 8008e10:	46bd      	mov	sp, r7
 8008e12:	bd80      	pop	{r7, pc}
 8008e14:	0801f76c 	.word	0x0801f76c

08008e18 <_ZN8touchgfx4ViewI16Screen1PresenterED0Ev>:
 8008e18:	b580      	push	{r7, lr}
 8008e1a:	b082      	sub	sp, #8
 8008e1c:	af00      	add	r7, sp, #0
 8008e1e:	6078      	str	r0, [r7, #4]
 8008e20:	6878      	ldr	r0, [r7, #4]
 8008e22:	f7ff ffe7 	bl	8008df4 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 8008e26:	2140      	movs	r1, #64	; 0x40
 8008e28:	6878      	ldr	r0, [r7, #4]
 8008e2a:	f014 fdd0 	bl	801d9ce <_ZdlPvj>
 8008e2e:	687b      	ldr	r3, [r7, #4]
 8008e30:	4618      	mov	r0, r3
 8008e32:	3708      	adds	r7, #8
 8008e34:	46bd      	mov	sp, r7
 8008e36:	bd80      	pop	{r7, pc}

08008e38 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 8008e38:	b580      	push	{r7, lr}
 8008e3a:	b082      	sub	sp, #8
 8008e3c:	af00      	add	r7, sp, #0
 8008e3e:	6078      	str	r0, [r7, #4]
 8008e40:	4a0f      	ldr	r2, [pc, #60]	; (8008e80 <_ZN15Screen1ViewBaseD1Ev+0x48>)
 8008e42:	687b      	ldr	r3, [r7, #4]
 8008e44:	601a      	str	r2, [r3, #0]
 8008e46:	687b      	ldr	r3, [r7, #4]
 8008e48:	33e0      	adds	r3, #224	; 0xe0
 8008e4a:	4618      	mov	r0, r3
 8008e4c:	f000 fa2a 	bl	80092a4 <_ZN8touchgfx13BoxWithBorderD1Ev>
 8008e50:	687b      	ldr	r3, [r7, #4]
 8008e52:	3398      	adds	r3, #152	; 0x98
 8008e54:	4618      	mov	r0, r3
 8008e56:	f000 f9fd 	bl	8009254 <_ZN8touchgfx15ButtonWithLabelD1Ev>
 8008e5a:	687b      	ldr	r3, [r7, #4]
 8008e5c:	336c      	adds	r3, #108	; 0x6c
 8008e5e:	4618      	mov	r0, r3
 8008e60:	f7ff ff6c 	bl	8008d3c <_ZN8touchgfx3BoxD1Ev>
 8008e64:	687b      	ldr	r3, [r7, #4]
 8008e66:	3340      	adds	r3, #64	; 0x40
 8008e68:	4618      	mov	r0, r3
 8008e6a:	f7ff ff67 	bl	8008d3c <_ZN8touchgfx3BoxD1Ev>
 8008e6e:	687b      	ldr	r3, [r7, #4]
 8008e70:	4618      	mov	r0, r3
 8008e72:	f7ff ffbf 	bl	8008df4 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 8008e76:	687b      	ldr	r3, [r7, #4]
 8008e78:	4618      	mov	r0, r3
 8008e7a:	3708      	adds	r7, #8
 8008e7c:	46bd      	mov	sp, r7
 8008e7e:	bd80      	pop	{r7, pc}
 8008e80:	0801f738 	.word	0x0801f738

08008e84 <_ZN15Screen1ViewBaseD0Ev>:
 8008e84:	b580      	push	{r7, lr}
 8008e86:	b082      	sub	sp, #8
 8008e88:	af00      	add	r7, sp, #0
 8008e8a:	6078      	str	r0, [r7, #4]
 8008e8c:	6878      	ldr	r0, [r7, #4]
 8008e8e:	f7ff ffd3 	bl	8008e38 <_ZN15Screen1ViewBaseD1Ev>
 8008e92:	f44f 718a 	mov.w	r1, #276	; 0x114
 8008e96:	6878      	ldr	r0, [r7, #4]
 8008e98:	f014 fd99 	bl	801d9ce <_ZdlPvj>
 8008e9c:	687b      	ldr	r3, [r7, #4]
 8008e9e:	4618      	mov	r0, r3
 8008ea0:	3708      	adds	r7, #8
 8008ea2:	46bd      	mov	sp, r7
 8008ea4:	bd80      	pop	{r7, pc}
	...

08008ea8 <_ZN15Screen1ViewBaseC1Ev>:
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase()
 8008ea8:	b590      	push	{r4, r7, lr}
 8008eaa:	b095      	sub	sp, #84	; 0x54
 8008eac:	af02      	add	r7, sp, #8
 8008eae:	6078      	str	r0, [r7, #4]
 8008eb0:	687b      	ldr	r3, [r7, #4]
 8008eb2:	4618      	mov	r0, r3
 8008eb4:	f000 f974 	bl	80091a0 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>
 8008eb8:	4ab3      	ldr	r2, [pc, #716]	; (8009188 <_ZN15Screen1ViewBaseC1Ev+0x2e0>)
 8008eba:	687b      	ldr	r3, [r7, #4]
 8008ebc:	601a      	str	r2, [r3, #0]
 8008ebe:	687b      	ldr	r3, [r7, #4]
 8008ec0:	3340      	adds	r3, #64	; 0x40
 8008ec2:	4618      	mov	r0, r3
 8008ec4:	f7ff fde4 	bl	8008a90 <_ZN8touchgfx3BoxC1Ev>
 8008ec8:	687b      	ldr	r3, [r7, #4]
 8008eca:	336c      	adds	r3, #108	; 0x6c
 8008ecc:	4618      	mov	r0, r3
 8008ece:	f7ff fddf 	bl	8008a90 <_ZN8touchgfx3BoxC1Ev>
 8008ed2:	687b      	ldr	r3, [r7, #4]
 8008ed4:	3398      	adds	r3, #152	; 0x98
 8008ed6:	4618      	mov	r0, r3
 8008ed8:	f004 fb10 	bl	800d4fc <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008edc:	687b      	ldr	r3, [r7, #4]
 8008ede:	33e0      	adds	r3, #224	; 0xe0
 8008ee0:	4618      	mov	r0, r3
 8008ee2:	f7ff ff4d 	bl	8008d80 <_ZN8touchgfx13BoxWithBorderC1Ev>
{

    __background.setPosition(0, 0, 240, 320);
 8008ee6:	687b      	ldr	r3, [r7, #4]
 8008ee8:	f103 0040 	add.w	r0, r3, #64	; 0x40
 8008eec:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008ef0:	9300      	str	r3, [sp, #0]
 8008ef2:	23f0      	movs	r3, #240	; 0xf0
 8008ef4:	2200      	movs	r2, #0
 8008ef6:	2100      	movs	r1, #0
 8008ef8:	f7ff fbd6 	bl	80086a8 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 8008efc:	687b      	ldr	r3, [r7, #4]
 8008efe:	f103 0440 	add.w	r4, r3, #64	; 0x40
 8008f02:	2300      	movs	r3, #0
 8008f04:	f887 3038 	strb.w	r3, [r7, #56]	; 0x38
 8008f08:	2300      	movs	r3, #0
 8008f0a:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8008f0e:	2300      	movs	r3, #0
 8008f10:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 8008f14:	f897 3038 	ldrb.w	r3, [r7, #56]	; 0x38
 8008f18:	041b      	lsls	r3, r3, #16
 8008f1a:	461a      	mov	r2, r3
 8008f1c:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8008f20:	021b      	lsls	r3, r3, #8
 8008f22:	431a      	orrs	r2, r3
 8008f24:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 8008f28:	4313      	orrs	r3, r2
 8008f2a:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 8008f2e:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8008f32:	4611      	mov	r1, r2
 8008f34:	4618      	mov	r0, r3
 8008f36:	f7ff fb13 	bl	8008560 <_ZN8touchgfx9colortypeC1Em>
 8008f3a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008f3c:	4619      	mov	r1, r3
 8008f3e:	4620      	mov	r0, r4
 8008f40:	f7ff fdca 	bl	8008ad8 <_ZN8touchgfx3Box8setColorENS_9colortypeE>

    box1.setPosition(0, 0, 240, 320);
 8008f44:	687b      	ldr	r3, [r7, #4]
 8008f46:	f103 006c 	add.w	r0, r3, #108	; 0x6c
 8008f4a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008f4e:	9300      	str	r3, [sp, #0]
 8008f50:	23f0      	movs	r3, #240	; 0xf0
 8008f52:	2200      	movs	r2, #0
 8008f54:	2100      	movs	r1, #0
 8008f56:	f7ff fba7 	bl	80086a8 <_ZN8touchgfx8Drawable11setPositionEssss>
    box1.setColor(touchgfx::Color::getColorFromRGB(183, 139, 240));
 8008f5a:	687b      	ldr	r3, [r7, #4]
 8008f5c:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 8008f60:	23b7      	movs	r3, #183	; 0xb7
 8008f62:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
 8008f66:	238b      	movs	r3, #139	; 0x8b
 8008f68:	f887 303a 	strb.w	r3, [r7, #58]	; 0x3a
 8008f6c:	23f0      	movs	r3, #240	; 0xf0
 8008f6e:	f887 3039 	strb.w	r3, [r7, #57]	; 0x39
 8008f72:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8008f76:	041b      	lsls	r3, r3, #16
 8008f78:	461a      	mov	r2, r3
 8008f7a:	f897 303a 	ldrb.w	r3, [r7, #58]	; 0x3a
 8008f7e:	021b      	lsls	r3, r3, #8
 8008f80:	431a      	orrs	r2, r3
 8008f82:	f897 3039 	ldrb.w	r3, [r7, #57]	; 0x39
 8008f86:	4313      	orrs	r3, r2
 8008f88:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 8008f8c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8008f90:	4611      	mov	r1, r2
 8008f92:	4618      	mov	r0, r3
 8008f94:	f7ff fae4 	bl	8008560 <_ZN8touchgfx9colortypeC1Em>
 8008f98:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008f9a:	4619      	mov	r1, r3
 8008f9c:	4620      	mov	r0, r4
 8008f9e:	f7ff fd9b 	bl	8008ad8 <_ZN8touchgfx3Box8setColorENS_9colortypeE>

    buttonWithLabel1.setXY(35, 220);
 8008fa2:	687b      	ldr	r3, [r7, #4]
 8008fa4:	3398      	adds	r3, #152	; 0x98
 8008fa6:	22dc      	movs	r2, #220	; 0xdc
 8008fa8:	2123      	movs	r1, #35	; 0x23
 8008faa:	4618      	mov	r0, r3
 8008fac:	f7ff fbbb 	bl	8008726 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_PRESSED_ID));
 8008fb0:	687b      	ldr	r3, [r7, #4]
 8008fb2:	f103 0498 	add.w	r4, r3, #152	; 0x98
 8008fb6:	f107 030c 	add.w	r3, r7, #12
 8008fba:	2100      	movs	r1, #0
 8008fbc:	4618      	mov	r0, r3
 8008fbe:	f7ff faf5 	bl	80085ac <_ZN8touchgfx6BitmapC1Et>
 8008fc2:	f107 0310 	add.w	r3, r7, #16
 8008fc6:	2101      	movs	r1, #1
 8008fc8:	4618      	mov	r0, r3
 8008fca:	f7ff faef 	bl	80085ac <_ZN8touchgfx6BitmapC1Et>
 8008fce:	f107 0210 	add.w	r2, r7, #16
 8008fd2:	f107 030c 	add.w	r3, r7, #12
 8008fd6:	4619      	mov	r1, r3
 8008fd8:	4620      	mov	r0, r4
 8008fda:	f004 f873 	bl	800d0c4 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    buttonWithLabel1.setLabelText(touchgfx::TypedText(T___SINGLEUSE_HV1F));
 8008fde:	687b      	ldr	r3, [r7, #4]
 8008fe0:	f103 0498 	add.w	r4, r3, #152	; 0x98
 8008fe4:	f107 0314 	add.w	r3, r7, #20
 8008fe8:	2100      	movs	r1, #0
 8008fea:	4618      	mov	r0, r3
 8008fec:	f7ff fd82 	bl	8008af4 <_ZN8touchgfx9TypedTextC1Et>
 8008ff0:	f107 0314 	add.w	r3, r7, #20
 8008ff4:	4619      	mov	r1, r3
 8008ff6:	4620      	mov	r0, r4
 8008ff8:	f7ff fdc4 	bl	8008b84 <_ZN8touchgfx15ButtonWithLabel12setLabelTextENS_9TypedTextE>
 8008ffc:	f107 0314 	add.w	r3, r7, #20
 8009000:	4618      	mov	r0, r3
 8009002:	f7fe fb9f 	bl	8007744 <_ZN8touchgfx9TypedTextD1Ev>
    buttonWithLabel1.setLabelColor(touchgfx::Color::getColorFromRGB(229, 204, 237));
 8009006:	687b      	ldr	r3, [r7, #4]
 8009008:	f103 0498 	add.w	r4, r3, #152	; 0x98
 800900c:	23e5      	movs	r3, #229	; 0xe5
 800900e:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
 8009012:	23cc      	movs	r3, #204	; 0xcc
 8009014:	f887 303d 	strb.w	r3, [r7, #61]	; 0x3d
 8009018:	23ed      	movs	r3, #237	; 0xed
 800901a:	f887 303c 	strb.w	r3, [r7, #60]	; 0x3c
 800901e:	f897 303e 	ldrb.w	r3, [r7, #62]	; 0x3e
 8009022:	041b      	lsls	r3, r3, #16
 8009024:	461a      	mov	r2, r3
 8009026:	f897 303d 	ldrb.w	r3, [r7, #61]	; 0x3d
 800902a:	021b      	lsls	r3, r3, #8
 800902c:	431a      	orrs	r2, r3
 800902e:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 8009032:	4313      	orrs	r3, r2
 8009034:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 8009038:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800903c:	4611      	mov	r1, r2
 800903e:	4618      	mov	r0, r3
 8009040:	f7ff fa8e 	bl	8008560 <_ZN8touchgfx9colortypeC1Em>
 8009044:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009046:	4619      	mov	r1, r3
 8009048:	4620      	mov	r0, r4
 800904a:	f7ff fdad 	bl	8008ba8 <_ZN8touchgfx15ButtonWithLabel13setLabelColorENS_9colortypeE>
    buttonWithLabel1.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800904e:	687b      	ldr	r3, [r7, #4]
 8009050:	f103 0498 	add.w	r4, r3, #152	; 0x98
 8009054:	23ff      	movs	r3, #255	; 0xff
 8009056:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
 800905a:	23ff      	movs	r3, #255	; 0xff
 800905c:	f887 3040 	strb.w	r3, [r7, #64]	; 0x40
 8009060:	23ff      	movs	r3, #255	; 0xff
 8009062:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 8009066:	f897 3041 	ldrb.w	r3, [r7, #65]	; 0x41
 800906a:	041b      	lsls	r3, r3, #16
 800906c:	461a      	mov	r2, r3
 800906e:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 8009072:	021b      	lsls	r3, r3, #8
 8009074:	431a      	orrs	r2, r3
 8009076:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 800907a:	4313      	orrs	r3, r2
 800907c:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 8009080:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009084:	4611      	mov	r1, r2
 8009086:	4618      	mov	r0, r3
 8009088:	f7ff fa6a 	bl	8008560 <_ZN8touchgfx9colortypeC1Em>
 800908c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800908e:	4619      	mov	r1, r3
 8009090:	4620      	mov	r0, r4
 8009092:	f7ff fd97 	bl	8008bc4 <_ZN8touchgfx15ButtonWithLabel20setLabelColorPressedENS_9colortypeE>

    boxWithBorder1.setPosition(95, 92, 50, 50);
 8009096:	687b      	ldr	r3, [r7, #4]
 8009098:	f103 00e0 	add.w	r0, r3, #224	; 0xe0
 800909c:	2332      	movs	r3, #50	; 0x32
 800909e:	9300      	str	r3, [sp, #0]
 80090a0:	2332      	movs	r3, #50	; 0x32
 80090a2:	225c      	movs	r2, #92	; 0x5c
 80090a4:	215f      	movs	r1, #95	; 0x5f
 80090a6:	f7ff faff 	bl	80086a8 <_ZN8touchgfx8Drawable11setPositionEssss>
    boxWithBorder1.setColor(touchgfx::Color::getColorFromRGB(184, 66, 66));
 80090aa:	687b      	ldr	r3, [r7, #4]
 80090ac:	f103 04e0 	add.w	r4, r3, #224	; 0xe0
 80090b0:	23b8      	movs	r3, #184	; 0xb8
 80090b2:	f887 3044 	strb.w	r3, [r7, #68]	; 0x44
 80090b6:	2342      	movs	r3, #66	; 0x42
 80090b8:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 80090bc:	2342      	movs	r3, #66	; 0x42
 80090be:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 80090c2:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 80090c6:	041b      	lsls	r3, r3, #16
 80090c8:	461a      	mov	r2, r3
 80090ca:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 80090ce:	021b      	lsls	r3, r3, #8
 80090d0:	431a      	orrs	r2, r3
 80090d2:	f897 3042 	ldrb.w	r3, [r7, #66]	; 0x42
 80090d6:	4313      	orrs	r3, r2
 80090d8:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 80090dc:	f107 0320 	add.w	r3, r7, #32
 80090e0:	4611      	mov	r1, r2
 80090e2:	4618      	mov	r0, r3
 80090e4:	f7ff fa3c 	bl	8008560 <_ZN8touchgfx9colortypeC1Em>
 80090e8:	6a3b      	ldr	r3, [r7, #32]
 80090ea:	4619      	mov	r1, r3
 80090ec:	4620      	mov	r0, r4
 80090ee:	f7ff fcf3 	bl	8008ad8 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFromRGB(176, 182, 194));
 80090f2:	687b      	ldr	r3, [r7, #4]
 80090f4:	f103 04e0 	add.w	r4, r3, #224	; 0xe0
 80090f8:	23b0      	movs	r3, #176	; 0xb0
 80090fa:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 80090fe:	23b6      	movs	r3, #182	; 0xb6
 8009100:	f887 3046 	strb.w	r3, [r7, #70]	; 0x46
 8009104:	23c2      	movs	r3, #194	; 0xc2
 8009106:	f887 3045 	strb.w	r3, [r7, #69]	; 0x45
 800910a:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 800910e:	041b      	lsls	r3, r3, #16
 8009110:	461a      	mov	r2, r3
 8009112:	f897 3046 	ldrb.w	r3, [r7, #70]	; 0x46
 8009116:	021b      	lsls	r3, r3, #8
 8009118:	431a      	orrs	r2, r3
 800911a:	f897 3045 	ldrb.w	r3, [r7, #69]	; 0x45
 800911e:	4313      	orrs	r3, r2
 8009120:	f043 427f 	orr.w	r2, r3, #4278190080	; 0xff000000
 8009124:	f107 031c 	add.w	r3, r7, #28
 8009128:	4611      	mov	r1, r2
 800912a:	4618      	mov	r0, r3
 800912c:	f7ff fa18 	bl	8008560 <_ZN8touchgfx9colortypeC1Em>
 8009130:	69fb      	ldr	r3, [r7, #28]
 8009132:	4619      	mov	r1, r3
 8009134:	4620      	mov	r0, r4
 8009136:	f7ff fe3f 	bl	8008db8 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>
    boxWithBorder1.setBorderSize(5);
 800913a:	687b      	ldr	r3, [r7, #4]
 800913c:	33e0      	adds	r3, #224	; 0xe0
 800913e:	2105      	movs	r1, #5
 8009140:	4618      	mov	r0, r3
 8009142:	f7ff fe47 	bl	8008dd4 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>

    add(__background);
 8009146:	687a      	ldr	r2, [r7, #4]
 8009148:	687b      	ldr	r3, [r7, #4]
 800914a:	3340      	adds	r3, #64	; 0x40
 800914c:	4619      	mov	r1, r3
 800914e:	4610      	mov	r0, r2
 8009150:	f7ff fc38 	bl	80089c4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(box1);
 8009154:	687a      	ldr	r2, [r7, #4]
 8009156:	687b      	ldr	r3, [r7, #4]
 8009158:	336c      	adds	r3, #108	; 0x6c
 800915a:	4619      	mov	r1, r3
 800915c:	4610      	mov	r0, r2
 800915e:	f7ff fc31 	bl	80089c4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(buttonWithLabel1);
 8009162:	687a      	ldr	r2, [r7, #4]
 8009164:	687b      	ldr	r3, [r7, #4]
 8009166:	3398      	adds	r3, #152	; 0x98
 8009168:	4619      	mov	r1, r3
 800916a:	4610      	mov	r0, r2
 800916c:	f7ff fc2a 	bl	80089c4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(boxWithBorder1);
 8009170:	687a      	ldr	r2, [r7, #4]
 8009172:	687b      	ldr	r3, [r7, #4]
 8009174:	33e0      	adds	r3, #224	; 0xe0
 8009176:	4619      	mov	r1, r3
 8009178:	4610      	mov	r0, r2
 800917a:	f7ff fc23 	bl	80089c4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800917e:	687b      	ldr	r3, [r7, #4]
 8009180:	4618      	mov	r0, r3
 8009182:	374c      	adds	r7, #76	; 0x4c
 8009184:	46bd      	mov	sp, r7
 8009186:	bd90      	pop	{r4, r7, pc}
 8009188:	0801f738 	.word	0x0801f738

0800918c <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{
 800918c:	b480      	push	{r7}
 800918e:	b083      	sub	sp, #12
 8009190:	af00      	add	r7, sp, #0
 8009192:	6078      	str	r0, [r7, #4]

}
 8009194:	bf00      	nop
 8009196:	370c      	adds	r7, #12
 8009198:	46bd      	mov	sp, r7
 800919a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800919e:	4770      	bx	lr

080091a0 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>:
    View()
 80091a0:	b580      	push	{r7, lr}
 80091a2:	b082      	sub	sp, #8
 80091a4:	af00      	add	r7, sp, #0
 80091a6:	6078      	str	r0, [r7, #4]
        : presenter(0)
 80091a8:	687b      	ldr	r3, [r7, #4]
 80091aa:	4618      	mov	r0, r3
 80091ac:	f007 f8ce 	bl	801034c <_ZN8touchgfx6ScreenC1Ev>
 80091b0:	4a05      	ldr	r2, [pc, #20]	; (80091c8 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev+0x28>)
 80091b2:	687b      	ldr	r3, [r7, #4]
 80091b4:	601a      	str	r2, [r3, #0]
 80091b6:	687b      	ldr	r3, [r7, #4]
 80091b8:	2200      	movs	r2, #0
 80091ba:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 80091bc:	687b      	ldr	r3, [r7, #4]
 80091be:	4618      	mov	r0, r3
 80091c0:	3708      	adds	r7, #8
 80091c2:	46bd      	mov	sp, r7
 80091c4:	bd80      	pop	{r7, pc}
 80091c6:	bf00      	nop
 80091c8:	0801f76c 	.word	0x0801f76c

080091cc <_ZN8touchgfx9ContainerD1Ev>:
 * intersect with the geometry of the container will be visible (e.g. setting a
 * container's width to 0 will render all children invisible).
 *
 * @see Drawable
 */
class Container : public Drawable
 80091cc:	b580      	push	{r7, lr}
 80091ce:	b082      	sub	sp, #8
 80091d0:	af00      	add	r7, sp, #0
 80091d2:	6078      	str	r0, [r7, #4]
 80091d4:	4a05      	ldr	r2, [pc, #20]	; (80091ec <_ZN8touchgfx9ContainerD1Ev+0x20>)
 80091d6:	687b      	ldr	r3, [r7, #4]
 80091d8:	601a      	str	r2, [r3, #0]
 80091da:	687b      	ldr	r3, [r7, #4]
 80091dc:	4618      	mov	r0, r3
 80091de:	f7ff fa25 	bl	800862c <_ZN8touchgfx8DrawableD1Ev>
 80091e2:	687b      	ldr	r3, [r7, #4]
 80091e4:	4618      	mov	r0, r3
 80091e6:	3708      	adds	r7, #8
 80091e8:	46bd      	mov	sp, r7
 80091ea:	bd80      	pop	{r7, pc}
 80091ec:	0801ff34 	.word	0x0801ff34

080091f0 <_ZN8touchgfx9ContainerD0Ev>:
 80091f0:	b580      	push	{r7, lr}
 80091f2:	b082      	sub	sp, #8
 80091f4:	af00      	add	r7, sp, #0
 80091f6:	6078      	str	r0, [r7, #4]
 80091f8:	6878      	ldr	r0, [r7, #4]
 80091fa:	f7ff ffe7 	bl	80091cc <_ZN8touchgfx9ContainerD1Ev>
 80091fe:	212c      	movs	r1, #44	; 0x2c
 8009200:	6878      	ldr	r0, [r7, #4]
 8009202:	f014 fbe4 	bl	801d9ce <_ZdlPvj>
 8009206:	687b      	ldr	r3, [r7, #4]
 8009208:	4618      	mov	r0, r3
 800920a:	3708      	adds	r7, #8
 800920c:	46bd      	mov	sp, r7
 800920e:	bd80      	pop	{r7, pc}

08009210 <_ZN8touchgfx6ButtonD1Ev>:
{
/**
 * A button with two images. One image showing the unpressed button and one image showing the
 * pressed state.
 */
class Button : public AbstractButton
 8009210:	b580      	push	{r7, lr}
 8009212:	b082      	sub	sp, #8
 8009214:	af00      	add	r7, sp, #0
 8009216:	6078      	str	r0, [r7, #4]
 8009218:	4a05      	ldr	r2, [pc, #20]	; (8009230 <_ZN8touchgfx6ButtonD1Ev+0x20>)
 800921a:	687b      	ldr	r3, [r7, #4]
 800921c:	601a      	str	r2, [r3, #0]
 800921e:	687b      	ldr	r3, [r7, #4]
 8009220:	4618      	mov	r0, r3
 8009222:	f7ff fc7d 	bl	8008b20 <_ZN8touchgfx14AbstractButtonD1Ev>
 8009226:	687b      	ldr	r3, [r7, #4]
 8009228:	4618      	mov	r0, r3
 800922a:	3708      	adds	r7, #8
 800922c:	46bd      	mov	sp, r7
 800922e:	bd80      	pop	{r7, pc}
 8009230:	08020a18 	.word	0x08020a18

08009234 <_ZN8touchgfx6ButtonD0Ev>:
 8009234:	b580      	push	{r7, lr}
 8009236:	b082      	sub	sp, #8
 8009238:	af00      	add	r7, sp, #0
 800923a:	6078      	str	r0, [r7, #4]
 800923c:	6878      	ldr	r0, [r7, #4]
 800923e:	f7ff ffe7 	bl	8009210 <_ZN8touchgfx6ButtonD1Ev>
 8009242:	2134      	movs	r1, #52	; 0x34
 8009244:	6878      	ldr	r0, [r7, #4]
 8009246:	f014 fbc2 	bl	801d9ce <_ZdlPvj>
 800924a:	687b      	ldr	r3, [r7, #4]
 800924c:	4618      	mov	r0, r3
 800924e:	3708      	adds	r7, #8
 8009250:	46bd      	mov	sp, r7
 8009252:	bd80      	pop	{r7, pc}

08009254 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
class ButtonWithLabel : public Button
 8009254:	b580      	push	{r7, lr}
 8009256:	b082      	sub	sp, #8
 8009258:	af00      	add	r7, sp, #0
 800925a:	6078      	str	r0, [r7, #4]
 800925c:	4a08      	ldr	r2, [pc, #32]	; (8009280 <_ZN8touchgfx15ButtonWithLabelD1Ev+0x2c>)
 800925e:	687b      	ldr	r3, [r7, #4]
 8009260:	601a      	str	r2, [r3, #0]
 8009262:	687b      	ldr	r3, [r7, #4]
 8009264:	3334      	adds	r3, #52	; 0x34
 8009266:	4618      	mov	r0, r3
 8009268:	f7fe fa6c 	bl	8007744 <_ZN8touchgfx9TypedTextD1Ev>
 800926c:	687b      	ldr	r3, [r7, #4]
 800926e:	4618      	mov	r0, r3
 8009270:	f7ff ffce 	bl	8009210 <_ZN8touchgfx6ButtonD1Ev>
 8009274:	687b      	ldr	r3, [r7, #4]
 8009276:	4618      	mov	r0, r3
 8009278:	3708      	adds	r7, #8
 800927a:	46bd      	mov	sp, r7
 800927c:	bd80      	pop	{r7, pc}
 800927e:	bf00      	nop
 8009280:	08020bd4 	.word	0x08020bd4

08009284 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 8009284:	b580      	push	{r7, lr}
 8009286:	b082      	sub	sp, #8
 8009288:	af00      	add	r7, sp, #0
 800928a:	6078      	str	r0, [r7, #4]
 800928c:	6878      	ldr	r0, [r7, #4]
 800928e:	f7ff ffe1 	bl	8009254 <_ZN8touchgfx15ButtonWithLabelD1Ev>
 8009292:	2148      	movs	r1, #72	; 0x48
 8009294:	6878      	ldr	r0, [r7, #4]
 8009296:	f014 fb9a 	bl	801d9ce <_ZdlPvj>
 800929a:	687b      	ldr	r3, [r7, #4]
 800929c:	4618      	mov	r0, r3
 800929e:	3708      	adds	r7, #8
 80092a0:	46bd      	mov	sp, r7
 80092a2:	bd80      	pop	{r7, pc}

080092a4 <_ZN8touchgfx13BoxWithBorderD1Ev>:
class BoxWithBorder : public Box
 80092a4:	b580      	push	{r7, lr}
 80092a6:	b082      	sub	sp, #8
 80092a8:	af00      	add	r7, sp, #0
 80092aa:	6078      	str	r0, [r7, #4]
 80092ac:	4a05      	ldr	r2, [pc, #20]	; (80092c4 <_ZN8touchgfx13BoxWithBorderD1Ev+0x20>)
 80092ae:	687b      	ldr	r3, [r7, #4]
 80092b0:	601a      	str	r2, [r3, #0]
 80092b2:	687b      	ldr	r3, [r7, #4]
 80092b4:	4618      	mov	r0, r3
 80092b6:	f7ff fd41 	bl	8008d3c <_ZN8touchgfx3BoxD1Ev>
 80092ba:	687b      	ldr	r3, [r7, #4]
 80092bc:	4618      	mov	r0, r3
 80092be:	3708      	adds	r7, #8
 80092c0:	46bd      	mov	sp, r7
 80092c2:	bd80      	pop	{r7, pc}
 80092c4:	08020ac0 	.word	0x08020ac0

080092c8 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 80092c8:	b580      	push	{r7, lr}
 80092ca:	b082      	sub	sp, #8
 80092cc:	af00      	add	r7, sp, #0
 80092ce:	6078      	str	r0, [r7, #4]
 80092d0:	6878      	ldr	r0, [r7, #4]
 80092d2:	f7ff ffe7 	bl	80092a4 <_ZN8touchgfx13BoxWithBorderD1Ev>
 80092d6:	2134      	movs	r1, #52	; 0x34
 80092d8:	6878      	ldr	r0, [r7, #4]
 80092da:	f014 fb78 	bl	801d9ce <_ZdlPvj>
 80092de:	687b      	ldr	r3, [r7, #4]
 80092e0:	4618      	mov	r0, r3
 80092e2:	3708      	adds	r7, #8
 80092e4:	46bd      	mov	sp, r7
 80092e6:	bd80      	pop	{r7, pc}

080092e8 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 80092e8:	b480      	push	{r7}
 80092ea:	af00      	add	r7, sp, #0
    return bitmap_database;
 80092ec:	4b02      	ldr	r3, [pc, #8]	; (80092f8 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 80092ee:	4618      	mov	r0, r3
 80092f0:	46bd      	mov	sp, r7
 80092f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092f6:	4770      	bx	lr
 80092f8:	0801f800 	.word	0x0801f800

080092fc <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 80092fc:	b480      	push	{r7}
 80092fe:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 8009300:	2302      	movs	r3, #2
}
 8009302:	4618      	mov	r0, r3
 8009304:	46bd      	mov	sp, r7
 8009306:	f85d 7b04 	ldr.w	r7, [sp], #4
 800930a:	4770      	bx	lr

0800930c <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
     * @param  prevChar The Unicode value of the previous character.
     * @param  glyph    the glyph object for the current character.
     *
     * @return The kerning distance between prevChar and glyph char.
     */
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800930c:	b480      	push	{r7}
 800930e:	b085      	sub	sp, #20
 8009310:	af00      	add	r7, sp, #0
 8009312:	60f8      	str	r0, [r7, #12]
 8009314:	460b      	mov	r3, r1
 8009316:	607a      	str	r2, [r7, #4]
 8009318:	817b      	strh	r3, [r7, #10]
    {
        return 0;
 800931a:	2300      	movs	r3, #0
    }
 800931c:	4618      	mov	r0, r3
 800931e:	3714      	adds	r7, #20
 8009320:	46bd      	mov	sp, r7
 8009322:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009326:	4770      	bx	lr

08009328 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    /**
     * Gets GSUB table. Currently only used for Devanagari fonts.
     *
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
 8009328:	b480      	push	{r7}
 800932a:	b083      	sub	sp, #12
 800932c:	af00      	add	r7, sp, #0
 800932e:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8009330:	2300      	movs	r3, #0
    }
 8009332:	4618      	mov	r0, r3
 8009334:	370c      	adds	r7, #12
 8009336:	46bd      	mov	sp, r7
 8009338:	f85d 7b04 	ldr.w	r7, [sp], #4
 800933c:	4770      	bx	lr

0800933e <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    /**
     * Gets the contextual forms table used in arabic fonts.
     *
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800933e:	b480      	push	{r7}
 8009340:	b083      	sub	sp, #12
 8009342:	af00      	add	r7, sp, #0
 8009344:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8009346:	2300      	movs	r3, #0
    }
 8009348:	4618      	mov	r0, r3
 800934a:	370c      	adds	r7, #12
 800934c:	46bd      	mov	sp, r7
 800934e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009352:	4770      	bx	lr

08009354 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 8009354:	b480      	push	{r7}
 8009356:	b085      	sub	sp, #20
 8009358:	af00      	add	r7, sp, #0
 800935a:	60f8      	str	r0, [r7, #12]
 800935c:	60b9      	str	r1, [r7, #8]
 800935e:	4613      	mov	r3, r2
 8009360:	80fb      	strh	r3, [r7, #6]
        typedTexts = data;
 8009362:	4a07      	ldr	r2, [pc, #28]	; (8009380 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 8009364:	68fb      	ldr	r3, [r7, #12]
 8009366:	6013      	str	r3, [r2, #0]
        fonts = f;
 8009368:	4a06      	ldr	r2, [pc, #24]	; (8009384 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800936a:	68bb      	ldr	r3, [r7, #8]
 800936c:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800936e:	4a06      	ldr	r2, [pc, #24]	; (8009388 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 8009370:	88fb      	ldrh	r3, [r7, #6]
 8009372:	8013      	strh	r3, [r2, #0]
    }
 8009374:	bf00      	nop
 8009376:	3714      	adds	r7, #20
 8009378:	46bd      	mov	sp, r7
 800937a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800937e:	4770      	bx	lr
 8009380:	20026f50 	.word	0x20026f50
 8009384:	20026f58 	.word	0x20026f58
 8009388:	20026f54 	.word	0x20026f54

0800938c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800938c:	b40e      	push	{r1, r2, r3}
 800938e:	b580      	push	{r7, lr}
 8009390:	b085      	sub	sp, #20
 8009392:	af00      	add	r7, sp, #0
 8009394:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 8009396:	f107 0320 	add.w	r3, r7, #32
 800939a:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800939c:	68bb      	ldr	r3, [r7, #8]
 800939e:	69fa      	ldr	r2, [r7, #28]
 80093a0:	2100      	movs	r1, #0
 80093a2:	6878      	ldr	r0, [r7, #4]
 80093a4:	f006 fc18 	bl	800fbd8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 80093a8:	4603      	mov	r3, r0
 80093aa:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 80093ac:	89fb      	ldrh	r3, [r7, #14]
}
 80093ae:	4618      	mov	r0, r3
 80093b0:	3714      	adds	r7, #20
 80093b2:	46bd      	mov	sp, r7
 80093b4:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80093b8:	b003      	add	sp, #12
 80093ba:	4770      	bx	lr

080093bc <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80093bc:	b40c      	push	{r2, r3}
 80093be:	b580      	push	{r7, lr}
 80093c0:	b084      	sub	sp, #16
 80093c2:	af00      	add	r7, sp, #0
 80093c4:	6078      	str	r0, [r7, #4]
 80093c6:	460b      	mov	r3, r1
 80093c8:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 80093ca:	f107 031c 	add.w	r3, r7, #28
 80093ce:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80093d0:	78f9      	ldrb	r1, [r7, #3]
 80093d2:	68bb      	ldr	r3, [r7, #8]
 80093d4:	69ba      	ldr	r2, [r7, #24]
 80093d6:	6878      	ldr	r0, [r7, #4]
 80093d8:	f006 fbfe 	bl	800fbd8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 80093dc:	4603      	mov	r3, r0
 80093de:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 80093e0:	89fb      	ldrh	r3, [r7, #14]
}
 80093e2:	4618      	mov	r0, r3
 80093e4:	3710      	adds	r7, #16
 80093e6:	46bd      	mov	sp, r7
 80093e8:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80093ec:	b002      	add	sp, #8
 80093ee:	4770      	bx	lr

080093f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 80093f0:	b580      	push	{r7, lr}
 80093f2:	b08a      	sub	sp, #40	; 0x28
 80093f4:	af00      	add	r7, sp, #0
 80093f6:	6078      	str	r0, [r7, #4]
 80093f8:	460b      	mov	r3, r1
 80093fa:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 80093fc:	687b      	ldr	r3, [r7, #4]
 80093fe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009400:	2b00      	cmp	r3, #0
 8009402:	d016      	beq.n	8009432 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 8009404:	687b      	ldr	r3, [r7, #4]
 8009406:	3322      	adds	r3, #34	; 0x22
 8009408:	627b      	str	r3, [r7, #36]	; 0x24
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800940a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800940c:	8adb      	ldrh	r3, [r3, #22]
 800940e:	2b00      	cmp	r3, #0
 8009410:	d105      	bne.n	800941e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 8009412:	4b43      	ldr	r3, [pc, #268]	; (8009520 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 8009414:	4a43      	ldr	r2, [pc, #268]	; (8009524 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 8009416:	21c0      	movs	r1, #192	; 0xc0
 8009418:	4843      	ldr	r0, [pc, #268]	; (8009528 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800941a:	f014 fb07 	bl	801da2c <__assert_func>
            return buffer[pos];
 800941e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009420:	8a9b      	ldrh	r3, [r3, #20]
 8009422:	461a      	mov	r2, r3
 8009424:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009426:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800942a:	2b00      	cmp	r3, #0
 800942c:	d001      	beq.n	8009432 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800942e:	2301      	movs	r3, #1
 8009430:	e000      	b.n	8009434 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 8009432:	2300      	movs	r3, #0
 8009434:	2b00      	cmp	r3, #0
 8009436:	d06a      	beq.n	800950e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 8009438:	6878      	ldr	r0, [r7, #4]
 800943a:	f007 fea1 	bl	8011180 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800943e:	687b      	ldr	r3, [r7, #4]
 8009440:	3322      	adds	r3, #34	; 0x22
 8009442:	623b      	str	r3, [r7, #32]
 8009444:	2301      	movs	r3, #1
 8009446:	83fb      	strh	r3, [r7, #30]
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8009448:	6a3b      	ldr	r3, [r7, #32]
 800944a:	8adb      	ldrh	r3, [r3, #22]
 800944c:	8bfa      	ldrh	r2, [r7, #30]
 800944e:	429a      	cmp	r2, r3
 8009450:	d305      	bcc.n	800945e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 8009452:	4b36      	ldr	r3, [pc, #216]	; (800952c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 8009454:	4a36      	ldr	r2, [pc, #216]	; (8009530 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 8009456:	21c5      	movs	r1, #197	; 0xc5
 8009458:	4833      	ldr	r0, [pc, #204]	; (8009528 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800945a:	f014 fae7 	bl	801da2c <__assert_func>
            const uint16_t index = pos + offset;
 800945e:	6a3b      	ldr	r3, [r7, #32]
 8009460:	8a9a      	ldrh	r2, [r3, #20]
 8009462:	8bfb      	ldrh	r3, [r7, #30]
 8009464:	4413      	add	r3, r2
 8009466:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 8009468:	8bbb      	ldrh	r3, [r7, #28]
 800946a:	2b09      	cmp	r3, #9
 800946c:	d801      	bhi.n	8009472 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800946e:	8bbb      	ldrh	r3, [r7, #28]
 8009470:	e001      	b.n	8009476 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 8009472:	8bbb      	ldrh	r3, [r7, #28]
 8009474:	3b0a      	subs	r3, #10
 8009476:	6a3a      	ldr	r2, [r7, #32]
 8009478:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800947c:	f640 123f 	movw	r2, #2367	; 0x93f
 8009480:	4293      	cmp	r3, r2
 8009482:	bf0c      	ite	eq
 8009484:	2301      	moveq	r3, #1
 8009486:	2300      	movne	r3, #0
 8009488:	b2db      	uxtb	r3, r3
 800948a:	2b00      	cmp	r3, #0
 800948c:	d03f      	beq.n	800950e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800948e:	687b      	ldr	r3, [r7, #4]
 8009490:	3322      	adds	r3, #34	; 0x22
 8009492:	687a      	ldr	r2, [r7, #4]
 8009494:	3222      	adds	r2, #34	; 0x22
 8009496:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 8009498:	68ba      	ldr	r2, [r7, #8]
 800949a:	8ad2      	ldrh	r2, [r2, #22]
 800949c:	2a00      	cmp	r2, #0
 800949e:	d105      	bne.n	80094ac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 80094a0:	4b1f      	ldr	r3, [pc, #124]	; (8009520 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 80094a2:	4a20      	ldr	r2, [pc, #128]	; (8009524 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 80094a4:	21c0      	movs	r1, #192	; 0xc0
 80094a6:	4820      	ldr	r0, [pc, #128]	; (8009528 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 80094a8:	f014 fac0 	bl	801da2c <__assert_func>
            return buffer[pos];
 80094ac:	68ba      	ldr	r2, [r7, #8]
 80094ae:	8a92      	ldrh	r2, [r2, #20]
 80094b0:	4611      	mov	r1, r2
 80094b2:	68ba      	ldr	r2, [r7, #8]
 80094b4:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 80094b8:	613b      	str	r3, [r7, #16]
 80094ba:	4613      	mov	r3, r2
 80094bc:	81fb      	strh	r3, [r7, #14]
        {
            buffer[pos] = newChar;
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 80094be:	693b      	ldr	r3, [r7, #16]
 80094c0:	8adb      	ldrh	r3, [r3, #22]
 80094c2:	2b01      	cmp	r3, #1
 80094c4:	d806      	bhi.n	80094d4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 80094c6:	4b1b      	ldr	r3, [pc, #108]	; (8009534 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 80094c8:	4a1b      	ldr	r2, [pc, #108]	; (8009538 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 80094ca:	f240 110d 	movw	r1, #269	; 0x10d
 80094ce:	4816      	ldr	r0, [pc, #88]	; (8009528 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 80094d0:	f014 faac 	bl	801da2c <__assert_func>
            const uint16_t index = pos + 1;
 80094d4:	693b      	ldr	r3, [r7, #16]
 80094d6:	8a9b      	ldrh	r3, [r3, #20]
 80094d8:	3301      	adds	r3, #1
 80094da:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 80094dc:	89bb      	ldrh	r3, [r7, #12]
 80094de:	2b09      	cmp	r3, #9
 80094e0:	d801      	bhi.n	80094e6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 80094e2:	89bb      	ldrh	r3, [r7, #12]
 80094e4:	e000      	b.n	80094e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 80094e6:	2300      	movs	r3, #0
 80094e8:	693a      	ldr	r2, [r7, #16]
 80094ea:	89f9      	ldrh	r1, [r7, #14]
 80094ec:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 80094f0:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 80094f2:	687b      	ldr	r3, [r7, #4]
 80094f4:	3322      	adds	r3, #34	; 0x22
 80094f6:	61bb      	str	r3, [r7, #24]
 80094f8:	f640 133f 	movw	r3, #2367	; 0x93f
 80094fc:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 80094fe:	69bb      	ldr	r3, [r7, #24]
 8009500:	8a9b      	ldrh	r3, [r3, #20]
 8009502:	4619      	mov	r1, r3
 8009504:	69bb      	ldr	r3, [r7, #24]
 8009506:	8afa      	ldrh	r2, [r7, #22]
 8009508:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800950c:	bf00      	nop
        }
    }
    return getNextChar();
 800950e:	6878      	ldr	r0, [r7, #4]
 8009510:	f007 fd1a 	bl	8010f48 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8009514:	4603      	mov	r3, r0
}
 8009516:	4618      	mov	r0, r3
 8009518:	3728      	adds	r7, #40	; 0x28
 800951a:	46bd      	mov	sp, r7
 800951c:	bd80      	pop	{r7, pc}
 800951e:	bf00      	nop
 8009520:	0801efbc 	.word	0x0801efbc
 8009524:	0801efc8 	.word	0x0801efc8
 8009528:	0801f074 	.word	0x0801f074
 800952c:	0801f0bc 	.word	0x0801f0bc
 8009530:	0801f0cc 	.word	0x0801f0cc
 8009534:	0801f1a0 	.word	0x0801f1a0
 8009538:	0801f1ac 	.word	0x0801f1ac

0800953c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800953c:	b580      	push	{r7, lr}
 800953e:	b082      	sub	sp, #8
 8009540:	af00      	add	r7, sp, #0
 8009542:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 8009544:	6878      	ldr	r0, [r7, #4]
 8009546:	f007 fcb7 	bl	8010eb8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800954a:	bf00      	nop
 800954c:	3708      	adds	r7, #8
 800954e:	46bd      	mov	sp, r7
 8009550:	bd80      	pop	{r7, pc}

08009552 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8009552:	b580      	push	{r7, lr}
 8009554:	b088      	sub	sp, #32
 8009556:	af02      	add	r7, sp, #8
 8009558:	60f8      	str	r0, [r7, #12]
 800955a:	1d38      	adds	r0, r7, #4
 800955c:	e880 0006 	stmia.w	r0, {r1, r2}
 8009560:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 8009562:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8009566:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8009568:	1d39      	adds	r1, r7, #4
 800956a:	697b      	ldr	r3, [r7, #20]
 800956c:	9301      	str	r3, [sp, #4]
 800956e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009570:	9300      	str	r3, [sp, #0]
 8009572:	6a3b      	ldr	r3, [r7, #32]
 8009574:	683a      	ldr	r2, [r7, #0]
 8009576:	68f8      	ldr	r0, [r7, #12]
 8009578:	f004 ffed 	bl	800e556 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800957c:	bf00      	nop
 800957e:	3718      	adds	r7, #24
 8009580:	46bd      	mov	sp, r7
 8009582:	bd80      	pop	{r7, pc}

08009584 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8009584:	b590      	push	{r4, r7, lr}
 8009586:	b085      	sub	sp, #20
 8009588:	af00      	add	r7, sp, #0
 800958a:	4603      	mov	r3, r0
 800958c:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800958e:	2300      	movs	r3, #0
 8009590:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 8009592:	88fb      	ldrh	r3, [r7, #6]
 8009594:	2b00      	cmp	r3, #0
 8009596:	d127      	bne.n	80095e8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 8009598:	88fb      	ldrh	r3, [r7, #6]
 800959a:	4a1e      	ldr	r2, [pc, #120]	; (8009614 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800959c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80095a0:	2b00      	cmp	r3, #0
 80095a2:	d016      	beq.n	80095d2 <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 80095a4:	88fb      	ldrh	r3, [r7, #6]
 80095a6:	4a1b      	ldr	r2, [pc, #108]	; (8009614 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 80095a8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80095ac:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80095ae:	68bb      	ldr	r3, [r7, #8]
 80095b0:	681b      	ldr	r3, [r3, #0]
 80095b2:	68ba      	ldr	r2, [r7, #8]
 80095b4:	4413      	add	r3, r2
 80095b6:	4a18      	ldr	r2, [pc, #96]	; (8009618 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 80095b8:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80095ba:	68bb      	ldr	r3, [r7, #8]
 80095bc:	685b      	ldr	r3, [r3, #4]
 80095be:	68ba      	ldr	r2, [r7, #8]
 80095c0:	4413      	add	r3, r2
 80095c2:	4a16      	ldr	r2, [pc, #88]	; (800961c <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 80095c4:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80095c6:	68bb      	ldr	r3, [r7, #8]
 80095c8:	689b      	ldr	r3, [r3, #8]
 80095ca:	68ba      	ldr	r2, [r7, #8]
 80095cc:	4413      	add	r3, r2
 80095ce:	60fb      	str	r3, [r7, #12]
 80095d0:	e00a      	b.n	80095e8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 80095d2:	4b11      	ldr	r3, [pc, #68]	; (8009618 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 80095d4:	4a12      	ldr	r2, [pc, #72]	; (8009620 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 80095d6:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80095d8:	4a12      	ldr	r2, [pc, #72]	; (8009624 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 80095da:	4b10      	ldr	r3, [pc, #64]	; (800961c <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 80095dc:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80095de:	88fb      	ldrh	r3, [r7, #6]
 80095e0:	4a11      	ldr	r2, [pc, #68]	; (8009628 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 80095e2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80095e6:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 80095e8:	68fb      	ldr	r3, [r7, #12]
 80095ea:	2b00      	cmp	r3, #0
 80095ec:	d00d      	beq.n	800960a <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 80095ee:	4a0f      	ldr	r2, [pc, #60]	; (800962c <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 80095f0:	88fb      	ldrh	r3, [r7, #6]
 80095f2:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80095f4:	f000 f83e 	bl	8009674 <_ZN17TypedTextDatabase8getFontsEv>
 80095f8:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80095fa:	f000 f833 	bl	8009664 <_ZN17TypedTextDatabase15getInstanceSizeEv>
 80095fe:	4603      	mov	r3, r0
 8009600:	461a      	mov	r2, r3
 8009602:	4621      	mov	r1, r4
 8009604:	68f8      	ldr	r0, [r7, #12]
 8009606:	f7ff fea5 	bl	8009354 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800960a:	bf00      	nop
 800960c:	3714      	adds	r7, #20
 800960e:	46bd      	mov	sp, r7
 8009610:	bd90      	pop	{r4, r7, pc}
 8009612:	bf00      	nop
 8009614:	20025d60 	.word	0x20025d60
 8009618:	20025d68 	.word	0x20025d68
 800961c:	20025d6c 	.word	0x20025d6c
 8009620:	08036804 	.word	0x08036804
 8009624:	08036800 	.word	0x08036800
 8009628:	0803681c 	.word	0x0803681c
 800962c:	20025d64 	.word	0x20025d64

08009630 <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 8009630:	b480      	push	{r7}
 8009632:	b083      	sub	sp, #12
 8009634:	af00      	add	r7, sp, #0
 8009636:	6078      	str	r0, [r7, #4]
 8009638:	460b      	mov	r3, r1
 800963a:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800963c:	4b07      	ldr	r3, [pc, #28]	; (800965c <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 800963e:	681a      	ldr	r2, [r3, #0]
 8009640:	4b07      	ldr	r3, [pc, #28]	; (8009660 <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 8009642:	6819      	ldr	r1, [r3, #0]
 8009644:	887b      	ldrh	r3, [r7, #2]
 8009646:	009b      	lsls	r3, r3, #2
 8009648:	440b      	add	r3, r1
 800964a:	681b      	ldr	r3, [r3, #0]
 800964c:	005b      	lsls	r3, r3, #1
 800964e:	4413      	add	r3, r2
}
 8009650:	4618      	mov	r0, r3
 8009652:	370c      	adds	r7, #12
 8009654:	46bd      	mov	sp, r7
 8009656:	f85d 7b04 	ldr.w	r7, [sp], #4
 800965a:	4770      	bx	lr
 800965c:	20025d68 	.word	0x20025d68
 8009660:	20025d6c 	.word	0x20025d6c

08009664 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 8009664:	b480      	push	{r7}
 8009666:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 8009668:	2301      	movs	r3, #1
}
 800966a:	4618      	mov	r0, r3
 800966c:	46bd      	mov	sp, r7
 800966e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009672:	4770      	bx	lr

08009674 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 8009674:	b480      	push	{r7}
 8009676:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 8009678:	4b02      	ldr	r3, [pc, #8]	; (8009684 <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 800967a:	4618      	mov	r0, r3
 800967c:	46bd      	mov	sp, r7
 800967e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009682:	4770      	bx	lr
 8009684:	20025d70 	.word	0x20025d70

08009688 <_Z41__static_initialization_and_destruction_0ii>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8009688:	b580      	push	{r7, lr}
 800968a:	b082      	sub	sp, #8
 800968c:	af00      	add	r7, sp, #0
 800968e:	6078      	str	r0, [r7, #4]
 8009690:	6039      	str	r1, [r7, #0]
 8009692:	687b      	ldr	r3, [r7, #4]
 8009694:	2b01      	cmp	r3, #1
 8009696:	d113      	bne.n	80096c0 <_Z41__static_initialization_and_destruction_0ii+0x38>
 8009698:	683b      	ldr	r3, [r7, #0]
 800969a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800969e:	4293      	cmp	r3, r2
 80096a0:	d10e      	bne.n	80096c0 <_Z41__static_initialization_and_destruction_0ii+0x38>
    &(getFont_verdana_20_4bpp()),
 80096a2:	f7fe f97f 	bl	80079a4 <_Z23getFont_verdana_20_4bppv>
 80096a6:	4603      	mov	r3, r0
};
 80096a8:	4a07      	ldr	r2, [pc, #28]	; (80096c8 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 80096aa:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_40_4bpp()),
 80096ac:	f7fe f9d0 	bl	8007a50 <_Z23getFont_verdana_40_4bppv>
 80096b0:	4603      	mov	r3, r0
};
 80096b2:	4a05      	ldr	r2, [pc, #20]	; (80096c8 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 80096b4:	6053      	str	r3, [r2, #4]
    &(getFont_verdana_10_4bpp())
 80096b6:	f7fe f91f 	bl	80078f8 <_Z23getFont_verdana_10_4bppv>
 80096ba:	4603      	mov	r3, r0
};
 80096bc:	4a02      	ldr	r2, [pc, #8]	; (80096c8 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 80096be:	6093      	str	r3, [r2, #8]
} // namespace TypedTextDatabase
 80096c0:	bf00      	nop
 80096c2:	3708      	adds	r7, #8
 80096c4:	46bd      	mov	sp, r7
 80096c6:	bd80      	pop	{r7, pc}
 80096c8:	20025d70 	.word	0x20025d70

080096cc <_GLOBAL__sub_I_touchgfx_fonts>:
 80096cc:	b580      	push	{r7, lr}
 80096ce:	af00      	add	r7, sp, #0
 80096d0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80096d4:	2001      	movs	r0, #1
 80096d6:	f7ff ffd7 	bl	8009688 <_Z41__static_initialization_and_destruction_0ii>
 80096da:	bd80      	pop	{r7, pc}

080096dc <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80096dc:	b580      	push	{r7, lr}
 80096de:	b082      	sub	sp, #8
 80096e0:	af00      	add	r7, sp, #0
 80096e2:	6078      	str	r0, [r7, #4]
 80096e4:	4a05      	ldr	r2, [pc, #20]	; (80096fc <_ZN19FrontendApplicationD1Ev+0x20>)
 80096e6:	687b      	ldr	r3, [r7, #4]
 80096e8:	601a      	str	r2, [r3, #0]
 80096ea:	687b      	ldr	r3, [r7, #4]
 80096ec:	4618      	mov	r0, r3
 80096ee:	f7fe fbfb 	bl	8007ee8 <_ZN23FrontendApplicationBaseD1Ev>
 80096f2:	687b      	ldr	r3, [r7, #4]
 80096f4:	4618      	mov	r0, r3
 80096f6:	3708      	adds	r7, #8
 80096f8:	46bd      	mov	sp, r7
 80096fa:	bd80      	pop	{r7, pc}
 80096fc:	0801f884 	.word	0x0801f884

08009700 <_ZN19FrontendApplicationD0Ev>:
 8009700:	b580      	push	{r7, lr}
 8009702:	b082      	sub	sp, #8
 8009704:	af00      	add	r7, sp, #0
 8009706:	6078      	str	r0, [r7, #4]
 8009708:	6878      	ldr	r0, [r7, #4]
 800970a:	f7ff ffe7 	bl	80096dc <_ZN19FrontendApplicationD1Ev>
 800970e:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8009712:	6878      	ldr	r0, [r7, #4]
 8009714:	f014 f95b 	bl	801d9ce <_ZdlPvj>
 8009718:	687b      	ldr	r3, [r7, #4]
 800971a:	4618      	mov	r0, r3
 800971c:	3708      	adds	r7, #8
 800971e:	46bd      	mov	sp, r7
 8009720:	bd80      	pop	{r7, pc}

08009722 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8009722:	b580      	push	{r7, lr}
 8009724:	b082      	sub	sp, #8
 8009726:	af00      	add	r7, sp, #0
 8009728:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800972a:	687b      	ldr	r3, [r7, #4]
 800972c:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 8009730:	4618      	mov	r0, r3
 8009732:	f000 f82d 	bl	8009790 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8009736:	687b      	ldr	r3, [r7, #4]
 8009738:	4618      	mov	r0, r3
 800973a:	f005 fa61 	bl	800ec00 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800973e:	bf00      	nop
 8009740:	3708      	adds	r7, #8
 8009742:	46bd      	mov	sp, r7
 8009744:	bd80      	pop	{r7, pc}
	...

08009748 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8009748:	b580      	push	{r7, lr}
 800974a:	b084      	sub	sp, #16
 800974c:	af00      	add	r7, sp, #0
 800974e:	60f8      	str	r0, [r7, #12]
 8009750:	60b9      	str	r1, [r7, #8]
 8009752:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 8009754:	68fb      	ldr	r3, [r7, #12]
 8009756:	687a      	ldr	r2, [r7, #4]
 8009758:	68b9      	ldr	r1, [r7, #8]
 800975a:	4618      	mov	r0, r3
 800975c:	f7fe fc14 	bl	8007f88 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8009760:	4a03      	ldr	r2, [pc, #12]	; (8009770 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 8009762:	68fb      	ldr	r3, [r7, #12]
 8009764:	601a      	str	r2, [r3, #0]
{

}
 8009766:	68fb      	ldr	r3, [r7, #12]
 8009768:	4618      	mov	r0, r3
 800976a:	3710      	adds	r7, #16
 800976c:	46bd      	mov	sp, r7
 800976e:	bd80      	pop	{r7, pc}
 8009770:	0801f884 	.word	0x0801f884

08009774 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8009774:	b480      	push	{r7}
 8009776:	b083      	sub	sp, #12
 8009778:	af00      	add	r7, sp, #0
 800977a:	6078      	str	r0, [r7, #4]
 800977c:	687b      	ldr	r3, [r7, #4]
 800977e:	2200      	movs	r2, #0
 8009780:	601a      	str	r2, [r3, #0]
{

}
 8009782:	687b      	ldr	r3, [r7, #4]
 8009784:	4618      	mov	r0, r3
 8009786:	370c      	adds	r7, #12
 8009788:	46bd      	mov	sp, r7
 800978a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800978e:	4770      	bx	lr

08009790 <_ZN5Model4tickEv>:

void Model::tick()
{
 8009790:	b480      	push	{r7}
 8009792:	b083      	sub	sp, #12
 8009794:	af00      	add	r7, sp, #0
 8009796:	6078      	str	r0, [r7, #4]

}
 8009798:	bf00      	nop
 800979a:	370c      	adds	r7, #12
 800979c:	46bd      	mov	sp, r7
 800979e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097a2:	4770      	bx	lr

080097a4 <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 80097a4:	b480      	push	{r7}
 80097a6:	b083      	sub	sp, #12
 80097a8:	af00      	add	r7, sp, #0
 80097aa:	6078      	str	r0, [r7, #4]
    {
    }
 80097ac:	bf00      	nop
 80097ae:	370c      	adds	r7, #12
 80097b0:	46bd      	mov	sp, r7
 80097b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097b6:	4770      	bx	lr

080097b8 <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 80097b8:	b480      	push	{r7}
 80097ba:	b083      	sub	sp, #12
 80097bc:	af00      	add	r7, sp, #0
 80097be:	6078      	str	r0, [r7, #4]
    {
    }
 80097c0:	bf00      	nop
 80097c2:	370c      	adds	r7, #12
 80097c4:	46bd      	mov	sp, r7
 80097c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097ca:	4770      	bx	lr

080097cc <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 80097cc:	b480      	push	{r7}
 80097ce:	b083      	sub	sp, #12
 80097d0:	af00      	add	r7, sp, #0
 80097d2:	6078      	str	r0, [r7, #4]
    {
 80097d4:	4a04      	ldr	r2, [pc, #16]	; (80097e8 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 80097d6:	687b      	ldr	r3, [r7, #4]
 80097d8:	601a      	str	r2, [r3, #0]
    }
 80097da:	687b      	ldr	r3, [r7, #4]
 80097dc:	4618      	mov	r0, r3
 80097de:	370c      	adds	r7, #12
 80097e0:	46bd      	mov	sp, r7
 80097e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097e6:	4770      	bx	lr
 80097e8:	0801f908 	.word	0x0801f908

080097ec <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 80097ec:	b580      	push	{r7, lr}
 80097ee:	b082      	sub	sp, #8
 80097f0:	af00      	add	r7, sp, #0
 80097f2:	6078      	str	r0, [r7, #4]
    }
 80097f4:	6878      	ldr	r0, [r7, #4]
 80097f6:	f7ff ffe9 	bl	80097cc <_ZN8touchgfx9PresenterD1Ev>
 80097fa:	2104      	movs	r1, #4
 80097fc:	6878      	ldr	r0, [r7, #4]
 80097fe:	f014 f8e6 	bl	801d9ce <_ZdlPvj>
 8009802:	687b      	ldr	r3, [r7, #4]
 8009804:	4618      	mov	r0, r3
 8009806:	3708      	adds	r7, #8
 8009808:	46bd      	mov	sp, r7
 800980a:	bd80      	pop	{r7, pc}

0800980c <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 800980c:	b480      	push	{r7}
 800980e:	b083      	sub	sp, #12
 8009810:	af00      	add	r7, sp, #0
 8009812:	6078      	str	r0, [r7, #4]
    {
 8009814:	4a04      	ldr	r2, [pc, #16]	; (8009828 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 8009816:	687b      	ldr	r3, [r7, #4]
 8009818:	601a      	str	r2, [r3, #0]
    }
 800981a:	687b      	ldr	r3, [r7, #4]
 800981c:	4618      	mov	r0, r3
 800981e:	370c      	adds	r7, #12
 8009820:	46bd      	mov	sp, r7
 8009822:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009826:	4770      	bx	lr
 8009828:	0801f908 	.word	0x0801f908

0800982c <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800982c:	b480      	push	{r7}
 800982e:	b083      	sub	sp, #12
 8009830:	af00      	add	r7, sp, #0
 8009832:	6078      	str	r0, [r7, #4]
 8009834:	4a06      	ldr	r2, [pc, #24]	; (8009850 <_ZN13ModelListenerC1Ev+0x24>)
 8009836:	687b      	ldr	r3, [r7, #4]
 8009838:	601a      	str	r2, [r3, #0]
 800983a:	687b      	ldr	r3, [r7, #4]
 800983c:	2200      	movs	r2, #0
 800983e:	605a      	str	r2, [r3, #4]
 8009840:	687b      	ldr	r3, [r7, #4]
 8009842:	4618      	mov	r0, r3
 8009844:	370c      	adds	r7, #12
 8009846:	46bd      	mov	sp, r7
 8009848:	f85d 7b04 	ldr.w	r7, [sp], #4
 800984c:	4770      	bx	lr
 800984e:	bf00      	nop
 8009850:	0801f8f8 	.word	0x0801f8f8

08009854 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 8009854:	b480      	push	{r7}
 8009856:	b083      	sub	sp, #12
 8009858:	af00      	add	r7, sp, #0
 800985a:	6078      	str	r0, [r7, #4]
 800985c:	4a04      	ldr	r2, [pc, #16]	; (8009870 <_ZN13ModelListenerD1Ev+0x1c>)
 800985e:	687b      	ldr	r3, [r7, #4]
 8009860:	601a      	str	r2, [r3, #0]
 8009862:	687b      	ldr	r3, [r7, #4]
 8009864:	4618      	mov	r0, r3
 8009866:	370c      	adds	r7, #12
 8009868:	46bd      	mov	sp, r7
 800986a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800986e:	4770      	bx	lr
 8009870:	0801f8f8 	.word	0x0801f8f8

08009874 <_ZN13ModelListenerD0Ev>:
 8009874:	b580      	push	{r7, lr}
 8009876:	b082      	sub	sp, #8
 8009878:	af00      	add	r7, sp, #0
 800987a:	6078      	str	r0, [r7, #4]
 800987c:	6878      	ldr	r0, [r7, #4]
 800987e:	f7ff ffe9 	bl	8009854 <_ZN13ModelListenerD1Ev>
 8009882:	2108      	movs	r1, #8
 8009884:	6878      	ldr	r0, [r7, #4]
 8009886:	f014 f8a2 	bl	801d9ce <_ZdlPvj>
 800988a:	687b      	ldr	r3, [r7, #4]
 800988c:	4618      	mov	r0, r3
 800988e:	3708      	adds	r7, #8
 8009890:	46bd      	mov	sp, r7
 8009892:	bd80      	pop	{r7, pc}

08009894 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8009894:	b580      	push	{r7, lr}
 8009896:	b082      	sub	sp, #8
 8009898:	af00      	add	r7, sp, #0
 800989a:	6078      	str	r0, [r7, #4]
 800989c:	4a09      	ldr	r2, [pc, #36]	; (80098c4 <_ZN16Screen1PresenterD1Ev+0x30>)
 800989e:	687b      	ldr	r3, [r7, #4]
 80098a0:	601a      	str	r2, [r3, #0]
 80098a2:	4a09      	ldr	r2, [pc, #36]	; (80098c8 <_ZN16Screen1PresenterD1Ev+0x34>)
 80098a4:	687b      	ldr	r3, [r7, #4]
 80098a6:	605a      	str	r2, [r3, #4]
 80098a8:	687b      	ldr	r3, [r7, #4]
 80098aa:	3304      	adds	r3, #4
 80098ac:	4618      	mov	r0, r3
 80098ae:	f7ff ffd1 	bl	8009854 <_ZN13ModelListenerD1Ev>
 80098b2:	687b      	ldr	r3, [r7, #4]
 80098b4:	4618      	mov	r0, r3
 80098b6:	f7ff ff89 	bl	80097cc <_ZN8touchgfx9PresenterD1Ev>
 80098ba:	687b      	ldr	r3, [r7, #4]
 80098bc:	4618      	mov	r0, r3
 80098be:	3708      	adds	r7, #8
 80098c0:	46bd      	mov	sp, r7
 80098c2:	bd80      	pop	{r7, pc}
 80098c4:	0801f8d0 	.word	0x0801f8d0
 80098c8:	0801f8e8 	.word	0x0801f8e8

080098cc <_ZThn4_N16Screen1PresenterD1Ev>:
 80098cc:	f1a0 0004 	sub.w	r0, r0, #4
 80098d0:	e7e0      	b.n	8009894 <_ZN16Screen1PresenterD1Ev>
 80098d2:	bf00      	nop

080098d4 <_ZN16Screen1PresenterD0Ev>:
 80098d4:	b580      	push	{r7, lr}
 80098d6:	b082      	sub	sp, #8
 80098d8:	af00      	add	r7, sp, #0
 80098da:	6078      	str	r0, [r7, #4]
 80098dc:	6878      	ldr	r0, [r7, #4]
 80098de:	f7ff ffd9 	bl	8009894 <_ZN16Screen1PresenterD1Ev>
 80098e2:	2110      	movs	r1, #16
 80098e4:	6878      	ldr	r0, [r7, #4]
 80098e6:	f014 f872 	bl	801d9ce <_ZdlPvj>
 80098ea:	687b      	ldr	r3, [r7, #4]
 80098ec:	4618      	mov	r0, r3
 80098ee:	3708      	adds	r7, #8
 80098f0:	46bd      	mov	sp, r7
 80098f2:	bd80      	pop	{r7, pc}

080098f4 <_ZThn4_N16Screen1PresenterD0Ev>:
 80098f4:	f1a0 0004 	sub.w	r0, r0, #4
 80098f8:	e7ec      	b.n	80098d4 <_ZN16Screen1PresenterD0Ev>
	...

080098fc <_ZN16Screen1PresenterC1ER11Screen1View>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

Screen1Presenter::Screen1Presenter(Screen1View& v)
 80098fc:	b580      	push	{r7, lr}
 80098fe:	b082      	sub	sp, #8
 8009900:	af00      	add	r7, sp, #0
 8009902:	6078      	str	r0, [r7, #4]
 8009904:	6039      	str	r1, [r7, #0]
    : view(v)
 8009906:	687b      	ldr	r3, [r7, #4]
 8009908:	4618      	mov	r0, r3
 800990a:	f7ff ff7f 	bl	800980c <_ZN8touchgfx9PresenterC1Ev>
 800990e:	687b      	ldr	r3, [r7, #4]
 8009910:	3304      	adds	r3, #4
 8009912:	4618      	mov	r0, r3
 8009914:	f7ff ff8a 	bl	800982c <_ZN13ModelListenerC1Ev>
 8009918:	4a06      	ldr	r2, [pc, #24]	; (8009934 <_ZN16Screen1PresenterC1ER11Screen1View+0x38>)
 800991a:	687b      	ldr	r3, [r7, #4]
 800991c:	601a      	str	r2, [r3, #0]
 800991e:	4a06      	ldr	r2, [pc, #24]	; (8009938 <_ZN16Screen1PresenterC1ER11Screen1View+0x3c>)
 8009920:	687b      	ldr	r3, [r7, #4]
 8009922:	605a      	str	r2, [r3, #4]
 8009924:	687b      	ldr	r3, [r7, #4]
 8009926:	683a      	ldr	r2, [r7, #0]
 8009928:	60da      	str	r2, [r3, #12]
{

}
 800992a:	687b      	ldr	r3, [r7, #4]
 800992c:	4618      	mov	r0, r3
 800992e:	3708      	adds	r7, #8
 8009930:	46bd      	mov	sp, r7
 8009932:	bd80      	pop	{r7, pc}
 8009934:	0801f8d0 	.word	0x0801f8d0
 8009938:	0801f8e8 	.word	0x0801f8e8

0800993c <_ZN16Screen1Presenter8activateEv>:

void Screen1Presenter::activate()
{
 800993c:	b480      	push	{r7}
 800993e:	b083      	sub	sp, #12
 8009940:	af00      	add	r7, sp, #0
 8009942:	6078      	str	r0, [r7, #4]

}
 8009944:	bf00      	nop
 8009946:	370c      	adds	r7, #12
 8009948:	46bd      	mov	sp, r7
 800994a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800994e:	4770      	bx	lr

08009950 <_ZN16Screen1Presenter10deactivateEv>:

void Screen1Presenter::deactivate()
{
 8009950:	b480      	push	{r7}
 8009952:	b083      	sub	sp, #12
 8009954:	af00      	add	r7, sp, #0
 8009956:	6078      	str	r0, [r7, #4]

}
 8009958:	bf00      	nop
 800995a:	370c      	adds	r7, #12
 800995c:	46bd      	mov	sp, r7
 800995e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009962:	4770      	bx	lr

08009964 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8009964:	b580      	push	{r7, lr}
 8009966:	b082      	sub	sp, #8
 8009968:	af00      	add	r7, sp, #0
 800996a:	6078      	str	r0, [r7, #4]
 800996c:	4a05      	ldr	r2, [pc, #20]	; (8009984 <_ZN11Screen1ViewD1Ev+0x20>)
 800996e:	687b      	ldr	r3, [r7, #4]
 8009970:	601a      	str	r2, [r3, #0]
 8009972:	687b      	ldr	r3, [r7, #4]
 8009974:	4618      	mov	r0, r3
 8009976:	f7ff fa5f 	bl	8008e38 <_ZN15Screen1ViewBaseD1Ev>
 800997a:	687b      	ldr	r3, [r7, #4]
 800997c:	4618      	mov	r0, r3
 800997e:	3708      	adds	r7, #8
 8009980:	46bd      	mov	sp, r7
 8009982:	bd80      	pop	{r7, pc}
 8009984:	0801f920 	.word	0x0801f920

08009988 <_ZN11Screen1ViewD0Ev>:
 8009988:	b580      	push	{r7, lr}
 800998a:	b082      	sub	sp, #8
 800998c:	af00      	add	r7, sp, #0
 800998e:	6078      	str	r0, [r7, #4]
 8009990:	6878      	ldr	r0, [r7, #4]
 8009992:	f7ff ffe7 	bl	8009964 <_ZN11Screen1ViewD1Ev>
 8009996:	f44f 718a 	mov.w	r1, #276	; 0x114
 800999a:	6878      	ldr	r0, [r7, #4]
 800999c:	f014 f817 	bl	801d9ce <_ZdlPvj>
 80099a0:	687b      	ldr	r3, [r7, #4]
 80099a2:	4618      	mov	r0, r3
 80099a4:	3708      	adds	r7, #8
 80099a6:	46bd      	mov	sp, r7
 80099a8:	bd80      	pop	{r7, pc}
	...

080099ac <_ZN11Screen1ViewC1Ev>:
#include <gui/screen1_screen/Screen1View.hpp>

Screen1View::Screen1View()
 80099ac:	b580      	push	{r7, lr}
 80099ae:	b082      	sub	sp, #8
 80099b0:	af00      	add	r7, sp, #0
 80099b2:	6078      	str	r0, [r7, #4]
 80099b4:	687b      	ldr	r3, [r7, #4]
 80099b6:	4618      	mov	r0, r3
 80099b8:	f7ff fa76 	bl	8008ea8 <_ZN15Screen1ViewBaseC1Ev>
 80099bc:	4a03      	ldr	r2, [pc, #12]	; (80099cc <_ZN11Screen1ViewC1Ev+0x20>)
 80099be:	687b      	ldr	r3, [r7, #4]
 80099c0:	601a      	str	r2, [r3, #0]
{

}
 80099c2:	687b      	ldr	r3, [r7, #4]
 80099c4:	4618      	mov	r0, r3
 80099c6:	3708      	adds	r7, #8
 80099c8:	46bd      	mov	sp, r7
 80099ca:	bd80      	pop	{r7, pc}
 80099cc:	0801f920 	.word	0x0801f920

080099d0 <_ZN11Screen1View11setupScreenEv>:

void Screen1View::setupScreen()
{
 80099d0:	b580      	push	{r7, lr}
 80099d2:	b082      	sub	sp, #8
 80099d4:	af00      	add	r7, sp, #0
 80099d6:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::setupScreen();
 80099d8:	687b      	ldr	r3, [r7, #4]
 80099da:	4618      	mov	r0, r3
 80099dc:	f7ff fbd6 	bl	800918c <_ZN15Screen1ViewBase11setupScreenEv>
}
 80099e0:	bf00      	nop
 80099e2:	3708      	adds	r7, #8
 80099e4:	46bd      	mov	sp, r7
 80099e6:	bd80      	pop	{r7, pc}

080099e8 <_ZN11Screen1View14tearDownScreenEv>:

void Screen1View::tearDownScreen()
{
 80099e8:	b580      	push	{r7, lr}
 80099ea:	b082      	sub	sp, #8
 80099ec:	af00      	add	r7, sp, #0
 80099ee:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::tearDownScreen();
 80099f0:	687b      	ldr	r3, [r7, #4]
 80099f2:	4618      	mov	r0, r3
 80099f4:	f7fe ffc6 	bl	8008984 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 80099f8:	bf00      	nop
 80099fa:	3708      	adds	r7, #8
 80099fc:	46bd      	mov	sp, r7
 80099fe:	bd80      	pop	{r7, pc}

08009a00 <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 8009a00:	b480      	push	{r7}
 8009a02:	b083      	sub	sp, #12
 8009a04:	af00      	add	r7, sp, #0
 8009a06:	6078      	str	r0, [r7, #4]
    {
 8009a08:	4a04      	ldr	r2, [pc, #16]	; (8009a1c <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 8009a0a:	687b      	ldr	r3, [r7, #4]
 8009a0c:	601a      	str	r2, [r3, #0]
    }
 8009a0e:	687b      	ldr	r3, [r7, #4]
 8009a10:	4618      	mov	r0, r3
 8009a12:	370c      	adds	r7, #12
 8009a14:	46bd      	mov	sp, r7
 8009a16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a1a:	4770      	bx	lr
 8009a1c:	0801f96c 	.word	0x0801f96c

08009a20 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 8009a20:	b580      	push	{r7, lr}
 8009a22:	b082      	sub	sp, #8
 8009a24:	af00      	add	r7, sp, #0
 8009a26:	6078      	str	r0, [r7, #4]
    }
 8009a28:	6878      	ldr	r0, [r7, #4]
 8009a2a:	f7ff ffe9 	bl	8009a00 <_ZN8touchgfx15TouchControllerD1Ev>
 8009a2e:	2104      	movs	r1, #4
 8009a30:	6878      	ldr	r0, [r7, #4]
 8009a32:	f013 ffcc 	bl	801d9ce <_ZdlPvj>
 8009a36:	687b      	ldr	r3, [r7, #4]
 8009a38:	4618      	mov	r0, r3
 8009a3a:	3708      	adds	r7, #8
 8009a3c:	46bd      	mov	sp, r7
 8009a3e:	bd80      	pop	{r7, pc}

08009a40 <_ZN20STM32TouchController4initEv>:

static uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize);
static void    BSP_TS_GetState(TS_StateTypeDef* TsState);

void STM32TouchController::init()
{
 8009a40:	b580      	push	{r7, lr}
 8009a42:	b082      	sub	sp, #8
 8009a44:	af00      	add	r7, sp, #0
 8009a46:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
    BSP_TS_Init(240, 320);
 8009a48:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8009a4c:	20f0      	movs	r0, #240	; 0xf0
 8009a4e:	f000 f821 	bl	8009a94 <_ZL11BSP_TS_Inittt>
}
 8009a52:	bf00      	nop
 8009a54:	3708      	adds	r7, #8
 8009a56:	46bd      	mov	sp, r7
 8009a58:	bd80      	pop	{r7, pc}

08009a5a <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8009a5a:	b580      	push	{r7, lr}
 8009a5c:	b086      	sub	sp, #24
 8009a5e:	af00      	add	r7, sp, #0
 8009a60:	60f8      	str	r0, [r7, #12]
 8009a62:	60b9      	str	r1, [r7, #8]
 8009a64:	607a      	str	r2, [r7, #4]
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_StateTypeDef state;
    BSP_TS_GetState(&state);
 8009a66:	f107 0310 	add.w	r3, r7, #16
 8009a6a:	4618      	mov	r0, r3
 8009a6c:	f000 f850 	bl	8009b10 <_ZL15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8009a70:	8a3b      	ldrh	r3, [r7, #16]
 8009a72:	2b00      	cmp	r3, #0
 8009a74:	d009      	beq.n	8009a8a <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>
    {
        x = state.X;
 8009a76:	8a7b      	ldrh	r3, [r7, #18]
 8009a78:	461a      	mov	r2, r3
 8009a7a:	68bb      	ldr	r3, [r7, #8]
 8009a7c:	601a      	str	r2, [r3, #0]
        y = state.Y;
 8009a7e:	8abb      	ldrh	r3, [r7, #20]
 8009a80:	461a      	mov	r2, r3
 8009a82:	687b      	ldr	r3, [r7, #4]
 8009a84:	601a      	str	r2, [r3, #0]
        return true;
 8009a86:	2301      	movs	r3, #1
 8009a88:	e000      	b.n	8009a8c <_ZN20STM32TouchController11sampleTouchERlS0_+0x32>
    }
    return false;
 8009a8a:	2300      	movs	r3, #0
}
 8009a8c:	4618      	mov	r0, r3
 8009a8e:	3718      	adds	r7, #24
 8009a90:	46bd      	mov	sp, r7
 8009a92:	bd80      	pop	{r7, pc}

08009a94 <_ZL11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8009a94:	b580      	push	{r7, lr}
 8009a96:	b084      	sub	sp, #16
 8009a98:	af00      	add	r7, sp, #0
 8009a9a:	4603      	mov	r3, r0
 8009a9c:	460a      	mov	r2, r1
 8009a9e:	80fb      	strh	r3, [r7, #6]
 8009aa0:	4613      	mov	r3, r2
 8009aa2:	80bb      	strh	r3, [r7, #4]
    uint8_t ret = TS_ERROR;
 8009aa4:	2301      	movs	r3, #1
 8009aa6:	73fb      	strb	r3, [r7, #15]

    /* Initialise x and y positions boundaries */
    TsXBoundary = XSize;
 8009aa8:	4a15      	ldr	r2, [pc, #84]	; (8009b00 <_ZL11BSP_TS_Inittt+0x6c>)
 8009aaa:	88fb      	ldrh	r3, [r7, #6]
 8009aac:	8013      	strh	r3, [r2, #0]
    TsYBoundary = YSize;
 8009aae:	4a15      	ldr	r2, [pc, #84]	; (8009b04 <_ZL11BSP_TS_Inittt+0x70>)
 8009ab0:	88bb      	ldrh	r3, [r7, #4]
 8009ab2:	8013      	strh	r3, [r2, #0]

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8009ab4:	4b14      	ldr	r3, [pc, #80]	; (8009b08 <_ZL11BSP_TS_Inittt+0x74>)
 8009ab6:	685b      	ldr	r3, [r3, #4]
 8009ab8:	2082      	movs	r0, #130	; 0x82
 8009aba:	4798      	blx	r3
 8009abc:	4603      	mov	r3, r0
 8009abe:	461a      	mov	r2, r3
 8009ac0:	f640 0311 	movw	r3, #2065	; 0x811
 8009ac4:	429a      	cmp	r2, r3
 8009ac6:	bf0c      	ite	eq
 8009ac8:	2301      	moveq	r3, #1
 8009aca:	2300      	movne	r3, #0
 8009acc:	b2db      	uxtb	r3, r3
 8009ace:	2b00      	cmp	r3, #0
 8009ad0:	d004      	beq.n	8009adc <_ZL11BSP_TS_Inittt+0x48>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8009ad2:	4b0e      	ldr	r3, [pc, #56]	; (8009b0c <_ZL11BSP_TS_Inittt+0x78>)
 8009ad4:	4a0c      	ldr	r2, [pc, #48]	; (8009b08 <_ZL11BSP_TS_Inittt+0x74>)
 8009ad6:	601a      	str	r2, [r3, #0]

        ret = TS_OK;
 8009ad8:	2300      	movs	r3, #0
 8009ada:	73fb      	strb	r3, [r7, #15]
    }

    if (ret == TS_OK)
 8009adc:	7bfb      	ldrb	r3, [r7, #15]
 8009ade:	2b00      	cmp	r3, #0
 8009ae0:	d109      	bne.n	8009af6 <_ZL11BSP_TS_Inittt+0x62>
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8009ae2:	4b0a      	ldr	r3, [pc, #40]	; (8009b0c <_ZL11BSP_TS_Inittt+0x78>)
 8009ae4:	681b      	ldr	r3, [r3, #0]
 8009ae6:	681b      	ldr	r3, [r3, #0]
 8009ae8:	2082      	movs	r0, #130	; 0x82
 8009aea:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8009aec:	4b07      	ldr	r3, [pc, #28]	; (8009b0c <_ZL11BSP_TS_Inittt+0x78>)
 8009aee:	681b      	ldr	r3, [r3, #0]
 8009af0:	68db      	ldr	r3, [r3, #12]
 8009af2:	2082      	movs	r0, #130	; 0x82
 8009af4:	4798      	blx	r3
    }

    return ret;
 8009af6:	7bfb      	ldrb	r3, [r7, #15]
}
 8009af8:	4618      	mov	r0, r3
 8009afa:	3710      	adds	r7, #16
 8009afc:	46bd      	mov	sp, r7
 8009afe:	bd80      	pop	{r7, pc}
 8009b00:	20025d80 	.word	0x20025d80
 8009b04:	20025d82 	.word	0x20025d82
 8009b08:	20000040 	.word	0x20000040
 8009b0c:	20025d7c 	.word	0x20025d7c

08009b10 <_ZL15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8009b10:	b580      	push	{r7, lr}
 8009b12:	b086      	sub	sp, #24
 8009b14:	af00      	add	r7, sp, #0
 8009b16:	6078      	str	r0, [r7, #4]
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8009b18:	4b58      	ldr	r3, [pc, #352]	; (8009c7c <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x16c>)
 8009b1a:	681b      	ldr	r3, [r3, #0]
 8009b1c:	691b      	ldr	r3, [r3, #16]
 8009b1e:	2082      	movs	r0, #130	; 0x82
 8009b20:	4798      	blx	r3
 8009b22:	4603      	mov	r3, r0
 8009b24:	b29a      	uxth	r2, r3
 8009b26:	687b      	ldr	r3, [r7, #4]
 8009b28:	801a      	strh	r2, [r3, #0]

    if (TsState->TouchDetected)
 8009b2a:	687b      	ldr	r3, [r7, #4]
 8009b2c:	881b      	ldrh	r3, [r3, #0]
 8009b2e:	2b00      	cmp	r3, #0
 8009b30:	f000 809f 	beq.w	8009c72 <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x162>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8009b34:	4b51      	ldr	r3, [pc, #324]	; (8009c7c <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x16c>)
 8009b36:	681b      	ldr	r3, [r3, #0]
 8009b38:	695b      	ldr	r3, [r3, #20]
 8009b3a:	f107 020c 	add.w	r2, r7, #12
 8009b3e:	f107 010e 	add.w	r1, r7, #14
 8009b42:	2082      	movs	r0, #130	; 0x82
 8009b44:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8009b46:	89bb      	ldrh	r3, [r7, #12]
 8009b48:	f640 6274 	movw	r2, #3700	; 0xe74
 8009b4c:	4293      	cmp	r3, r2
 8009b4e:	d903      	bls.n	8009b58 <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x48>
        {
            y = 3700;
 8009b50:	f640 6374 	movw	r3, #3700	; 0xe74
 8009b54:	81bb      	strh	r3, [r7, #12]
 8009b56:	e004      	b.n	8009b62 <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        }
        else if (y < 180)
 8009b58:	89bb      	ldrh	r3, [r7, #12]
 8009b5a:	2bb3      	cmp	r3, #179	; 0xb3
 8009b5c:	d801      	bhi.n	8009b62 <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            y = 180;
 8009b5e:	23b4      	movs	r3, #180	; 0xb4
 8009b60:	81bb      	strh	r3, [r7, #12]
        }

        /* Y value first correction */
        y -= 180;
 8009b62:	89bb      	ldrh	r3, [r7, #12]
 8009b64:	3bb4      	subs	r3, #180	; 0xb4
 8009b66:	b29b      	uxth	r3, r3
 8009b68:	81bb      	strh	r3, [r7, #12]

        /* Y value second correction */
        y = 3520 - y;
 8009b6a:	89bb      	ldrh	r3, [r7, #12]
 8009b6c:	f5c3 635c 	rsb	r3, r3, #3520	; 0xdc0
 8009b70:	b29b      	uxth	r3, r3
 8009b72:	81bb      	strh	r3, [r7, #12]

        /* Y value third correction */
        yr = y / 11;
 8009b74:	89bb      	ldrh	r3, [r7, #12]
 8009b76:	4a42      	ldr	r2, [pc, #264]	; (8009c80 <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x170>)
 8009b78:	fba2 2303 	umull	r2, r3, r2, r3
 8009b7c:	08db      	lsrs	r3, r3, #3
 8009b7e:	82bb      	strh	r3, [r7, #20]

        /* Return y position value */
        if (yr <= 0)
 8009b80:	8abb      	ldrh	r3, [r7, #20]
 8009b82:	2b00      	cmp	r3, #0
 8009b84:	d102      	bne.n	8009b8c <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x7c>
        {
            yr = 0;
 8009b86:	2300      	movs	r3, #0
 8009b88:	82bb      	strh	r3, [r7, #20]
 8009b8a:	e008      	b.n	8009b9e <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x8e>
        }
        else if (yr > TsYBoundary)
 8009b8c:	4b3d      	ldr	r3, [pc, #244]	; (8009c84 <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x174>)
 8009b8e:	881b      	ldrh	r3, [r3, #0]
 8009b90:	8aba      	ldrh	r2, [r7, #20]
 8009b92:	429a      	cmp	r2, r3
 8009b94:	d903      	bls.n	8009b9e <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x8e>
        {
            yr = TsYBoundary - 1;
 8009b96:	4b3b      	ldr	r3, [pc, #236]	; (8009c84 <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x174>)
 8009b98:	881b      	ldrh	r3, [r3, #0]
 8009b9a:	3b01      	subs	r3, #1
 8009b9c:	82bb      	strh	r3, [r7, #20]
        }
        else
        {
        }
        y = yr;
 8009b9e:	8abb      	ldrh	r3, [r7, #20]
 8009ba0:	81bb      	strh	r3, [r7, #12]

        /* X value first correction */
        if (x <= 3000)
 8009ba2:	89fb      	ldrh	r3, [r7, #14]
 8009ba4:	f640 32b8 	movw	r2, #3000	; 0xbb8
 8009ba8:	4293      	cmp	r3, r2
 8009baa:	d806      	bhi.n	8009bba <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0xaa>
        {
            x = 3870 - x;
 8009bac:	89fb      	ldrh	r3, [r7, #14]
 8009bae:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 8009bb2:	330e      	adds	r3, #14
 8009bb4:	b29b      	uxth	r3, r3
 8009bb6:	81fb      	strh	r3, [r7, #14]
 8009bb8:	e005      	b.n	8009bc6 <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0xb6>
        }
        else
        {
            x = 3800 - x;
 8009bba:	89fb      	ldrh	r3, [r7, #14]
 8009bbc:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8009bc0:	3308      	adds	r3, #8
 8009bc2:	b29b      	uxth	r3, r3
 8009bc4:	81fb      	strh	r3, [r7, #14]
        }

        /* X value second correction */
        xr = x / 15;
 8009bc6:	89fb      	ldrh	r3, [r7, #14]
 8009bc8:	4a2f      	ldr	r2, [pc, #188]	; (8009c88 <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x178>)
 8009bca:	fba2 2303 	umull	r2, r3, r2, r3
 8009bce:	08db      	lsrs	r3, r3, #3
 8009bd0:	82fb      	strh	r3, [r7, #22]

        /* Return X position value */
        if (xr <= 0)
 8009bd2:	8afb      	ldrh	r3, [r7, #22]
 8009bd4:	2b00      	cmp	r3, #0
 8009bd6:	d102      	bne.n	8009bde <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0xce>
        {
            xr = 0;
 8009bd8:	2300      	movs	r3, #0
 8009bda:	82fb      	strh	r3, [r7, #22]
 8009bdc:	e008      	b.n	8009bf0 <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>
        }
        else if (xr > TsXBoundary)
 8009bde:	4b2b      	ldr	r3, [pc, #172]	; (8009c8c <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x17c>)
 8009be0:	881b      	ldrh	r3, [r3, #0]
 8009be2:	8afa      	ldrh	r2, [r7, #22]
 8009be4:	429a      	cmp	r2, r3
 8009be6:	d903      	bls.n	8009bf0 <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>
        {
            xr = TsXBoundary - 1;
 8009be8:	4b28      	ldr	r3, [pc, #160]	; (8009c8c <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x17c>)
 8009bea:	881b      	ldrh	r3, [r3, #0]
 8009bec:	3b01      	subs	r3, #1
 8009bee:	82fb      	strh	r3, [r7, #22]
        }
        else
        {
        }

        x = xr;
 8009bf0:	8afb      	ldrh	r3, [r7, #22]
 8009bf2:	81fb      	strh	r3, [r7, #14]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8009bf4:	89fb      	ldrh	r3, [r7, #14]
 8009bf6:	461a      	mov	r2, r3
 8009bf8:	4b25      	ldr	r3, [pc, #148]	; (8009c90 <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x180>)
 8009bfa:	681b      	ldr	r3, [r3, #0]
 8009bfc:	429a      	cmp	r2, r3
 8009bfe:	d906      	bls.n	8009c0e <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0xfe>
 8009c00:	89fa      	ldrh	r2, [r7, #14]
 8009c02:	4b23      	ldr	r3, [pc, #140]	; (8009c90 <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x180>)
 8009c04:	681b      	ldr	r3, [r3, #0]
 8009c06:	b29b      	uxth	r3, r3
 8009c08:	1ad3      	subs	r3, r2, r3
 8009c0a:	b29b      	uxth	r3, r3
 8009c0c:	e005      	b.n	8009c1a <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x10a>
 8009c0e:	4b20      	ldr	r3, [pc, #128]	; (8009c90 <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x180>)
 8009c10:	681b      	ldr	r3, [r3, #0]
 8009c12:	b29a      	uxth	r2, r3
 8009c14:	89fb      	ldrh	r3, [r7, #14]
 8009c16:	1ad3      	subs	r3, r2, r3
 8009c18:	b29b      	uxth	r3, r3
 8009c1a:	827b      	strh	r3, [r7, #18]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8009c1c:	89bb      	ldrh	r3, [r7, #12]
 8009c1e:	461a      	mov	r2, r3
 8009c20:	4b1c      	ldr	r3, [pc, #112]	; (8009c94 <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x184>)
 8009c22:	681b      	ldr	r3, [r3, #0]
 8009c24:	429a      	cmp	r2, r3
 8009c26:	d906      	bls.n	8009c36 <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x126>
 8009c28:	89ba      	ldrh	r2, [r7, #12]
 8009c2a:	4b1a      	ldr	r3, [pc, #104]	; (8009c94 <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x184>)
 8009c2c:	681b      	ldr	r3, [r3, #0]
 8009c2e:	b29b      	uxth	r3, r3
 8009c30:	1ad3      	subs	r3, r2, r3
 8009c32:	b29b      	uxth	r3, r3
 8009c34:	e005      	b.n	8009c42 <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x132>
 8009c36:	4b17      	ldr	r3, [pc, #92]	; (8009c94 <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x184>)
 8009c38:	681b      	ldr	r3, [r3, #0]
 8009c3a:	b29a      	uxth	r2, r3
 8009c3c:	89bb      	ldrh	r3, [r7, #12]
 8009c3e:	1ad3      	subs	r3, r2, r3
 8009c40:	b29b      	uxth	r3, r3
 8009c42:	823b      	strh	r3, [r7, #16]

        if (xDiff + yDiff > 5)
 8009c44:	8a7a      	ldrh	r2, [r7, #18]
 8009c46:	8a3b      	ldrh	r3, [r7, #16]
 8009c48:	4413      	add	r3, r2
 8009c4a:	2b05      	cmp	r3, #5
 8009c4c:	dd07      	ble.n	8009c5e <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x14e>
        {
            _x = x;
 8009c4e:	89fb      	ldrh	r3, [r7, #14]
 8009c50:	461a      	mov	r2, r3
 8009c52:	4b0f      	ldr	r3, [pc, #60]	; (8009c90 <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x180>)
 8009c54:	601a      	str	r2, [r3, #0]
            _y = y;
 8009c56:	89bb      	ldrh	r3, [r7, #12]
 8009c58:	461a      	mov	r2, r3
 8009c5a:	4b0e      	ldr	r3, [pc, #56]	; (8009c94 <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x184>)
 8009c5c:	601a      	str	r2, [r3, #0]
        }

        /* Update the X position */
        TsState->X = _x;
 8009c5e:	4b0c      	ldr	r3, [pc, #48]	; (8009c90 <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x180>)
 8009c60:	681b      	ldr	r3, [r3, #0]
 8009c62:	b29a      	uxth	r2, r3
 8009c64:	687b      	ldr	r3, [r7, #4]
 8009c66:	805a      	strh	r2, [r3, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8009c68:	4b0a      	ldr	r3, [pc, #40]	; (8009c94 <_ZL15BSP_TS_GetStateP15TS_StateTypeDef+0x184>)
 8009c6a:	681b      	ldr	r3, [r3, #0]
 8009c6c:	b29a      	uxth	r2, r3
 8009c6e:	687b      	ldr	r3, [r7, #4]
 8009c70:	809a      	strh	r2, [r3, #4]
    }
}
 8009c72:	bf00      	nop
 8009c74:	3718      	adds	r7, #24
 8009c76:	46bd      	mov	sp, r7
 8009c78:	bd80      	pop	{r7, pc}
 8009c7a:	bf00      	nop
 8009c7c:	20025d7c 	.word	0x20025d7c
 8009c80:	ba2e8ba3 	.word	0xba2e8ba3
 8009c84:	20025d82 	.word	0x20025d82
 8009c88:	88888889 	.word	0x88888889
 8009c8c:	20025d80 	.word	0x20025d80
 8009c90:	20025d84 	.word	0x20025d84
 8009c94:	20025d88 	.word	0x20025d88

08009c98 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8009c98:	b580      	push	{r7, lr}
 8009c9a:	b082      	sub	sp, #8
 8009c9c:	af00      	add	r7, sp, #0
 8009c9e:	6078      	str	r0, [r7, #4]
 8009ca0:	4a05      	ldr	r2, [pc, #20]	; (8009cb8 <_ZN20STM32TouchControllerD1Ev+0x20>)
 8009ca2:	687b      	ldr	r3, [r7, #4]
 8009ca4:	601a      	str	r2, [r3, #0]
 8009ca6:	687b      	ldr	r3, [r7, #4]
 8009ca8:	4618      	mov	r0, r3
 8009caa:	f7ff fea9 	bl	8009a00 <_ZN8touchgfx15TouchControllerD1Ev>
 8009cae:	687b      	ldr	r3, [r7, #4]
 8009cb0:	4618      	mov	r0, r3
 8009cb2:	3708      	adds	r7, #8
 8009cb4:	46bd      	mov	sp, r7
 8009cb6:	bd80      	pop	{r7, pc}
 8009cb8:	0801f954 	.word	0x0801f954

08009cbc <_ZN20STM32TouchControllerD0Ev>:
 8009cbc:	b580      	push	{r7, lr}
 8009cbe:	b082      	sub	sp, #8
 8009cc0:	af00      	add	r7, sp, #0
 8009cc2:	6078      	str	r0, [r7, #4]
 8009cc4:	6878      	ldr	r0, [r7, #4]
 8009cc6:	f7ff ffe7 	bl	8009c98 <_ZN20STM32TouchControllerD1Ev>
 8009cca:	2104      	movs	r1, #4
 8009ccc:	6878      	ldr	r0, [r7, #4]
 8009cce:	f013 fe7e 	bl	801d9ce <_ZdlPvj>
 8009cd2:	687b      	ldr	r3, [r7, #4]
 8009cd4:	4618      	mov	r0, r3
 8009cd6:	3708      	adds	r7, #8
 8009cd8:	46bd      	mov	sp, r7
 8009cda:	bd80      	pop	{r7, pc}

08009cdc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 8009cdc:	b480      	push	{r7}
 8009cde:	b083      	sub	sp, #12
 8009ce0:	af00      	add	r7, sp, #0
 8009ce2:	4603      	mov	r3, r0
 8009ce4:	71fb      	strb	r3, [r7, #7]

}
 8009ce6:	bf00      	nop
 8009ce8:	370c      	adds	r7, #12
 8009cea:	46bd      	mov	sp, r7
 8009cec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cf0:	4770      	bx	lr

08009cf2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 8009cf2:	b480      	push	{r7}
 8009cf4:	b083      	sub	sp, #12
 8009cf6:	af00      	add	r7, sp, #0
 8009cf8:	4603      	mov	r3, r0
 8009cfa:	71fb      	strb	r3, [r7, #7]

}
 8009cfc:	bf00      	nop
 8009cfe:	370c      	adds	r7, #12
 8009d00:	46bd      	mov	sp, r7
 8009d02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d06:	4770      	bx	lr

08009d08 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 8009d08:	b480      	push	{r7}
 8009d0a:	b083      	sub	sp, #12
 8009d0c:	af00      	add	r7, sp, #0
 8009d0e:	4603      	mov	r3, r0
 8009d10:	71fb      	strb	r3, [r7, #7]

}
 8009d12:	bf00      	nop
 8009d14:	370c      	adds	r7, #12
 8009d16:	46bd      	mov	sp, r7
 8009d18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d1c:	4770      	bx	lr
	...

08009d20 <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 8009d20:	b480      	push	{r7}
 8009d22:	b083      	sub	sp, #12
 8009d24:	af00      	add	r7, sp, #0
 8009d26:	6078      	str	r0, [r7, #4]
    {
 8009d28:	4a04      	ldr	r2, [pc, #16]	; (8009d3c <_ZN8touchgfx3HALD1Ev+0x1c>)
 8009d2a:	687b      	ldr	r3, [r7, #4]
 8009d2c:	601a      	str	r2, [r3, #0]
    }
 8009d2e:	687b      	ldr	r3, [r7, #4]
 8009d30:	4618      	mov	r0, r3
 8009d32:	370c      	adds	r7, #12
 8009d34:	46bd      	mov	sp, r7
 8009d36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d3a:	4770      	bx	lr
 8009d3c:	08020258 	.word	0x08020258

08009d40 <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 8009d40:	b580      	push	{r7, lr}
 8009d42:	b082      	sub	sp, #8
 8009d44:	af00      	add	r7, sp, #0
 8009d46:	6078      	str	r0, [r7, #4]
    }
 8009d48:	6878      	ldr	r0, [r7, #4]
 8009d4a:	f7ff ffe9 	bl	8009d20 <_ZN8touchgfx3HALD1Ev>
 8009d4e:	217c      	movs	r1, #124	; 0x7c
 8009d50:	6878      	ldr	r0, [r7, #4]
 8009d52:	f013 fe3c 	bl	801d9ce <_ZdlPvj>
 8009d56:	687b      	ldr	r3, [r7, #4]
 8009d58:	4618      	mov	r0, r3
 8009d5a:	3708      	adds	r7, #8
 8009d5c:	46bd      	mov	sp, r7
 8009d5e:	bd80      	pop	{r7, pc}

08009d60 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 8009d60:	b480      	push	{r7}
 8009d62:	b083      	sub	sp, #12
 8009d64:	af00      	add	r7, sp, #0
 8009d66:	6078      	str	r0, [r7, #4]
 8009d68:	460b      	mov	r3, r1
 8009d6a:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 8009d6c:	687b      	ldr	r3, [r7, #4]
 8009d6e:	78fa      	ldrb	r2, [r7, #3]
 8009d70:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8009d74:	687b      	ldr	r3, [r7, #4]
 8009d76:	2201      	movs	r2, #1
 8009d78:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
    }
 8009d7c:	bf00      	nop
 8009d7e:	370c      	adds	r7, #12
 8009d80:	46bd      	mov	sp, r7
 8009d82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d86:	4770      	bx	lr

08009d88 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8009d88:	b580      	push	{r7, lr}
 8009d8a:	b082      	sub	sp, #8
 8009d8c:	af00      	add	r7, sp, #0
 8009d8e:	6078      	str	r0, [r7, #4]
 8009d90:	460b      	mov	r3, r1
 8009d92:	807b      	strh	r3, [r7, #2]
 8009d94:	4613      	mov	r3, r2
 8009d96:	803b      	strh	r3, [r7, #0]
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8009d98:	4b0c      	ldr	r3, [pc, #48]	; (8009dcc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 8009d9a:	881b      	ldrh	r3, [r3, #0]
 8009d9c:	887a      	ldrh	r2, [r7, #2]
 8009d9e:	429a      	cmp	r2, r3
 8009da0:	d304      	bcc.n	8009dac <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 8009da2:	4b0b      	ldr	r3, [pc, #44]	; (8009dd0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 8009da4:	881b      	ldrh	r3, [r3, #0]
 8009da6:	883a      	ldrh	r2, [r7, #0]
 8009da8:	429a      	cmp	r2, r3
 8009daa:	d205      	bcs.n	8009db8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 8009dac:	4b09      	ldr	r3, [pc, #36]	; (8009dd4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 8009dae:	4a0a      	ldr	r2, [pc, #40]	; (8009dd8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 8009db0:	219e      	movs	r1, #158	; 0x9e
 8009db2:	480a      	ldr	r0, [pc, #40]	; (8009ddc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 8009db4:	f013 fe3a 	bl	801da2c <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8009db8:	4a09      	ldr	r2, [pc, #36]	; (8009de0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 8009dba:	887b      	ldrh	r3, [r7, #2]
 8009dbc:	8013      	strh	r3, [r2, #0]
        FRAME_BUFFER_HEIGHT = height;
 8009dbe:	4a09      	ldr	r2, [pc, #36]	; (8009de4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 8009dc0:	883b      	ldrh	r3, [r7, #0]
 8009dc2:	8013      	strh	r3, [r2, #0]
    }
 8009dc4:	bf00      	nop
 8009dc6:	3708      	adds	r7, #8
 8009dc8:	46bd      	mov	sp, r7
 8009dca:	bd80      	pop	{r7, pc}
 8009dcc:	20026ef2 	.word	0x20026ef2
 8009dd0:	20026ef4 	.word	0x20026ef4
 8009dd4:	0801f260 	.word	0x0801f260
 8009dd8:	0801f2c4 	.word	0x0801f2c4
 8009ddc:	0801f308 	.word	0x0801f308
 8009de0:	20026ef8 	.word	0x20026ef8
 8009de4:	20026efa 	.word	0x20026efa

08009de8 <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *
     * @return a bitmask of the supported blitcaps.
     *
     * @see enableDMAAcceleration
     */
    virtual BlitOperations getBlitCaps()
 8009de8:	b580      	push	{r7, lr}
 8009dea:	b082      	sub	sp, #8
 8009dec:	af00      	add	r7, sp, #0
 8009dee:	6078      	str	r0, [r7, #4]
    {
        if (useDMAAcceleration)
 8009df0:	687b      	ldr	r3, [r7, #4]
 8009df2:	f893 3077 	ldrb.w	r3, [r3, #119]	; 0x77
 8009df6:	2b00      	cmp	r3, #0
 8009df8:	d009      	beq.n	8009e0e <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
        {
            return dma.getBlitCaps();
 8009dfa:	687b      	ldr	r3, [r7, #4]
 8009dfc:	685a      	ldr	r2, [r3, #4]
 8009dfe:	687b      	ldr	r3, [r7, #4]
 8009e00:	685b      	ldr	r3, [r3, #4]
 8009e02:	681b      	ldr	r3, [r3, #0]
 8009e04:	681b      	ldr	r3, [r3, #0]
 8009e06:	4610      	mov	r0, r2
 8009e08:	4798      	blx	r3
 8009e0a:	4603      	mov	r3, r0
 8009e0c:	e000      	b.n	8009e10 <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
        }
        return static_cast<BlitOperations>(0);
 8009e0e:	2300      	movs	r3, #0
    }
 8009e10:	4618      	mov	r0, r3
 8009e12:	3708      	adds	r7, #8
 8009e14:	46bd      	mov	sp, r7
 8009e16:	bd80      	pop	{r7, pc}

08009e18 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    /**
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     *
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     */
    virtual void backPorchExited()
 8009e18:	b580      	push	{r7, lr}
 8009e1a:	b082      	sub	sp, #8
 8009e1c:	af00      	add	r7, sp, #0
 8009e1e:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
 8009e20:	6878      	ldr	r0, [r7, #4]
 8009e22:	f002 ff73 	bl	800cd0c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8009e26:	687b      	ldr	r3, [r7, #4]
 8009e28:	681b      	ldr	r3, [r3, #0]
 8009e2a:	33ac      	adds	r3, #172	; 0xac
 8009e2c:	681b      	ldr	r3, [r3, #0]
 8009e2e:	6878      	ldr	r0, [r7, #4]
 8009e30:	4798      	blx	r3
    }
 8009e32:	bf00      	nop
 8009e34:	3708      	adds	r7, #8
 8009e36:	46bd      	mov	sp, r7
 8009e38:	bd80      	pop	{r7, pc}

08009e3a <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
 8009e3a:	b480      	push	{r7}
 8009e3c:	b083      	sub	sp, #12
 8009e3e:	af00      	add	r7, sp, #0
 8009e40:	6078      	str	r0, [r7, #4]
 8009e42:	6039      	str	r1, [r7, #0]
    {
        return false;
 8009e44:	2300      	movs	r3, #0
    }
 8009e46:	4618      	mov	r0, r3
 8009e48:	370c      	adds	r7, #12
 8009e4a:	46bd      	mov	sp, r7
 8009e4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e50:	4770      	bx	lr
	...

08009e54 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setAnimationStorage
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8009e54:	b580      	push	{r7, lr}
 8009e56:	b084      	sub	sp, #16
 8009e58:	af00      	add	r7, sp, #0
 8009e5a:	60f8      	str	r0, [r7, #12]
 8009e5c:	60b9      	str	r1, [r7, #8]
 8009e5e:	607a      	str	r2, [r7, #4]
 8009e60:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8009e62:	68bb      	ldr	r3, [r7, #8]
 8009e64:	2b00      	cmp	r3, #0
 8009e66:	d106      	bne.n	8009e76 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 8009e68:	4b0f      	ldr	r3, [pc, #60]	; (8009ea8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 8009e6a:	4a10      	ldr	r2, [pc, #64]	; (8009eac <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 8009e6c:	f240 21bb 	movw	r1, #699	; 0x2bb
 8009e70:	480f      	ldr	r0, [pc, #60]	; (8009eb0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 8009e72:	f013 fddb 	bl	801da2c <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 8009e76:	68fb      	ldr	r3, [r7, #12]
 8009e78:	68ba      	ldr	r2, [r7, #8]
 8009e7a:	63da      	str	r2, [r3, #60]	; 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8009e7c:	68fb      	ldr	r3, [r7, #12]
 8009e7e:	687a      	ldr	r2, [r7, #4]
 8009e80:	641a      	str	r2, [r3, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8009e82:	687b      	ldr	r3, [r7, #4]
 8009e84:	2b00      	cmp	r3, #0
 8009e86:	bf14      	ite	ne
 8009e88:	2301      	movne	r3, #1
 8009e8a:	2300      	moveq	r3, #0
 8009e8c:	b2da      	uxtb	r2, r3
 8009e8e:	4b09      	ldr	r3, [pc, #36]	; (8009eb4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 8009e90:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8009e92:	68fb      	ldr	r3, [r7, #12]
 8009e94:	681b      	ldr	r3, [r3, #0]
 8009e96:	338c      	adds	r3, #140	; 0x8c
 8009e98:	681b      	ldr	r3, [r3, #0]
 8009e9a:	6839      	ldr	r1, [r7, #0]
 8009e9c:	68f8      	ldr	r0, [r7, #12]
 8009e9e:	4798      	blx	r3
    }
 8009ea0:	bf00      	nop
 8009ea2:	3710      	adds	r7, #16
 8009ea4:	46bd      	mov	sp, r7
 8009ea6:	bd80      	pop	{r7, pc}
 8009ea8:	0801f34c 	.word	0x0801f34c
 8009eac:	0801f384 	.word	0x0801f384
 8009eb0:	0801f308 	.word	0x0801f308
 8009eb4:	20026efc 	.word	0x20026efc

08009eb8 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
 8009eb8:	b480      	push	{r7}
 8009eba:	b083      	sub	sp, #12
 8009ebc:	af00      	add	r7, sp, #0
 8009ebe:	6078      	str	r0, [r7, #4]
 8009ec0:	6039      	str	r1, [r7, #0]
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8009ec2:	687b      	ldr	r3, [r7, #4]
 8009ec4:	683a      	ldr	r2, [r7, #0]
 8009ec6:	645a      	str	r2, [r3, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8009ec8:	683b      	ldr	r3, [r7, #0]
 8009eca:	2b00      	cmp	r3, #0
 8009ecc:	bf14      	ite	ne
 8009ece:	2301      	movne	r3, #1
 8009ed0:	2300      	moveq	r3, #0
 8009ed2:	b2da      	uxtb	r2, r3
 8009ed4:	4b03      	ldr	r3, [pc, #12]	; (8009ee4 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 8009ed6:	701a      	strb	r2, [r3, #0]
    }
 8009ed8:	bf00      	nop
 8009eda:	370c      	adds	r7, #12
 8009edc:	46bd      	mov	sp, r7
 8009ede:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ee2:	4770      	bx	lr
 8009ee4:	20026efd 	.word	0x20026efd

08009ee8 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * Gets the flash data reader. This method must be implemented in
     * subclasses that uses a FlashDataReader object.
     *
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
 8009ee8:	b480      	push	{r7}
 8009eea:	b083      	sub	sp, #12
 8009eec:	af00      	add	r7, sp, #0
 8009eee:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8009ef0:	2300      	movs	r3, #0
    }
 8009ef2:	4618      	mov	r0, r3
 8009ef4:	370c      	adds	r7, #12
 8009ef6:	46bd      	mov	sp, r7
 8009ef8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009efc:	4770      	bx	lr

08009efe <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param  ms Number of milliseconds to wait.
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
 8009efe:	b580      	push	{r7, lr}
 8009f00:	b082      	sub	sp, #8
 8009f02:	af00      	add	r7, sp, #0
 8009f04:	6078      	str	r0, [r7, #4]
 8009f06:	460b      	mov	r3, r1
 8009f08:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
 8009f0a:	687b      	ldr	r3, [r7, #4]
 8009f0c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009f0e:	2b00      	cmp	r3, #0
 8009f10:	d004      	beq.n	8009f1c <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
 8009f12:	687b      	ldr	r3, [r7, #4]
 8009f14:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009f16:	887a      	ldrh	r2, [r7, #2]
 8009f18:	4610      	mov	r0, r2
 8009f1a:	4798      	blx	r3
        }
    }
 8009f1c:	bf00      	nop
 8009f1e:	3708      	adds	r7, #8
 8009f20:	46bd      	mov	sp, r7
 8009f22:	bd80      	pop	{r7, pc}

08009f24 <_ZN8touchgfx3HAL10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA implementation. As default,
     * will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 8009f24:	b580      	push	{r7, lr}
 8009f26:	b082      	sub	sp, #8
 8009f28:	af00      	add	r7, sp, #0
 8009f2a:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
 8009f2c:	687b      	ldr	r3, [r7, #4]
 8009f2e:	685a      	ldr	r2, [r3, #4]
 8009f30:	687b      	ldr	r3, [r7, #4]
 8009f32:	685b      	ldr	r3, [r3, #4]
 8009f34:	681b      	ldr	r3, [r3, #0]
 8009f36:	3318      	adds	r3, #24
 8009f38:	681b      	ldr	r3, [r3, #0]
 8009f3a:	4610      	mov	r0, r2
 8009f3c:	4798      	blx	r3
 8009f3e:	4603      	mov	r3, r0
    }
 8009f40:	4618      	mov	r0, r3
 8009f42:	3708      	adds	r7, #8
 8009f44:	46bd      	mov	sp, r7
 8009f46:	bd80      	pop	{r7, pc}

08009f48 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 8009f48:	b480      	push	{r7}
 8009f4a:	b085      	sub	sp, #20
 8009f4c:	af00      	add	r7, sp, #0
 8009f4e:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 8009f50:	687b      	ldr	r3, [r7, #4]
 8009f52:	f893 2074 	ldrb.w	r2, [r3, #116]	; 0x74
 8009f56:	687b      	ldr	r3, [r7, #4]
 8009f58:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8009f5c:	429a      	cmp	r2, r3
 8009f5e:	d011      	beq.n	8009f84 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
        {
            if (DISPLAY_ROTATION == rotate0)
 8009f60:	4b14      	ldr	r3, [pc, #80]	; (8009fb4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 8009f62:	781b      	ldrb	r3, [r3, #0]
 8009f64:	2b00      	cmp	r3, #0
 8009f66:	d11e      	bne.n	8009fa6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 8009f68:	4b13      	ldr	r3, [pc, #76]	; (8009fb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 8009f6a:	881b      	ldrh	r3, [r3, #0]
 8009f6c:	81bb      	strh	r3, [r7, #12]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8009f6e:	4b13      	ldr	r3, [pc, #76]	; (8009fbc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 8009f70:	881a      	ldrh	r2, [r3, #0]
 8009f72:	4b11      	ldr	r3, [pc, #68]	; (8009fb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 8009f74:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = tmp;
 8009f76:	4a11      	ldr	r2, [pc, #68]	; (8009fbc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 8009f78:	89bb      	ldrh	r3, [r7, #12]
 8009f7a:	8013      	strh	r3, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 8009f7c:	4b0d      	ldr	r3, [pc, #52]	; (8009fb4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 8009f7e:	2201      	movs	r2, #1
 8009f80:	701a      	strb	r2, [r3, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
        }
    }
 8009f82:	e010      	b.n	8009fa6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
        else if (DISPLAY_ROTATION != rotate0)
 8009f84:	4b0b      	ldr	r3, [pc, #44]	; (8009fb4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 8009f86:	781b      	ldrb	r3, [r3, #0]
 8009f88:	2b00      	cmp	r3, #0
 8009f8a:	d00c      	beq.n	8009fa6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            const uint16_t tmp = DISPLAY_HEIGHT;
 8009f8c:	4b0a      	ldr	r3, [pc, #40]	; (8009fb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 8009f8e:	881b      	ldrh	r3, [r3, #0]
 8009f90:	81fb      	strh	r3, [r7, #14]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8009f92:	4b0a      	ldr	r3, [pc, #40]	; (8009fbc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 8009f94:	881a      	ldrh	r2, [r3, #0]
 8009f96:	4b08      	ldr	r3, [pc, #32]	; (8009fb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 8009f98:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = tmp;
 8009f9a:	4a08      	ldr	r2, [pc, #32]	; (8009fbc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 8009f9c:	89fb      	ldrh	r3, [r7, #14]
 8009f9e:	8013      	strh	r3, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 8009fa0:	4b04      	ldr	r3, [pc, #16]	; (8009fb4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 8009fa2:	2200      	movs	r2, #0
 8009fa4:	701a      	strb	r2, [r3, #0]
    }
 8009fa6:	bf00      	nop
 8009fa8:	3714      	adds	r7, #20
 8009faa:	46bd      	mov	sp, r7
 8009fac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009fb0:	4770      	bx	lr
 8009fb2:	bf00      	nop
 8009fb4:	20026ef6 	.word	0x20026ef6
 8009fb8:	20026ef4 	.word	0x20026ef4
 8009fbc:	20026ef2 	.word	0x20026ef2

08009fc0 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Invalidate D-Cache.
     *
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
 8009fc0:	b480      	push	{r7}
 8009fc2:	b083      	sub	sp, #12
 8009fc4:	af00      	add	r7, sp, #0
 8009fc6:	6078      	str	r0, [r7, #4]
    {
    }
 8009fc8:	bf00      	nop
 8009fca:	370c      	adds	r7, #12
 8009fcc:	46bd      	mov	sp, r7
 8009fce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009fd2:	4770      	bx	lr

08009fd4 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Flush D-Cache.
     *
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
 8009fd4:	b480      	push	{r7}
 8009fd6:	b083      	sub	sp, #12
 8009fd8:	af00      	add	r7, sp, #0
 8009fda:	6078      	str	r0, [r7, #4]
    {
    }
 8009fdc:	bf00      	nop
 8009fde:	370c      	adds	r7, #12
 8009fe0:	46bd      	mov	sp, r7
 8009fe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009fe6:	4770      	bx	lr

08009fe8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 8009fe8:	b580      	push	{r7, lr}
 8009fea:	b082      	sub	sp, #8
 8009fec:	af00      	add	r7, sp, #0
 8009fee:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 8009ff0:	687b      	ldr	r3, [r7, #4]
 8009ff2:	4618      	mov	r0, r3
 8009ff4:	f002 f813 	bl	800c01e <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 8009ff8:	bf00      	nop
 8009ffa:	3708      	adds	r7, #8
 8009ffc:	46bd      	mov	sp, r7
 8009ffe:	bd80      	pop	{r7, pc}

0800a000 <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 800a000:	b580      	push	{r7, lr}
 800a002:	b082      	sub	sp, #8
 800a004:	af00      	add	r7, sp, #0
 800a006:	6078      	str	r0, [r7, #4]
 800a008:	4a05      	ldr	r2, [pc, #20]	; (800a020 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800a00a:	687b      	ldr	r3, [r7, #4]
 800a00c:	601a      	str	r2, [r3, #0]
 800a00e:	687b      	ldr	r3, [r7, #4]
 800a010:	4618      	mov	r0, r3
 800a012:	f7ff fe85 	bl	8009d20 <_ZN8touchgfx3HALD1Ev>
 800a016:	687b      	ldr	r3, [r7, #4]
 800a018:	4618      	mov	r0, r3
 800a01a:	3708      	adds	r7, #8
 800a01c:	46bd      	mov	sp, r7
 800a01e:	bd80      	pop	{r7, pc}
 800a020:	0801fba4 	.word	0x0801fba4

0800a024 <_ZN20TouchGFXGeneratedHALD0Ev>:
 800a024:	b580      	push	{r7, lr}
 800a026:	b082      	sub	sp, #8
 800a028:	af00      	add	r7, sp, #0
 800a02a:	6078      	str	r0, [r7, #4]
 800a02c:	6878      	ldr	r0, [r7, #4]
 800a02e:	f7ff ffe7 	bl	800a000 <_ZN20TouchGFXGeneratedHALD1Ev>
 800a032:	217c      	movs	r1, #124	; 0x7c
 800a034:	6878      	ldr	r0, [r7, #4]
 800a036:	f013 fcca 	bl	801d9ce <_ZdlPvj>
 800a03a:	687b      	ldr	r3, [r7, #4]
 800a03c:	4618      	mov	r0, r3
 800a03e:	3708      	adds	r7, #8
 800a040:	46bd      	mov	sp, r7
 800a042:	bd80      	pop	{r7, pc}

0800a044 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800a044:	b580      	push	{r7, lr}
 800a046:	b082      	sub	sp, #8
 800a048:	af00      	add	r7, sp, #0
 800a04a:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 800a04c:	687b      	ldr	r3, [r7, #4]
 800a04e:	4618      	mov	r0, r3
 800a050:	f7ff ffca 	bl	8009fe8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 800a054:	bf00      	nop
 800a056:	3708      	adds	r7, #8
 800a058:	46bd      	mov	sp, r7
 800a05a:	bd80      	pop	{r7, pc}

0800a05c <_ZN11TouchGFXHAL10initializeEv>:
/* USER CODE BEGIN TouchGFXHAL.cpp */

using namespace touchgfx;

void TouchGFXHAL::initialize()
{
 800a05c:	b580      	push	{r7, lr}
 800a05e:	b082      	sub	sp, #8
 800a060:	af00      	add	r7, sp, #0
 800a062:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800a064:	687b      	ldr	r3, [r7, #4]
 800a066:	4618      	mov	r0, r3
 800a068:	f001 fb14 	bl	800b694 <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 800a06c:	bf00      	nop
 800a06e:	3708      	adds	r7, #8
 800a070:	46bd      	mov	sp, r7
 800a072:	bd80      	pop	{r7, pc}

0800a074 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 800a074:	b580      	push	{r7, lr}
 800a076:	b082      	sub	sp, #8
 800a078:	af00      	add	r7, sp, #0
 800a07a:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800a07c:	687b      	ldr	r3, [r7, #4]
 800a07e:	4618      	mov	r0, r3
 800a080:	f001 fbc2 	bl	800b808 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800a084:	4603      	mov	r3, r0
}
 800a086:	4618      	mov	r0, r3
 800a088:	3708      	adds	r7, #8
 800a08a:	46bd      	mov	sp, r7
 800a08c:	bd80      	pop	{r7, pc}

0800a08e <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 800a08e:	b580      	push	{r7, lr}
 800a090:	b082      	sub	sp, #8
 800a092:	af00      	add	r7, sp, #0
 800a094:	6078      	str	r0, [r7, #4]
 800a096:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800a098:	687b      	ldr	r3, [r7, #4]
 800a09a:	6839      	ldr	r1, [r7, #0]
 800a09c:	4618      	mov	r0, r3
 800a09e:	f001 fbc1 	bl	800b824 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 800a0a2:	bf00      	nop
 800a0a4:	3708      	adds	r7, #8
 800a0a6:	46bd      	mov	sp, r7
 800a0a8:	bd80      	pop	{r7, pc}

0800a0aa <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800a0aa:	b580      	push	{r7, lr}
 800a0ac:	b082      	sub	sp, #8
 800a0ae:	af00      	add	r7, sp, #0
 800a0b0:	6078      	str	r0, [r7, #4]
 800a0b2:	6039      	str	r1, [r7, #0]
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate he start adress of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800a0b4:	687b      	ldr	r3, [r7, #4]
 800a0b6:	6839      	ldr	r1, [r7, #0]
 800a0b8:	4618      	mov	r0, r3
 800a0ba:	f001 fbc9 	bl	800b850 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 800a0be:	bf00      	nop
 800a0c0:	3708      	adds	r7, #8
 800a0c2:	46bd      	mov	sp, r7
 800a0c4:	bd80      	pop	{r7, pc}

0800a0c6 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800a0c6:	b580      	push	{r7, lr}
 800a0c8:	b084      	sub	sp, #16
 800a0ca:	af00      	add	r7, sp, #0
 800a0cc:	60f8      	str	r0, [r7, #12]
 800a0ce:	60b9      	str	r1, [r7, #8]
 800a0d0:	607a      	str	r2, [r7, #4]
 800a0d2:	603b      	str	r3, [r7, #0]
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800a0d4:	68f8      	ldr	r0, [r7, #12]
 800a0d6:	683b      	ldr	r3, [r7, #0]
 800a0d8:	687a      	ldr	r2, [r7, #4]
 800a0da:	68b9      	ldr	r1, [r7, #8]
 800a0dc:	f001 fbc6 	bl	800b86c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 800a0e0:	4603      	mov	r3, r0
}
 800a0e2:	4618      	mov	r0, r3
 800a0e4:	3710      	adds	r7, #16
 800a0e6:	46bd      	mov	sp, r7
 800a0e8:	bd80      	pop	{r7, pc}

0800a0ea <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 800a0ea:	b580      	push	{r7, lr}
 800a0ec:	b082      	sub	sp, #8
 800a0ee:	af00      	add	r7, sp, #0
 800a0f0:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800a0f2:	687b      	ldr	r3, [r7, #4]
 800a0f4:	4618      	mov	r0, r3
 800a0f6:	f001 fb07 	bl	800b708 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 800a0fa:	bf00      	nop
 800a0fc:	3708      	adds	r7, #8
 800a0fe:	46bd      	mov	sp, r7
 800a100:	bd80      	pop	{r7, pc}

0800a102 <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 800a102:	b580      	push	{r7, lr}
 800a104:	b082      	sub	sp, #8
 800a106:	af00      	add	r7, sp, #0
 800a108:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800a10a:	687b      	ldr	r3, [r7, #4]
 800a10c:	4618      	mov	r0, r3
 800a10e:	f001 fb0b 	bl	800b728 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 800a112:	bf00      	nop
 800a114:	3708      	adds	r7, #8
 800a116:	46bd      	mov	sp, r7
 800a118:	bd80      	pop	{r7, pc}

0800a11a <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 800a11a:	b580      	push	{r7, lr}
 800a11c:	b082      	sub	sp, #8
 800a11e:	af00      	add	r7, sp, #0
 800a120:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800a122:	687b      	ldr	r3, [r7, #4]
 800a124:	4618      	mov	r0, r3
 800a126:	f001 fb0d 	bl	800b744 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 800a12a:	bf00      	nop
 800a12c:	3708      	adds	r7, #8
 800a12e:	46bd      	mov	sp, r7
 800a130:	bd80      	pop	{r7, pc}

0800a132 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 800a132:	b580      	push	{r7, lr}
 800a134:	b082      	sub	sp, #8
 800a136:	af00      	add	r7, sp, #0
 800a138:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800a13a:	687b      	ldr	r3, [r7, #4]
 800a13c:	4618      	mov	r0, r3
 800a13e:	f001 fb0f 	bl	800b760 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 800a142:	bf00      	nop
 800a144:	3708      	adds	r7, #8
 800a146:	46bd      	mov	sp, r7
 800a148:	bd80      	pop	{r7, pc}

0800a14a <_ZN11TouchGFXHAL10beginFrameEv>:

bool TouchGFXHAL::beginFrame()
{
 800a14a:	b580      	push	{r7, lr}
 800a14c:	b082      	sub	sp, #8
 800a14e:	af00      	add	r7, sp, #0
 800a150:	6078      	str	r0, [r7, #4]
    return TouchGFXGeneratedHAL::beginFrame();
 800a152:	687b      	ldr	r3, [r7, #4]
 800a154:	4618      	mov	r0, r3
 800a156:	f001 fb31 	bl	800b7bc <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 800a15a:	4603      	mov	r3, r0
}
 800a15c:	4618      	mov	r0, r3
 800a15e:	3708      	adds	r7, #8
 800a160:	46bd      	mov	sp, r7
 800a162:	bd80      	pop	{r7, pc}

0800a164 <_ZN11TouchGFXHAL8endFrameEv>:

void TouchGFXHAL::endFrame()
{
 800a164:	b580      	push	{r7, lr}
 800a166:	b082      	sub	sp, #8
 800a168:	af00      	add	r7, sp, #0
 800a16a:	6078      	str	r0, [r7, #4]
    TouchGFXGeneratedHAL::endFrame();
 800a16c:	687b      	ldr	r3, [r7, #4]
 800a16e:	4618      	mov	r0, r3
 800a170:	f001 fb32 	bl	800b7d8 <_ZN20TouchGFXGeneratedHAL8endFrameEv>
}
 800a174:	bf00      	nop
 800a176:	3708      	adds	r7, #8
 800a178:	46bd      	mov	sp, r7
 800a17a:	bd80      	pop	{r7, pc}

0800a17c <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800a17c:	b580      	push	{r7, lr}
 800a17e:	b082      	sub	sp, #8
 800a180:	af00      	add	r7, sp, #0
 800a182:	6078      	str	r0, [r7, #4]
 800a184:	4a05      	ldr	r2, [pc, #20]	; (800a19c <_ZN11TouchGFXHALD1Ev+0x20>)
 800a186:	687b      	ldr	r3, [r7, #4]
 800a188:	601a      	str	r2, [r3, #0]
 800a18a:	687b      	ldr	r3, [r7, #4]
 800a18c:	4618      	mov	r0, r3
 800a18e:	f7ff ff37 	bl	800a000 <_ZN20TouchGFXGeneratedHALD1Ev>
 800a192:	687b      	ldr	r3, [r7, #4]
 800a194:	4618      	mov	r0, r3
 800a196:	3708      	adds	r7, #8
 800a198:	46bd      	mov	sp, r7
 800a19a:	bd80      	pop	{r7, pc}
 800a19c:	0801f984 	.word	0x0801f984

0800a1a0 <_ZN11TouchGFXHALD0Ev>:
 800a1a0:	b580      	push	{r7, lr}
 800a1a2:	b082      	sub	sp, #8
 800a1a4:	af00      	add	r7, sp, #0
 800a1a6:	6078      	str	r0, [r7, #4]
 800a1a8:	6878      	ldr	r0, [r7, #4]
 800a1aa:	f7ff ffe7 	bl	800a17c <_ZN11TouchGFXHALD1Ev>
 800a1ae:	217c      	movs	r1, #124	; 0x7c
 800a1b0:	6878      	ldr	r0, [r7, #4]
 800a1b2:	f013 fc0c 	bl	801d9ce <_ZdlPvj>
 800a1b6:	687b      	ldr	r3, [r7, #4]
 800a1b8:	4618      	mov	r0, r3
 800a1ba:	3708      	adds	r7, #8
 800a1bc:	46bd      	mov	sp, r7
 800a1be:	bd80      	pop	{r7, pc}

0800a1c0 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800a1c0:	b480      	push	{r7}
 800a1c2:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800a1c4:	4b05      	ldr	r3, [pc, #20]	; (800a1dc <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 800a1c6:	2200      	movs	r2, #0
 800a1c8:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 800a1ca:	4b05      	ldr	r3, [pc, #20]	; (800a1e0 <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 800a1cc:	2200      	movs	r2, #0
 800a1ce:	601a      	str	r2, [r3, #0]
}
 800a1d0:	bf00      	nop
 800a1d2:	46bd      	mov	sp, r7
 800a1d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1d8:	4770      	bx	lr
 800a1da:	bf00      	nop
 800a1dc:	20025d8c 	.word	0x20025d8c
 800a1e0:	20025d90 	.word	0x20025d90

0800a1e4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800a1e4:	b480      	push	{r7}
 800a1e6:	af00      	add	r7, sp, #0
    while(fb_sem);
 800a1e8:	4b08      	ldr	r3, [pc, #32]	; (800a20c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800a1ea:	681b      	ldr	r3, [r3, #0]
 800a1ec:	2b00      	cmp	r3, #0
 800a1ee:	bf14      	ite	ne
 800a1f0:	2301      	movne	r3, #1
 800a1f2:	2300      	moveq	r3, #0
 800a1f4:	b2db      	uxtb	r3, r3
 800a1f6:	2b00      	cmp	r3, #0
 800a1f8:	d000      	beq.n	800a1fc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x18>
 800a1fa:	e7f5      	b.n	800a1e8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x4>
    fb_sem = 1;
 800a1fc:	4b03      	ldr	r3, [pc, #12]	; (800a20c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800a1fe:	2201      	movs	r2, #1
 800a200:	601a      	str	r2, [r3, #0]
}
 800a202:	bf00      	nop
 800a204:	46bd      	mov	sp, r7
 800a206:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a20a:	4770      	bx	lr
 800a20c:	20025d8c 	.word	0x20025d8c

0800a210 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800a210:	b480      	push	{r7}
 800a212:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800a214:	4b03      	ldr	r3, [pc, #12]	; (800a224 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800a216:	2200      	movs	r2, #0
 800a218:	601a      	str	r2, [r3, #0]
}
 800a21a:	bf00      	nop
 800a21c:	46bd      	mov	sp, r7
 800a21e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a222:	4770      	bx	lr
 800a224:	20025d8c 	.word	0x20025d8c

0800a228 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 800a228:	b480      	push	{r7}
 800a22a:	af00      	add	r7, sp, #0
    fb_sem = 1;
 800a22c:	4b03      	ldr	r3, [pc, #12]	; (800a23c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800a22e:	2201      	movs	r2, #1
 800a230:	601a      	str	r2, [r3, #0]
}
 800a232:	bf00      	nop
 800a234:	46bd      	mov	sp, r7
 800a236:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a23a:	4770      	bx	lr
 800a23c:	20025d8c 	.word	0x20025d8c

0800a240 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800a240:	b480      	push	{r7}
 800a242:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800a244:	4b03      	ldr	r3, [pc, #12]	; (800a254 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800a246:	2200      	movs	r2, #0
 800a248:	601a      	str	r2, [r3, #0]
}
 800a24a:	bf00      	nop
 800a24c:	46bd      	mov	sp, r7
 800a24e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a252:	4770      	bx	lr
 800a254:	20025d8c 	.word	0x20025d8c

0800a258 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 800a258:	b480      	push	{r7}
 800a25a:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 800a25c:	4b03      	ldr	r3, [pc, #12]	; (800a26c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800a25e:	2201      	movs	r2, #1
 800a260:	601a      	str	r2, [r3, #0]
}
 800a262:	bf00      	nop
 800a264:	46bd      	mov	sp, r7
 800a266:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a26a:	4770      	bx	lr
 800a26c:	20025d90 	.word	0x20025d90

0800a270 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 800a270:	b480      	push	{r7}
 800a272:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 800a274:	4b03      	ldr	r3, [pc, #12]	; (800a284 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 800a276:	2200      	movs	r2, #0
 800a278:	601a      	str	r2, [r3, #0]
}
 800a27a:	bf00      	nop
 800a27c:	46bd      	mov	sp, r7
 800a27e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a282:	4770      	bx	lr
 800a284:	20025d90 	.word	0x20025d90

0800a288 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 800a288:	b480      	push	{r7}
 800a28a:	af00      	add	r7, sp, #0
    return vsync_sem;
 800a28c:	4b05      	ldr	r3, [pc, #20]	; (800a2a4 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 800a28e:	681b      	ldr	r3, [r3, #0]
 800a290:	2b00      	cmp	r3, #0
 800a292:	bf14      	ite	ne
 800a294:	2301      	movne	r3, #1
 800a296:	2300      	moveq	r3, #0
 800a298:	b2db      	uxtb	r3, r3
}
 800a29a:	4618      	mov	r0, r3
 800a29c:	46bd      	mov	sp, r7
 800a29e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2a2:	4770      	bx	lr
 800a2a4:	20025d90 	.word	0x20025d90

0800a2a8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800a2a8:	b580      	push	{r7, lr}
 800a2aa:	af00      	add	r7, sp, #0
    if(vsync_sem)
 800a2ac:	4b0a      	ldr	r3, [pc, #40]	; (800a2d8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800a2ae:	681b      	ldr	r3, [r3, #0]
 800a2b0:	2b00      	cmp	r3, #0
 800a2b2:	bf14      	ite	ne
 800a2b4:	2301      	movne	r3, #1
 800a2b6:	2300      	moveq	r3, #0
 800a2b8:	b2db      	uxtb	r3, r3
 800a2ba:	2b00      	cmp	r3, #0
 800a2bc:	d00a      	beq.n	800a2d4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 800a2be:	4b06      	ldr	r3, [pc, #24]	; (800a2d8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800a2c0:	2200      	movs	r2, #0
 800a2c2:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 800a2c4:	f7fd fcc8 	bl	8007c58 <_ZN8touchgfx3HAL11getInstanceEv>
 800a2c8:	4603      	mov	r3, r0
 800a2ca:	681a      	ldr	r2, [r3, #0]
 800a2cc:	3270      	adds	r2, #112	; 0x70
 800a2ce:	6812      	ldr	r2, [r2, #0]
 800a2d0:	4618      	mov	r0, r3
 800a2d2:	4790      	blx	r2
    }
}
 800a2d4:	bf00      	nop
 800a2d6:	bd80      	pop	{r7, pc}
 800a2d8:	20025d90 	.word	0x20025d90

0800a2dc <_ZN8touchgfx10OSWrappers9taskDelayEt>:
 *
 * see HAL::setFrameRefreshStrategy(FrameRefreshStrategy s)
 * see HAL::registerTaskDelayFunction(void (*delayF)(uint16_t))
 */
void OSWrappers::taskDelay(uint16_t ms)
{
 800a2dc:	b580      	push	{r7, lr}
 800a2de:	b082      	sub	sp, #8
 800a2e0:	af00      	add	r7, sp, #0
 800a2e2:	4603      	mov	r3, r0
 800a2e4:	80fb      	strh	r3, [r7, #6]
    HAL_Delay(ms);
 800a2e6:	88fb      	ldrh	r3, [r7, #6]
 800a2e8:	4618      	mov	r0, r3
 800a2ea:	f7f8 fa4d 	bl	8002788 <HAL_Delay>
}
 800a2ee:	bf00      	nop
 800a2f0:	3708      	adds	r7, #8
 800a2f2:	46bd      	mov	sp, r7
 800a2f4:	bd80      	pop	{r7, pc}
	...

0800a2f8 <__NVIC_EnableIRQ>:
{
 800a2f8:	b480      	push	{r7}
 800a2fa:	b083      	sub	sp, #12
 800a2fc:	af00      	add	r7, sp, #0
 800a2fe:	4603      	mov	r3, r0
 800a300:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800a302:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a306:	2b00      	cmp	r3, #0
 800a308:	db0b      	blt.n	800a322 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800a30a:	79fb      	ldrb	r3, [r7, #7]
 800a30c:	f003 021f 	and.w	r2, r3, #31
 800a310:	4907      	ldr	r1, [pc, #28]	; (800a330 <__NVIC_EnableIRQ+0x38>)
 800a312:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a316:	095b      	lsrs	r3, r3, #5
 800a318:	2001      	movs	r0, #1
 800a31a:	fa00 f202 	lsl.w	r2, r0, r2
 800a31e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800a322:	bf00      	nop
 800a324:	370c      	adds	r7, #12
 800a326:	46bd      	mov	sp, r7
 800a328:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a32c:	4770      	bx	lr
 800a32e:	bf00      	nop
 800a330:	e000e100 	.word	0xe000e100

0800a334 <__NVIC_DisableIRQ>:
{
 800a334:	b480      	push	{r7}
 800a336:	b083      	sub	sp, #12
 800a338:	af00      	add	r7, sp, #0
 800a33a:	4603      	mov	r3, r0
 800a33c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800a33e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a342:	2b00      	cmp	r3, #0
 800a344:	db12      	blt.n	800a36c <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800a346:	79fb      	ldrb	r3, [r7, #7]
 800a348:	f003 021f 	and.w	r2, r3, #31
 800a34c:	490a      	ldr	r1, [pc, #40]	; (800a378 <__NVIC_DisableIRQ+0x44>)
 800a34e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a352:	095b      	lsrs	r3, r3, #5
 800a354:	2001      	movs	r0, #1
 800a356:	fa00 f202 	lsl.w	r2, r0, r2
 800a35a:	3320      	adds	r3, #32
 800a35c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800a360:	f3bf 8f4f 	dsb	sy
}
 800a364:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800a366:	f3bf 8f6f 	isb	sy
}
 800a36a:	bf00      	nop
}
 800a36c:	bf00      	nop
 800a36e:	370c      	adds	r7, #12
 800a370:	46bd      	mov	sp, r7
 800a372:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a376:	4770      	bx	lr
 800a378:	e000e100 	.word	0xe000e100

0800a37c <_ZN8touchgfx9colortypeC1Ev>:
    colortype()
 800a37c:	b480      	push	{r7}
 800a37e:	b083      	sub	sp, #12
 800a380:	af00      	add	r7, sp, #0
 800a382:	6078      	str	r0, [r7, #4]
        : color(0)
 800a384:	687b      	ldr	r3, [r7, #4]
 800a386:	2200      	movs	r2, #0
 800a388:	601a      	str	r2, [r3, #0]
    }
 800a38a:	687b      	ldr	r3, [r7, #4]
 800a38c:	4618      	mov	r0, r3
 800a38e:	370c      	adds	r7, #12
 800a390:	46bd      	mov	sp, r7
 800a392:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a396:	4770      	bx	lr

0800a398 <_ZNK8touchgfx9colortypecvmEv>:
    operator uint32_t() const
 800a398:	b480      	push	{r7}
 800a39a:	b083      	sub	sp, #12
 800a39c:	af00      	add	r7, sp, #0
 800a39e:	6078      	str	r0, [r7, #4]
        return color;
 800a3a0:	687b      	ldr	r3, [r7, #4]
 800a3a2:	681b      	ldr	r3, [r3, #0]
    }
 800a3a4:	4618      	mov	r0, r3
 800a3a6:	370c      	adds	r7, #12
 800a3a8:	46bd      	mov	sp, r7
 800a3aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3ae:	4770      	bx	lr

0800a3b0 <_ZN8touchgfx9DMA_QueueD1Ev>:
     * @param  op The blitop to add.
     */
    virtual void pushCopyOf(const BlitOp& op) = 0;

    /** Finalizes an instance of the DMA_Queue class. */
    virtual ~DMA_Queue()
 800a3b0:	b480      	push	{r7}
 800a3b2:	b083      	sub	sp, #12
 800a3b4:	af00      	add	r7, sp, #0
 800a3b6:	6078      	str	r0, [r7, #4]
    {
 800a3b8:	4a04      	ldr	r2, [pc, #16]	; (800a3cc <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800a3ba:	687b      	ldr	r3, [r7, #4]
 800a3bc:	601a      	str	r2, [r3, #0]
    }
 800a3be:	687b      	ldr	r3, [r7, #4]
 800a3c0:	4618      	mov	r0, r3
 800a3c2:	370c      	adds	r7, #12
 800a3c4:	46bd      	mov	sp, r7
 800a3c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3ca:	4770      	bx	lr
 800a3cc:	0801faac 	.word	0x0801faac

0800a3d0 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 800a3d0:	b580      	push	{r7, lr}
 800a3d2:	b082      	sub	sp, #8
 800a3d4:	af00      	add	r7, sp, #0
 800a3d6:	6078      	str	r0, [r7, #4]
    }
 800a3d8:	6878      	ldr	r0, [r7, #4]
 800a3da:	f7ff ffe9 	bl	800a3b0 <_ZN8touchgfx9DMA_QueueD1Ev>
 800a3de:	2104      	movs	r1, #4
 800a3e0:	6878      	ldr	r0, [r7, #4]
 800a3e2:	f013 faf4 	bl	801d9ce <_ZdlPvj>
 800a3e6:	687b      	ldr	r3, [r7, #4]
 800a3e8:	4618      	mov	r0, r3
 800a3ea:	3708      	adds	r7, #8
 800a3ec:	46bd      	mov	sp, r7
 800a3ee:	bd80      	pop	{r7, pc}

0800a3f0 <_ZN8touchgfx13DMA_Interface5flushEv>:
     * @param  op The operation to add.
     */
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
 800a3f0:	b580      	push	{r7, lr}
 800a3f2:	b082      	sub	sp, #8
 800a3f4:	af00      	add	r7, sp, #0
 800a3f6:	6078      	str	r0, [r7, #4]
    {
        waitForFrameBufferSemaphore();
 800a3f8:	687b      	ldr	r3, [r7, #4]
 800a3fa:	681b      	ldr	r3, [r3, #0]
 800a3fc:	3344      	adds	r3, #68	; 0x44
 800a3fe:	681b      	ldr	r3, [r3, #0]
 800a400:	6878      	ldr	r0, [r7, #4]
 800a402:	4798      	blx	r3
    }
 800a404:	bf00      	nop
 800a406:	3708      	adds	r7, #8
 800a408:	46bd      	mov	sp, r7
 800a40a:	bd80      	pop	{r7, pc}

0800a40c <_ZN8touchgfx13DMA_InterfaceD1Ev>:
    {
        return DMA_TYPE_GENERIC;
    }

    /** Finalizes an instance of the DMA_Interface class. */
    virtual ~DMA_Interface()
 800a40c:	b480      	push	{r7}
 800a40e:	b083      	sub	sp, #12
 800a410:	af00      	add	r7, sp, #0
 800a412:	6078      	str	r0, [r7, #4]
    {
 800a414:	4a04      	ldr	r2, [pc, #16]	; (800a428 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800a416:	687b      	ldr	r3, [r7, #4]
 800a418:	601a      	str	r2, [r3, #0]
    }
 800a41a:	687b      	ldr	r3, [r7, #4]
 800a41c:	4618      	mov	r0, r3
 800a41e:	370c      	adds	r7, #12
 800a420:	46bd      	mov	sp, r7
 800a422:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a426:	4770      	bx	lr
 800a428:	080207b8 	.word	0x080207b8

0800a42c <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 800a42c:	b580      	push	{r7, lr}
 800a42e:	b082      	sub	sp, #8
 800a430:	af00      	add	r7, sp, #0
 800a432:	6078      	str	r0, [r7, #4]
    }
 800a434:	6878      	ldr	r0, [r7, #4]
 800a436:	f7ff ffe9 	bl	800a40c <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800a43a:	210c      	movs	r1, #12
 800a43c:	6878      	ldr	r0, [r7, #4]
 800a43e:	f013 fac6 	bl	801d9ce <_ZdlPvj>
 800a442:	687b      	ldr	r3, [r7, #4]
 800a444:	4618      	mov	r0, r3
 800a446:	3708      	adds	r7, #8
 800a448:	46bd      	mov	sp, r7
 800a44a:	bd80      	pop	{r7, pc}

0800a44c <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
    /**
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 800a44c:	b480      	push	{r7}
 800a44e:	b083      	sub	sp, #12
 800a450:	af00      	add	r7, sp, #0
 800a452:	6078      	str	r0, [r7, #4]
 800a454:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800a456:	4a09      	ldr	r2, [pc, #36]	; (800a47c <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 800a458:	687b      	ldr	r3, [r7, #4]
 800a45a:	601a      	str	r2, [r3, #0]
 800a45c:	687b      	ldr	r3, [r7, #4]
 800a45e:	683a      	ldr	r2, [r7, #0]
 800a460:	605a      	str	r2, [r3, #4]
 800a462:	687b      	ldr	r3, [r7, #4]
 800a464:	2200      	movs	r2, #0
 800a466:	721a      	strb	r2, [r3, #8]
 800a468:	687b      	ldr	r3, [r7, #4]
 800a46a:	2200      	movs	r2, #0
 800a46c:	725a      	strb	r2, [r3, #9]
    {
    }
 800a46e:	687b      	ldr	r3, [r7, #4]
 800a470:	4618      	mov	r0, r3
 800a472:	370c      	adds	r7, #12
 800a474:	46bd      	mov	sp, r7
 800a476:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a47a:	4770      	bx	lr
 800a47c:	080207b8 	.word	0x080207b8

0800a480 <_ZN8STM32DMA10getDMATypeEv>:
     *        Function for obtaining the DMA type of the concrete DMA_Interface implementation.
     *        As default, will return DMA_TYPE_CHROMART type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
 800a480:	b480      	push	{r7}
 800a482:	b083      	sub	sp, #12
 800a484:	af00      	add	r7, sp, #0
 800a486:	6078      	str	r0, [r7, #4]
    {
        return touchgfx::DMA_TYPE_CHROMART;
 800a488:	2301      	movs	r3, #1
    }
 800a48a:	4618      	mov	r0, r3
 800a48c:	370c      	adds	r7, #12
 800a48e:	46bd      	mov	sp, r7
 800a490:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a494:	4770      	bx	lr

0800a496 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Raises a DMA interrupt signal.
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
 800a496:	b580      	push	{r7, lr}
 800a498:	b082      	sub	sp, #8
 800a49a:	af00      	add	r7, sp, #0
 800a49c:	6078      	str	r0, [r7, #4]
    {
        executeCompleted();
 800a49e:	687a      	ldr	r2, [r7, #4]
 800a4a0:	687b      	ldr	r3, [r7, #4]
 800a4a2:	681b      	ldr	r3, [r3, #0]
 800a4a4:	3328      	adds	r3, #40	; 0x28
 800a4a6:	681b      	ldr	r3, [r3, #0]
 800a4a8:	4610      	mov	r0, r2
 800a4aa:	4798      	blx	r3
    }
 800a4ac:	bf00      	nop
 800a4ae:	3708      	adds	r7, #8
 800a4b0:	46bd      	mov	sp, r7
 800a4b2:	bd80      	pop	{r7, pc}

0800a4b4 <_ZN8touchgfx3HAL18signalDMAInterruptEv>:
    void signalDMAInterrupt()
 800a4b4:	b580      	push	{r7, lr}
 800a4b6:	b082      	sub	sp, #8
 800a4b8:	af00      	add	r7, sp, #0
 800a4ba:	6078      	str	r0, [r7, #4]
        dma.signalDMAInterrupt();
 800a4bc:	687b      	ldr	r3, [r7, #4]
 800a4be:	685a      	ldr	r2, [r3, #4]
 800a4c0:	687b      	ldr	r3, [r7, #4]
 800a4c2:	685b      	ldr	r3, [r3, #4]
 800a4c4:	681b      	ldr	r3, [r3, #0]
 800a4c6:	3314      	adds	r3, #20
 800a4c8:	681b      	ldr	r3, [r3, #0]
 800a4ca:	4610      	mov	r0, r2
 800a4cc:	4798      	blx	r3
    }
 800a4ce:	bf00      	nop
 800a4d0:	3708      	adds	r7, #8
 800a4d2:	46bd      	mov	sp, r7
 800a4d4:	bd80      	pop	{r7, pc}

0800a4d6 <DMA2D_XferCpltCallback>:

extern "C" DMA2D_HandleTypeDef hdma2d;

extern "C" {
    static void DMA2D_XferCpltCallback(DMA2D_HandleTypeDef* handle)
    {
 800a4d6:	b580      	push	{r7, lr}
 800a4d8:	b082      	sub	sp, #8
 800a4da:	af00      	add	r7, sp, #0
 800a4dc:	6078      	str	r0, [r7, #4]
        (void)handle; // Unused argument
        HAL::getInstance()->signalDMAInterrupt();
 800a4de:	f7fd fbbb 	bl	8007c58 <_ZN8touchgfx3HAL11getInstanceEv>
 800a4e2:	4603      	mov	r3, r0
 800a4e4:	4618      	mov	r0, r3
 800a4e6:	f7ff ffe5 	bl	800a4b4 <_ZN8touchgfx3HAL18signalDMAInterruptEv>
    }
 800a4ea:	bf00      	nop
 800a4ec:	3708      	adds	r7, #8
 800a4ee:	46bd      	mov	sp, r7
 800a4f0:	bd80      	pop	{r7, pc}

0800a4f2 <_ZN8touchgfx6BlitOpC1Ev>:

/**
 * BlitOp instances carry the required information for performing operations on the LCD
 * (framebuffer) using DMA.
 */
struct BlitOp
 800a4f2:	b580      	push	{r7, lr}
 800a4f4:	b082      	sub	sp, #8
 800a4f6:	af00      	add	r7, sp, #0
 800a4f8:	6078      	str	r0, [r7, #4]
 800a4fa:	687b      	ldr	r3, [r7, #4]
 800a4fc:	330c      	adds	r3, #12
 800a4fe:	4618      	mov	r0, r3
 800a500:	f7ff ff3c 	bl	800a37c <_ZN8touchgfx9colortypeC1Ev>
 800a504:	687b      	ldr	r3, [r7, #4]
 800a506:	4618      	mov	r0, r3
 800a508:	3708      	adds	r7, #8
 800a50a:	46bd      	mov	sp, r7
 800a50c:	bd80      	pop	{r7, pc}
	...

0800a510 <_ZN8STM32DMAC1Ev>:
}

STM32DMA::STM32DMA()
 800a510:	b5b0      	push	{r4, r5, r7, lr}
 800a512:	b082      	sub	sp, #8
 800a514:	af00      	add	r7, sp, #0
 800a516:	6078      	str	r0, [r7, #4]
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 800a518:	687a      	ldr	r2, [r7, #4]
 800a51a:	687b      	ldr	r3, [r7, #4]
 800a51c:	330c      	adds	r3, #12
 800a51e:	4619      	mov	r1, r3
 800a520:	4610      	mov	r0, r2
 800a522:	f7ff ff93 	bl	800a44c <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 800a526:	4a0e      	ldr	r2, [pc, #56]	; (800a560 <_ZN8STM32DMAC1Ev+0x50>)
 800a528:	687b      	ldr	r3, [r7, #4]
 800a52a:	601a      	str	r2, [r3, #0]
 800a52c:	687b      	ldr	r3, [r7, #4]
 800a52e:	f103 000c 	add.w	r0, r3, #12
 800a532:	687b      	ldr	r3, [r7, #4]
 800a534:	3320      	adds	r3, #32
 800a536:	2260      	movs	r2, #96	; 0x60
 800a538:	4619      	mov	r1, r3
 800a53a:	f002 fd4b 	bl	800cfd4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800a53e:	687b      	ldr	r3, [r7, #4]
 800a540:	3320      	adds	r3, #32
 800a542:	245f      	movs	r4, #95	; 0x5f
 800a544:	461d      	mov	r5, r3
 800a546:	2c00      	cmp	r4, #0
 800a548:	db05      	blt.n	800a556 <_ZN8STM32DMAC1Ev+0x46>
 800a54a:	4628      	mov	r0, r5
 800a54c:	f7ff ffd1 	bl	800a4f2 <_ZN8touchgfx6BlitOpC1Ev>
 800a550:	3524      	adds	r5, #36	; 0x24
 800a552:	3c01      	subs	r4, #1
 800a554:	e7f7      	b.n	800a546 <_ZN8STM32DMAC1Ev+0x36>
{
}
 800a556:	687b      	ldr	r3, [r7, #4]
 800a558:	4618      	mov	r0, r3
 800a55a:	3708      	adds	r7, #8
 800a55c:	46bd      	mov	sp, r7
 800a55e:	bdb0      	pop	{r4, r5, r7, pc}
 800a560:	0801fa5c 	.word	0x0801fa5c

0800a564 <_ZN8STM32DMAD1Ev>:

STM32DMA::~STM32DMA()
 800a564:	b580      	push	{r7, lr}
 800a566:	b082      	sub	sp, #8
 800a568:	af00      	add	r7, sp, #0
 800a56a:	6078      	str	r0, [r7, #4]
 800a56c:	4a09      	ldr	r2, [pc, #36]	; (800a594 <_ZN8STM32DMAD1Ev+0x30>)
 800a56e:	687b      	ldr	r3, [r7, #4]
 800a570:	601a      	str	r2, [r3, #0]
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
 800a572:	205a      	movs	r0, #90	; 0x5a
 800a574:	f7ff fede 	bl	800a334 <__NVIC_DisableIRQ>
STM32DMA::~STM32DMA()
 800a578:	687b      	ldr	r3, [r7, #4]
 800a57a:	330c      	adds	r3, #12
 800a57c:	4618      	mov	r0, r3
 800a57e:	f000 fac7 	bl	800ab10 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800a582:	687b      	ldr	r3, [r7, #4]
 800a584:	4618      	mov	r0, r3
 800a586:	f7ff ff41 	bl	800a40c <_ZN8touchgfx13DMA_InterfaceD1Ev>
}
 800a58a:	687b      	ldr	r3, [r7, #4]
 800a58c:	4618      	mov	r0, r3
 800a58e:	3708      	adds	r7, #8
 800a590:	46bd      	mov	sp, r7
 800a592:	bd80      	pop	{r7, pc}
 800a594:	0801fa5c 	.word	0x0801fa5c

0800a598 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 800a598:	b580      	push	{r7, lr}
 800a59a:	b082      	sub	sp, #8
 800a59c:	af00      	add	r7, sp, #0
 800a59e:	6078      	str	r0, [r7, #4]
}
 800a5a0:	6878      	ldr	r0, [r7, #4]
 800a5a2:	f7ff ffdf 	bl	800a564 <_ZN8STM32DMAD1Ev>
 800a5a6:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 800a5aa:	6878      	ldr	r0, [r7, #4]
 800a5ac:	f013 fa0f 	bl	801d9ce <_ZdlPvj>
 800a5b0:	687b      	ldr	r3, [r7, #4]
 800a5b2:	4618      	mov	r0, r3
 800a5b4:	3708      	adds	r7, #8
 800a5b6:	46bd      	mov	sp, r7
 800a5b8:	bd80      	pop	{r7, pc}
	...

0800a5bc <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
 800a5bc:	b580      	push	{r7, lr}
 800a5be:	b084      	sub	sp, #16
 800a5c0:	af00      	add	r7, sp, #0
 800a5c2:	6078      	str	r0, [r7, #4]
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800a5c4:	2300      	movs	r3, #0
 800a5c6:	60fb      	str	r3, [r7, #12]
 800a5c8:	4b10      	ldr	r3, [pc, #64]	; (800a60c <_ZN8STM32DMA10initializeEv+0x50>)
 800a5ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a5cc:	4a0f      	ldr	r2, [pc, #60]	; (800a60c <_ZN8STM32DMA10initializeEv+0x50>)
 800a5ce:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800a5d2:	6313      	str	r3, [r2, #48]	; 0x30
 800a5d4:	4b0d      	ldr	r3, [pc, #52]	; (800a60c <_ZN8STM32DMA10initializeEv+0x50>)
 800a5d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a5d8:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800a5dc:	60fb      	str	r3, [r7, #12]
 800a5de:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_DMA2D_FORCE_RESET();
 800a5e0:	4b0a      	ldr	r3, [pc, #40]	; (800a60c <_ZN8STM32DMA10initializeEv+0x50>)
 800a5e2:	691b      	ldr	r3, [r3, #16]
 800a5e4:	4a09      	ldr	r2, [pc, #36]	; (800a60c <_ZN8STM32DMA10initializeEv+0x50>)
 800a5e6:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800a5ea:	6113      	str	r3, [r2, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 800a5ec:	4b07      	ldr	r3, [pc, #28]	; (800a60c <_ZN8STM32DMA10initializeEv+0x50>)
 800a5ee:	691b      	ldr	r3, [r3, #16]
 800a5f0:	4a06      	ldr	r2, [pc, #24]	; (800a60c <_ZN8STM32DMA10initializeEv+0x50>)
 800a5f2:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800a5f6:	6113      	str	r3, [r2, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 800a5f8:	4b05      	ldr	r3, [pc, #20]	; (800a610 <_ZN8STM32DMA10initializeEv+0x54>)
 800a5fa:	4a06      	ldr	r2, [pc, #24]	; (800a614 <_ZN8STM32DMA10initializeEv+0x58>)
 800a5fc:	611a      	str	r2, [r3, #16]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
 800a5fe:	205a      	movs	r0, #90	; 0x5a
 800a600:	f7ff fe7a 	bl	800a2f8 <__NVIC_EnableIRQ>
}
 800a604:	bf00      	nop
 800a606:	3710      	adds	r7, #16
 800a608:	46bd      	mov	sp, r7
 800a60a:	bd80      	pop	{r7, pc}
 800a60c:	40023800 	.word	0x40023800
 800a610:	20025980 	.word	0x20025980
 800a614:	0800a4d7 	.word	0x0800a4d7

0800a618 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:

inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
{
 800a618:	b580      	push	{r7, lr}
 800a61a:	b084      	sub	sp, #16
 800a61c:	af00      	add	r7, sp, #0
 800a61e:	6078      	str	r0, [r7, #4]
 800a620:	460b      	mov	r3, r1
 800a622:	70fb      	strb	r3, [r7, #3]
    // Default color mode set to ARGB8888
    uint32_t dma2dColorMode = DMA2D_INPUT_ARGB8888;
 800a624:	2300      	movs	r3, #0
 800a626:	60fb      	str	r3, [r7, #12]

    switch (format)
 800a628:	78fb      	ldrb	r3, [r7, #3]
 800a62a:	2b0b      	cmp	r3, #11
 800a62c:	d826      	bhi.n	800a67c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x64>
 800a62e:	a201      	add	r2, pc, #4	; (adr r2, 800a634 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1c>)
 800a630:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a634:	0800a671 	.word	0x0800a671
 800a638:	0800a66b 	.word	0x0800a66b
 800a63c:	0800a665 	.word	0x0800a665
 800a640:	0800a67d 	.word	0x0800a67d
 800a644:	0800a67d 	.word	0x0800a67d
 800a648:	0800a67d 	.word	0x0800a67d
 800a64c:	0800a67d 	.word	0x0800a67d
 800a650:	0800a677 	.word	0x0800a677
 800a654:	0800a677 	.word	0x0800a677
 800a658:	0800a677 	.word	0x0800a677
 800a65c:	0800a677 	.word	0x0800a677
 800a660:	0800a677 	.word	0x0800a677
    {
    case Bitmap::ARGB8888: /* DMA2D input mode set to 32bit ARGB */
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 800a664:	2300      	movs	r3, #0
 800a666:	60fb      	str	r3, [r7, #12]
        break;
 800a668:	e00e      	b.n	800a688 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::RGB888: /* DMA2D input mode set to 24bit RGB */
        dma2dColorMode = DMA2D_INPUT_RGB888;
 800a66a:	2301      	movs	r3, #1
 800a66c:	60fb      	str	r3, [r7, #12]
        break;
 800a66e:	e00b      	b.n	800a688 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::RGB565: /* DMA2D input mode set to 16bit RGB */
        dma2dColorMode = DMA2D_INPUT_RGB565;
 800a670:	2302      	movs	r3, #2
 800a672:	60fb      	str	r3, [r7, #12]
        break;
 800a674:	e008      	b.n	800a688 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::ARGB2222: /* Fall through */
    case Bitmap::ABGR2222: /* Fall through */
    case Bitmap::RGBA2222: /* Fall through */
    case Bitmap::BGRA2222: /* Fall through */
    case Bitmap::L8:       /* DMA2D input mode set to 8bit Color Look up table*/
        dma2dColorMode = DMA2D_INPUT_L8;
 800a676:	2305      	movs	r3, #5
 800a678:	60fb      	str	r3, [r7, #12]
        break;
 800a67a:	e005      	b.n	800a688 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::BW:     /* Fall through */
    case Bitmap::BW_RLE: /* Fall through */
    case Bitmap::GRAY4:  /* Fall through */
    case Bitmap::GRAY2:  /* Fall through */
    default:             /* Unsupported input format for DMA2D */
        assert(0 && "Unsupported Format!");
 800a67c:	4b05      	ldr	r3, [pc, #20]	; (800a694 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x7c>)
 800a67e:	4a06      	ldr	r2, [pc, #24]	; (800a698 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x80>)
 800a680:	2166      	movs	r1, #102	; 0x66
 800a682:	4806      	ldr	r0, [pc, #24]	; (800a69c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x84>)
 800a684:	f013 f9d2 	bl	801da2c <__assert_func>
        break;
    }

    return dma2dColorMode;
 800a688:	68fb      	ldr	r3, [r7, #12]
}
 800a68a:	4618      	mov	r0, r3
 800a68c:	3710      	adds	r7, #16
 800a68e:	46bd      	mov	sp, r7
 800a690:	bd80      	pop	{r7, pc}
 800a692:	bf00      	nop
 800a694:	0801f3d4 	.word	0x0801f3d4
 800a698:	0801f3f0 	.word	0x0801f3f0
 800a69c:	0801f43c 	.word	0x0801f43c

0800a6a0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:

inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
{
 800a6a0:	b580      	push	{r7, lr}
 800a6a2:	b084      	sub	sp, #16
 800a6a4:	af00      	add	r7, sp, #0
 800a6a6:	6078      	str	r0, [r7, #4]
 800a6a8:	460b      	mov	r3, r1
 800a6aa:	70fb      	strb	r3, [r7, #3]
    // Default color mode set to ARGB8888
    uint32_t dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800a6ac:	2300      	movs	r3, #0
 800a6ae:	60fb      	str	r3, [r7, #12]

    switch (format)
 800a6b0:	78fb      	ldrb	r3, [r7, #3]
 800a6b2:	2b0a      	cmp	r3, #10
 800a6b4:	d821      	bhi.n	800a6fa <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x5a>
 800a6b6:	a201      	add	r2, pc, #4	; (adr r2, 800a6bc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1c>)
 800a6b8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a6bc:	0800a6f5 	.word	0x0800a6f5
 800a6c0:	0800a6ef 	.word	0x0800a6ef
 800a6c4:	0800a6e9 	.word	0x0800a6e9
 800a6c8:	0800a6fb 	.word	0x0800a6fb
 800a6cc:	0800a6fb 	.word	0x0800a6fb
 800a6d0:	0800a6fb 	.word	0x0800a6fb
 800a6d4:	0800a6fb 	.word	0x0800a6fb
 800a6d8:	0800a6ef 	.word	0x0800a6ef
 800a6dc:	0800a6ef 	.word	0x0800a6ef
 800a6e0:	0800a6ef 	.word	0x0800a6ef
 800a6e4:	0800a6ef 	.word	0x0800a6ef
    {
    case Bitmap::ARGB8888: /* DMA2D output mode set to 32bit ARGB */
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800a6e8:	2300      	movs	r3, #0
 800a6ea:	60fb      	str	r3, [r7, #12]
        break;
 800a6ec:	e00b      	b.n	800a706 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x66>
    case Bitmap::RGB888:   /* Fall through */
    case Bitmap::ARGB2222: /* Fall through */
    case Bitmap::ABGR2222: /* Fall through */
    case Bitmap::RGBA2222: /* Fall through */
    case Bitmap::BGRA2222: /* DMA2D output mode set to 24bit RGB */
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
 800a6ee:	2301      	movs	r3, #1
 800a6f0:	60fb      	str	r3, [r7, #12]
        break;
 800a6f2:	e008      	b.n	800a706 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x66>
    case Bitmap::RGB565: /* DMA2D output mode set to 16bit RGB */
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 800a6f4:	2302      	movs	r3, #2
 800a6f6:	60fb      	str	r3, [r7, #12]
        break;
 800a6f8:	e005      	b.n	800a706 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x66>
    case Bitmap::BW:     /* Fall through */
    case Bitmap::BW_RLE: /* Fall through */
    case Bitmap::GRAY4:  /* Fall through */
    case Bitmap::GRAY2:  /* Fall through */
    default:             /* Unsupported output format for DMA2D */
        assert(0 && "Unsupported Format!");
 800a6fa:	4b05      	ldr	r3, [pc, #20]	; (800a710 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>)
 800a6fc:	4a05      	ldr	r2, [pc, #20]	; (800a714 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x74>)
 800a6fe:	2187      	movs	r1, #135	; 0x87
 800a700:	4805      	ldr	r0, [pc, #20]	; (800a718 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x78>)
 800a702:	f013 f993 	bl	801da2c <__assert_func>
        break;
    }

    return dma2dColorMode;
 800a706:	68fb      	ldr	r3, [r7, #12]
}
 800a708:	4618      	mov	r0, r3
 800a70a:	3710      	adds	r7, #16
 800a70c:	46bd      	mov	sp, r7
 800a70e:	bd80      	pop	{r7, pc}
 800a710:	0801f3d4 	.word	0x0801f3d4
 800a714:	0801f468 	.word	0x0801f468
 800a718:	0801f43c 	.word	0x0801f43c

0800a71c <_ZN8STM32DMA11getBlitCapsEv>:

BlitOperations STM32DMA::getBlitCaps()
{
 800a71c:	b480      	push	{r7}
 800a71e:	b083      	sub	sp, #12
 800a720:	af00      	add	r7, sp, #0
 800a722:	6078      	str	r0, [r7, #4]
                                       | BLIT_OP_COPY_L8
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
 800a724:	f240 33ef 	movw	r3, #1007	; 0x3ef
}
 800a728:	4618      	mov	r0, r3
 800a72a:	370c      	adds	r7, #12
 800a72c:	46bd      	mov	sp, r7
 800a72e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a732:	4770      	bx	lr

0800a734 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 800a734:	b590      	push	{r4, r7, lr}
 800a736:	b089      	sub	sp, #36	; 0x24
 800a738:	af00      	add	r7, sp, #0
 800a73a:	6078      	str	r0, [r7, #4]
 800a73c:	6039      	str	r1, [r7, #0]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 800a73e:	683b      	ldr	r3, [r7, #0]
 800a740:	7f5b      	ldrb	r3, [r3, #29]
 800a742:	4619      	mov	r1, r3
 800a744:	6878      	ldr	r0, [r7, #4]
 800a746:	f7ff ff67 	bl	800a618 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 800a74a:	61b8      	str	r0, [r7, #24]
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800a74c:	683b      	ldr	r3, [r7, #0]
 800a74e:	7f9b      	ldrb	r3, [r3, #30]
 800a750:	4619      	mov	r1, r3
 800a752:	6878      	ldr	r0, [r7, #4]
 800a754:	f7ff ff60 	bl	800a618 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 800a758:	6178      	str	r0, [r7, #20]
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800a75a:	683b      	ldr	r3, [r7, #0]
 800a75c:	7f9b      	ldrb	r3, [r3, #30]
 800a75e:	4619      	mov	r1, r3
 800a760:	6878      	ldr	r0, [r7, #4]
 800a762:	f7ff ff9d 	bl	800a6a0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 800a766:	6138      	str	r0, [r7, #16]

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800a768:	683b      	ldr	r3, [r7, #0]
 800a76a:	8b5b      	ldrh	r3, [r3, #26]
 800a76c:	461a      	mov	r2, r3
 800a76e:	683b      	ldr	r3, [r7, #0]
 800a770:	8a9b      	ldrh	r3, [r3, #20]
 800a772:	1ad2      	subs	r2, r2, r3
 800a774:	4b95      	ldr	r3, [pc, #596]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a776:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800a778:	683b      	ldr	r3, [r7, #0]
 800a77a:	8b5b      	ldrh	r3, [r3, #26]
 800a77c:	461a      	mov	r2, r3
 800a77e:	683b      	ldr	r3, [r7, #0]
 800a780:	8a9b      	ldrh	r3, [r3, #20]
 800a782:	1ad2      	subs	r2, r2, r3
 800a784:	4b91      	ldr	r3, [pc, #580]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a786:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 800a788:	683b      	ldr	r3, [r7, #0]
 800a78a:	8b1b      	ldrh	r3, [r3, #24]
 800a78c:	461a      	mov	r2, r3
 800a78e:	683b      	ldr	r3, [r7, #0]
 800a790:	8a9b      	ldrh	r3, [r3, #20]
 800a792:	1ad2      	subs	r2, r2, r3
 800a794:	4b8d      	ldr	r3, [pc, #564]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a796:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800a798:	4a8c      	ldr	r2, [pc, #560]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a79a:	693b      	ldr	r3, [r7, #16]
 800a79c:	6353      	str	r3, [r2, #52]	; 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800a79e:	683b      	ldr	r3, [r7, #0]
 800a7a0:	8adb      	ldrh	r3, [r3, #22]
 800a7a2:	461a      	mov	r2, r3
 800a7a4:	683b      	ldr	r3, [r7, #0]
 800a7a6:	8a9b      	ldrh	r3, [r3, #20]
 800a7a8:	041b      	lsls	r3, r3, #16
 800a7aa:	431a      	orrs	r2, r3
 800a7ac:	4b87      	ldr	r3, [pc, #540]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a7ae:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800a7b0:	683b      	ldr	r3, [r7, #0]
 800a7b2:	691a      	ldr	r2, [r3, #16]
 800a7b4:	4b85      	ldr	r3, [pc, #532]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a7b6:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 800a7b8:	683b      	ldr	r3, [r7, #0]
 800a7ba:	685a      	ldr	r2, [r3, #4]
 800a7bc:	4b83      	ldr	r3, [pc, #524]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a7be:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 800a7c0:	683b      	ldr	r3, [r7, #0]
 800a7c2:	681b      	ldr	r3, [r3, #0]
 800a7c4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800a7c8:	d037      	beq.n	800a83a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
 800a7ca:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800a7ce:	f200 80e8 	bhi.w	800a9a2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x26e>
 800a7d2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a7d6:	d014      	beq.n	800a802 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xce>
 800a7d8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a7dc:	f200 80e1 	bhi.w	800a9a2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x26e>
 800a7e0:	2b80      	cmp	r3, #128	; 0x80
 800a7e2:	d05b      	beq.n	800a89c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
 800a7e4:	2b80      	cmp	r3, #128	; 0x80
 800a7e6:	f200 80dc 	bhi.w	800a9a2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x26e>
 800a7ea:	2b40      	cmp	r3, #64	; 0x40
 800a7ec:	f000 80c4 	beq.w	800a978 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x244>
 800a7f0:	2b40      	cmp	r3, #64	; 0x40
 800a7f2:	f200 80d6 	bhi.w	800a9a2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x26e>
 800a7f6:	2b04      	cmp	r3, #4
 800a7f8:	d03b      	beq.n	800a872 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13e>
 800a7fa:	2b20      	cmp	r3, #32
 800a7fc:	f000 80bc 	beq.w	800a978 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x244>
 800a800:	e0cf      	b.n	800a9a2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x26e>
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800a802:	683b      	ldr	r3, [r7, #0]
 800a804:	7f1b      	ldrb	r3, [r3, #28]
 800a806:	061b      	lsls	r3, r3, #24
 800a808:	4a70      	ldr	r2, [pc, #448]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a80a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800a80e:	f043 030a 	orr.w	r3, r3, #10
 800a812:	61d3      	str	r3, [r2, #28]

        /* set DMA2D foreground color */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800a814:	683b      	ldr	r3, [r7, #0]
 800a816:	330c      	adds	r3, #12
 800a818:	4c6c      	ldr	r4, [pc, #432]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a81a:	4618      	mov	r0, r3
 800a81c:	f7ff fdbc 	bl	800a398 <_ZNK8touchgfx9colortypecvmEv>
 800a820:	4603      	mov	r3, r0
 800a822:	6223      	str	r3, [r4, #32]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800a824:	4a69      	ldr	r2, [pc, #420]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a826:	697b      	ldr	r3, [r7, #20]
 800a828:	6253      	str	r3, [r2, #36]	; 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800a82a:	683b      	ldr	r3, [r7, #0]
 800a82c:	691a      	ldr	r2, [r3, #16]
 800a82e:	4b67      	ldr	r3, [pc, #412]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a830:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 800a832:	4b66      	ldr	r3, [pc, #408]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a834:	4a66      	ldr	r2, [pc, #408]	; (800a9d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800a836:	601a      	str	r2, [r3, #0]
        break;
 800a838:	e0d9      	b.n	800a9ee <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2ba>
    case BLIT_OP_COPY_A8:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800a83a:	683b      	ldr	r3, [r7, #0]
 800a83c:	7f1b      	ldrb	r3, [r3, #28]
 800a83e:	061b      	lsls	r3, r3, #24
 800a840:	4a62      	ldr	r2, [pc, #392]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a842:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800a846:	f043 0309 	orr.w	r3, r3, #9
 800a84a:	61d3      	str	r3, [r2, #28]

        /* set DMA2D foreground color */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800a84c:	683b      	ldr	r3, [r7, #0]
 800a84e:	330c      	adds	r3, #12
 800a850:	4c5e      	ldr	r4, [pc, #376]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a852:	4618      	mov	r0, r3
 800a854:	f7ff fda0 	bl	800a398 <_ZNK8touchgfx9colortypecvmEv>
 800a858:	4603      	mov	r3, r0
 800a85a:	6223      	str	r3, [r4, #32]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800a85c:	4a5b      	ldr	r2, [pc, #364]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a85e:	697b      	ldr	r3, [r7, #20]
 800a860:	6253      	str	r3, [r2, #36]	; 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800a862:	683b      	ldr	r3, [r7, #0]
 800a864:	691a      	ldr	r2, [r3, #16]
 800a866:	4b59      	ldr	r3, [pc, #356]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a868:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 800a86a:	4b58      	ldr	r3, [pc, #352]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a86c:	4a58      	ldr	r2, [pc, #352]	; (800a9d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800a86e:	601a      	str	r2, [r3, #0]
        break;
 800a870:	e0bd      	b.n	800a9ee <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2ba>
    case BLIT_OP_COPY_WITH_ALPHA:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800a872:	683b      	ldr	r3, [r7, #0]
 800a874:	7f1b      	ldrb	r3, [r3, #28]
 800a876:	061b      	lsls	r3, r3, #24
 800a878:	461a      	mov	r2, r3
 800a87a:	69bb      	ldr	r3, [r7, #24]
 800a87c:	4313      	orrs	r3, r2
 800a87e:	4a53      	ldr	r2, [pc, #332]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a880:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800a884:	61d3      	str	r3, [r2, #28]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800a886:	4a51      	ldr	r2, [pc, #324]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a888:	697b      	ldr	r3, [r7, #20]
 800a88a:	6253      	str	r3, [r2, #36]	; 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800a88c:	683b      	ldr	r3, [r7, #0]
 800a88e:	691a      	ldr	r2, [r3, #16]
 800a890:	4b4e      	ldr	r3, [pc, #312]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a892:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 800a894:	4b4d      	ldr	r3, [pc, #308]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a896:	4a4e      	ldr	r2, [pc, #312]	; (800a9d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800a898:	601a      	str	r2, [r3, #0]
        break;
 800a89a:	e0a8      	b.n	800a9ee <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2ba>
    case BLIT_OP_COPY_L8:
        {
            bool blend = true;
 800a89c:	2301      	movs	r3, #1
 800a89e:	77fb      	strb	r3, [r7, #31]
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 800a8a0:	683b      	ldr	r3, [r7, #0]
 800a8a2:	689b      	ldr	r3, [r3, #8]
 800a8a4:	60fb      	str	r3, [r7, #12]

            /* Write foreground CLUT memory address */
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 800a8a6:	68fb      	ldr	r3, [r7, #12]
 800a8a8:	1d1a      	adds	r2, r3, #4
 800a8aa:	4b48      	ldr	r3, [pc, #288]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a8ac:	62da      	str	r2, [r3, #44]	; 0x2c

            /* Set DMA2D color mode and alpha mode */
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800a8ae:	683b      	ldr	r3, [r7, #0]
 800a8b0:	7f1b      	ldrb	r3, [r3, #28]
 800a8b2:	061b      	lsls	r3, r3, #24
 800a8b4:	461a      	mov	r2, r3
 800a8b6:	69bb      	ldr	r3, [r7, #24]
 800a8b8:	4313      	orrs	r3, r2
 800a8ba:	4a44      	ldr	r2, [pc, #272]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a8bc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800a8c0:	61d3      	str	r3, [r2, #28]

            /* Write DMA2D BGPFCCR register */
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800a8c2:	4a42      	ldr	r2, [pc, #264]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a8c4:	697b      	ldr	r3, [r7, #20]
 800a8c6:	6253      	str	r3, [r2, #36]	; 0x24

            /* Configure DMA2D Stream source2 address */
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800a8c8:	683b      	ldr	r3, [r7, #0]
 800a8ca:	691a      	ldr	r2, [r3, #16]
 800a8cc:	4b3f      	ldr	r3, [pc, #252]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a8ce:	615a      	str	r2, [r3, #20]

            /* Configure CLUT */
            switch ((Bitmap::ClutFormat)palette->format)
 800a8d0:	68fb      	ldr	r3, [r7, #12]
 800a8d2:	881b      	ldrh	r3, [r3, #0]
 800a8d4:	b2db      	uxtb	r3, r3
 800a8d6:	2b00      	cmp	r3, #0
 800a8d8:	d002      	beq.n	800a8e0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>
 800a8da:	2b01      	cmp	r3, #1
 800a8dc:	d00f      	beq.n	800a8fe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ca>
 800a8de:	e024      	b.n	800a92a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1f6>
            {
            case Bitmap::CLUT_FORMAT_L8_ARGB8888:
                /* Write foreground CLUT size and CLUT color mode */
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 800a8e0:	4b3a      	ldr	r3, [pc, #232]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a8e2:	69db      	ldr	r3, [r3, #28]
 800a8e4:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800a8e8:	f023 0310 	bic.w	r3, r3, #16
 800a8ec:	68fa      	ldr	r2, [r7, #12]
 800a8ee:	8852      	ldrh	r2, [r2, #2]
 800a8f0:	3a01      	subs	r2, #1
 800a8f2:	0212      	lsls	r2, r2, #8
 800a8f4:	4611      	mov	r1, r2
 800a8f6:	4a35      	ldr	r2, [pc, #212]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a8f8:	430b      	orrs	r3, r1
 800a8fa:	61d3      	str	r3, [r2, #28]
                break;
 800a8fc:	e01c      	b.n	800a938 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x204>
            case Bitmap::CLUT_FORMAT_L8_RGB888:
                if(blitOp.alpha == 255)
 800a8fe:	683b      	ldr	r3, [r7, #0]
 800a900:	7f1b      	ldrb	r3, [r3, #28]
 800a902:	2bff      	cmp	r3, #255	; 0xff
 800a904:	d101      	bne.n	800a90a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d6>
                {
                    blend = false;
 800a906:	2300      	movs	r3, #0
 800a908:	77fb      	strb	r3, [r7, #31]
                }
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 800a90a:	4b30      	ldr	r3, [pc, #192]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a90c:	69db      	ldr	r3, [r3, #28]
 800a90e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800a912:	f023 0310 	bic.w	r3, r3, #16
 800a916:	68fa      	ldr	r2, [r7, #12]
 800a918:	8852      	ldrh	r2, [r2, #2]
 800a91a:	3a01      	subs	r2, #1
 800a91c:	0212      	lsls	r2, r2, #8
 800a91e:	4313      	orrs	r3, r2
 800a920:	4a2a      	ldr	r2, [pc, #168]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a922:	f043 0310 	orr.w	r3, r3, #16
 800a926:	61d3      	str	r3, [r2, #28]
                break;
 800a928:	e006      	b.n	800a938 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x204>

            case Bitmap::CLUT_FORMAT_L8_RGB565:
            default:
                assert(0 && "Unsupported format");
 800a92a:	4b2a      	ldr	r3, [pc, #168]	; (800a9d4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a0>)
 800a92c:	4a2a      	ldr	r2, [pc, #168]	; (800a9d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a4>)
 800a92e:	f240 1111 	movw	r1, #273	; 0x111
 800a932:	482a      	ldr	r0, [pc, #168]	; (800a9dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800a934:	f013 f87a 	bl	801da2c <__assert_func>
                break;
            }

            /* Enable the CLUT loading for the foreground */
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 800a938:	4b24      	ldr	r3, [pc, #144]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a93a:	69db      	ldr	r3, [r3, #28]
 800a93c:	4a23      	ldr	r2, [pc, #140]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a93e:	f043 0320 	orr.w	r3, r3, #32
 800a942:	61d3      	str	r3, [r2, #28]

            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 800a944:	4b21      	ldr	r3, [pc, #132]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a946:	69db      	ldr	r3, [r3, #28]
 800a948:	f003 0320 	and.w	r3, r3, #32
 800a94c:	2b00      	cmp	r3, #0
 800a94e:	bf14      	ite	ne
 800a950:	2301      	movne	r3, #1
 800a952:	2300      	moveq	r3, #0
 800a954:	b2db      	uxtb	r3, r3
 800a956:	2b00      	cmp	r3, #0
 800a958:	d000      	beq.n	800a95c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x228>
 800a95a:	e7f3      	b.n	800a944 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x210>
            {
            }
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 800a95c:	4b1b      	ldr	r3, [pc, #108]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a95e:	2210      	movs	r2, #16
 800a960:	609a      	str	r2, [r3, #8]

            /* Set DMA2D mode */
            if(blend)
 800a962:	7ffb      	ldrb	r3, [r7, #31]
 800a964:	2b00      	cmp	r3, #0
 800a966:	d003      	beq.n	800a970 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x23c>
            {
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 800a968:	4b18      	ldr	r3, [pc, #96]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a96a:	4a19      	ldr	r2, [pc, #100]	; (800a9d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800a96c:	601a      	str	r2, [r3, #0]
            else
            {
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
            }
        }
        break;
 800a96e:	e03e      	b.n	800a9ee <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2ba>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 800a970:	4b16      	ldr	r3, [pc, #88]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a972:	4a1b      	ldr	r2, [pc, #108]	; (800a9e0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2ac>)
 800a974:	601a      	str	r2, [r3, #0]
        break;
 800a976:	e03a      	b.n	800a9ee <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2ba>
    case BLIT_OP_COPY_ARGB8888:
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800a978:	683b      	ldr	r3, [r7, #0]
 800a97a:	7f1b      	ldrb	r3, [r3, #28]
 800a97c:	061b      	lsls	r3, r3, #24
 800a97e:	461a      	mov	r2, r3
 800a980:	69bb      	ldr	r3, [r7, #24]
 800a982:	4313      	orrs	r3, r2
 800a984:	4a11      	ldr	r2, [pc, #68]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a986:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800a98a:	61d3      	str	r3, [r2, #28]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800a98c:	4a0f      	ldr	r2, [pc, #60]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a98e:	697b      	ldr	r3, [r7, #20]
 800a990:	6253      	str	r3, [r2, #36]	; 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800a992:	683b      	ldr	r3, [r7, #0]
 800a994:	691a      	ldr	r2, [r3, #16]
 800a996:	4b0d      	ldr	r3, [pc, #52]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a998:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 800a99a:	4b0c      	ldr	r3, [pc, #48]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a99c:	4a0c      	ldr	r2, [pc, #48]	; (800a9d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800a99e:	601a      	str	r2, [r3, #0]
        break;
 800a9a0:	e025      	b.n	800a9ee <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2ba>
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800a9a2:	683b      	ldr	r3, [r7, #0]
 800a9a4:	7f1b      	ldrb	r3, [r3, #28]
 800a9a6:	061b      	lsls	r3, r3, #24
 800a9a8:	461a      	mov	r2, r3
 800a9aa:	69bb      	ldr	r3, [r7, #24]
 800a9ac:	4313      	orrs	r3, r2
 800a9ae:	4a07      	ldr	r2, [pc, #28]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a9b0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800a9b4:	61d3      	str	r3, [r2, #28]

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 800a9b6:	683b      	ldr	r3, [r7, #0]
 800a9b8:	7f5a      	ldrb	r2, [r3, #29]
 800a9ba:	683b      	ldr	r3, [r7, #0]
 800a9bc:	7f9b      	ldrb	r3, [r3, #30]
 800a9be:	429a      	cmp	r2, r3
 800a9c0:	d010      	beq.n	800a9e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2b0>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 800a9c2:	4b02      	ldr	r3, [pc, #8]	; (800a9cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800a9c4:	4a06      	ldr	r2, [pc, #24]	; (800a9e0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2ac>)
 800a9c6:	601a      	str	r2, [r3, #0]
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
        }
        break;
 800a9c8:	e010      	b.n	800a9ec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2b8>
 800a9ca:	bf00      	nop
 800a9cc:	4002b000 	.word	0x4002b000
 800a9d0:	00020201 	.word	0x00020201
 800a9d4:	0801f4b4 	.word	0x0801f4b4
 800a9d8:	0801f4d0 	.word	0x0801f4d0
 800a9dc:	0801f43c 	.word	0x0801f43c
 800a9e0:	00010201 	.word	0x00010201
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 800a9e4:	4b04      	ldr	r3, [pc, #16]	; (800a9f8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c4>)
 800a9e6:	f240 2201 	movw	r2, #513	; 0x201
 800a9ea:	601a      	str	r2, [r3, #0]
        break;
 800a9ec:	bf00      	nop
    }
}
 800a9ee:	bf00      	nop
 800a9f0:	3724      	adds	r7, #36	; 0x24
 800a9f2:	46bd      	mov	sp, r7
 800a9f4:	bd90      	pop	{r4, r7, pc}
 800a9f6:	bf00      	nop
 800a9f8:	4002b000 	.word	0x4002b000

0800a9fc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 800a9fc:	b590      	push	{r4, r7, lr}
 800a9fe:	b085      	sub	sp, #20
 800aa00:	af00      	add	r7, sp, #0
 800aa02:	6078      	str	r0, [r7, #4]
 800aa04:	6039      	str	r1, [r7, #0]
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800aa06:	683b      	ldr	r3, [r7, #0]
 800aa08:	7f9b      	ldrb	r3, [r3, #30]
 800aa0a:	4619      	mov	r1, r3
 800aa0c:	6878      	ldr	r0, [r7, #4]
 800aa0e:	f7ff fe47 	bl	800a6a0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 800aa12:	60f8      	str	r0, [r7, #12]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800aa14:	4a3b      	ldr	r2, [pc, #236]	; (800ab04 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800aa16:	68fb      	ldr	r3, [r7, #12]
 800aa18:	6353      	str	r3, [r2, #52]	; 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800aa1a:	683b      	ldr	r3, [r7, #0]
 800aa1c:	8adb      	ldrh	r3, [r3, #22]
 800aa1e:	461a      	mov	r2, r3
 800aa20:	683b      	ldr	r3, [r7, #0]
 800aa22:	8a9b      	ldrh	r3, [r3, #20]
 800aa24:	041b      	lsls	r3, r3, #16
 800aa26:	431a      	orrs	r2, r3
 800aa28:	4b36      	ldr	r3, [pc, #216]	; (800ab04 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800aa2a:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800aa2c:	683b      	ldr	r3, [r7, #0]
 800aa2e:	691a      	ldr	r2, [r3, #16]
 800aa30:	4b34      	ldr	r3, [pc, #208]	; (800ab04 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800aa32:	63da      	str	r2, [r3, #60]	; 0x3c

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800aa34:	683b      	ldr	r3, [r7, #0]
 800aa36:	8b5b      	ldrh	r3, [r3, #26]
 800aa38:	461a      	mov	r2, r3
 800aa3a:	683b      	ldr	r3, [r7, #0]
 800aa3c:	8a9b      	ldrh	r3, [r3, #20]
 800aa3e:	1ad2      	subs	r2, r2, r3
 800aa40:	4b30      	ldr	r3, [pc, #192]	; (800ab04 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800aa42:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 800aa44:	683b      	ldr	r3, [r7, #0]
 800aa46:	681b      	ldr	r3, [r3, #0]
 800aa48:	2b08      	cmp	r3, #8
 800aa4a:	d12f      	bne.n	800aaac <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xb0>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800aa4c:	683b      	ldr	r3, [r7, #0]
 800aa4e:	8b5b      	ldrh	r3, [r3, #26]
 800aa50:	461a      	mov	r2, r3
 800aa52:	683b      	ldr	r3, [r7, #0]
 800aa54:	8a9b      	ldrh	r3, [r3, #20]
 800aa56:	1ad2      	subs	r2, r2, r3
 800aa58:	4b2a      	ldr	r3, [pc, #168]	; (800ab04 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800aa5a:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800aa5c:	683b      	ldr	r3, [r7, #0]
 800aa5e:	8b5b      	ldrh	r3, [r3, #26]
 800aa60:	461a      	mov	r2, r3
 800aa62:	683b      	ldr	r3, [r7, #0]
 800aa64:	8a9b      	ldrh	r3, [r3, #20]
 800aa66:	1ad2      	subs	r2, r2, r3
 800aa68:	4b26      	ldr	r3, [pc, #152]	; (800ab04 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800aa6a:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800aa6c:	4a25      	ldr	r2, [pc, #148]	; (800ab04 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800aa6e:	68fb      	ldr	r3, [r7, #12]
 800aa70:	6253      	str	r3, [r2, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 800aa72:	683b      	ldr	r3, [r7, #0]
 800aa74:	7f1b      	ldrb	r3, [r3, #28]
 800aa76:	061b      	lsls	r3, r3, #24
 800aa78:	4a22      	ldr	r2, [pc, #136]	; (800ab04 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800aa7a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800aa7e:	f043 0309 	orr.w	r3, r3, #9
 800aa82:	61d3      	str	r3, [r2, #28]

        /* DMA2D FGCOLR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800aa84:	683b      	ldr	r3, [r7, #0]
 800aa86:	330c      	adds	r3, #12
 800aa88:	4c1e      	ldr	r4, [pc, #120]	; (800ab04 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800aa8a:	4618      	mov	r0, r3
 800aa8c:	f7ff fc84 	bl	800a398 <_ZNK8touchgfx9colortypecvmEv>
 800aa90:	4603      	mov	r3, r0
 800aa92:	6223      	str	r3, [r4, #32]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800aa94:	683b      	ldr	r3, [r7, #0]
 800aa96:	691a      	ldr	r2, [r3, #16]
 800aa98:	4b1a      	ldr	r3, [pc, #104]	; (800ab04 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800aa9a:	615a      	str	r2, [r3, #20]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800aa9c:	683b      	ldr	r3, [r7, #0]
 800aa9e:	691a      	ldr	r2, [r3, #16]
 800aaa0:	4b18      	ldr	r3, [pc, #96]	; (800ab04 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800aaa2:	60da      	str	r2, [r3, #12]

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 800aaa4:	4b17      	ldr	r3, [pc, #92]	; (800ab04 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800aaa6:	4a18      	ldr	r2, [pc, #96]	; (800ab08 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10c>)
 800aaa8:	601a      	str	r2, [r3, #0]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
    }
}
 800aaaa:	e027      	b.n	800aafc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x100>
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800aaac:	4a15      	ldr	r2, [pc, #84]	; (800ab04 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800aaae:	68fb      	ldr	r3, [r7, #12]
 800aab0:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 800aab2:	4b14      	ldr	r3, [pc, #80]	; (800ab04 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800aab4:	2200      	movs	r2, #0
 800aab6:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 800aab8:	683b      	ldr	r3, [r7, #0]
 800aaba:	330c      	adds	r3, #12
 800aabc:	4618      	mov	r0, r3
 800aabe:	f7ff fc6b 	bl	800a398 <_ZNK8touchgfx9colortypecvmEv>
 800aac2:	4603      	mov	r3, r0
 800aac4:	0a1b      	lsrs	r3, r3, #8
 800aac6:	f403 4478 	and.w	r4, r3, #63488	; 0xf800
 800aaca:	683b      	ldr	r3, [r7, #0]
 800aacc:	330c      	adds	r3, #12
 800aace:	4618      	mov	r0, r3
 800aad0:	f7ff fc62 	bl	800a398 <_ZNK8touchgfx9colortypecvmEv>
 800aad4:	4603      	mov	r3, r0
 800aad6:	095b      	lsrs	r3, r3, #5
 800aad8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 800aadc:	431c      	orrs	r4, r3
 800aade:	683b      	ldr	r3, [r7, #0]
 800aae0:	330c      	adds	r3, #12
 800aae2:	4618      	mov	r0, r3
 800aae4:	f7ff fc58 	bl	800a398 <_ZNK8touchgfx9colortypecvmEv>
 800aae8:	4603      	mov	r3, r0
 800aaea:	08db      	lsrs	r3, r3, #3
 800aaec:	f003 031f 	and.w	r3, r3, #31
 800aaf0:	4a04      	ldr	r2, [pc, #16]	; (800ab04 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800aaf2:	4323      	orrs	r3, r4
 800aaf4:	6393      	str	r3, [r2, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 800aaf6:	4b03      	ldr	r3, [pc, #12]	; (800ab04 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800aaf8:	4a04      	ldr	r2, [pc, #16]	; (800ab0c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x110>)
 800aafa:	601a      	str	r2, [r3, #0]
}
 800aafc:	bf00      	nop
 800aafe:	3714      	adds	r7, #20
 800ab00:	46bd      	mov	sp, r7
 800ab02:	bd90      	pop	{r4, r7, pc}
 800ab04:	4002b000 	.word	0x4002b000
 800ab08:	00020201 	.word	0x00020201
 800ab0c:	00030201 	.word	0x00030201

0800ab10 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 800ab10:	b580      	push	{r7, lr}
 800ab12:	b082      	sub	sp, #8
 800ab14:	af00      	add	r7, sp, #0
 800ab16:	6078      	str	r0, [r7, #4]
 800ab18:	4a05      	ldr	r2, [pc, #20]	; (800ab30 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 800ab1a:	687b      	ldr	r3, [r7, #4]
 800ab1c:	601a      	str	r2, [r3, #0]
 800ab1e:	687b      	ldr	r3, [r7, #4]
 800ab20:	4618      	mov	r0, r3
 800ab22:	f7ff fc45 	bl	800a3b0 <_ZN8touchgfx9DMA_QueueD1Ev>
 800ab26:	687b      	ldr	r3, [r7, #4]
 800ab28:	4618      	mov	r0, r3
 800ab2a:	3708      	adds	r7, #8
 800ab2c:	46bd      	mov	sp, r7
 800ab2e:	bd80      	pop	{r7, pc}
 800ab30:	08020808 	.word	0x08020808

0800ab34 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800ab34:	b580      	push	{r7, lr}
 800ab36:	b082      	sub	sp, #8
 800ab38:	af00      	add	r7, sp, #0
 800ab3a:	6078      	str	r0, [r7, #4]
 800ab3c:	6878      	ldr	r0, [r7, #4]
 800ab3e:	f7ff ffe7 	bl	800ab10 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800ab42:	2114      	movs	r1, #20
 800ab44:	6878      	ldr	r0, [r7, #4]
 800ab46:	f012 ff42 	bl	801d9ce <_ZdlPvj>
 800ab4a:	687b      	ldr	r3, [r7, #4]
 800ab4c:	4618      	mov	r0, r3
 800ab4e:	3708      	adds	r7, #8
 800ab50:	46bd      	mov	sp, r7
 800ab52:	bd80      	pop	{r7, pc}

0800ab54 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
    static void registerTexts(const Texts* t)
 800ab54:	b480      	push	{r7}
 800ab56:	b083      	sub	sp, #12
 800ab58:	af00      	add	r7, sp, #0
 800ab5a:	6078      	str	r0, [r7, #4]
        texts = t;
 800ab5c:	4a04      	ldr	r2, [pc, #16]	; (800ab70 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 800ab5e:	687b      	ldr	r3, [r7, #4]
 800ab60:	6013      	str	r3, [r2, #0]
    }
 800ab62:	bf00      	nop
 800ab64:	370c      	adds	r7, #12
 800ab66:	46bd      	mov	sp, r7
 800ab68:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab6c:	4770      	bx	lr
 800ab6e:	bf00      	nop
 800ab70:	20026f5c 	.word	0x20026f5c

0800ab74 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 800ab74:	b480      	push	{r7}
 800ab76:	b085      	sub	sp, #20
 800ab78:	af00      	add	r7, sp, #0
 800ab7a:	60f8      	str	r0, [r7, #12]
 800ab7c:	60b9      	str	r1, [r7, #8]
 800ab7e:	607a      	str	r2, [r7, #4]
 800ab80:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800ab82:	4a0b      	ldr	r2, [pc, #44]	; (800abb0 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 800ab84:	68fb      	ldr	r3, [r7, #12]
 800ab86:	601a      	str	r2, [r3, #0]
 800ab88:	68fb      	ldr	r3, [r7, #12]
 800ab8a:	68ba      	ldr	r2, [r7, #8]
 800ab8c:	605a      	str	r2, [r3, #4]
 800ab8e:	68fb      	ldr	r3, [r7, #12]
 800ab90:	687a      	ldr	r2, [r7, #4]
 800ab92:	609a      	str	r2, [r3, #8]
 800ab94:	68fb      	ldr	r3, [r7, #12]
 800ab96:	683a      	ldr	r2, [r7, #0]
 800ab98:	60da      	str	r2, [r3, #12]
 800ab9a:	68fb      	ldr	r3, [r7, #12]
 800ab9c:	69ba      	ldr	r2, [r7, #24]
 800ab9e:	611a      	str	r2, [r3, #16]
    {
    }
 800aba0:	68fb      	ldr	r3, [r7, #12]
 800aba2:	4618      	mov	r0, r3
 800aba4:	3714      	adds	r7, #20
 800aba6:	46bd      	mov	sp, r7
 800aba8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abac:	4770      	bx	lr
 800abae:	bf00      	nop
 800abb0:	0801fb94 	.word	0x0801fb94

0800abb4 <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 800abb4:	b480      	push	{r7}
 800abb6:	b083      	sub	sp, #12
 800abb8:	af00      	add	r7, sp, #0
 800abba:	6078      	str	r0, [r7, #4]
    {
 800abbc:	4a04      	ldr	r2, [pc, #16]	; (800abd0 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 800abbe:	687b      	ldr	r3, [r7, #4]
 800abc0:	601a      	str	r2, [r3, #0]
    }
 800abc2:	687b      	ldr	r3, [r7, #4]
 800abc4:	4618      	mov	r0, r3
 800abc6:	370c      	adds	r7, #12
 800abc8:	46bd      	mov	sp, r7
 800abca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abce:	4770      	bx	lr
 800abd0:	0801fb94 	.word	0x0801fb94

0800abd4 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 800abd4:	b580      	push	{r7, lr}
 800abd6:	b082      	sub	sp, #8
 800abd8:	af00      	add	r7, sp, #0
 800abda:	6078      	str	r0, [r7, #4]
    }
 800abdc:	6878      	ldr	r0, [r7, #4]
 800abde:	f7ff ffe9 	bl	800abb4 <_ZN8touchgfx7MVPHeapD1Ev>
 800abe2:	2114      	movs	r1, #20
 800abe4:	6878      	ldr	r0, [r7, #4]
 800abe6:	f012 fef2 	bl	801d9ce <_ZdlPvj>
 800abea:	687b      	ldr	r3, [r7, #4]
 800abec:	4618      	mov	r0, r3
 800abee:	3708      	adds	r7, #8
 800abf0:	46bd      	mov	sp, r7
 800abf2:	bd80      	pop	{r7, pc}

0800abf4 <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 800abf4:	b480      	push	{r7}
 800abf6:	b083      	sub	sp, #12
 800abf8:	af00      	add	r7, sp, #0
 800abfa:	6078      	str	r0, [r7, #4]
    {
 800abfc:	4a04      	ldr	r2, [pc, #16]	; (800ac10 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 800abfe:	687b      	ldr	r3, [r7, #4]
 800ac00:	601a      	str	r2, [r3, #0]
    }
 800ac02:	687b      	ldr	r3, [r7, #4]
 800ac04:	4618      	mov	r0, r3
 800ac06:	370c      	adds	r7, #12
 800ac08:	46bd      	mov	sp, r7
 800ac0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac0e:	4770      	bx	lr
 800ac10:	08020c78 	.word	0x08020c78

0800ac14 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 800ac14:	b580      	push	{r7, lr}
 800ac16:	b082      	sub	sp, #8
 800ac18:	af00      	add	r7, sp, #0
 800ac1a:	6078      	str	r0, [r7, #4]
    }
 800ac1c:	6878      	ldr	r0, [r7, #4]
 800ac1e:	f7ff ffe9 	bl	800abf4 <_ZN8touchgfx3LCDD1Ev>
 800ac22:	2108      	movs	r1, #8
 800ac24:	6878      	ldr	r0, [r7, #4]
 800ac26:	f012 fed2 	bl	801d9ce <_ZdlPvj>
 800ac2a:	687b      	ldr	r3, [r7, #4]
 800ac2c:	4618      	mov	r0, r3
 800ac2e:	3708      	adds	r7, #8
 800ac30:	46bd      	mov	sp, r7
 800ac32:	bd80      	pop	{r7, pc}

0800ac34 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 800ac34:	b480      	push	{r7}
 800ac36:	b083      	sub	sp, #12
 800ac38:	af00      	add	r7, sp, #0
 800ac3a:	6078      	str	r0, [r7, #4]
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 800ac3c:	687b      	ldr	r3, [r7, #4]
 800ac3e:	2200      	movs	r2, #0
 800ac40:	801a      	strh	r2, [r3, #0]
 800ac42:	687b      	ldr	r3, [r7, #4]
 800ac44:	2200      	movs	r2, #0
 800ac46:	805a      	strh	r2, [r3, #2]
 800ac48:	687b      	ldr	r3, [r7, #4]
 800ac4a:	2200      	movs	r2, #0
 800ac4c:	809a      	strh	r2, [r3, #4]
 800ac4e:	687b      	ldr	r3, [r7, #4]
 800ac50:	2200      	movs	r2, #0
 800ac52:	80da      	strh	r2, [r3, #6]
 800ac54:	687b      	ldr	r3, [r7, #4]
 800ac56:	2200      	movs	r2, #0
 800ac58:	811a      	strh	r2, [r3, #8]
 800ac5a:	687b      	ldr	r3, [r7, #4]
 800ac5c:	2200      	movs	r2, #0
 800ac5e:	815a      	strh	r2, [r3, #10]
 800ac60:	687b      	ldr	r3, [r7, #4]
 800ac62:	2200      	movs	r2, #0
 800ac64:	819a      	strh	r2, [r3, #12]
 800ac66:	687b      	ldr	r3, [r7, #4]
 800ac68:	2200      	movs	r2, #0
 800ac6a:	739a      	strb	r2, [r3, #14]
        {
        }
 800ac6c:	687b      	ldr	r3, [r7, #4]
 800ac6e:	4618      	mov	r0, r3
 800ac70:	370c      	adds	r7, #12
 800ac72:	46bd      	mov	sp, r7
 800ac74:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac78:	4770      	bx	lr

0800ac7a <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 800ac7a:	b580      	push	{r7, lr}
 800ac7c:	b082      	sub	sp, #8
 800ac7e:	af00      	add	r7, sp, #0
 800ac80:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 800ac82:	687b      	ldr	r3, [r7, #4]
 800ac84:	4618      	mov	r0, r3
 800ac86:	f7ff ffd5 	bl	800ac34 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 800ac8a:	687b      	ldr	r3, [r7, #4]
 800ac8c:	2200      	movs	r2, #0
 800ac8e:	611a      	str	r2, [r3, #16]
 800ac90:	687b      	ldr	r3, [r7, #4]
 800ac92:	2200      	movs	r2, #0
 800ac94:	829a      	strh	r2, [r3, #20]
    {
    }
 800ac96:	687b      	ldr	r3, [r7, #4]
 800ac98:	4618      	mov	r0, r3
 800ac9a:	3708      	adds	r7, #8
 800ac9c:	46bd      	mov	sp, r7
 800ac9e:	bd80      	pop	{r7, pc}

0800aca0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 800aca0:	b580      	push	{r7, lr}
 800aca2:	b084      	sub	sp, #16
 800aca4:	af00      	add	r7, sp, #0
 800aca6:	60f8      	str	r0, [r7, #12]
 800aca8:	60b9      	str	r1, [r7, #8]
 800acaa:	607a      	str	r2, [r7, #4]
 800acac:	603b      	str	r3, [r7, #0]
          lastRenderMethod(HARDWARE)
 800acae:	4a55      	ldr	r2, [pc, #340]	; (800ae04 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x164>)
 800acb0:	68fb      	ldr	r3, [r7, #12]
 800acb2:	601a      	str	r2, [r3, #0]
 800acb4:	68fb      	ldr	r3, [r7, #12]
 800acb6:	68ba      	ldr	r2, [r7, #8]
 800acb8:	605a      	str	r2, [r3, #4]
 800acba:	68fb      	ldr	r3, [r7, #12]
 800acbc:	687a      	ldr	r2, [r7, #4]
 800acbe:	609a      	str	r2, [r3, #8]
 800acc0:	68fb      	ldr	r3, [r7, #12]
 800acc2:	683a      	ldr	r2, [r7, #0]
 800acc4:	60da      	str	r2, [r3, #12]
 800acc6:	68fb      	ldr	r3, [r7, #12]
 800acc8:	2200      	movs	r2, #0
 800acca:	611a      	str	r2, [r3, #16]
 800accc:	68fb      	ldr	r3, [r7, #12]
 800acce:	2200      	movs	r2, #0
 800acd0:	615a      	str	r2, [r3, #20]
 800acd2:	68fb      	ldr	r3, [r7, #12]
 800acd4:	2200      	movs	r2, #0
 800acd6:	619a      	str	r2, [r3, #24]
 800acd8:	68fb      	ldr	r3, [r7, #12]
 800acda:	331c      	adds	r3, #28
 800acdc:	4618      	mov	r0, r3
 800acde:	f7ff ffcc 	bl	800ac7a <_ZN8touchgfx8GesturesC1Ev>
 800ace2:	68fb      	ldr	r3, [r7, #12]
 800ace4:	2200      	movs	r2, #0
 800ace6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800acea:	68fb      	ldr	r3, [r7, #12]
 800acec:	2200      	movs	r2, #0
 800acee:	639a      	str	r2, [r3, #56]	; 0x38
 800acf0:	68fb      	ldr	r3, [r7, #12]
 800acf2:	2200      	movs	r2, #0
 800acf4:	63da      	str	r2, [r3, #60]	; 0x3c
 800acf6:	68fb      	ldr	r3, [r7, #12]
 800acf8:	2200      	movs	r2, #0
 800acfa:	641a      	str	r2, [r3, #64]	; 0x40
 800acfc:	68fb      	ldr	r3, [r7, #12]
 800acfe:	2200      	movs	r2, #0
 800ad00:	645a      	str	r2, [r3, #68]	; 0x44
 800ad02:	68fb      	ldr	r3, [r7, #12]
 800ad04:	2200      	movs	r2, #0
 800ad06:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 800ad0a:	68fb      	ldr	r3, [r7, #12]
 800ad0c:	2201      	movs	r2, #1
 800ad0e:	f883 2049 	strb.w	r2, [r3, #73]	; 0x49
 800ad12:	68fb      	ldr	r3, [r7, #12]
 800ad14:	2200      	movs	r2, #0
 800ad16:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
 800ad1a:	68fb      	ldr	r3, [r7, #12]
 800ad1c:	2200      	movs	r2, #0
 800ad1e:	f883 204b 	strb.w	r2, [r3, #75]	; 0x4b
 800ad22:	68fb      	ldr	r3, [r7, #12]
 800ad24:	2200      	movs	r2, #0
 800ad26:	64da      	str	r2, [r3, #76]	; 0x4c
 800ad28:	68fb      	ldr	r3, [r7, #12]
 800ad2a:	3350      	adds	r3, #80	; 0x50
 800ad2c:	4618      	mov	r0, r3
 800ad2e:	f7fd fc26 	bl	800857e <_ZN8touchgfx4RectC1Ev>
 800ad32:	68fb      	ldr	r3, [r7, #12]
 800ad34:	2200      	movs	r2, #0
 800ad36:	659a      	str	r2, [r3, #88]	; 0x58
 800ad38:	68fb      	ldr	r3, [r7, #12]
 800ad3a:	2200      	movs	r2, #0
 800ad3c:	65da      	str	r2, [r3, #92]	; 0x5c
 800ad3e:	68fb      	ldr	r3, [r7, #12]
 800ad40:	2200      	movs	r2, #0
 800ad42:	661a      	str	r2, [r3, #96]	; 0x60
 800ad44:	68fb      	ldr	r3, [r7, #12]
 800ad46:	2201      	movs	r2, #1
 800ad48:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
 800ad4c:	68fb      	ldr	r3, [r7, #12]
 800ad4e:	2200      	movs	r2, #0
 800ad50:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
 800ad54:	68fb      	ldr	r3, [r7, #12]
 800ad56:	2200      	movs	r2, #0
 800ad58:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
 800ad5c:	68fb      	ldr	r3, [r7, #12]
 800ad5e:	2201      	movs	r2, #1
 800ad60:	f883 2067 	strb.w	r2, [r3, #103]	; 0x67
 800ad64:	68fb      	ldr	r3, [r7, #12]
 800ad66:	2200      	movs	r2, #0
 800ad68:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 800ad6c:	68fb      	ldr	r3, [r7, #12]
 800ad6e:	2200      	movs	r2, #0
 800ad70:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
 800ad74:	68fb      	ldr	r3, [r7, #12]
 800ad76:	2200      	movs	r2, #0
 800ad78:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
 800ad7c:	68fb      	ldr	r3, [r7, #12]
 800ad7e:	2200      	movs	r2, #0
 800ad80:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
 800ad84:	68fb      	ldr	r3, [r7, #12]
 800ad86:	2200      	movs	r2, #0
 800ad88:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 800ad8c:	68fb      	ldr	r3, [r7, #12]
 800ad8e:	2200      	movs	r2, #0
 800ad90:	671a      	str	r2, [r3, #112]	; 0x70
 800ad92:	68fb      	ldr	r3, [r7, #12]
 800ad94:	2200      	movs	r2, #0
 800ad96:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 800ad9a:	68fb      	ldr	r3, [r7, #12]
 800ad9c:	2200      	movs	r2, #0
 800ad9e:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
 800ada2:	68fb      	ldr	r3, [r7, #12]
 800ada4:	2200      	movs	r2, #0
 800ada6:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 800adaa:	68fb      	ldr	r3, [r7, #12]
 800adac:	2201      	movs	r2, #1
 800adae:	f883 2077 	strb.w	r2, [r3, #119]	; 0x77
 800adb2:	68fb      	ldr	r3, [r7, #12]
 800adb4:	2201      	movs	r2, #1
 800adb6:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
        instance = this;
 800adba:	4a13      	ldr	r2, [pc, #76]	; (800ae08 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x168>)
 800adbc:	68fb      	ldr	r3, [r7, #12]
 800adbe:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800adc0:	4a12      	ldr	r2, [pc, #72]	; (800ae0c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800adc2:	8b3b      	ldrh	r3, [r7, #24]
 800adc4:	8013      	strh	r3, [r2, #0]
 800adc6:	4b11      	ldr	r3, [pc, #68]	; (800ae0c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800adc8:	881a      	ldrh	r2, [r3, #0]
 800adca:	4b11      	ldr	r3, [pc, #68]	; (800ae10 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x170>)
 800adcc:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800adce:	4a11      	ldr	r2, [pc, #68]	; (800ae14 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800add0:	8bbb      	ldrh	r3, [r7, #28]
 800add2:	8013      	strh	r3, [r2, #0]
 800add4:	4b0f      	ldr	r3, [pc, #60]	; (800ae14 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800add6:	881a      	ldrh	r2, [r3, #0]
 800add8:	4b0f      	ldr	r3, [pc, #60]	; (800ae18 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x178>)
 800adda:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 800addc:	4b0f      	ldr	r3, [pc, #60]	; (800ae1c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x17c>)
 800adde:	2200      	movs	r2, #0
 800ade0:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800ade2:	8b3a      	ldrh	r2, [r7, #24]
 800ade4:	8bbb      	ldrh	r3, [r7, #28]
 800ade6:	429a      	cmp	r2, r3
 800ade8:	bf34      	ite	cc
 800adea:	2301      	movcc	r3, #1
 800adec:	2300      	movcs	r3, #0
 800adee:	b2db      	uxtb	r3, r3
 800adf0:	461a      	mov	r2, r3
 800adf2:	68fb      	ldr	r3, [r7, #12]
 800adf4:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }
 800adf8:	68fb      	ldr	r3, [r7, #12]
 800adfa:	4618      	mov	r0, r3
 800adfc:	3710      	adds	r7, #16
 800adfe:	46bd      	mov	sp, r7
 800ae00:	bd80      	pop	{r7, pc}
 800ae02:	bf00      	nop
 800ae04:	08020258 	.word	0x08020258
 800ae08:	20026f00 	.word	0x20026f00
 800ae0c:	20026ef2 	.word	0x20026ef2
 800ae10:	20026ef8 	.word	0x20026ef8
 800ae14:	20026ef4 	.word	0x20026ef4
 800ae18:	20026efa 	.word	0x20026efa
 800ae1c:	20026ef6 	.word	0x20026ef6

0800ae20 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 800ae20:	b580      	push	{r7, lr}
 800ae22:	b082      	sub	sp, #8
 800ae24:	af00      	add	r7, sp, #0
 800ae26:	6078      	str	r0, [r7, #4]
 800ae28:	6039      	str	r1, [r7, #0]
    {
        app.gotoScreen1ScreenNoTransition();
 800ae2a:	683b      	ldr	r3, [r7, #0]
 800ae2c:	4618      	mov	r0, r3
 800ae2e:	f7fd f907 	bl	8008040 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    }
 800ae32:	bf00      	nop
 800ae34:	3708      	adds	r7, #8
 800ae36:	46bd      	mov	sp, r7
 800ae38:	bd80      	pop	{r7, pc}
	...

0800ae3c <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 800ae3c:	b580      	push	{r7, lr}
 800ae3e:	b086      	sub	sp, #24
 800ae40:	af02      	add	r7, sp, #8
 800ae42:	60f8      	str	r0, [r7, #12]
 800ae44:	60b9      	str	r1, [r7, #8]
 800ae46:	607a      	str	r2, [r7, #4]
 800ae48:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 800ae4a:	68f8      	ldr	r0, [r7, #12]
 800ae4c:	69bb      	ldr	r3, [r7, #24]
 800ae4e:	9300      	str	r3, [sp, #0]
 800ae50:	683b      	ldr	r3, [r7, #0]
 800ae52:	687a      	ldr	r2, [r7, #4]
 800ae54:	68b9      	ldr	r1, [r7, #8]
 800ae56:	f7ff fe8d 	bl	800ab74 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 800ae5a:	4a04      	ldr	r2, [pc, #16]	; (800ae6c <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 800ae5c:	68fb      	ldr	r3, [r7, #12]
 800ae5e:	601a      	str	r2, [r3, #0]
    {

    }
 800ae60:	68fb      	ldr	r3, [r7, #12]
 800ae62:	4618      	mov	r0, r3
 800ae64:	3710      	adds	r7, #16
 800ae66:	46bd      	mov	sp, r7
 800ae68:	bd80      	pop	{r7, pc}
 800ae6a:	bf00      	nop
 800ae6c:	0801fb80 	.word	0x0801fb80

0800ae70 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800ae70:	b580      	push	{r7, lr}
 800ae72:	af00      	add	r7, sp, #0
 800ae74:	4801      	ldr	r0, [pc, #4]	; (800ae7c <__tcf_0+0xc>)
 800ae76:	f000 f963 	bl	800b140 <_ZN12FrontendHeapD1Ev>
 800ae7a:	bd80      	pop	{r7, pc}
 800ae7c:	20025d94 	.word	0x20025d94

0800ae80 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 800ae80:	b580      	push	{r7, lr}
 800ae82:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 800ae84:	4b12      	ldr	r3, [pc, #72]	; (800aed0 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800ae86:	781b      	ldrb	r3, [r3, #0]
 800ae88:	f3bf 8f5b 	dmb	ish
 800ae8c:	b2db      	uxtb	r3, r3
 800ae8e:	f003 0301 	and.w	r3, r3, #1
 800ae92:	2b00      	cmp	r3, #0
 800ae94:	bf0c      	ite	eq
 800ae96:	2301      	moveq	r3, #1
 800ae98:	2300      	movne	r3, #0
 800ae9a:	b2db      	uxtb	r3, r3
 800ae9c:	2b00      	cmp	r3, #0
 800ae9e:	d013      	beq.n	800aec8 <_ZN12FrontendHeap11getInstanceEv+0x48>
 800aea0:	480b      	ldr	r0, [pc, #44]	; (800aed0 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800aea2:	f012 fd96 	bl	801d9d2 <__cxa_guard_acquire>
 800aea6:	4603      	mov	r3, r0
 800aea8:	2b00      	cmp	r3, #0
 800aeaa:	bf14      	ite	ne
 800aeac:	2301      	movne	r3, #1
 800aeae:	2300      	moveq	r3, #0
 800aeb0:	b2db      	uxtb	r3, r3
 800aeb2:	2b00      	cmp	r3, #0
 800aeb4:	d008      	beq.n	800aec8 <_ZN12FrontendHeap11getInstanceEv+0x48>
 800aeb6:	4807      	ldr	r0, [pc, #28]	; (800aed4 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 800aeb8:	f000 f868 	bl	800af8c <_ZN12FrontendHeapC1Ev>
 800aebc:	4806      	ldr	r0, [pc, #24]	; (800aed8 <_ZN12FrontendHeap11getInstanceEv+0x58>)
 800aebe:	f012 fdd3 	bl	801da68 <atexit>
 800aec2:	4803      	ldr	r0, [pc, #12]	; (800aed0 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800aec4:	f012 fd91 	bl	801d9ea <__cxa_guard_release>
        return instance;
 800aec8:	4b02      	ldr	r3, [pc, #8]	; (800aed4 <_ZN12FrontendHeap11getInstanceEv+0x54>)
    }
 800aeca:	4618      	mov	r0, r3
 800aecc:	bd80      	pop	{r7, pc}
 800aece:	bf00      	nop
 800aed0:	2002604c 	.word	0x2002604c
 800aed4:	20025d94 	.word	0x20025d94
 800aed8:	0800ae71 	.word	0x0800ae71

0800aedc <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 800aedc:	b580      	push	{r7, lr}
 800aede:	b082      	sub	sp, #8
 800aee0:	af00      	add	r7, sp, #0
 800aee2:	6078      	str	r0, [r7, #4]
 800aee4:	4a05      	ldr	r2, [pc, #20]	; (800aefc <_ZN16FrontendHeapBaseD1Ev+0x20>)
 800aee6:	687b      	ldr	r3, [r7, #4]
 800aee8:	601a      	str	r2, [r3, #0]
 800aeea:	687b      	ldr	r3, [r7, #4]
 800aeec:	4618      	mov	r0, r3
 800aeee:	f7ff fe61 	bl	800abb4 <_ZN8touchgfx7MVPHeapD1Ev>
 800aef2:	687b      	ldr	r3, [r7, #4]
 800aef4:	4618      	mov	r0, r3
 800aef6:	3708      	adds	r7, #8
 800aef8:	46bd      	mov	sp, r7
 800aefa:	bd80      	pop	{r7, pc}
 800aefc:	0801fb80 	.word	0x0801fb80

0800af00 <_ZN16FrontendHeapBaseD0Ev>:
 800af00:	b580      	push	{r7, lr}
 800af02:	b082      	sub	sp, #8
 800af04:	af00      	add	r7, sp, #0
 800af06:	6078      	str	r0, [r7, #4]
 800af08:	6878      	ldr	r0, [r7, #4]
 800af0a:	f7ff ffe7 	bl	800aedc <_ZN16FrontendHeapBaseD1Ev>
 800af0e:	2114      	movs	r1, #20
 800af10:	6878      	ldr	r0, [r7, #4]
 800af12:	f012 fd5c 	bl	801d9ce <_ZdlPvj>
 800af16:	687b      	ldr	r3, [r7, #4]
 800af18:	4618      	mov	r0, r3
 800af1a:	3708      	adds	r7, #8
 800af1c:	46bd      	mov	sp, r7
 800af1e:	bd80      	pop	{r7, pc}

0800af20 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 800af20:	b580      	push	{r7, lr}
 800af22:	b082      	sub	sp, #8
 800af24:	af00      	add	r7, sp, #0
 800af26:	6078      	str	r0, [r7, #4]
 800af28:	687b      	ldr	r3, [r7, #4]
 800af2a:	4618      	mov	r0, r3
 800af2c:	f000 fda4 	bl	800ba78 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800af30:	4a03      	ldr	r2, [pc, #12]	; (800af40 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800af32:	687b      	ldr	r3, [r7, #4]
 800af34:	601a      	str	r2, [r3, #0]
 800af36:	687b      	ldr	r3, [r7, #4]
 800af38:	4618      	mov	r0, r3
 800af3a:	3708      	adds	r7, #8
 800af3c:	46bd      	mov	sp, r7
 800af3e:	bd80      	pop	{r7, pc}
 800af40:	0801fb4c 	.word	0x0801fb4c

0800af44 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800af44:	b580      	push	{r7, lr}
 800af46:	b082      	sub	sp, #8
 800af48:	af00      	add	r7, sp, #0
 800af4a:	6078      	str	r0, [r7, #4]
 800af4c:	687b      	ldr	r3, [r7, #4]
 800af4e:	4618      	mov	r0, r3
 800af50:	f000 fd92 	bl	800ba78 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800af54:	4a03      	ldr	r2, [pc, #12]	; (800af64 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800af56:	687b      	ldr	r3, [r7, #4]
 800af58:	601a      	str	r2, [r3, #0]
 800af5a:	687b      	ldr	r3, [r7, #4]
 800af5c:	4618      	mov	r0, r3
 800af5e:	3708      	adds	r7, #8
 800af60:	46bd      	mov	sp, r7
 800af62:	bd80      	pop	{r7, pc}
 800af64:	0801fb18 	.word	0x0801fb18

0800af68 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800af68:	b580      	push	{r7, lr}
 800af6a:	b082      	sub	sp, #8
 800af6c:	af00      	add	r7, sp, #0
 800af6e:	6078      	str	r0, [r7, #4]
 800af70:	687b      	ldr	r3, [r7, #4]
 800af72:	4618      	mov	r0, r3
 800af74:	f000 fd80 	bl	800ba78 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800af78:	4a03      	ldr	r2, [pc, #12]	; (800af88 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800af7a:	687b      	ldr	r3, [r7, #4]
 800af7c:	601a      	str	r2, [r3, #0]
 800af7e:	687b      	ldr	r3, [r7, #4]
 800af80:	4618      	mov	r0, r3
 800af82:	3708      	adds	r7, #8
 800af84:	46bd      	mov	sp, r7
 800af86:	bd80      	pop	{r7, pc}
 800af88:	0801fae4 	.word	0x0801fae4

0800af8c <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800af8c:	b590      	push	{r4, r7, lr}
 800af8e:	b085      	sub	sp, #20
 800af90:	af02      	add	r7, sp, #8
 800af92:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 800af94:	6878      	ldr	r0, [r7, #4]
 800af96:	687b      	ldr	r3, [r7, #4]
 800af98:	f103 0114 	add.w	r1, r3, #20
 800af9c:	687b      	ldr	r3, [r7, #4]
 800af9e:	f103 022c 	add.w	r2, r3, #44	; 0x2c
 800afa2:	687b      	ldr	r3, [r7, #4]
 800afa4:	f503 74a4 	add.w	r4, r3, #328	; 0x148
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800afa8:	687b      	ldr	r3, [r7, #4]
 800afaa:	f503 73b0 	add.w	r3, r3, #352	; 0x160
                     app(model, *this)
 800afae:	9300      	str	r3, [sp, #0]
 800afb0:	4623      	mov	r3, r4
 800afb2:	f7ff ff43 	bl	800ae3c <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 800afb6:	4a18      	ldr	r2, [pc, #96]	; (800b018 <_ZN12FrontendHeapC1Ev+0x8c>)
 800afb8:	687b      	ldr	r3, [r7, #4]
 800afba:	601a      	str	r2, [r3, #0]
 800afbc:	687b      	ldr	r3, [r7, #4]
 800afbe:	3314      	adds	r3, #20
 800afc0:	4618      	mov	r0, r3
 800afc2:	f7ff ffad 	bl	800af20 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800afc6:	687b      	ldr	r3, [r7, #4]
 800afc8:	332c      	adds	r3, #44	; 0x2c
 800afca:	4618      	mov	r0, r3
 800afcc:	f7ff ffba 	bl	800af44 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800afd0:	687b      	ldr	r3, [r7, #4]
 800afd2:	f503 73a4 	add.w	r3, r3, #328	; 0x148
 800afd6:	4618      	mov	r0, r3
 800afd8:	f7ff ffc6 	bl	800af68 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800afdc:	687b      	ldr	r3, [r7, #4]
 800afde:	f503 73ae 	add.w	r3, r3, #348	; 0x15c
 800afe2:	4618      	mov	r0, r3
 800afe4:	f7fe fbc6 	bl	8009774 <_ZN5ModelC1Ev>
 800afe8:	687b      	ldr	r3, [r7, #4]
 800afea:	f503 70b0 	add.w	r0, r3, #352	; 0x160
 800afee:	687b      	ldr	r3, [r7, #4]
 800aff0:	f503 73ae 	add.w	r3, r3, #348	; 0x15c
 800aff4:	687a      	ldr	r2, [r7, #4]
 800aff6:	4619      	mov	r1, r3
 800aff8:	f7fe fba6 	bl	8009748 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
    {
        gotoStartScreen(app);
 800affc:	687a      	ldr	r2, [r7, #4]
 800affe:	687b      	ldr	r3, [r7, #4]
 800b000:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 800b004:	4619      	mov	r1, r3
 800b006:	4610      	mov	r0, r2
 800b008:	f7ff ff0a 	bl	800ae20 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 800b00c:	687b      	ldr	r3, [r7, #4]
 800b00e:	4618      	mov	r0, r3
 800b010:	370c      	adds	r7, #12
 800b012:	46bd      	mov	sp, r7
 800b014:	bd90      	pop	{r4, r7, pc}
 800b016:	bf00      	nop
 800b018:	0801fad0 	.word	0x0801fad0

0800b01c <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 800b01c:	b580      	push	{r7, lr}
 800b01e:	b086      	sub	sp, #24
 800b020:	af02      	add	r7, sp, #8
 800b022:	60f8      	str	r0, [r7, #12]
 800b024:	60b9      	str	r1, [r7, #8]
 800b026:	607a      	str	r2, [r7, #4]
 800b028:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 800b02a:	68f8      	ldr	r0, [r7, #12]
 800b02c:	8bbb      	ldrh	r3, [r7, #28]
 800b02e:	9301      	str	r3, [sp, #4]
 800b030:	8b3b      	ldrh	r3, [r7, #24]
 800b032:	9300      	str	r3, [sp, #0]
 800b034:	683b      	ldr	r3, [r7, #0]
 800b036:	687a      	ldr	r2, [r7, #4]
 800b038:	68b9      	ldr	r1, [r7, #8]
 800b03a:	f7ff fe31 	bl	800aca0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 800b03e:	4a04      	ldr	r2, [pc, #16]	; (800b050 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800b040:	68fb      	ldr	r3, [r7, #12]
 800b042:	601a      	str	r2, [r3, #0]
    }
 800b044:	68fb      	ldr	r3, [r7, #12]
 800b046:	4618      	mov	r0, r3
 800b048:	3710      	adds	r7, #16
 800b04a:	46bd      	mov	sp, r7
 800b04c:	bd80      	pop	{r7, pc}
 800b04e:	bf00      	nop
 800b050:	0801fba4 	.word	0x0801fba4

0800b054 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800b054:	b580      	push	{r7, lr}
 800b056:	b086      	sub	sp, #24
 800b058:	af02      	add	r7, sp, #8
 800b05a:	60f8      	str	r0, [r7, #12]
 800b05c:	60b9      	str	r1, [r7, #8]
 800b05e:	607a      	str	r2, [r7, #4]
 800b060:	603b      	str	r3, [r7, #0]
 800b062:	68f8      	ldr	r0, [r7, #12]
 800b064:	8bbb      	ldrh	r3, [r7, #28]
 800b066:	9301      	str	r3, [sp, #4]
 800b068:	8b3b      	ldrh	r3, [r7, #24]
 800b06a:	9300      	str	r3, [sp, #0]
 800b06c:	683b      	ldr	r3, [r7, #0]
 800b06e:	687a      	ldr	r2, [r7, #4]
 800b070:	68b9      	ldr	r1, [r7, #8]
 800b072:	f7ff ffd3 	bl	800b01c <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800b076:	4a04      	ldr	r2, [pc, #16]	; (800b088 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800b078:	68fb      	ldr	r3, [r7, #12]
 800b07a:	601a      	str	r2, [r3, #0]
    }
 800b07c:	68fb      	ldr	r3, [r7, #12]
 800b07e:	4618      	mov	r0, r3
 800b080:	3710      	adds	r7, #16
 800b082:	46bd      	mov	sp, r7
 800b084:	bd80      	pop	{r7, pc}
 800b086:	bf00      	nop
 800b088:	0801f984 	.word	0x0801f984

0800b08c <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 800b08c:	b480      	push	{r7}
 800b08e:	b083      	sub	sp, #12
 800b090:	af00      	add	r7, sp, #0
 800b092:	6078      	str	r0, [r7, #4]
 800b094:	4a04      	ldr	r2, [pc, #16]	; (800b0a8 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 800b096:	687b      	ldr	r3, [r7, #4]
 800b098:	601a      	str	r2, [r3, #0]
 800b09a:	687b      	ldr	r3, [r7, #4]
 800b09c:	4618      	mov	r0, r3
 800b09e:	370c      	adds	r7, #12
 800b0a0:	46bd      	mov	sp, r7
 800b0a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b0a6:	4770      	bx	lr
 800b0a8:	0801f96c 	.word	0x0801f96c

0800b0ac <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 800b0ac:	b580      	push	{r7, lr}
 800b0ae:	b082      	sub	sp, #8
 800b0b0:	af00      	add	r7, sp, #0
 800b0b2:	6078      	str	r0, [r7, #4]
 800b0b4:	687b      	ldr	r3, [r7, #4]
 800b0b6:	4618      	mov	r0, r3
 800b0b8:	f7ff ffe8 	bl	800b08c <_ZN8touchgfx15TouchControllerC1Ev>
 800b0bc:	4a03      	ldr	r2, [pc, #12]	; (800b0cc <_ZN20STM32TouchControllerC1Ev+0x20>)
 800b0be:	687b      	ldr	r3, [r7, #4]
 800b0c0:	601a      	str	r2, [r3, #0]
 800b0c2:	687b      	ldr	r3, [r7, #4]
 800b0c4:	4618      	mov	r0, r3
 800b0c6:	3708      	adds	r7, #8
 800b0c8:	46bd      	mov	sp, r7
 800b0ca:	bd80      	pop	{r7, pc}
 800b0cc:	0801f954 	.word	0x0801f954

0800b0d0 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 800b0d0:	b590      	push	{r4, r7, lr}
 800b0d2:	b085      	sub	sp, #20
 800b0d4:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800b0d6:	f7fe f907 	bl	80092e8 <_ZN14BitmapDatabase11getInstanceEv>
 800b0da:	4604      	mov	r4, r0
 800b0dc:	f7fe f90e 	bl	80092fc <_ZN14BitmapDatabase15getInstanceSizeEv>
 800b0e0:	4603      	mov	r3, r0
 800b0e2:	4619      	mov	r1, r3
 800b0e4:	2300      	movs	r3, #0
 800b0e6:	9300      	str	r3, [sp, #0]
 800b0e8:	2300      	movs	r3, #0
 800b0ea:	2200      	movs	r2, #0
 800b0ec:	4620      	mov	r0, r4
 800b0ee:	f006 fb4f 	bl	8011790 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 800b0f2:	4809      	ldr	r0, [pc, #36]	; (800b118 <touchgfx_init+0x48>)
 800b0f4:	f7ff fd2e 	bl	800ab54 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 800b0f8:	2000      	movs	r0, #0
 800b0fa:	f7fe fa43 	bl	8009584 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 800b0fe:	4807      	ldr	r0, [pc, #28]	; (800b11c <touchgfx_init+0x4c>)
 800b100:	f006 fa92 	bl	8011628 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 800b104:	f7ff febc 	bl	800ae80 <_ZN12FrontendHeap11getInstanceEv>
 800b108:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800b10a:	4805      	ldr	r0, [pc, #20]	; (800b120 <touchgfx_init+0x50>)
 800b10c:	f7fe ffa6 	bl	800a05c <_ZN11TouchGFXHAL10initializeEv>
}
 800b110:	bf00      	nop
 800b112:	370c      	adds	r7, #12
 800b114:	46bd      	mov	sp, r7
 800b116:	bd90      	pop	{r4, r7, pc}
 800b118:	20026e6c 	.word	0x20026e6c
 800b11c:	20000078 	.word	0x20000078
 800b120:	20026e70 	.word	0x20026e70

0800b124 <touchgfx_taskEntry>:
void touchgfx_components_init()
{
}

void touchgfx_taskEntry()
{
 800b124:	b580      	push	{r7, lr}
 800b126:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
     if (OSWrappers::isVSyncAvailable())
 800b128:	f7ff f8ae 	bl	800a288 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 800b12c:	4603      	mov	r3, r0
 800b12e:	2b00      	cmp	r3, #0
 800b130:	d002      	beq.n	800b138 <touchgfx_taskEntry+0x14>
     {
         hal.backPorchExited();
 800b132:	4802      	ldr	r0, [pc, #8]	; (800b13c <touchgfx_taskEntry+0x18>)
 800b134:	f7fe fe70 	bl	8009e18 <_ZN8touchgfx3HAL15backPorchExitedEv>
     }
}
 800b138:	bf00      	nop
 800b13a:	bd80      	pop	{r7, pc}
 800b13c:	20026e70 	.word	0x20026e70

0800b140 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 800b140:	b580      	push	{r7, lr}
 800b142:	b082      	sub	sp, #8
 800b144:	af00      	add	r7, sp, #0
 800b146:	6078      	str	r0, [r7, #4]
 800b148:	4a10      	ldr	r2, [pc, #64]	; (800b18c <_ZN12FrontendHeapD1Ev+0x4c>)
 800b14a:	687b      	ldr	r3, [r7, #4]
 800b14c:	601a      	str	r2, [r3, #0]
 800b14e:	687b      	ldr	r3, [r7, #4]
 800b150:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 800b154:	4618      	mov	r0, r3
 800b156:	f7fe fac1 	bl	80096dc <_ZN19FrontendApplicationD1Ev>
 800b15a:	687b      	ldr	r3, [r7, #4]
 800b15c:	f503 73a4 	add.w	r3, r3, #328	; 0x148
 800b160:	4618      	mov	r0, r3
 800b162:	f000 f827 	bl	800b1b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b166:	687b      	ldr	r3, [r7, #4]
 800b168:	332c      	adds	r3, #44	; 0x2c
 800b16a:	4618      	mov	r0, r3
 800b16c:	f000 f844 	bl	800b1f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b170:	687b      	ldr	r3, [r7, #4]
 800b172:	3314      	adds	r3, #20
 800b174:	4618      	mov	r0, r3
 800b176:	f000 f863 	bl	800b240 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b17a:	687b      	ldr	r3, [r7, #4]
 800b17c:	4618      	mov	r0, r3
 800b17e:	f7ff fead 	bl	800aedc <_ZN16FrontendHeapBaseD1Ev>
 800b182:	687b      	ldr	r3, [r7, #4]
 800b184:	4618      	mov	r0, r3
 800b186:	3708      	adds	r7, #8
 800b188:	46bd      	mov	sp, r7
 800b18a:	bd80      	pop	{r7, pc}
 800b18c:	0801fad0 	.word	0x0801fad0

0800b190 <_ZN12FrontendHeapD0Ev>:
 800b190:	b580      	push	{r7, lr}
 800b192:	b082      	sub	sp, #8
 800b194:	af00      	add	r7, sp, #0
 800b196:	6078      	str	r0, [r7, #4]
 800b198:	6878      	ldr	r0, [r7, #4]
 800b19a:	f7ff ffd1 	bl	800b140 <_ZN12FrontendHeapD1Ev>
 800b19e:	f44f 712e 	mov.w	r1, #696	; 0x2b8
 800b1a2:	6878      	ldr	r0, [r7, #4]
 800b1a4:	f012 fc13 	bl	801d9ce <_ZdlPvj>
 800b1a8:	687b      	ldr	r3, [r7, #4]
 800b1aa:	4618      	mov	r0, r3
 800b1ac:	3708      	adds	r7, #8
 800b1ae:	46bd      	mov	sp, r7
 800b1b0:	bd80      	pop	{r7, pc}
	...

0800b1b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800b1b4:	b580      	push	{r7, lr}
 800b1b6:	b082      	sub	sp, #8
 800b1b8:	af00      	add	r7, sp, #0
 800b1ba:	6078      	str	r0, [r7, #4]
 800b1bc:	4a05      	ldr	r2, [pc, #20]	; (800b1d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800b1be:	687b      	ldr	r3, [r7, #4]
 800b1c0:	601a      	str	r2, [r3, #0]
 800b1c2:	687b      	ldr	r3, [r7, #4]
 800b1c4:	4618      	mov	r0, r3
 800b1c6:	f000 fc55 	bl	800ba74 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800b1ca:	687b      	ldr	r3, [r7, #4]
 800b1cc:	4618      	mov	r0, r3
 800b1ce:	3708      	adds	r7, #8
 800b1d0:	46bd      	mov	sp, r7
 800b1d2:	bd80      	pop	{r7, pc}
 800b1d4:	0801fae4 	.word	0x0801fae4

0800b1d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800b1d8:	b580      	push	{r7, lr}
 800b1da:	b082      	sub	sp, #8
 800b1dc:	af00      	add	r7, sp, #0
 800b1de:	6078      	str	r0, [r7, #4]
 800b1e0:	6878      	ldr	r0, [r7, #4]
 800b1e2:	f7ff ffe7 	bl	800b1b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b1e6:	2114      	movs	r1, #20
 800b1e8:	6878      	ldr	r0, [r7, #4]
 800b1ea:	f012 fbf0 	bl	801d9ce <_ZdlPvj>
 800b1ee:	687b      	ldr	r3, [r7, #4]
 800b1f0:	4618      	mov	r0, r3
 800b1f2:	3708      	adds	r7, #8
 800b1f4:	46bd      	mov	sp, r7
 800b1f6:	bd80      	pop	{r7, pc}

0800b1f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800b1f8:	b580      	push	{r7, lr}
 800b1fa:	b082      	sub	sp, #8
 800b1fc:	af00      	add	r7, sp, #0
 800b1fe:	6078      	str	r0, [r7, #4]
 800b200:	4a05      	ldr	r2, [pc, #20]	; (800b218 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800b202:	687b      	ldr	r3, [r7, #4]
 800b204:	601a      	str	r2, [r3, #0]
 800b206:	687b      	ldr	r3, [r7, #4]
 800b208:	4618      	mov	r0, r3
 800b20a:	f000 fc33 	bl	800ba74 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800b20e:	687b      	ldr	r3, [r7, #4]
 800b210:	4618      	mov	r0, r3
 800b212:	3708      	adds	r7, #8
 800b214:	46bd      	mov	sp, r7
 800b216:	bd80      	pop	{r7, pc}
 800b218:	0801fb18 	.word	0x0801fb18

0800b21c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800b21c:	b580      	push	{r7, lr}
 800b21e:	b082      	sub	sp, #8
 800b220:	af00      	add	r7, sp, #0
 800b222:	6078      	str	r0, [r7, #4]
 800b224:	6878      	ldr	r0, [r7, #4]
 800b226:	f7ff ffe7 	bl	800b1f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b22a:	f44f 718e 	mov.w	r1, #284	; 0x11c
 800b22e:	6878      	ldr	r0, [r7, #4]
 800b230:	f012 fbcd 	bl	801d9ce <_ZdlPvj>
 800b234:	687b      	ldr	r3, [r7, #4]
 800b236:	4618      	mov	r0, r3
 800b238:	3708      	adds	r7, #8
 800b23a:	46bd      	mov	sp, r7
 800b23c:	bd80      	pop	{r7, pc}
	...

0800b240 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800b240:	b580      	push	{r7, lr}
 800b242:	b082      	sub	sp, #8
 800b244:	af00      	add	r7, sp, #0
 800b246:	6078      	str	r0, [r7, #4]
 800b248:	4a05      	ldr	r2, [pc, #20]	; (800b260 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800b24a:	687b      	ldr	r3, [r7, #4]
 800b24c:	601a      	str	r2, [r3, #0]
 800b24e:	687b      	ldr	r3, [r7, #4]
 800b250:	4618      	mov	r0, r3
 800b252:	f000 fc0f 	bl	800ba74 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800b256:	687b      	ldr	r3, [r7, #4]
 800b258:	4618      	mov	r0, r3
 800b25a:	3708      	adds	r7, #8
 800b25c:	46bd      	mov	sp, r7
 800b25e:	bd80      	pop	{r7, pc}
 800b260:	0801fb4c 	.word	0x0801fb4c

0800b264 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800b264:	b580      	push	{r7, lr}
 800b266:	b082      	sub	sp, #8
 800b268:	af00      	add	r7, sp, #0
 800b26a:	6078      	str	r0, [r7, #4]
 800b26c:	6878      	ldr	r0, [r7, #4]
 800b26e:	f7ff ffe7 	bl	800b240 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800b272:	2118      	movs	r1, #24
 800b274:	6878      	ldr	r0, [r7, #4]
 800b276:	f012 fbaa 	bl	801d9ce <_ZdlPvj>
 800b27a:	687b      	ldr	r3, [r7, #4]
 800b27c:	4618      	mov	r0, r3
 800b27e:	3708      	adds	r7, #8
 800b280:	46bd      	mov	sp, r7
 800b282:	bd80      	pop	{r7, pc}

0800b284 <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 800b284:	b580      	push	{r7, lr}
 800b286:	b082      	sub	sp, #8
 800b288:	af00      	add	r7, sp, #0
 800b28a:	6078      	str	r0, [r7, #4]
 800b28c:	4a05      	ldr	r2, [pc, #20]	; (800b2a4 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 800b28e:	687b      	ldr	r3, [r7, #4]
 800b290:	601a      	str	r2, [r3, #0]
 800b292:	687b      	ldr	r3, [r7, #4]
 800b294:	4618      	mov	r0, r3
 800b296:	f7ff fcad 	bl	800abf4 <_ZN8touchgfx3LCDD1Ev>
 800b29a:	687b      	ldr	r3, [r7, #4]
 800b29c:	4618      	mov	r0, r3
 800b29e:	3708      	adds	r7, #8
 800b2a0:	46bd      	mov	sp, r7
 800b2a2:	bd80      	pop	{r7, pc}
 800b2a4:	08021ec0 	.word	0x08021ec0

0800b2a8 <_ZN8touchgfx8LCD16bppD0Ev>:
 800b2a8:	b580      	push	{r7, lr}
 800b2aa:	b082      	sub	sp, #8
 800b2ac:	af00      	add	r7, sp, #0
 800b2ae:	6078      	str	r0, [r7, #4]
 800b2b0:	6878      	ldr	r0, [r7, #4]
 800b2b2:	f7ff ffe7 	bl	800b284 <_ZN8touchgfx8LCD16bppD1Ev>
 800b2b6:	2178      	movs	r1, #120	; 0x78
 800b2b8:	6878      	ldr	r0, [r7, #4]
 800b2ba:	f012 fb88 	bl	801d9ce <_ZdlPvj>
 800b2be:	687b      	ldr	r3, [r7, #4]
 800b2c0:	4618      	mov	r0, r3
 800b2c2:	3708      	adds	r7, #8
 800b2c4:	46bd      	mov	sp, r7
 800b2c6:	bd80      	pop	{r7, pc}

0800b2c8 <_Z41__static_initialization_and_destruction_0ii>:
 800b2c8:	b580      	push	{r7, lr}
 800b2ca:	b084      	sub	sp, #16
 800b2cc:	af02      	add	r7, sp, #8
 800b2ce:	6078      	str	r0, [r7, #4]
 800b2d0:	6039      	str	r1, [r7, #0]
 800b2d2:	687b      	ldr	r3, [r7, #4]
 800b2d4:	2b01      	cmp	r3, #1
 800b2d6:	d118      	bne.n	800b30a <_Z41__static_initialization_and_destruction_0ii+0x42>
 800b2d8:	683b      	ldr	r3, [r7, #0]
 800b2da:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b2de:	4293      	cmp	r3, r2
 800b2e0:	d113      	bne.n	800b30a <_Z41__static_initialization_and_destruction_0ii+0x42>
static STM32TouchController tc;
 800b2e2:	4817      	ldr	r0, [pc, #92]	; (800b340 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800b2e4:	f7ff fee2 	bl	800b0ac <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 800b2e8:	4816      	ldr	r0, [pc, #88]	; (800b344 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800b2ea:	f7ff f911 	bl	800a510 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800b2ee:	4816      	ldr	r0, [pc, #88]	; (800b348 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800b2f0:	f009 fbf0 	bl	8014ad4 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 240, 320);
 800b2f4:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800b2f8:	9301      	str	r3, [sp, #4]
 800b2fa:	23f0      	movs	r3, #240	; 0xf0
 800b2fc:	9300      	str	r3, [sp, #0]
 800b2fe:	4b10      	ldr	r3, [pc, #64]	; (800b340 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800b300:	4a11      	ldr	r2, [pc, #68]	; (800b348 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800b302:	4910      	ldr	r1, [pc, #64]	; (800b344 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800b304:	4811      	ldr	r0, [pc, #68]	; (800b34c <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800b306:	f7ff fea5 	bl	800b054 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800b30a:	687b      	ldr	r3, [r7, #4]
 800b30c:	2b00      	cmp	r3, #0
 800b30e:	d113      	bne.n	800b338 <_Z41__static_initialization_and_destruction_0ii+0x70>
 800b310:	683b      	ldr	r3, [r7, #0]
 800b312:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b316:	4293      	cmp	r3, r2
 800b318:	d10e      	bne.n	800b338 <_Z41__static_initialization_and_destruction_0ii+0x70>
 800b31a:	480c      	ldr	r0, [pc, #48]	; (800b34c <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800b31c:	f7fe ff2e 	bl	800a17c <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 800b320:	480b      	ldr	r0, [pc, #44]	; (800b350 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800b322:	f7fc f915 	bl	8007550 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 800b326:	4808      	ldr	r0, [pc, #32]	; (800b348 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800b328:	f7ff ffac 	bl	800b284 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 800b32c:	4805      	ldr	r0, [pc, #20]	; (800b344 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800b32e:	f7ff f919 	bl	800a564 <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 800b332:	4803      	ldr	r0, [pc, #12]	; (800b340 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800b334:	f7fe fcb0 	bl	8009c98 <_ZN20STM32TouchControllerD1Ev>
}
 800b338:	bf00      	nop
 800b33a:	3708      	adds	r7, #8
 800b33c:	46bd      	mov	sp, r7
 800b33e:	bd80      	pop	{r7, pc}
 800b340:	20026050 	.word	0x20026050
 800b344:	20026054 	.word	0x20026054
 800b348:	20026df4 	.word	0x20026df4
 800b34c:	20026e70 	.word	0x20026e70
 800b350:	20000078 	.word	0x20000078

0800b354 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 800b354:	b480      	push	{r7}
 800b356:	b083      	sub	sp, #12
 800b358:	af00      	add	r7, sp, #0
 800b35a:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 800b35c:	2301      	movs	r3, #1
    }
 800b35e:	4618      	mov	r0, r3
 800b360:	370c      	adds	r7, #12
 800b362:	46bd      	mov	sp, r7
 800b364:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b368:	4770      	bx	lr

0800b36a <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 800b36a:	b480      	push	{r7}
 800b36c:	b083      	sub	sp, #12
 800b36e:	af00      	add	r7, sp, #0
 800b370:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 800b372:	230c      	movs	r3, #12
    }
 800b374:	4618      	mov	r0, r3
 800b376:	370c      	adds	r7, #12
 800b378:	46bd      	mov	sp, r7
 800b37a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b37e:	4770      	bx	lr

0800b380 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 800b380:	b480      	push	{r7}
 800b382:	b083      	sub	sp, #12
 800b384:	af00      	add	r7, sp, #0
 800b386:	6078      	str	r0, [r7, #4]
 800b388:	460b      	mov	r3, r1
 800b38a:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800b38c:	887a      	ldrh	r2, [r7, #2]
 800b38e:	4613      	mov	r3, r2
 800b390:	005b      	lsls	r3, r3, #1
 800b392:	4413      	add	r3, r2
 800b394:	009b      	lsls	r3, r3, #2
 800b396:	3308      	adds	r3, #8
 800b398:	687a      	ldr	r2, [r7, #4]
 800b39a:	4413      	add	r3, r2
    }
 800b39c:	4618      	mov	r0, r3
 800b39e:	370c      	adds	r7, #12
 800b3a0:	46bd      	mov	sp, r7
 800b3a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3a6:	4770      	bx	lr

0800b3a8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 800b3a8:	b480      	push	{r7}
 800b3aa:	b083      	sub	sp, #12
 800b3ac:	af00      	add	r7, sp, #0
 800b3ae:	6078      	str	r0, [r7, #4]
 800b3b0:	460b      	mov	r3, r1
 800b3b2:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800b3b4:	887a      	ldrh	r2, [r7, #2]
 800b3b6:	4613      	mov	r3, r2
 800b3b8:	005b      	lsls	r3, r3, #1
 800b3ba:	4413      	add	r3, r2
 800b3bc:	009b      	lsls	r3, r3, #2
 800b3be:	3308      	adds	r3, #8
 800b3c0:	687a      	ldr	r2, [r7, #4]
 800b3c2:	4413      	add	r3, r2
    }
 800b3c4:	4618      	mov	r0, r3
 800b3c6:	370c      	adds	r7, #12
 800b3c8:	46bd      	mov	sp, r7
 800b3ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3ce:	4770      	bx	lr

0800b3d0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800b3d0:	b480      	push	{r7}
 800b3d2:	b083      	sub	sp, #12
 800b3d4:	af00      	add	r7, sp, #0
 800b3d6:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800b3d8:	2301      	movs	r3, #1
    }
 800b3da:	4618      	mov	r0, r3
 800b3dc:	370c      	adds	r7, #12
 800b3de:	46bd      	mov	sp, r7
 800b3e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3e4:	4770      	bx	lr

0800b3e6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800b3e6:	b480      	push	{r7}
 800b3e8:	b083      	sub	sp, #12
 800b3ea:	af00      	add	r7, sp, #0
 800b3ec:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800b3ee:	f44f 738a 	mov.w	r3, #276	; 0x114
    }
 800b3f2:	4618      	mov	r0, r3
 800b3f4:	370c      	adds	r7, #12
 800b3f6:	46bd      	mov	sp, r7
 800b3f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3fc:	4770      	bx	lr

0800b3fe <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800b3fe:	b480      	push	{r7}
 800b400:	b083      	sub	sp, #12
 800b402:	af00      	add	r7, sp, #0
 800b404:	6078      	str	r0, [r7, #4]
 800b406:	460b      	mov	r3, r1
 800b408:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800b40a:	887b      	ldrh	r3, [r7, #2]
 800b40c:	f44f 728a 	mov.w	r2, #276	; 0x114
 800b410:	fb02 f303 	mul.w	r3, r2, r3
 800b414:	3308      	adds	r3, #8
 800b416:	687a      	ldr	r2, [r7, #4]
 800b418:	4413      	add	r3, r2
    }
 800b41a:	4618      	mov	r0, r3
 800b41c:	370c      	adds	r7, #12
 800b41e:	46bd      	mov	sp, r7
 800b420:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b424:	4770      	bx	lr

0800b426 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800b426:	b480      	push	{r7}
 800b428:	b083      	sub	sp, #12
 800b42a:	af00      	add	r7, sp, #0
 800b42c:	6078      	str	r0, [r7, #4]
 800b42e:	460b      	mov	r3, r1
 800b430:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800b432:	887b      	ldrh	r3, [r7, #2]
 800b434:	f44f 728a 	mov.w	r2, #276	; 0x114
 800b438:	fb02 f303 	mul.w	r3, r2, r3
 800b43c:	3308      	adds	r3, #8
 800b43e:	687a      	ldr	r2, [r7, #4]
 800b440:	4413      	add	r3, r2
    }
 800b442:	4618      	mov	r0, r3
 800b444:	370c      	adds	r7, #12
 800b446:	46bd      	mov	sp, r7
 800b448:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b44c:	4770      	bx	lr

0800b44e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800b44e:	b480      	push	{r7}
 800b450:	b083      	sub	sp, #12
 800b452:	af00      	add	r7, sp, #0
 800b454:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800b456:	2301      	movs	r3, #1
    }
 800b458:	4618      	mov	r0, r3
 800b45a:	370c      	adds	r7, #12
 800b45c:	46bd      	mov	sp, r7
 800b45e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b462:	4770      	bx	lr

0800b464 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800b464:	b480      	push	{r7}
 800b466:	b083      	sub	sp, #12
 800b468:	af00      	add	r7, sp, #0
 800b46a:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800b46c:	2310      	movs	r3, #16
    }
 800b46e:	4618      	mov	r0, r3
 800b470:	370c      	adds	r7, #12
 800b472:	46bd      	mov	sp, r7
 800b474:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b478:	4770      	bx	lr

0800b47a <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800b47a:	b480      	push	{r7}
 800b47c:	b083      	sub	sp, #12
 800b47e:	af00      	add	r7, sp, #0
 800b480:	6078      	str	r0, [r7, #4]
 800b482:	460b      	mov	r3, r1
 800b484:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800b486:	887b      	ldrh	r3, [r7, #2]
 800b488:	011b      	lsls	r3, r3, #4
 800b48a:	3308      	adds	r3, #8
 800b48c:	687a      	ldr	r2, [r7, #4]
 800b48e:	4413      	add	r3, r2
    }
 800b490:	4618      	mov	r0, r3
 800b492:	370c      	adds	r7, #12
 800b494:	46bd      	mov	sp, r7
 800b496:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b49a:	4770      	bx	lr

0800b49c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800b49c:	b480      	push	{r7}
 800b49e:	b083      	sub	sp, #12
 800b4a0:	af00      	add	r7, sp, #0
 800b4a2:	6078      	str	r0, [r7, #4]
 800b4a4:	460b      	mov	r3, r1
 800b4a6:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800b4a8:	887b      	ldrh	r3, [r7, #2]
 800b4aa:	011b      	lsls	r3, r3, #4
 800b4ac:	3308      	adds	r3, #8
 800b4ae:	687a      	ldr	r2, [r7, #4]
 800b4b0:	4413      	add	r3, r2
    }
 800b4b2:	4618      	mov	r0, r3
 800b4b4:	370c      	adds	r7, #12
 800b4b6:	46bd      	mov	sp, r7
 800b4b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4bc:	4770      	bx	lr

0800b4be <_GLOBAL__sub_I_touchgfx_init>:
 800b4be:	b580      	push	{r7, lr}
 800b4c0:	af00      	add	r7, sp, #0
 800b4c2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800b4c6:	2001      	movs	r0, #1
 800b4c8:	f7ff fefe 	bl	800b2c8 <_Z41__static_initialization_and_destruction_0ii>
 800b4cc:	bd80      	pop	{r7, pc}

0800b4ce <_GLOBAL__sub_D_touchgfx_init>:
 800b4ce:	b580      	push	{r7, lr}
 800b4d0:	af00      	add	r7, sp, #0
 800b4d2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800b4d6:	2000      	movs	r0, #0
 800b4d8:	f7ff fef6 	bl	800b2c8 <_Z41__static_initialization_and_destruction_0ii>
 800b4dc:	bd80      	pop	{r7, pc}

0800b4de <_ZN8touchgfx3HAL17frontPorchEnteredEv>:
    void frontPorchEntered()
 800b4de:	b580      	push	{r7, lr}
 800b4e0:	b082      	sub	sp, #8
 800b4e2:	af00      	add	r7, sp, #0
 800b4e4:	6078      	str	r0, [r7, #4]
        allowDMATransfers();
 800b4e6:	687b      	ldr	r3, [r7, #4]
 800b4e8:	681b      	ldr	r3, [r3, #0]
 800b4ea:	3320      	adds	r3, #32
 800b4ec:	681b      	ldr	r3, [r3, #0]
 800b4ee:	6878      	ldr	r0, [r7, #4]
 800b4f0:	4798      	blx	r3
    }
 800b4f2:	bf00      	nop
 800b4f4:	3708      	adds	r7, #8
 800b4f6:	46bd      	mov	sp, r7
 800b4f8:	bd80      	pop	{r7, pc}

0800b4fa <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 800b4fa:	b480      	push	{r7}
 800b4fc:	b083      	sub	sp, #12
 800b4fe:	af00      	add	r7, sp, #0
 800b500:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 800b502:	687b      	ldr	r3, [r7, #4]
 800b504:	f893 3066 	ldrb.w	r3, [r3, #102]	; 0x66
 800b508:	3301      	adds	r3, #1
 800b50a:	b2da      	uxtb	r2, r3
 800b50c:	687b      	ldr	r3, [r7, #4]
 800b50e:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
    }
 800b512:	bf00      	nop
 800b514:	370c      	adds	r7, #12
 800b516:	46bd      	mov	sp, r7
 800b518:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b51c:	4770      	bx	lr
	...

0800b520 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 800b520:	b580      	push	{r7, lr}
 800b522:	b082      	sub	sp, #8
 800b524:	af00      	add	r7, sp, #0
 800b526:	6078      	str	r0, [r7, #4]
 800b528:	460b      	mov	r3, r1
 800b52a:	70fb      	strb	r3, [r7, #3]
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 800b52c:	78fb      	ldrb	r3, [r7, #3]
 800b52e:	2b00      	cmp	r3, #0
 800b530:	d002      	beq.n	800b538 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 800b532:	78fb      	ldrb	r3, [r7, #3]
 800b534:	2b02      	cmp	r3, #2
 800b536:	d105      	bne.n	800b544 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
            refreshStrategy = s;
 800b538:	687b      	ldr	r3, [r7, #4]
 800b53a:	78fa      	ldrb	r2, [r7, #3]
 800b53c:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
            return true;
 800b540:	2301      	movs	r3, #1
 800b542:	e027      	b.n	800b594 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 800b544:	78fb      	ldrb	r3, [r7, #3]
 800b546:	2b01      	cmp	r3, #1
 800b548:	d123      	bne.n	800b592 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 800b54a:	687b      	ldr	r3, [r7, #4]
 800b54c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b54e:	2b00      	cmp	r3, #0
 800b550:	d014      	beq.n	800b57c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800b552:	687b      	ldr	r3, [r7, #4]
 800b554:	681b      	ldr	r3, [r3, #0]
 800b556:	339c      	adds	r3, #156	; 0x9c
 800b558:	681b      	ldr	r3, [r3, #0]
 800b55a:	6878      	ldr	r0, [r7, #4]
 800b55c:	4798      	blx	r3
 800b55e:	4603      	mov	r3, r0
 800b560:	461a      	mov	r2, r3
 800b562:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b566:	429a      	cmp	r2, r3
 800b568:	d008      	beq.n	800b57c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800b56a:	4b0c      	ldr	r3, [pc, #48]	; (800b59c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 800b56c:	781b      	ldrb	r3, [r3, #0]
 800b56e:	f083 0301 	eor.w	r3, r3, #1
 800b572:	b2db      	uxtb	r3, r3
 800b574:	2b00      	cmp	r3, #0
 800b576:	d001      	beq.n	800b57c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800b578:	2301      	movs	r3, #1
 800b57a:	e000      	b.n	800b57e <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 800b57c:	2300      	movs	r3, #0
 800b57e:	2b00      	cmp	r3, #0
 800b580:	d005      	beq.n	800b58e <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
                refreshStrategy = s;
 800b582:	687b      	ldr	r3, [r7, #4]
 800b584:	78fa      	ldrb	r2, [r7, #3]
 800b586:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
                return true;
 800b58a:	2301      	movs	r3, #1
 800b58c:	e002      	b.n	800b594 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            return false;
 800b58e:	2300      	movs	r3, #0
 800b590:	e000      	b.n	800b594 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        return false;
 800b592:	2300      	movs	r3, #0
    }
 800b594:	4618      	mov	r0, r3
 800b596:	3708      	adds	r7, #8
 800b598:	46bd      	mov	sp, r7
 800b59a:	bd80      	pop	{r7, pc}
 800b59c:	20026efc 	.word	0x20026efc

0800b5a0 <_ZN8touchgfx3HAL25registerTaskDelayFunctionEPFvtE>:
    void registerTaskDelayFunction(void (*delayF)(uint16_t))
 800b5a0:	b480      	push	{r7}
 800b5a2:	b083      	sub	sp, #12
 800b5a4:	af00      	add	r7, sp, #0
 800b5a6:	6078      	str	r0, [r7, #4]
 800b5a8:	6039      	str	r1, [r7, #0]
        taskDelayFunc = delayF;
 800b5aa:	687b      	ldr	r3, [r7, #4]
 800b5ac:	683a      	ldr	r2, [r7, #0]
 800b5ae:	639a      	str	r2, [r3, #56]	; 0x38
    }
 800b5b0:	bf00      	nop
 800b5b2:	370c      	adds	r7, #12
 800b5b4:	46bd      	mov	sp, r7
 800b5b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5ba:	4770      	bx	lr

0800b5bc <__NVIC_EnableIRQ>:
{
 800b5bc:	b480      	push	{r7}
 800b5be:	b083      	sub	sp, #12
 800b5c0:	af00      	add	r7, sp, #0
 800b5c2:	4603      	mov	r3, r0
 800b5c4:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800b5c6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800b5ca:	2b00      	cmp	r3, #0
 800b5cc:	db0b      	blt.n	800b5e6 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800b5ce:	79fb      	ldrb	r3, [r7, #7]
 800b5d0:	f003 021f 	and.w	r2, r3, #31
 800b5d4:	4907      	ldr	r1, [pc, #28]	; (800b5f4 <__NVIC_EnableIRQ+0x38>)
 800b5d6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800b5da:	095b      	lsrs	r3, r3, #5
 800b5dc:	2001      	movs	r0, #1
 800b5de:	fa00 f202 	lsl.w	r2, r0, r2
 800b5e2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800b5e6:	bf00      	nop
 800b5e8:	370c      	adds	r7, #12
 800b5ea:	46bd      	mov	sp, r7
 800b5ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5f0:	4770      	bx	lr
 800b5f2:	bf00      	nop
 800b5f4:	e000e100 	.word	0xe000e100

0800b5f8 <__NVIC_DisableIRQ>:
{
 800b5f8:	b480      	push	{r7}
 800b5fa:	b083      	sub	sp, #12
 800b5fc:	af00      	add	r7, sp, #0
 800b5fe:	4603      	mov	r3, r0
 800b600:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800b602:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800b606:	2b00      	cmp	r3, #0
 800b608:	db12      	blt.n	800b630 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800b60a:	79fb      	ldrb	r3, [r7, #7]
 800b60c:	f003 021f 	and.w	r2, r3, #31
 800b610:	490a      	ldr	r1, [pc, #40]	; (800b63c <__NVIC_DisableIRQ+0x44>)
 800b612:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800b616:	095b      	lsrs	r3, r3, #5
 800b618:	2001      	movs	r0, #1
 800b61a:	fa00 f202 	lsl.w	r2, r0, r2
 800b61e:	3320      	adds	r3, #32
 800b620:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800b624:	f3bf 8f4f 	dsb	sy
}
 800b628:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800b62a:	f3bf 8f6f 	isb	sy
}
 800b62e:	bf00      	nop
}
 800b630:	bf00      	nop
 800b632:	370c      	adds	r7, #12
 800b634:	46bd      	mov	sp, r7
 800b636:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b63a:	4770      	bx	lr
 800b63c:	e000e100 	.word	0xe000e100

0800b640 <__NVIC_SetPriority>:
{
 800b640:	b480      	push	{r7}
 800b642:	b083      	sub	sp, #12
 800b644:	af00      	add	r7, sp, #0
 800b646:	4603      	mov	r3, r0
 800b648:	6039      	str	r1, [r7, #0]
 800b64a:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800b64c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800b650:	2b00      	cmp	r3, #0
 800b652:	db0a      	blt.n	800b66a <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b654:	683b      	ldr	r3, [r7, #0]
 800b656:	b2da      	uxtb	r2, r3
 800b658:	490c      	ldr	r1, [pc, #48]	; (800b68c <__NVIC_SetPriority+0x4c>)
 800b65a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800b65e:	0112      	lsls	r2, r2, #4
 800b660:	b2d2      	uxtb	r2, r2
 800b662:	440b      	add	r3, r1
 800b664:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 800b668:	e00a      	b.n	800b680 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b66a:	683b      	ldr	r3, [r7, #0]
 800b66c:	b2da      	uxtb	r2, r3
 800b66e:	4908      	ldr	r1, [pc, #32]	; (800b690 <__NVIC_SetPriority+0x50>)
 800b670:	79fb      	ldrb	r3, [r7, #7]
 800b672:	f003 030f 	and.w	r3, r3, #15
 800b676:	3b04      	subs	r3, #4
 800b678:	0112      	lsls	r2, r2, #4
 800b67a:	b2d2      	uxtb	r2, r2
 800b67c:	440b      	add	r3, r1
 800b67e:	761a      	strb	r2, [r3, #24]
}
 800b680:	bf00      	nop
 800b682:	370c      	adds	r7, #12
 800b684:	46bd      	mov	sp, r7
 800b686:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b68a:	4770      	bx	lr
 800b68c:	e000e100 	.word	0xe000e100
 800b690:	e000ed00 	.word	0xe000ed00

0800b694 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
    static uint16_t lcd_int_active_line;
    static uint16_t lcd_int_porch_line;
}

void TouchGFXGeneratedHAL::initialize()
{
 800b694:	b5b0      	push	{r4, r5, r7, lr}
 800b696:	b082      	sub	sp, #8
 800b698:	af00      	add	r7, sp, #0
 800b69a:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 800b69c:	687b      	ldr	r3, [r7, #4]
 800b69e:	4618      	mov	r0, r3
 800b6a0:	f000 fd13 	bl	800c0ca <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800b6a4:	687d      	ldr	r5, [r7, #4]
 800b6a6:	687b      	ldr	r3, [r7, #4]
 800b6a8:	681b      	ldr	r3, [r3, #0]
 800b6aa:	3364      	adds	r3, #100	; 0x64
 800b6ac:	681c      	ldr	r4, [r3, #0]
 800b6ae:	f003 fc27 	bl	800ef00 <_ZN8touchgfx11Application11getInstanceEv>
 800b6b2:	4603      	mov	r3, r0
 800b6b4:	4619      	mov	r1, r3
 800b6b6:	4628      	mov	r0, r5
 800b6b8:	47a0      	blx	r4
    registerTaskDelayFunction(&OSWrappers::taskDelay);
 800b6ba:	687b      	ldr	r3, [r7, #4]
 800b6bc:	4910      	ldr	r1, [pc, #64]	; (800b700 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6c>)
 800b6be:	4618      	mov	r0, r3
 800b6c0:	f7ff ff6e 	bl	800b5a0 <_ZN8touchgfx3HAL25registerTaskDelayFunctionEPFvtE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL);
 800b6c4:	687b      	ldr	r3, [r7, #4]
 800b6c6:	2101      	movs	r1, #1
 800b6c8:	4618      	mov	r0, r3
 800b6ca:	f7ff ff29 	bl	800b520 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
    enableLCDControllerInterrupt();
 800b6ce:	687b      	ldr	r3, [r7, #4]
 800b6d0:	681b      	ldr	r3, [r3, #0]
 800b6d2:	3380      	adds	r3, #128	; 0x80
 800b6d4:	681b      	ldr	r3, [r3, #0]
 800b6d6:	6878      	ldr	r0, [r7, #4]
 800b6d8:	4798      	blx	r3
    enableInterrupts();
 800b6da:	687b      	ldr	r3, [r7, #4]
 800b6dc:	681b      	ldr	r3, [r3, #0]
 800b6de:	3378      	adds	r3, #120	; 0x78
 800b6e0:	681b      	ldr	r3, [r3, #0]
 800b6e2:	6878      	ldr	r0, [r7, #4]
 800b6e4:	4798      	blx	r3
    setFrameBufferStartAddresses((void*)frameBuf, (void*)0, (void*)0);
 800b6e6:	6878      	ldr	r0, [r7, #4]
 800b6e8:	687b      	ldr	r3, [r7, #4]
 800b6ea:	681b      	ldr	r3, [r3, #0]
 800b6ec:	3388      	adds	r3, #136	; 0x88
 800b6ee:	681c      	ldr	r4, [r3, #0]
 800b6f0:	2300      	movs	r3, #0
 800b6f2:	2200      	movs	r2, #0
 800b6f4:	4903      	ldr	r1, [pc, #12]	; (800b704 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x70>)
 800b6f6:	47a0      	blx	r4
}
 800b6f8:	bf00      	nop
 800b6fa:	3708      	adds	r7, #8
 800b6fc:	46bd      	mov	sp, r7
 800b6fe:	bdb0      	pop	{r4, r5, r7, pc}
 800b700:	0800a2dd 	.word	0x0800a2dd
 800b704:	2000015c 	.word	0x2000015c

0800b708 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 800b708:	b580      	push	{r7, lr}
 800b70a:	b082      	sub	sp, #8
 800b70c:	af00      	add	r7, sp, #0
 800b70e:	6078      	str	r0, [r7, #4]
    NVIC_SetPriority(DMA2D_IRQn, 9);
 800b710:	2109      	movs	r1, #9
 800b712:	205a      	movs	r0, #90	; 0x5a
 800b714:	f7ff ff94 	bl	800b640 <__NVIC_SetPriority>
    NVIC_SetPriority(LTDC_IRQn, 9);
 800b718:	2109      	movs	r1, #9
 800b71a:	2058      	movs	r0, #88	; 0x58
 800b71c:	f7ff ff90 	bl	800b640 <__NVIC_SetPriority>
}
 800b720:	bf00      	nop
 800b722:	3708      	adds	r7, #8
 800b724:	46bd      	mov	sp, r7
 800b726:	bd80      	pop	{r7, pc}

0800b728 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 800b728:	b580      	push	{r7, lr}
 800b72a:	b082      	sub	sp, #8
 800b72c:	af00      	add	r7, sp, #0
 800b72e:	6078      	str	r0, [r7, #4]
    NVIC_EnableIRQ(DMA2D_IRQn);
 800b730:	205a      	movs	r0, #90	; 0x5a
 800b732:	f7ff ff43 	bl	800b5bc <__NVIC_EnableIRQ>
    NVIC_EnableIRQ(LTDC_IRQn);
 800b736:	2058      	movs	r0, #88	; 0x58
 800b738:	f7ff ff40 	bl	800b5bc <__NVIC_EnableIRQ>
}
 800b73c:	bf00      	nop
 800b73e:	3708      	adds	r7, #8
 800b740:	46bd      	mov	sp, r7
 800b742:	bd80      	pop	{r7, pc}

0800b744 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 800b744:	b580      	push	{r7, lr}
 800b746:	b082      	sub	sp, #8
 800b748:	af00      	add	r7, sp, #0
 800b74a:	6078      	str	r0, [r7, #4]
    NVIC_DisableIRQ(DMA2D_IRQn);
 800b74c:	205a      	movs	r0, #90	; 0x5a
 800b74e:	f7ff ff53 	bl	800b5f8 <__NVIC_DisableIRQ>
    NVIC_DisableIRQ(LTDC_IRQn);
 800b752:	2058      	movs	r0, #88	; 0x58
 800b754:	f7ff ff50 	bl	800b5f8 <__NVIC_DisableIRQ>
}
 800b758:	bf00      	nop
 800b75a:	3708      	adds	r7, #8
 800b75c:	46bd      	mov	sp, r7
 800b75e:	bd80      	pop	{r7, pc}

0800b760 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 800b760:	b480      	push	{r7}
 800b762:	b083      	sub	sp, #12
 800b764:	af00      	add	r7, sp, #0
 800b766:	6078      	str	r0, [r7, #4]
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800b768:	4b11      	ldr	r3, [pc, #68]	; (800b7b0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800b76a:	68db      	ldr	r3, [r3, #12]
 800b76c:	b29b      	uxth	r3, r3
 800b76e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800b772:	b29b      	uxth	r3, r3
 800b774:	3b01      	subs	r3, #1
 800b776:	b29a      	uxth	r2, r3
 800b778:	4b0e      	ldr	r3, [pc, #56]	; (800b7b4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 800b77a:	801a      	strh	r2, [r3, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800b77c:	4b0c      	ldr	r3, [pc, #48]	; (800b7b0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800b77e:	691b      	ldr	r3, [r3, #16]
 800b780:	b29b      	uxth	r3, r3
 800b782:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800b786:	b29b      	uxth	r3, r3
 800b788:	3b01      	subs	r3, #1
 800b78a:	b29a      	uxth	r2, r3
 800b78c:	4b0a      	ldr	r3, [pc, #40]	; (800b7b8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x58>)
 800b78e:	801a      	strh	r2, [r3, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 800b790:	4b08      	ldr	r3, [pc, #32]	; (800b7b4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 800b792:	881a      	ldrh	r2, [r3, #0]
 800b794:	4b06      	ldr	r3, [pc, #24]	; (800b7b0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800b796:	641a      	str	r2, [r3, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800b798:	4b05      	ldr	r3, [pc, #20]	; (800b7b0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800b79a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b79c:	4a04      	ldr	r2, [pc, #16]	; (800b7b0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800b79e:	f043 0301 	orr.w	r3, r3, #1
 800b7a2:	6353      	str	r3, [r2, #52]	; 0x34
}
 800b7a4:	bf00      	nop
 800b7a6:	370c      	adds	r7, #12
 800b7a8:	46bd      	mov	sp, r7
 800b7aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7ae:	4770      	bx	lr
 800b7b0:	40016800 	.word	0x40016800
 800b7b4:	20026eee 	.word	0x20026eee
 800b7b8:	20026ef0 	.word	0x20026ef0

0800b7bc <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 800b7bc:	b580      	push	{r7, lr}
 800b7be:	b082      	sub	sp, #8
 800b7c0:	af00      	add	r7, sp, #0
 800b7c2:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 800b7c4:	687b      	ldr	r3, [r7, #4]
 800b7c6:	4618      	mov	r0, r3
 800b7c8:	f000 fc66 	bl	800c098 <_ZN8touchgfx3HAL10beginFrameEv>
 800b7cc:	4603      	mov	r3, r0
}
 800b7ce:	4618      	mov	r0, r3
 800b7d0:	3708      	adds	r7, #8
 800b7d2:	46bd      	mov	sp, r7
 800b7d4:	bd80      	pop	{r7, pc}
	...

0800b7d8 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 800b7d8:	b580      	push	{r7, lr}
 800b7da:	b082      	sub	sp, #8
 800b7dc:	af00      	add	r7, sp, #0
 800b7de:	6078      	str	r0, [r7, #4]
    if (frameBufferUpdatedThisFrame)
 800b7e0:	687b      	ldr	r3, [r7, #4]
 800b7e2:	f893 304b 	ldrb.w	r3, [r3, #75]	; 0x4b
 800b7e6:	2b00      	cmp	r3, #0
 800b7e8:	d002      	beq.n	800b7f0 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x18>
    {
        refreshRequested = true;
 800b7ea:	4b06      	ldr	r3, [pc, #24]	; (800b804 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x2c>)
 800b7ec:	2201      	movs	r2, #1
 800b7ee:	701a      	strb	r2, [r3, #0]
    }
    HAL::endFrame();
 800b7f0:	687b      	ldr	r3, [r7, #4]
 800b7f2:	4618      	mov	r0, r3
 800b7f4:	f000 fc5c 	bl	800c0b0 <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 800b7f8:	f7fe fd3a 	bl	800a270 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 800b7fc:	bf00      	nop
 800b7fe:	3708      	adds	r7, #8
 800b800:	46bd      	mov	sp, r7
 800b802:	bd80      	pop	{r7, pc}
 800b804:	20026eec 	.word	0x20026eec

0800b808 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 800b808:	b480      	push	{r7}
 800b80a:	b083      	sub	sp, #12
 800b80c:	af00      	add	r7, sp, #0
 800b80e:	6078      	str	r0, [r7, #4]
    return (uint16_t*)LTDC_Layer1->CFBAR;
 800b810:	4b03      	ldr	r3, [pc, #12]	; (800b820 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x18>)
 800b812:	6a9b      	ldr	r3, [r3, #40]	; 0x28
}
 800b814:	4618      	mov	r0, r3
 800b816:	370c      	adds	r7, #12
 800b818:	46bd      	mov	sp, r7
 800b81a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b81e:	4770      	bx	lr
 800b820:	40016884 	.word	0x40016884

0800b824 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 800b824:	b480      	push	{r7}
 800b826:	b083      	sub	sp, #12
 800b828:	af00      	add	r7, sp, #0
 800b82a:	6078      	str	r0, [r7, #4]
 800b82c:	6039      	str	r1, [r7, #0]
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800b82e:	4a06      	ldr	r2, [pc, #24]	; (800b848 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x24>)
 800b830:	683b      	ldr	r3, [r7, #0]
 800b832:	6293      	str	r3, [r2, #40]	; 0x28

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800b834:	4b05      	ldr	r3, [pc, #20]	; (800b84c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x28>)
 800b836:	2201      	movs	r2, #1
 800b838:	625a      	str	r2, [r3, #36]	; 0x24
}
 800b83a:	bf00      	nop
 800b83c:	370c      	adds	r7, #12
 800b83e:	46bd      	mov	sp, r7
 800b840:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b844:	4770      	bx	lr
 800b846:	bf00      	nop
 800b848:	40016884 	.word	0x40016884
 800b84c:	40016800 	.word	0x40016800

0800b850 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800b850:	b580      	push	{r7, lr}
 800b852:	b082      	sub	sp, #8
 800b854:	af00      	add	r7, sp, #0
 800b856:	6078      	str	r0, [r7, #4]
 800b858:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 800b85a:	687b      	ldr	r3, [r7, #4]
 800b85c:	6839      	ldr	r1, [r7, #0]
 800b85e:	4618      	mov	r0, r3
 800b860:	f000 fbe3 	bl	800c02a <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
}
 800b864:	bf00      	nop
 800b866:	3708      	adds	r7, #8
 800b868:	46bd      	mov	sp, r7
 800b86a:	bd80      	pop	{r7, pc}

0800b86c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800b86c:	b580      	push	{r7, lr}
 800b86e:	b084      	sub	sp, #16
 800b870:	af00      	add	r7, sp, #0
 800b872:	60f8      	str	r0, [r7, #12]
 800b874:	60b9      	str	r1, [r7, #8]
 800b876:	607a      	str	r2, [r7, #4]
 800b878:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 800b87a:	68f8      	ldr	r0, [r7, #12]
 800b87c:	683b      	ldr	r3, [r7, #0]
 800b87e:	687a      	ldr	r2, [r7, #4]
 800b880:	68b9      	ldr	r1, [r7, #8]
 800b882:	f000 fd3c 	bl	800c2fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 800b886:	4603      	mov	r3, r0
}
 800b888:	4618      	mov	r0, r3
 800b88a:	3710      	adds	r7, #16
 800b88c:	46bd      	mov	sp, r7
 800b88e:	bd80      	pop	{r7, pc}

0800b890 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv>:

uint16_t TouchGFXGeneratedHAL::getTFTCurrentLine()
{
 800b890:	b480      	push	{r7}
 800b892:	b085      	sub	sp, #20
 800b894:	af00      	add	r7, sp, #0
 800b896:	6078      	str	r0, [r7, #4]
    // This function only requires an implementation if single buffering
    // on LTDC display is being used (REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL).

    // The CPSR register (bits 15:0) specify current line of TFT controller.
    uint16_t curr = (uint16_t)(LTDC->CPSR & 0xffff);
 800b898:	4b0d      	ldr	r3, [pc, #52]	; (800b8d0 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x40>)
 800b89a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800b89c:	81fb      	strh	r3, [r7, #14]
    uint16_t backPorchY = (uint16_t)(LTDC->BPCR & 0x7FF) + 1;
 800b89e:	4b0c      	ldr	r3, [pc, #48]	; (800b8d0 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x40>)
 800b8a0:	68db      	ldr	r3, [r3, #12]
 800b8a2:	b29b      	uxth	r3, r3
 800b8a4:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800b8a8:	b29b      	uxth	r3, r3
 800b8aa:	3301      	adds	r3, #1
 800b8ac:	81bb      	strh	r3, [r7, #12]

    // The semantics of the getTFTCurrentLine() function is to return a value
    // in the range of 0-totalheight. If we are still in back porch area, return 0.
    return (curr < backPorchY) ? 0 : (curr - backPorchY);
 800b8ae:	89fa      	ldrh	r2, [r7, #14]
 800b8b0:	89bb      	ldrh	r3, [r7, #12]
 800b8b2:	429a      	cmp	r2, r3
 800b8b4:	d304      	bcc.n	800b8c0 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x30>
 800b8b6:	89fa      	ldrh	r2, [r7, #14]
 800b8b8:	89bb      	ldrh	r3, [r7, #12]
 800b8ba:	1ad3      	subs	r3, r2, r3
 800b8bc:	b29b      	uxth	r3, r3
 800b8be:	e000      	b.n	800b8c2 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x32>
 800b8c0:	2300      	movs	r3, #0
}
 800b8c2:	4618      	mov	r0, r3
 800b8c4:	3714      	adds	r7, #20
 800b8c6:	46bd      	mov	sp, r7
 800b8c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8cc:	4770      	bx	lr
 800b8ce:	bf00      	nop
 800b8d0:	40016800 	.word	0x40016800

0800b8d4 <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 800b8d4:	b580      	push	{r7, lr}
 800b8d6:	b082      	sub	sp, #8
 800b8d8:	af00      	add	r7, sp, #0
 800b8da:	6078      	str	r0, [r7, #4]
        if (!HAL::getInstance())
 800b8dc:	f7fc f9bc 	bl	8007c58 <_ZN8touchgfx3HAL11getInstanceEv>
 800b8e0:	4603      	mov	r3, r0
 800b8e2:	2b00      	cmp	r3, #0
 800b8e4:	bf0c      	ite	eq
 800b8e6:	2301      	moveq	r3, #1
 800b8e8:	2300      	movne	r3, #0
 800b8ea:	b2db      	uxtb	r3, r3
 800b8ec:	2b00      	cmp	r3, #0
 800b8ee:	d132      	bne.n	800b956 <HAL_LTDC_LineEventCallback+0x82>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800b8f0:	4b1b      	ldr	r3, [pc, #108]	; (800b960 <HAL_LTDC_LineEventCallback+0x8c>)
 800b8f2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b8f4:	4a1b      	ldr	r2, [pc, #108]	; (800b964 <HAL_LTDC_LineEventCallback+0x90>)
 800b8f6:	8812      	ldrh	r2, [r2, #0]
 800b8f8:	4293      	cmp	r3, r2
 800b8fa:	bf0c      	ite	eq
 800b8fc:	2301      	moveq	r3, #1
 800b8fe:	2300      	movne	r3, #0
 800b900:	b2db      	uxtb	r3, r3
 800b902:	2b00      	cmp	r3, #0
 800b904:	d017      	beq.n	800b936 <HAL_LTDC_LineEventCallback+0x62>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 800b906:	4b18      	ldr	r3, [pc, #96]	; (800b968 <HAL_LTDC_LineEventCallback+0x94>)
 800b908:	881b      	ldrh	r3, [r3, #0]
 800b90a:	4619      	mov	r1, r3
 800b90c:	6878      	ldr	r0, [r7, #4]
 800b90e:	f7f8 ff59 	bl	80047c4 <HAL_LTDC_ProgramLineEvent>
            HAL::getInstance()->vSync();
 800b912:	f7fc f9a1 	bl	8007c58 <_ZN8touchgfx3HAL11getInstanceEv>
 800b916:	4603      	mov	r3, r0
 800b918:	4618      	mov	r0, r3
 800b91a:	f7ff fdee 	bl	800b4fa <_ZN8touchgfx3HAL5vSyncEv>
            OSWrappers::signalVSync();
 800b91e:	f7fe fc9b 	bl	800a258 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800b922:	f7fc f999 	bl	8007c58 <_ZN8touchgfx3HAL11getInstanceEv>
 800b926:	4603      	mov	r3, r0
 800b928:	4618      	mov	r0, r3
 800b92a:	f001 f9ef 	bl	800cd0c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 800b92e:	2000      	movs	r0, #0
 800b930:	f7fe f9d4 	bl	8009cdc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b934:	e010      	b.n	800b958 <HAL_LTDC_LineEventCallback+0x84>
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800b936:	4b0b      	ldr	r3, [pc, #44]	; (800b964 <HAL_LTDC_LineEventCallback+0x90>)
 800b938:	881b      	ldrh	r3, [r3, #0]
 800b93a:	4619      	mov	r1, r3
 800b93c:	6878      	ldr	r0, [r7, #4]
 800b93e:	f7f8 ff41 	bl	80047c4 <HAL_LTDC_ProgramLineEvent>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
 800b942:	f7fc f989 	bl	8007c58 <_ZN8touchgfx3HAL11getInstanceEv>
 800b946:	4603      	mov	r3, r0
 800b948:	4618      	mov	r0, r3
 800b94a:	f7ff fdc8 	bl	800b4de <_ZN8touchgfx3HAL17frontPorchEnteredEv>
            GPIO::clear(GPIO::VSYNC_FREQ);
 800b94e:	2000      	movs	r0, #0
 800b950:	f7fe f9cf 	bl	8009cf2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b954:	e000      	b.n	800b958 <HAL_LTDC_LineEventCallback+0x84>
            return;
 800b956:	bf00      	nop
        }
    }
 800b958:	3708      	adds	r7, #8
 800b95a:	46bd      	mov	sp, r7
 800b95c:	bd80      	pop	{r7, pc}
 800b95e:	bf00      	nop
 800b960:	40016800 	.word	0x40016800
 800b964:	20026eee 	.word	0x20026eee
 800b968:	20026ef0 	.word	0x20026ef0

0800b96c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800b96c:	8880      	ldrh	r0, [r0, #4]
 800b96e:	4770      	bx	lr

0800b970 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800b970:	2300      	movs	r3, #0
 800b972:	8083      	strh	r3, [r0, #4]
 800b974:	4770      	bx	lr
	...

0800b978 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800b978:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b97a:	6803      	ldr	r3, [r0, #0]
 800b97c:	4605      	mov	r5, r0
 800b97e:	460e      	mov	r6, r1
 800b980:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b982:	2100      	movs	r1, #0
 800b984:	4798      	blx	r3
 800b986:	682b      	ldr	r3, [r5, #0]
 800b988:	4604      	mov	r4, r0
 800b98a:	6a1b      	ldr	r3, [r3, #32]
 800b98c:	4628      	mov	r0, r5
 800b98e:	4798      	blx	r3
 800b990:	88ab      	ldrh	r3, [r5, #4]
 800b992:	1b34      	subs	r4, r6, r4
 800b994:	b2a4      	uxth	r4, r4
 800b996:	fbb4 f4f0 	udiv	r4, r4, r0
 800b99a:	42a3      	cmp	r3, r4
 800b99c:	d805      	bhi.n	800b9aa <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 800b99e:	4b0e      	ldr	r3, [pc, #56]	; (800b9d8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 800b9a0:	4a0e      	ldr	r2, [pc, #56]	; (800b9dc <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800b9a2:	211d      	movs	r1, #29
 800b9a4:	480e      	ldr	r0, [pc, #56]	; (800b9e0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 800b9a6:	f012 f841 	bl	801da2c <__assert_func>
 800b9aa:	682b      	ldr	r3, [r5, #0]
 800b9ac:	2100      	movs	r1, #0
 800b9ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b9b0:	4628      	mov	r0, r5
 800b9b2:	4798      	blx	r3
 800b9b4:	682b      	ldr	r3, [r5, #0]
 800b9b6:	4607      	mov	r7, r0
 800b9b8:	6a1b      	ldr	r3, [r3, #32]
 800b9ba:	4628      	mov	r0, r5
 800b9bc:	4798      	blx	r3
 800b9be:	1bf3      	subs	r3, r6, r7
 800b9c0:	b29b      	uxth	r3, r3
 800b9c2:	fbb3 f2f0 	udiv	r2, r3, r0
 800b9c6:	fb02 3010 	mls	r0, r2, r0, r3
 800b9ca:	b118      	cbz	r0, 800b9d4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 800b9cc:	4b05      	ldr	r3, [pc, #20]	; (800b9e4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 800b9ce:	4a03      	ldr	r2, [pc, #12]	; (800b9dc <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800b9d0:	211e      	movs	r1, #30
 800b9d2:	e7e7      	b.n	800b9a4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 800b9d4:	4620      	mov	r0, r4
 800b9d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b9d8:	0801fc74 	.word	0x0801fc74
 800b9dc:	0801fde2 	.word	0x0801fde2
 800b9e0:	0801fc89 	.word	0x0801fc89
 800b9e4:	0801fcb7 	.word	0x0801fcb7

0800b9e8 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800b9e8:	b538      	push	{r3, r4, r5, lr}
 800b9ea:	6803      	ldr	r3, [r0, #0]
 800b9ec:	6a1b      	ldr	r3, [r3, #32]
 800b9ee:	460d      	mov	r5, r1
 800b9f0:	4604      	mov	r4, r0
 800b9f2:	4798      	blx	r3
 800b9f4:	4285      	cmp	r5, r0
 800b9f6:	d905      	bls.n	800ba04 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 800b9f8:	4b0c      	ldr	r3, [pc, #48]	; (800ba2c <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 800b9fa:	4a0d      	ldr	r2, [pc, #52]	; (800ba30 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800b9fc:	212f      	movs	r1, #47	; 0x2f
 800b9fe:	480d      	ldr	r0, [pc, #52]	; (800ba34 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 800ba00:	f012 f814 	bl	801da2c <__assert_func>
 800ba04:	6823      	ldr	r3, [r4, #0]
 800ba06:	88a5      	ldrh	r5, [r4, #4]
 800ba08:	69db      	ldr	r3, [r3, #28]
 800ba0a:	4620      	mov	r0, r4
 800ba0c:	4798      	blx	r3
 800ba0e:	4285      	cmp	r5, r0
 800ba10:	d303      	bcc.n	800ba1a <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 800ba12:	4b09      	ldr	r3, [pc, #36]	; (800ba38 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 800ba14:	4a06      	ldr	r2, [pc, #24]	; (800ba30 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800ba16:	2130      	movs	r1, #48	; 0x30
 800ba18:	e7f1      	b.n	800b9fe <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 800ba1a:	6823      	ldr	r3, [r4, #0]
 800ba1c:	88a1      	ldrh	r1, [r4, #4]
 800ba1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ba20:	4620      	mov	r0, r4
 800ba22:	4798      	blx	r3
 800ba24:	88a3      	ldrh	r3, [r4, #4]
 800ba26:	3301      	adds	r3, #1
 800ba28:	80a3      	strh	r3, [r4, #4]
 800ba2a:	bd38      	pop	{r3, r4, r5, pc}
 800ba2c:	0801fd31 	.word	0x0801fd31
 800ba30:	0801fe25 	.word	0x0801fe25
 800ba34:	0801fc89 	.word	0x0801fc89
 800ba38:	0801fd48 	.word	0x0801fd48

0800ba3c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800ba3c:	b570      	push	{r4, r5, r6, lr}
 800ba3e:	6803      	ldr	r3, [r0, #0]
 800ba40:	6a1b      	ldr	r3, [r3, #32]
 800ba42:	4616      	mov	r6, r2
 800ba44:	4604      	mov	r4, r0
 800ba46:	460d      	mov	r5, r1
 800ba48:	4798      	blx	r3
 800ba4a:	4286      	cmp	r6, r0
 800ba4c:	d905      	bls.n	800ba5a <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 800ba4e:	4b06      	ldr	r3, [pc, #24]	; (800ba68 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 800ba50:	4a06      	ldr	r2, [pc, #24]	; (800ba6c <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 800ba52:	4807      	ldr	r0, [pc, #28]	; (800ba70 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 800ba54:	2139      	movs	r1, #57	; 0x39
 800ba56:	f011 ffe9 	bl	801da2c <__assert_func>
 800ba5a:	6823      	ldr	r3, [r4, #0]
 800ba5c:	4629      	mov	r1, r5
 800ba5e:	4620      	mov	r0, r4
 800ba60:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ba62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ba66:	4718      	bx	r3
 800ba68:	0801fd31 	.word	0x0801fd31
 800ba6c:	0801fd98 	.word	0x0801fd98
 800ba70:	0801fc89 	.word	0x0801fc89

0800ba74 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800ba74:	4770      	bx	lr
	...

0800ba78 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800ba78:	4a02      	ldr	r2, [pc, #8]	; (800ba84 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800ba7a:	6002      	str	r2, [r0, #0]
 800ba7c:	2200      	movs	r2, #0
 800ba7e:	8082      	strh	r2, [r0, #4]
 800ba80:	4770      	bx	lr
 800ba82:	bf00      	nop
 800ba84:	0801fd6c 	.word	0x0801fd6c

0800ba88 <_ZN8touchgfx9Container13getFirstChildEv>:
 800ba88:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800ba8a:	4770      	bx	lr

0800ba8c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800ba8c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ba8e:	2000      	movs	r0, #0
 800ba90:	b12b      	cbz	r3, 800ba9e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800ba92:	b920      	cbnz	r0, 800ba9e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800ba94:	1a5a      	subs	r2, r3, r1
 800ba96:	4250      	negs	r0, r2
 800ba98:	4150      	adcs	r0, r2
 800ba9a:	699b      	ldr	r3, [r3, #24]
 800ba9c:	e7f8      	b.n	800ba90 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800ba9e:	4770      	bx	lr

0800baa0 <_ZN8touchgfx9Container9removeAllEv>:
 800baa0:	2200      	movs	r2, #0
 800baa2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800baa4:	b123      	cbz	r3, 800bab0 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800baa6:	6999      	ldr	r1, [r3, #24]
 800baa8:	6281      	str	r1, [r0, #40]	; 0x28
 800baaa:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800baae:	e7f8      	b.n	800baa2 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800bab0:	4770      	bx	lr

0800bab2 <_ZN8touchgfx9Container6unlinkEv>:
 800bab2:	2300      	movs	r3, #0
 800bab4:	6283      	str	r3, [r0, #40]	; 0x28
 800bab6:	4770      	bx	lr

0800bab8 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800bab8:	2200      	movs	r2, #0
 800baba:	8002      	strh	r2, [r0, #0]
 800babc:	8042      	strh	r2, [r0, #2]
 800babe:	8082      	strh	r2, [r0, #4]
 800bac0:	80c2      	strh	r2, [r0, #6]
 800bac2:	4770      	bx	lr

0800bac4 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800bac4:	b570      	push	{r4, r5, r6, lr}
 800bac6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800bac8:	460d      	mov	r5, r1
 800baca:	4616      	mov	r6, r2
 800bacc:	b13c      	cbz	r4, 800bade <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800bace:	6823      	ldr	r3, [r4, #0]
 800bad0:	4620      	mov	r0, r4
 800bad2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800bad4:	4632      	mov	r2, r6
 800bad6:	4629      	mov	r1, r5
 800bad8:	4798      	blx	r3
 800bada:	69a4      	ldr	r4, [r4, #24]
 800badc:	e7f6      	b.n	800bacc <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800bade:	bd70      	pop	{r4, r5, r6, pc}

0800bae0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800bae0:	b538      	push	{r3, r4, r5, lr}
 800bae2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800bae4:	460d      	mov	r5, r1
 800bae6:	b134      	cbz	r4, 800baf6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800bae8:	682b      	ldr	r3, [r5, #0]
 800baea:	4621      	mov	r1, r4
 800baec:	689b      	ldr	r3, [r3, #8]
 800baee:	4628      	mov	r0, r5
 800baf0:	4798      	blx	r3
 800baf2:	69a4      	ldr	r4, [r4, #24]
 800baf4:	e7f7      	b.n	800bae6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800baf6:	bd38      	pop	{r3, r4, r5, pc}

0800baf8 <_ZNK8touchgfx9Container17invalidateContentEv>:
 800baf8:	b510      	push	{r4, lr}
 800bafa:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800bafc:	b12c      	cbz	r4, 800bb0a <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 800bafe:	6823      	ldr	r3, [r4, #0]
 800bb00:	4620      	mov	r0, r4
 800bb02:	699b      	ldr	r3, [r3, #24]
 800bb04:	4798      	blx	r3
 800bb06:	69a4      	ldr	r4, [r4, #24]
 800bb08:	e7f8      	b.n	800bafc <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 800bb0a:	bd10      	pop	{r4, pc}

0800bb0c <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800bb0c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800bb0e:	b19b      	cbz	r3, 800bb38 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800bb10:	428b      	cmp	r3, r1
 800bb12:	d109      	bne.n	800bb28 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800bb14:	699a      	ldr	r2, [r3, #24]
 800bb16:	2100      	movs	r1, #0
 800bb18:	6159      	str	r1, [r3, #20]
 800bb1a:	6282      	str	r2, [r0, #40]	; 0x28
 800bb1c:	b902      	cbnz	r2, 800bb20 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800bb1e:	4770      	bx	lr
 800bb20:	6199      	str	r1, [r3, #24]
 800bb22:	4770      	bx	lr
 800bb24:	4613      	mov	r3, r2
 800bb26:	b13a      	cbz	r2, 800bb38 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800bb28:	699a      	ldr	r2, [r3, #24]
 800bb2a:	428a      	cmp	r2, r1
 800bb2c:	d1fa      	bne.n	800bb24 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800bb2e:	698a      	ldr	r2, [r1, #24]
 800bb30:	619a      	str	r2, [r3, #24]
 800bb32:	2300      	movs	r3, #0
 800bb34:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800bb38:	4770      	bx	lr

0800bb3a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800bb3a:	b410      	push	{r4}
 800bb3c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800bb3e:	4604      	mov	r4, r0
 800bb40:	b92b      	cbnz	r3, 800bb4e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800bb42:	6803      	ldr	r3, [r0, #0]
 800bb44:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bb48:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800bb4a:	4611      	mov	r1, r2
 800bb4c:	4718      	bx	r3
 800bb4e:	b941      	cbnz	r1, 800bb62 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800bb50:	6193      	str	r3, [r2, #24]
 800bb52:	6282      	str	r2, [r0, #40]	; 0x28
 800bb54:	6154      	str	r4, [r2, #20]
 800bb56:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bb5a:	4770      	bx	lr
 800bb5c:	4603      	mov	r3, r0
 800bb5e:	2800      	cmp	r0, #0
 800bb60:	d0f9      	beq.n	800bb56 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800bb62:	4299      	cmp	r1, r3
 800bb64:	6998      	ldr	r0, [r3, #24]
 800bb66:	d1f9      	bne.n	800bb5c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800bb68:	6190      	str	r0, [r2, #24]
 800bb6a:	618a      	str	r2, [r1, #24]
 800bb6c:	e7f2      	b.n	800bb54 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

0800bb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800bb70:	4288      	cmp	r0, r1
 800bb72:	b508      	push	{r3, lr}
 800bb74:	d105      	bne.n	800bb82 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 800bb76:	4b11      	ldr	r3, [pc, #68]	; (800bbbc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 800bb78:	4a11      	ldr	r2, [pc, #68]	; (800bbc0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800bb7a:	2120      	movs	r1, #32
 800bb7c:	4811      	ldr	r0, [pc, #68]	; (800bbc4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800bb7e:	f011 ff55 	bl	801da2c <__assert_func>
 800bb82:	694b      	ldr	r3, [r1, #20]
 800bb84:	b11b      	cbz	r3, 800bb8e <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 800bb86:	4b10      	ldr	r3, [pc, #64]	; (800bbc8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 800bb88:	4a0d      	ldr	r2, [pc, #52]	; (800bbc0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800bb8a:	2121      	movs	r1, #33	; 0x21
 800bb8c:	e7f6      	b.n	800bb7c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800bb8e:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800bb92:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800bb94:	b913      	cbnz	r3, 800bb9c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800bb96:	6281      	str	r1, [r0, #40]	; 0x28
 800bb98:	bd08      	pop	{r3, pc}
 800bb9a:	4613      	mov	r3, r2
 800bb9c:	699a      	ldr	r2, [r3, #24]
 800bb9e:	b12a      	cbz	r2, 800bbac <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 800bba0:	428b      	cmp	r3, r1
 800bba2:	d1fa      	bne.n	800bb9a <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 800bba4:	4b09      	ldr	r3, [pc, #36]	; (800bbcc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800bba6:	4a06      	ldr	r2, [pc, #24]	; (800bbc0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800bba8:	2132      	movs	r1, #50	; 0x32
 800bbaa:	e7e7      	b.n	800bb7c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800bbac:	428b      	cmp	r3, r1
 800bbae:	d103      	bne.n	800bbb8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 800bbb0:	4b06      	ldr	r3, [pc, #24]	; (800bbcc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800bbb2:	4a03      	ldr	r2, [pc, #12]	; (800bbc0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800bbb4:	2135      	movs	r1, #53	; 0x35
 800bbb6:	e7e1      	b.n	800bb7c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800bbb8:	6199      	str	r1, [r3, #24]
 800bbba:	e7ed      	b.n	800bb98 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 800bbbc:	0801fe63 	.word	0x0801fe63
 800bbc0:	0801ffbc 	.word	0x0801ffbc
 800bbc4:	0801fe8f 	.word	0x0801fe8f
 800bbc8:	0801fec2 	.word	0x0801fec2
 800bbcc:	0801fef8 	.word	0x0801fef8

0800bbd0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800bbd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bbd4:	461f      	mov	r7, r3
 800bbd6:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800bbda:	460d      	mov	r5, r1
 800bbdc:	4616      	mov	r6, r2
 800bbde:	b103      	cbz	r3, 800bbe2 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800bbe0:	6038      	str	r0, [r7, #0]
 800bbe2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800bbe4:	b314      	cbz	r4, 800bc2c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800bbe6:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800bbea:	b1eb      	cbz	r3, 800bc28 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bbec:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800bbf0:	428d      	cmp	r5, r1
 800bbf2:	db19      	blt.n	800bc28 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bbf4:	8923      	ldrh	r3, [r4, #8]
 800bbf6:	b289      	uxth	r1, r1
 800bbf8:	440b      	add	r3, r1
 800bbfa:	b21b      	sxth	r3, r3
 800bbfc:	429d      	cmp	r5, r3
 800bbfe:	da13      	bge.n	800bc28 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bc00:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800bc04:	4296      	cmp	r6, r2
 800bc06:	db0f      	blt.n	800bc28 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bc08:	8963      	ldrh	r3, [r4, #10]
 800bc0a:	b292      	uxth	r2, r2
 800bc0c:	4413      	add	r3, r2
 800bc0e:	b21b      	sxth	r3, r3
 800bc10:	429e      	cmp	r6, r3
 800bc12:	da09      	bge.n	800bc28 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bc14:	6823      	ldr	r3, [r4, #0]
 800bc16:	1ab2      	subs	r2, r6, r2
 800bc18:	1a69      	subs	r1, r5, r1
 800bc1a:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800bc1e:	b212      	sxth	r2, r2
 800bc20:	463b      	mov	r3, r7
 800bc22:	b209      	sxth	r1, r1
 800bc24:	4620      	mov	r0, r4
 800bc26:	47c0      	blx	r8
 800bc28:	69a4      	ldr	r4, [r4, #24]
 800bc2a:	e7db      	b.n	800bbe4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800bc2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bc30 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800bc30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bc34:	4c6e      	ldr	r4, [pc, #440]	; (800bdf0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800bc36:	b0a1      	sub	sp, #132	; 0x84
 800bc38:	6824      	ldr	r4, [r4, #0]
 800bc3a:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800bc3c:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800bc40:	9303      	str	r3, [sp, #12]
 800bc42:	2400      	movs	r4, #0
 800bc44:	802c      	strh	r4, [r5, #0]
 800bc46:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800bc48:	802c      	strh	r4, [r5, #0]
 800bc4a:	601c      	str	r4, [r3, #0]
 800bc4c:	4606      	mov	r6, r0
 800bc4e:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800bc52:	f7ff ffbd 	bl	800bbd0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800bc56:	f1b9 0f03 	cmp.w	r9, #3
 800bc5a:	f340 80c2 	ble.w	800bde2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800bc5e:	4631      	mov	r1, r6
 800bc60:	a80c      	add	r0, sp, #48	; 0x30
 800bc62:	f004 f975 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bc66:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800bc6a:	9306      	str	r3, [sp, #24]
 800bc6c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800bc70:	9307      	str	r3, [sp, #28]
 800bc72:	9b03      	ldr	r3, [sp, #12]
 800bc74:	f8d3 a000 	ldr.w	sl, [r3]
 800bc78:	f1ba 0f00 	cmp.w	sl, #0
 800bc7c:	f000 80b4 	beq.w	800bde8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800bc80:	4651      	mov	r1, sl
 800bc82:	a810      	add	r0, sp, #64	; 0x40
 800bc84:	f004 f964 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bc88:	9b01      	ldr	r3, [sp, #4]
 800bc8a:	9a06      	ldr	r2, [sp, #24]
 800bc8c:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800bc90:	189d      	adds	r5, r3, r2
 800bc92:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800bc96:	9a07      	ldr	r2, [sp, #28]
 800bc98:	2002      	movs	r0, #2
 800bc9a:	fb91 f1f0 	sdiv	r1, r1, r0
 800bc9e:	4419      	add	r1, r3
 800bca0:	1a6d      	subs	r5, r5, r1
 800bca2:	9b02      	ldr	r3, [sp, #8]
 800bca4:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800bca8:	4413      	add	r3, r2
 800bcaa:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800bcae:	fb92 f2f0 	sdiv	r2, r2, r0
 800bcb2:	440a      	add	r2, r1
 800bcb4:	1a9b      	subs	r3, r3, r2
 800bcb6:	435b      	muls	r3, r3
 800bcb8:	fb05 3505 	mla	r5, r5, r5, r3
 800bcbc:	4f4d      	ldr	r7, [pc, #308]	; (800bdf4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800bcbe:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800bcc0:	ac10      	add	r4, sp, #64	; 0x40
 800bcc2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800bcc4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800bcc6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800bcc8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800bcca:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800bccc:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800bcd0:	f1b9 0f0c 	cmp.w	r9, #12
 800bcd4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800bcd8:	f04f 0303 	mov.w	r3, #3
 800bcdc:	bfc8      	it	gt
 800bcde:	4698      	movgt	r8, r3
 800bce0:	f8cd 9000 	str.w	r9, [sp]
 800bce4:	f04f 0400 	mov.w	r4, #0
 800bce8:	bfdc      	itt	le
 800bcea:	f109 32ff 	addle.w	r2, r9, #4294967295
 800bcee:	fb92 f8f3 	sdivle	r8, r2, r3
 800bcf2:	1c63      	adds	r3, r4, #1
 800bcf4:	aa10      	add	r2, sp, #64	; 0x40
 800bcf6:	f004 0401 	and.w	r4, r4, #1
 800bcfa:	9308      	str	r3, [sp, #32]
 800bcfc:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800bd00:	9b00      	ldr	r3, [sp, #0]
 800bd02:	fb93 f3f8 	sdiv	r3, r3, r8
 800bd06:	b29b      	uxth	r3, r3
 800bd08:	3404      	adds	r4, #4
 800bd0a:	f04f 0b00 	mov.w	fp, #0
 800bd0e:	9304      	str	r3, [sp, #16]
 800bd10:	9a04      	ldr	r2, [sp, #16]
 800bd12:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800bd16:	fb13 f302 	smulbb	r3, r3, r2
 800bd1a:	9a01      	ldr	r2, [sp, #4]
 800bd1c:	b29b      	uxth	r3, r3
 800bd1e:	1899      	adds	r1, r3, r2
 800bd20:	9305      	str	r3, [sp, #20]
 800bd22:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800bd26:	b209      	sxth	r1, r1
 800bd28:	4299      	cmp	r1, r3
 800bd2a:	db4d      	blt.n	800bdc8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bd2c:	8932      	ldrh	r2, [r6, #8]
 800bd2e:	4413      	add	r3, r2
 800bd30:	b21b      	sxth	r3, r3
 800bd32:	4299      	cmp	r1, r3
 800bd34:	da48      	bge.n	800bdc8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bd36:	9b04      	ldr	r3, [sp, #16]
 800bd38:	6827      	ldr	r7, [r4, #0]
 800bd3a:	fb17 f703 	smulbb	r7, r7, r3
 800bd3e:	9b02      	ldr	r3, [sp, #8]
 800bd40:	b2bf      	uxth	r7, r7
 800bd42:	18fa      	adds	r2, r7, r3
 800bd44:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800bd48:	b212      	sxth	r2, r2
 800bd4a:	429a      	cmp	r2, r3
 800bd4c:	db3c      	blt.n	800bdc8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bd4e:	8970      	ldrh	r0, [r6, #10]
 800bd50:	4403      	add	r3, r0
 800bd52:	b21b      	sxth	r3, r3
 800bd54:	429a      	cmp	r2, r3
 800bd56:	da37      	bge.n	800bdc8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bd58:	2300      	movs	r3, #0
 800bd5a:	930b      	str	r3, [sp, #44]	; 0x2c
 800bd5c:	4630      	mov	r0, r6
 800bd5e:	ab0b      	add	r3, sp, #44	; 0x2c
 800bd60:	f7ff ff36 	bl	800bbd0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800bd64:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800bd66:	b37a      	cbz	r2, 800bdc8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bd68:	4552      	cmp	r2, sl
 800bd6a:	d02d      	beq.n	800bdc8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bd6c:	4611      	mov	r1, r2
 800bd6e:	a80e      	add	r0, sp, #56	; 0x38
 800bd70:	9209      	str	r2, [sp, #36]	; 0x24
 800bd72:	f004 f8ed 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bd76:	9a06      	ldr	r2, [sp, #24]
 800bd78:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800bd7c:	9b01      	ldr	r3, [sp, #4]
 800bd7e:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800bd82:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800bd86:	4413      	add	r3, r2
 800bd88:	f04f 0e02 	mov.w	lr, #2
 800bd8c:	fb91 f1fe 	sdiv	r1, r1, lr
 800bd90:	4401      	add	r1, r0
 800bd92:	1a58      	subs	r0, r3, r1
 800bd94:	9a07      	ldr	r2, [sp, #28]
 800bd96:	9b02      	ldr	r3, [sp, #8]
 800bd98:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800bd9c:	fb9c fcfe 	sdiv	ip, ip, lr
 800bda0:	4413      	add	r3, r2
 800bda2:	448c      	add	ip, r1
 800bda4:	eba3 030c 	sub.w	r3, r3, ip
 800bda8:	435b      	muls	r3, r3
 800bdaa:	fb00 3300 	mla	r3, r0, r0, r3
 800bdae:	42ab      	cmp	r3, r5
 800bdb0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800bdb2:	d208      	bcs.n	800bdc6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800bdb4:	9803      	ldr	r0, [sp, #12]
 800bdb6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800bdb8:	6001      	str	r1, [r0, #0]
 800bdba:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800bdbc:	9805      	ldr	r0, [sp, #20]
 800bdbe:	8008      	strh	r0, [r1, #0]
 800bdc0:	992b      	ldr	r1, [sp, #172]	; 0xac
 800bdc2:	461d      	mov	r5, r3
 800bdc4:	800f      	strh	r7, [r1, #0]
 800bdc6:	4692      	mov	sl, r2
 800bdc8:	f10b 0b01 	add.w	fp, fp, #1
 800bdcc:	f1bb 0f04 	cmp.w	fp, #4
 800bdd0:	f104 0408 	add.w	r4, r4, #8
 800bdd4:	d19c      	bne.n	800bd10 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800bdd6:	9b00      	ldr	r3, [sp, #0]
 800bdd8:	9c08      	ldr	r4, [sp, #32]
 800bdda:	444b      	add	r3, r9
 800bddc:	4544      	cmp	r4, r8
 800bdde:	9300      	str	r3, [sp, #0]
 800bde0:	d187      	bne.n	800bcf2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800bde2:	b021      	add	sp, #132	; 0x84
 800bde4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bde8:	f04f 35ff 	mov.w	r5, #4294967295
 800bdec:	e766      	b.n	800bcbc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800bdee:	bf00      	nop
 800bdf0:	20026f00 	.word	0x20026f00
 800bdf4:	0801f510 	.word	0x0801f510

0800bdf8 <_ZN8touchgfx4RectaNERKS0_>:
 800bdf8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bdfc:	f9b1 7000 	ldrsh.w	r7, [r1]
 800be00:	888c      	ldrh	r4, [r1, #4]
 800be02:	f9b0 9000 	ldrsh.w	r9, [r0]
 800be06:	443c      	add	r4, r7
 800be08:	b2a4      	uxth	r4, r4
 800be0a:	fa0f f884 	sxth.w	r8, r4
 800be0e:	45c1      	cmp	r9, r8
 800be10:	da2f      	bge.n	800be72 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800be12:	8882      	ldrh	r2, [r0, #4]
 800be14:	444a      	add	r2, r9
 800be16:	b292      	uxth	r2, r2
 800be18:	fa0f fe82 	sxth.w	lr, r2
 800be1c:	4577      	cmp	r7, lr
 800be1e:	da28      	bge.n	800be72 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800be20:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800be24:	88cb      	ldrh	r3, [r1, #6]
 800be26:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800be2a:	442b      	add	r3, r5
 800be2c:	b21b      	sxth	r3, r3
 800be2e:	429e      	cmp	r6, r3
 800be30:	da1f      	bge.n	800be72 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800be32:	88c3      	ldrh	r3, [r0, #6]
 800be34:	4433      	add	r3, r6
 800be36:	b29b      	uxth	r3, r3
 800be38:	fa0f fc83 	sxth.w	ip, r3
 800be3c:	4565      	cmp	r5, ip
 800be3e:	da18      	bge.n	800be72 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800be40:	454f      	cmp	r7, r9
 800be42:	bfb8      	it	lt
 800be44:	464f      	movlt	r7, r9
 800be46:	42b5      	cmp	r5, r6
 800be48:	bfb8      	it	lt
 800be4a:	4635      	movlt	r5, r6
 800be4c:	45f0      	cmp	r8, lr
 800be4e:	bfd8      	it	le
 800be50:	4622      	movle	r2, r4
 800be52:	1bd2      	subs	r2, r2, r7
 800be54:	8082      	strh	r2, [r0, #4]
 800be56:	884a      	ldrh	r2, [r1, #2]
 800be58:	88c9      	ldrh	r1, [r1, #6]
 800be5a:	8007      	strh	r7, [r0, #0]
 800be5c:	440a      	add	r2, r1
 800be5e:	b292      	uxth	r2, r2
 800be60:	b211      	sxth	r1, r2
 800be62:	458c      	cmp	ip, r1
 800be64:	bfa8      	it	ge
 800be66:	4613      	movge	r3, r2
 800be68:	1b5b      	subs	r3, r3, r5
 800be6a:	80c3      	strh	r3, [r0, #6]
 800be6c:	8045      	strh	r5, [r0, #2]
 800be6e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800be72:	2300      	movs	r3, #0
 800be74:	8003      	strh	r3, [r0, #0]
 800be76:	8043      	strh	r3, [r0, #2]
 800be78:	8083      	strh	r3, [r0, #4]
 800be7a:	80c3      	strh	r3, [r0, #6]
 800be7c:	e7f7      	b.n	800be6e <_ZN8touchgfx4RectaNERKS0_+0x76>

0800be7e <_ZNK8touchgfx4Rect7isEmptyEv>:
 800be7e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800be82:	2b00      	cmp	r3, #0
 800be84:	dd06      	ble.n	800be94 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800be86:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800be8a:	2800      	cmp	r0, #0
 800be8c:	bfcc      	ite	gt
 800be8e:	2000      	movgt	r0, #0
 800be90:	2001      	movle	r0, #1
 800be92:	4770      	bx	lr
 800be94:	2001      	movs	r0, #1
 800be96:	4770      	bx	lr

0800be98 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800be98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800be9c:	2300      	movs	r3, #0
 800be9e:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800bea0:	8003      	strh	r3, [r0, #0]
 800bea2:	4604      	mov	r4, r0
 800bea4:	8043      	strh	r3, [r0, #2]
 800bea6:	8083      	strh	r3, [r0, #4]
 800bea8:	80c3      	strh	r3, [r0, #6]
 800beaa:	2d00      	cmp	r5, #0
 800beac:	d040      	beq.n	800bf30 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800beae:	1d28      	adds	r0, r5, #4
 800beb0:	f7ff ffe5 	bl	800be7e <_ZNK8touchgfx4Rect7isEmptyEv>
 800beb4:	b988      	cbnz	r0, 800beda <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800beb6:	4620      	mov	r0, r4
 800beb8:	f7ff ffe1 	bl	800be7e <_ZNK8touchgfx4Rect7isEmptyEv>
 800bebc:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800bec0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800bec4:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800bec8:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800becc:	b138      	cbz	r0, 800bede <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800bece:	8022      	strh	r2, [r4, #0]
 800bed0:	8063      	strh	r3, [r4, #2]
 800bed2:	f8a4 e004 	strh.w	lr, [r4, #4]
 800bed6:	f8a4 c006 	strh.w	ip, [r4, #6]
 800beda:	69ad      	ldr	r5, [r5, #24]
 800bedc:	e7e5      	b.n	800beaa <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800bede:	f9b4 0000 	ldrsh.w	r0, [r4]
 800bee2:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800bee6:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800beea:	4290      	cmp	r0, r2
 800beec:	4607      	mov	r7, r0
 800beee:	bfa8      	it	ge
 800bef0:	4617      	movge	r7, r2
 800bef2:	4472      	add	r2, lr
 800bef4:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800bef8:	8027      	strh	r7, [r4, #0]
 800befa:	4299      	cmp	r1, r3
 800befc:	460e      	mov	r6, r1
 800befe:	4440      	add	r0, r8
 800bf00:	bfa8      	it	ge
 800bf02:	461e      	movge	r6, r3
 800bf04:	4471      	add	r1, lr
 800bf06:	4463      	add	r3, ip
 800bf08:	b200      	sxth	r0, r0
 800bf0a:	b212      	sxth	r2, r2
 800bf0c:	b209      	sxth	r1, r1
 800bf0e:	b21b      	sxth	r3, r3
 800bf10:	4290      	cmp	r0, r2
 800bf12:	bfac      	ite	ge
 800bf14:	ebc7 0200 	rsbge	r2, r7, r0
 800bf18:	ebc7 0202 	rsblt	r2, r7, r2
 800bf1c:	4299      	cmp	r1, r3
 800bf1e:	bfac      	ite	ge
 800bf20:	ebc6 0301 	rsbge	r3, r6, r1
 800bf24:	ebc6 0303 	rsblt	r3, r6, r3
 800bf28:	8066      	strh	r6, [r4, #2]
 800bf2a:	80a2      	strh	r2, [r4, #4]
 800bf2c:	80e3      	strh	r3, [r4, #6]
 800bf2e:	e7d4      	b.n	800beda <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800bf30:	4620      	mov	r0, r4
 800bf32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bf36 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800bf36:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800bf3a:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800bf3e:	b383      	cbz	r3, 800bfa2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800bf40:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800bf42:	b374      	cbz	r4, 800bfa2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800bf44:	f9b1 5000 	ldrsh.w	r5, [r1]
 800bf48:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800bf4c:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800bf50:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800bf54:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800bf58:	b303      	cbz	r3, 800bf9c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800bf5a:	4668      	mov	r0, sp
 800bf5c:	1d21      	adds	r1, r4, #4
 800bf5e:	f8ad 5000 	strh.w	r5, [sp]
 800bf62:	f8ad 6002 	strh.w	r6, [sp, #2]
 800bf66:	f8ad 7004 	strh.w	r7, [sp, #4]
 800bf6a:	f8ad 8006 	strh.w	r8, [sp, #6]
 800bf6e:	f7ff ff43 	bl	800bdf8 <_ZN8touchgfx4RectaNERKS0_>
 800bf72:	4668      	mov	r0, sp
 800bf74:	f7ff ff83 	bl	800be7e <_ZNK8touchgfx4Rect7isEmptyEv>
 800bf78:	b980      	cbnz	r0, 800bf9c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800bf7a:	f8bd 3000 	ldrh.w	r3, [sp]
 800bf7e:	88a2      	ldrh	r2, [r4, #4]
 800bf80:	1a9b      	subs	r3, r3, r2
 800bf82:	f8ad 3000 	strh.w	r3, [sp]
 800bf86:	88e2      	ldrh	r2, [r4, #6]
 800bf88:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800bf8c:	1a9b      	subs	r3, r3, r2
 800bf8e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800bf92:	6823      	ldr	r3, [r4, #0]
 800bf94:	4669      	mov	r1, sp
 800bf96:	689b      	ldr	r3, [r3, #8]
 800bf98:	4620      	mov	r0, r4
 800bf9a:	4798      	blx	r3
 800bf9c:	69a4      	ldr	r4, [r4, #24]
 800bf9e:	2c00      	cmp	r4, #0
 800bfa0:	d1d8      	bne.n	800bf54 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800bfa2:	b002      	add	sp, #8
 800bfa4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bfa8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800bfa8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bfaa:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800bfae:	460d      	mov	r5, r1
 800bfb0:	4616      	mov	r6, r2
 800bfb2:	b323      	cbz	r3, 800bffe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800bfb4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800bfb6:	b314      	cbz	r4, 800bffe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800bfb8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800bfbc:	b1eb      	cbz	r3, 800bffa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800bfbe:	6828      	ldr	r0, [r5, #0]
 800bfc0:	6869      	ldr	r1, [r5, #4]
 800bfc2:	466b      	mov	r3, sp
 800bfc4:	c303      	stmia	r3!, {r0, r1}
 800bfc6:	4668      	mov	r0, sp
 800bfc8:	1d21      	adds	r1, r4, #4
 800bfca:	f7ff ff15 	bl	800bdf8 <_ZN8touchgfx4RectaNERKS0_>
 800bfce:	4668      	mov	r0, sp
 800bfd0:	f7ff ff55 	bl	800be7e <_ZNK8touchgfx4Rect7isEmptyEv>
 800bfd4:	b988      	cbnz	r0, 800bffa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800bfd6:	f8bd 3000 	ldrh.w	r3, [sp]
 800bfda:	88a2      	ldrh	r2, [r4, #4]
 800bfdc:	1a9b      	subs	r3, r3, r2
 800bfde:	f8ad 3000 	strh.w	r3, [sp]
 800bfe2:	88e2      	ldrh	r2, [r4, #6]
 800bfe4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800bfe8:	1a9b      	subs	r3, r3, r2
 800bfea:	f8ad 3002 	strh.w	r3, [sp, #2]
 800bfee:	6823      	ldr	r3, [r4, #0]
 800bff0:	4632      	mov	r2, r6
 800bff2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800bff4:	4669      	mov	r1, sp
 800bff6:	4620      	mov	r0, r4
 800bff8:	4798      	blx	r3
 800bffa:	69a4      	ldr	r4, [r4, #24]
 800bffc:	e7db      	b.n	800bfb6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800bffe:	b002      	add	sp, #8
 800c000:	bd70      	pop	{r4, r5, r6, pc}

0800c002 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
 800c002:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800c006:	4770      	bx	lr

0800c008 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800c008:	b513      	push	{r0, r1, r4, lr}
 800c00a:	6803      	ldr	r3, [r0, #0]
 800c00c:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800c010:	2300      	movs	r3, #0
 800c012:	e9cd 3300 	strd	r3, r3, [sp]
 800c016:	466b      	mov	r3, sp
 800c018:	47a0      	blx	r4
 800c01a:	b002      	add	sp, #8
 800c01c:	bd10      	pop	{r4, pc}

0800c01e <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800c01e:	2301      	movs	r3, #1
 800c020:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800c024:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800c028:	4770      	bx	lr

0800c02a <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800c02a:	2301      	movs	r3, #1
 800c02c:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800c030:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800c034:	4770      	bx	lr

0800c036 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800c036:	6843      	ldr	r3, [r0, #4]
 800c038:	2201      	movs	r2, #1
 800c03a:	725a      	strb	r2, [r3, #9]
 800c03c:	6840      	ldr	r0, [r0, #4]
 800c03e:	6803      	ldr	r3, [r0, #0]
 800c040:	691b      	ldr	r3, [r3, #16]
 800c042:	4718      	bx	r3

0800c044 <_ZN8touchgfx3HAL8flushDMAEv>:
 800c044:	6840      	ldr	r0, [r0, #4]
 800c046:	6803      	ldr	r3, [r0, #0]
 800c048:	689b      	ldr	r3, [r3, #8]
 800c04a:	4718      	bx	r3

0800c04c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800c04c:	b530      	push	{r4, r5, lr}
 800c04e:	b08b      	sub	sp, #44	; 0x2c
 800c050:	6804      	ldr	r4, [r0, #0]
 800c052:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800c056:	9509      	str	r5, [sp, #36]	; 0x24
 800c058:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800c05c:	9508      	str	r5, [sp, #32]
 800c05e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800c062:	9507      	str	r5, [sp, #28]
 800c064:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800c068:	9506      	str	r5, [sp, #24]
 800c06a:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800c06e:	9505      	str	r5, [sp, #20]
 800c070:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800c074:	9504      	str	r5, [sp, #16]
 800c076:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800c07a:	9503      	str	r5, [sp, #12]
 800c07c:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800c080:	9502      	str	r5, [sp, #8]
 800c082:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800c086:	e9cd 3500 	strd	r3, r5, [sp]
 800c08a:	4613      	mov	r3, r2
 800c08c:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800c08e:	2200      	movs	r2, #0
 800c090:	47a0      	blx	r4
 800c092:	b00b      	add	sp, #44	; 0x2c
 800c094:	bd30      	pop	{r4, r5, pc}
	...

0800c098 <_ZN8touchgfx3HAL10beginFrameEv>:
 800c098:	4b04      	ldr	r3, [pc, #16]	; (800c0ac <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800c09a:	781b      	ldrb	r3, [r3, #0]
 800c09c:	b123      	cbz	r3, 800c0a8 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800c09e:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800c0a2:	f080 0001 	eor.w	r0, r0, #1
 800c0a6:	4770      	bx	lr
 800c0a8:	2001      	movs	r0, #1
 800c0aa:	4770      	bx	lr
 800c0ac:	20026efc 	.word	0x20026efc

0800c0b0 <_ZN8touchgfx3HAL8endFrameEv>:
 800c0b0:	b510      	push	{r4, lr}
 800c0b2:	4604      	mov	r4, r0
 800c0b4:	6840      	ldr	r0, [r0, #4]
 800c0b6:	6803      	ldr	r3, [r0, #0]
 800c0b8:	689b      	ldr	r3, [r3, #8]
 800c0ba:	4798      	blx	r3
 800c0bc:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800c0c0:	b113      	cbz	r3, 800c0c8 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800c0c2:	2301      	movs	r3, #1
 800c0c4:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800c0c8:	bd10      	pop	{r4, pc}

0800c0ca <_ZN8touchgfx3HAL10initializeEv>:
 800c0ca:	b510      	push	{r4, lr}
 800c0cc:	4604      	mov	r4, r0
 800c0ce:	f7fe f877 	bl	800a1c0 <_ZN8touchgfx10OSWrappers10initializeEv>
 800c0d2:	6860      	ldr	r0, [r4, #4]
 800c0d4:	6803      	ldr	r3, [r0, #0]
 800c0d6:	68db      	ldr	r3, [r3, #12]
 800c0d8:	4798      	blx	r3
 800c0da:	68e0      	ldr	r0, [r4, #12]
 800c0dc:	6803      	ldr	r3, [r0, #0]
 800c0de:	689b      	ldr	r3, [r3, #8]
 800c0e0:	4798      	blx	r3
 800c0e2:	6823      	ldr	r3, [r4, #0]
 800c0e4:	4620      	mov	r0, r4
 800c0e6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800c0e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c0ec:	4718      	bx	r3

0800c0ee <_ZN8touchgfx3HAL9taskEntryEv>:
 800c0ee:	b508      	push	{r3, lr}
 800c0f0:	6803      	ldr	r3, [r0, #0]
 800c0f2:	4604      	mov	r4, r0
 800c0f4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c0f8:	4798      	blx	r3
 800c0fa:	6823      	ldr	r3, [r4, #0]
 800c0fc:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800c0fe:	4620      	mov	r0, r4
 800c100:	4798      	blx	r3
 800c102:	f7fe f8d1 	bl	800a2a8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800c106:	6823      	ldr	r3, [r4, #0]
 800c108:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c10a:	e7f8      	b.n	800c0fe <_ZN8touchgfx3HAL9taskEntryEv+0x10>

0800c10c <_ZN8touchgfx3HAL4tickEv>:
 800c10c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c10e:	6803      	ldr	r3, [r0, #0]
 800c110:	4d5b      	ldr	r5, [pc, #364]	; (800c280 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800c112:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800c116:	4604      	mov	r4, r0
 800c118:	4798      	blx	r3
 800c11a:	2800      	cmp	r0, #0
 800c11c:	f000 8095 	beq.w	800c24a <_ZN8touchgfx3HAL4tickEv+0x13e>
 800c120:	2001      	movs	r0, #1
 800c122:	f7fd fddb 	bl	8009cdc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800c126:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800c12a:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800c12e:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800c132:	2600      	movs	r6, #0
 800c134:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800c138:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800c13c:	b133      	cbz	r3, 800c14c <_ZN8touchgfx3HAL4tickEv+0x40>
 800c13e:	6823      	ldr	r3, [r4, #0]
 800c140:	4620      	mov	r0, r4
 800c142:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800c146:	4798      	blx	r3
 800c148:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800c14c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800c150:	6862      	ldr	r2, [r4, #4]
 800c152:	f083 0301 	eor.w	r3, r3, #1
 800c156:	7253      	strb	r3, [r2, #9]
 800c158:	2601      	movs	r6, #1
 800c15a:	702e      	strb	r6, [r5, #0]
 800c15c:	f002 fed0 	bl	800ef00 <_ZN8touchgfx11Application11getInstanceEv>
 800c160:	6803      	ldr	r3, [r0, #0]
 800c162:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c164:	4798      	blx	r3
 800c166:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800c16a:	b90b      	cbnz	r3, 800c170 <_ZN8touchgfx3HAL4tickEv+0x64>
 800c16c:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800c170:	f002 fec6 	bl	800ef00 <_ZN8touchgfx11Application11getInstanceEv>
 800c174:	6803      	ldr	r3, [r0, #0]
 800c176:	695b      	ldr	r3, [r3, #20]
 800c178:	4798      	blx	r3
 800c17a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c17c:	6803      	ldr	r3, [r0, #0]
 800c17e:	691b      	ldr	r3, [r3, #16]
 800c180:	4798      	blx	r3
 800c182:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800c186:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800c18a:	3b01      	subs	r3, #1
 800c18c:	b2db      	uxtb	r3, r3
 800c18e:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800c192:	b10a      	cbz	r2, 800c198 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800c194:	2b00      	cmp	r3, #0
 800c196:	d1eb      	bne.n	800c170 <_ZN8touchgfx3HAL4tickEv+0x64>
 800c198:	4a3a      	ldr	r2, [pc, #232]	; (800c284 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800c19a:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800c19e:	7813      	ldrb	r3, [r2, #0]
 800c1a0:	3301      	adds	r3, #1
 800c1a2:	b25b      	sxtb	r3, r3
 800c1a4:	4299      	cmp	r1, r3
 800c1a6:	7013      	strb	r3, [r2, #0]
 800c1a8:	dc10      	bgt.n	800c1cc <_ZN8touchgfx3HAL4tickEv+0xc0>
 800c1aa:	68e0      	ldr	r0, [r4, #12]
 800c1ac:	2300      	movs	r3, #0
 800c1ae:	7013      	strb	r3, [r2, #0]
 800c1b0:	6803      	ldr	r3, [r0, #0]
 800c1b2:	aa03      	add	r2, sp, #12
 800c1b4:	68db      	ldr	r3, [r3, #12]
 800c1b6:	a902      	add	r1, sp, #8
 800c1b8:	4798      	blx	r3
 800c1ba:	6823      	ldr	r3, [r4, #0]
 800c1bc:	2800      	cmp	r0, #0
 800c1be:	d050      	beq.n	800c262 <_ZN8touchgfx3HAL4tickEv+0x156>
 800c1c0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800c1c4:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800c1c8:	4620      	mov	r0, r4
 800c1ca:	4798      	blx	r3
 800c1cc:	6960      	ldr	r0, [r4, #20]
 800c1ce:	2300      	movs	r3, #0
 800c1d0:	f88d 3007 	strb.w	r3, [sp, #7]
 800c1d4:	b158      	cbz	r0, 800c1ee <_ZN8touchgfx3HAL4tickEv+0xe2>
 800c1d6:	6803      	ldr	r3, [r0, #0]
 800c1d8:	f10d 0107 	add.w	r1, sp, #7
 800c1dc:	68db      	ldr	r3, [r3, #12]
 800c1de:	4798      	blx	r3
 800c1e0:	b128      	cbz	r0, 800c1ee <_ZN8touchgfx3HAL4tickEv+0xe2>
 800c1e2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c1e4:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800c1e8:	6803      	ldr	r3, [r0, #0]
 800c1ea:	68db      	ldr	r3, [r3, #12]
 800c1ec:	4798      	blx	r3
 800c1ee:	f104 001c 	add.w	r0, r4, #28
 800c1f2:	f011 fb37 	bl	801d864 <_ZN8touchgfx8Gestures4tickEv>
 800c1f6:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800c1fa:	b30b      	cbz	r3, 800c240 <_ZN8touchgfx3HAL4tickEv+0x134>
 800c1fc:	6920      	ldr	r0, [r4, #16]
 800c1fe:	6803      	ldr	r3, [r0, #0]
 800c200:	691b      	ldr	r3, [r3, #16]
 800c202:	4798      	blx	r3
 800c204:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800c206:	4606      	mov	r6, r0
 800c208:	b903      	cbnz	r3, 800c20c <_ZN8touchgfx3HAL4tickEv+0x100>
 800c20a:	6720      	str	r0, [r4, #112]	; 0x70
 800c20c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800c20e:	4a1e      	ldr	r2, [pc, #120]	; (800c288 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800c210:	1af3      	subs	r3, r6, r3
 800c212:	4293      	cmp	r3, r2
 800c214:	d914      	bls.n	800c240 <_ZN8touchgfx3HAL4tickEv+0x134>
 800c216:	6920      	ldr	r0, [r4, #16]
 800c218:	6803      	ldr	r3, [r0, #0]
 800c21a:	699b      	ldr	r3, [r3, #24]
 800c21c:	4798      	blx	r3
 800c21e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800c220:	2264      	movs	r2, #100	; 0x64
 800c222:	1af3      	subs	r3, r6, r3
 800c224:	fbb3 f3f2 	udiv	r3, r3, r2
 800c228:	fbb0 f0f3 	udiv	r0, r0, r3
 800c22c:	2800      	cmp	r0, #0
 800c22e:	dc1d      	bgt.n	800c26c <_ZN8touchgfx3HAL4tickEv+0x160>
 800c230:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800c234:	6920      	ldr	r0, [r4, #16]
 800c236:	6803      	ldr	r3, [r0, #0]
 800c238:	2100      	movs	r1, #0
 800c23a:	69db      	ldr	r3, [r3, #28]
 800c23c:	4798      	blx	r3
 800c23e:	6726      	str	r6, [r4, #112]	; 0x70
 800c240:	f002 fe5e 	bl	800ef00 <_ZN8touchgfx11Application11getInstanceEv>
 800c244:	6803      	ldr	r3, [r0, #0]
 800c246:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c248:	4798      	blx	r3
 800c24a:	6823      	ldr	r3, [r4, #0]
 800c24c:	4620      	mov	r0, r4
 800c24e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800c252:	4798      	blx	r3
 800c254:	2001      	movs	r0, #1
 800c256:	f7fd fd4c 	bl	8009cf2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800c25a:	2300      	movs	r3, #0
 800c25c:	702b      	strb	r3, [r5, #0]
 800c25e:	b004      	add	sp, #16
 800c260:	bd70      	pop	{r4, r5, r6, pc}
 800c262:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800c266:	4620      	mov	r0, r4
 800c268:	4798      	blx	r3
 800c26a:	e7af      	b.n	800c1cc <_ZN8touchgfx3HAL4tickEv+0xc0>
 800c26c:	2863      	cmp	r0, #99	; 0x63
 800c26e:	bfcb      	itete	gt
 800c270:	2300      	movgt	r3, #0
 800c272:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800c276:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800c27a:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800c27e:	e7d9      	b.n	800c234 <_ZN8touchgfx3HAL4tickEv+0x128>
 800c280:	20026f04 	.word	0x20026f04
 800c284:	20026f05 	.word	0x20026f05
 800c288:	05f5e100 	.word	0x05f5e100

0800c28c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800c28c:	f7fd bfc0 	b.w	800a210 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800c290 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800c290:	6581      	str	r1, [r0, #88]	; 0x58
 800c292:	301c      	adds	r0, #28
 800c294:	f011 bae4 	b.w	801d860 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800c298 <_ZN8touchgfx3HAL5touchEll>:
 800c298:	b530      	push	{r4, r5, lr}
 800c29a:	b087      	sub	sp, #28
 800c29c:	4604      	mov	r4, r0
 800c29e:	a804      	add	r0, sp, #16
 800c2a0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800c2a4:	f002 fb94 	bl	800e9d0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800c2a8:	9b04      	ldr	r3, [sp, #16]
 800c2aa:	f8ad 300c 	strh.w	r3, [sp, #12]
 800c2ae:	a906      	add	r1, sp, #24
 800c2b0:	9b05      	ldr	r3, [sp, #20]
 800c2b2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800c2b6:	a803      	add	r0, sp, #12
 800c2b8:	f002 fbdc 	bl	800ea74 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800c2bc:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800c2c0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800c2c4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800c2c8:	f104 001c 	add.w	r0, r4, #28
 800c2cc:	b189      	cbz	r1, 800c2f2 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800c2ce:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800c2d2:	9300      	str	r3, [sp, #0]
 800c2d4:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800c2d8:	4613      	mov	r3, r2
 800c2da:	462a      	mov	r2, r5
 800c2dc:	f011 fad0 	bl	801d880 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800c2e0:	b128      	cbz	r0, 800c2ee <_ZN8touchgfx3HAL5touchEll+0x56>
 800c2e2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c2e6:	65e3      	str	r3, [r4, #92]	; 0x5c
 800c2e8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c2ec:	6623      	str	r3, [r4, #96]	; 0x60
 800c2ee:	b007      	add	sp, #28
 800c2f0:	bd30      	pop	{r4, r5, pc}
 800c2f2:	f011 fb05 	bl	801d900 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800c2f6:	2301      	movs	r3, #1
 800c2f8:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800c2fc:	e7f1      	b.n	800c2e2 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800c2fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800c2fe:	b510      	push	{r4, lr}
 800c300:	2b00      	cmp	r3, #0
 800c302:	d046      	beq.n	800c392 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800c304:	ea81 0002 	eor.w	r0, r1, r2
 800c308:	07c4      	lsls	r4, r0, #31
 800c30a:	d508      	bpl.n	800c31e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800c30c:	440b      	add	r3, r1
 800c30e:	3a01      	subs	r2, #1
 800c310:	428b      	cmp	r3, r1
 800c312:	d93e      	bls.n	800c392 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800c314:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800c318:	f801 0b01 	strb.w	r0, [r1], #1
 800c31c:	e7f8      	b.n	800c310 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800c31e:	07d0      	lsls	r0, r2, #31
 800c320:	bf42      	ittt	mi
 800c322:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800c326:	f801 0b01 	strbmi.w	r0, [r1], #1
 800c32a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800c32e:	2b01      	cmp	r3, #1
 800c330:	d911      	bls.n	800c356 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800c332:	ea81 0402 	eor.w	r4, r1, r2
 800c336:	07a4      	lsls	r4, r4, #30
 800c338:	4610      	mov	r0, r2
 800c33a:	d022      	beq.n	800c382 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800c33c:	f023 0401 	bic.w	r4, r3, #1
 800c340:	440c      	add	r4, r1
 800c342:	428c      	cmp	r4, r1
 800c344:	4602      	mov	r2, r0
 800c346:	d904      	bls.n	800c352 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800c348:	8812      	ldrh	r2, [r2, #0]
 800c34a:	f821 2b02 	strh.w	r2, [r1], #2
 800c34e:	3002      	adds	r0, #2
 800c350:	e7f7      	b.n	800c342 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800c352:	f003 0301 	and.w	r3, r3, #1
 800c356:	f023 0003 	bic.w	r0, r3, #3
 800c35a:	4408      	add	r0, r1
 800c35c:	4288      	cmp	r0, r1
 800c35e:	4614      	mov	r4, r2
 800c360:	d904      	bls.n	800c36c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800c362:	6824      	ldr	r4, [r4, #0]
 800c364:	f841 4b04 	str.w	r4, [r1], #4
 800c368:	3204      	adds	r2, #4
 800c36a:	e7f7      	b.n	800c35c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800c36c:	f003 0303 	and.w	r3, r3, #3
 800c370:	440b      	add	r3, r1
 800c372:	3a01      	subs	r2, #1
 800c374:	428b      	cmp	r3, r1
 800c376:	d90c      	bls.n	800c392 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800c378:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800c37c:	f801 0b01 	strb.w	r0, [r1], #1
 800c380:	e7f8      	b.n	800c374 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800c382:	0790      	lsls	r0, r2, #30
 800c384:	d0e7      	beq.n	800c356 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800c386:	f832 0b02 	ldrh.w	r0, [r2], #2
 800c38a:	f821 0b02 	strh.w	r0, [r1], #2
 800c38e:	3b02      	subs	r3, #2
 800c390:	e7e1      	b.n	800c356 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800c392:	2001      	movs	r0, #1
 800c394:	bd10      	pop	{r4, pc}

0800c396 <_ZN8touchgfx3HAL7noTouchEv>:
 800c396:	b510      	push	{r4, lr}
 800c398:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800c39c:	4604      	mov	r4, r0
 800c39e:	b153      	cbz	r3, 800c3b6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800c3a0:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800c3a4:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800c3a8:	2101      	movs	r1, #1
 800c3aa:	301c      	adds	r0, #28
 800c3ac:	f011 faa8 	bl	801d900 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800c3b0:	2300      	movs	r3, #0
 800c3b2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800c3b6:	bd10      	pop	{r4, pc}

0800c3b8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800c3b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c3bc:	4604      	mov	r4, r0
 800c3be:	6980      	ldr	r0, [r0, #24]
 800c3c0:	b085      	sub	sp, #20
 800c3c2:	460f      	mov	r7, r1
 800c3c4:	4690      	mov	r8, r2
 800c3c6:	4699      	mov	r9, r3
 800c3c8:	b930      	cbnz	r0, 800c3d8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 800c3ca:	4b1c      	ldr	r3, [pc, #112]	; (800c43c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 800c3cc:	4a1c      	ldr	r2, [pc, #112]	; (800c440 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800c3ce:	f44f 719f 	mov.w	r1, #318	; 0x13e
 800c3d2:	481c      	ldr	r0, [pc, #112]	; (800c444 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 800c3d4:	f011 fb2a 	bl	801da2c <__assert_func>
 800c3d8:	ad04      	add	r5, sp, #16
 800c3da:	2600      	movs	r6, #0
 800c3dc:	f845 6d04 	str.w	r6, [r5, #-4]!
 800c3e0:	6806      	ldr	r6, [r0, #0]
 800c3e2:	9501      	str	r5, [sp, #4]
 800c3e4:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800c3e8:	9500      	str	r5, [sp, #0]
 800c3ea:	6835      	ldr	r5, [r6, #0]
 800c3ec:	47a8      	blx	r5
 800c3ee:	4d16      	ldr	r5, [pc, #88]	; (800c448 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 800c3f0:	4606      	mov	r6, r0
 800c3f2:	f8a5 9000 	strh.w	r9, [r5]
 800c3f6:	f7fb fc3b 	bl	8007c70 <_ZN8touchgfx3HAL3lcdEv>
 800c3fa:	6803      	ldr	r3, [r0, #0]
 800c3fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c3fe:	4798      	blx	r3
 800c400:	2801      	cmp	r0, #1
 800c402:	d012      	beq.n	800c42a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 800c404:	d306      	bcc.n	800c414 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 800c406:	280d      	cmp	r0, #13
 800c408:	d80b      	bhi.n	800c422 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800c40a:	4b10      	ldr	r3, [pc, #64]	; (800c44c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800c40c:	4a0c      	ldr	r2, [pc, #48]	; (800c440 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800c40e:	f240 115b 	movw	r1, #347	; 0x15b
 800c412:	e7de      	b.n	800c3d2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 800c414:	882b      	ldrh	r3, [r5, #0]
 800c416:	fb08 7203 	mla	r2, r8, r3, r7
 800c41a:	9b03      	ldr	r3, [sp, #12]
 800c41c:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800c420:	63e3      	str	r3, [r4, #60]	; 0x3c
 800c422:	4630      	mov	r0, r6
 800c424:	b005      	add	sp, #20
 800c426:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c42a:	882a      	ldrh	r2, [r5, #0]
 800c42c:	9b03      	ldr	r3, [sp, #12]
 800c42e:	fb08 7202 	mla	r2, r8, r2, r7
 800c432:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800c436:	1a9a      	subs	r2, r3, r2
 800c438:	63e2      	str	r2, [r4, #60]	; 0x3c
 800c43a:	e7f2      	b.n	800c422 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800c43c:	0802015d 	.word	0x0802015d
 800c440:	080204f3 	.word	0x080204f3
 800c444:	080201a2 	.word	0x080201a2
 800c448:	20026ef8 	.word	0x20026ef8
 800c44c:	080201c8 	.word	0x080201c8

0800c450 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800c450:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c452:	b08b      	sub	sp, #44	; 0x2c
 800c454:	4617      	mov	r7, r2
 800c456:	4604      	mov	r4, r0
 800c458:	460e      	mov	r6, r1
 800c45a:	461d      	mov	r5, r3
 800c45c:	f7fb fc08 	bl	8007c70 <_ZN8touchgfx3HAL3lcdEv>
 800c460:	6803      	ldr	r3, [r0, #0]
 800c462:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c464:	4798      	blx	r3
 800c466:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800c46a:	9007      	str	r0, [sp, #28]
 800c46c:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800c470:	4b0d      	ldr	r3, [pc, #52]	; (800c4a8 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800c472:	6822      	ldr	r2, [r4, #0]
 800c474:	881b      	ldrh	r3, [r3, #0]
 800c476:	9306      	str	r3, [sp, #24]
 800c478:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800c47c:	9305      	str	r3, [sp, #20]
 800c47e:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800c482:	9304      	str	r3, [sp, #16]
 800c484:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c488:	9303      	str	r3, [sp, #12]
 800c48a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800c48e:	9302      	str	r3, [sp, #8]
 800c490:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800c494:	e9cd 5300 	strd	r5, r3, [sp]
 800c498:	4631      	mov	r1, r6
 800c49a:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800c49c:	463b      	mov	r3, r7
 800c49e:	2200      	movs	r2, #0
 800c4a0:	4620      	mov	r0, r4
 800c4a2:	47a8      	blx	r5
 800c4a4:	b00b      	add	sp, #44	; 0x2c
 800c4a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c4a8:	20026ef8 	.word	0x20026ef8

0800c4ac <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800c4ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c4b0:	4698      	mov	r8, r3
 800c4b2:	6803      	ldr	r3, [r0, #0]
 800c4b4:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800c4b6:	4b15      	ldr	r3, [pc, #84]	; (800c50c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800c4b8:	b08b      	sub	sp, #44	; 0x2c
 800c4ba:	4617      	mov	r7, r2
 800c4bc:	f8b3 9000 	ldrh.w	r9, [r3]
 800c4c0:	460e      	mov	r6, r1
 800c4c2:	4604      	mov	r4, r0
 800c4c4:	f7fb fbd4 	bl	8007c70 <_ZN8touchgfx3HAL3lcdEv>
 800c4c8:	6803      	ldr	r3, [r0, #0]
 800c4ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c4cc:	4798      	blx	r3
 800c4ce:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800c4d2:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800c4d6:	2302      	movs	r3, #2
 800c4d8:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800c4dc:	2301      	movs	r3, #1
 800c4de:	9305      	str	r3, [sp, #20]
 800c4e0:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800c4e4:	9304      	str	r3, [sp, #16]
 800c4e6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800c4ea:	9303      	str	r3, [sp, #12]
 800c4ec:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800c4f0:	9302      	str	r3, [sp, #8]
 800c4f2:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c4f6:	2200      	movs	r2, #0
 800c4f8:	e9cd 8300 	strd	r8, r3, [sp]
 800c4fc:	4631      	mov	r1, r6
 800c4fe:	463b      	mov	r3, r7
 800c500:	4620      	mov	r0, r4
 800c502:	47a8      	blx	r5
 800c504:	b00b      	add	sp, #44	; 0x2c
 800c506:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c50a:	bf00      	nop
 800c50c:	20026ef8 	.word	0x20026ef8

0800c510 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800c510:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c514:	4698      	mov	r8, r3
 800c516:	6803      	ldr	r3, [r0, #0]
 800c518:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800c51a:	4b11      	ldr	r3, [pc, #68]	; (800c560 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800c51c:	b087      	sub	sp, #28
 800c51e:	f8b3 9000 	ldrh.w	r9, [r3]
 800c522:	460e      	mov	r6, r1
 800c524:	4617      	mov	r7, r2
 800c526:	4604      	mov	r4, r0
 800c528:	f7fb fba2 	bl	8007c70 <_ZN8touchgfx3HAL3lcdEv>
 800c52c:	6803      	ldr	r3, [r0, #0]
 800c52e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c530:	4798      	blx	r3
 800c532:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800c536:	f8cd 900c 	str.w	r9, [sp, #12]
 800c53a:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800c53e:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800c542:	9302      	str	r3, [sp, #8]
 800c544:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800c548:	9301      	str	r3, [sp, #4]
 800c54a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800c54e:	9300      	str	r3, [sp, #0]
 800c550:	463a      	mov	r2, r7
 800c552:	4643      	mov	r3, r8
 800c554:	4631      	mov	r1, r6
 800c556:	4620      	mov	r0, r4
 800c558:	47a8      	blx	r5
 800c55a:	b007      	add	sp, #28
 800c55c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c560:	20026ef8 	.word	0x20026ef8

0800c564 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800c564:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c568:	4604      	mov	r4, r0
 800c56a:	b08f      	sub	sp, #60	; 0x3c
 800c56c:	4610      	mov	r0, r2
 800c56e:	460d      	mov	r5, r1
 800c570:	4691      	mov	r9, r2
 800c572:	461e      	mov	r6, r3
 800c574:	f005 f870 	bl	8011658 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800c578:	2800      	cmp	r0, #0
 800c57a:	f000 809c 	beq.w	800c6b6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x152>
 800c57e:	6823      	ldr	r3, [r4, #0]
 800c580:	f8df b194 	ldr.w	fp, [pc, #404]	; 800c718 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>
 800c584:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c586:	f8df a194 	ldr.w	sl, [pc, #404]	; 800c71c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800c58a:	4f60      	ldr	r7, [pc, #384]	; (800c70c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800c58c:	4620      	mov	r0, r4
 800c58e:	4798      	blx	r3
 800c590:	6823      	ldr	r3, [r4, #0]
 800c592:	4620      	mov	r0, r4
 800c594:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c596:	4798      	blx	r3
 800c598:	f8bb 3000 	ldrh.w	r3, [fp]
 800c59c:	9301      	str	r3, [sp, #4]
 800c59e:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800c5a2:	f8ba 3000 	ldrh.w	r3, [sl]
 800c5a6:	9302      	str	r3, [sp, #8]
 800c5a8:	883b      	ldrh	r3, [r7, #0]
 800c5aa:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800c5ae:	9303      	str	r3, [sp, #12]
 800c5b0:	4b57      	ldr	r3, [pc, #348]	; (800c710 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800c5b2:	9305      	str	r3, [sp, #20]
 800c5b4:	881a      	ldrh	r2, [r3, #0]
 800c5b6:	9204      	str	r2, [sp, #16]
 800c5b8:	4640      	mov	r0, r8
 800c5ba:	f005 f8fd 	bl	80117b8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c5be:	8038      	strh	r0, [r7, #0]
 800c5c0:	4640      	mov	r0, r8
 800c5c2:	f005 f93d 	bl	8011840 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c5c6:	9b05      	ldr	r3, [sp, #20]
 800c5c8:	8018      	strh	r0, [r3, #0]
 800c5ca:	4b52      	ldr	r3, [pc, #328]	; (800c714 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800c5cc:	781b      	ldrb	r3, [r3, #0]
 800c5ce:	2b00      	cmp	r3, #0
 800c5d0:	d174      	bne.n	800c6bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 800c5d2:	883b      	ldrh	r3, [r7, #0]
 800c5d4:	f8ab 3000 	strh.w	r3, [fp]
 800c5d8:	f8aa 0000 	strh.w	r0, [sl]
 800c5dc:	4648      	mov	r0, r9
 800c5de:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800c5e2:	f005 f839 	bl	8011658 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800c5e6:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800c5ea:	2200      	movs	r2, #0
 800c5ec:	4611      	mov	r1, r2
 800c5ee:	4628      	mov	r0, r5
 800c5f0:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800c5f4:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800c5f8:	f7fc f895 	bl	8008726 <_ZN8touchgfx8Drawable5setXYEss>
 800c5fc:	2301      	movs	r3, #1
 800c5fe:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800c602:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800c606:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800c60a:	2b00      	cmp	r3, #0
 800c60c:	dd5c      	ble.n	800c6c8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 800c60e:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800c612:	2b00      	cmp	r3, #0
 800c614:	dd58      	ble.n	800c6c8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 800c616:	462a      	mov	r2, r5
 800c618:	ab0a      	add	r3, sp, #40	; 0x28
 800c61a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800c61e:	6851      	ldr	r1, [r2, #4]
 800c620:	c303      	stmia	r3!, {r0, r1}
 800c622:	4631      	mov	r1, r6
 800c624:	a80a      	add	r0, sp, #40	; 0x28
 800c626:	f7ff fbe7 	bl	800bdf8 <_ZN8touchgfx4RectaNERKS0_>
 800c62a:	4b38      	ldr	r3, [pc, #224]	; (800c70c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800c62c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c630:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800c634:	2100      	movs	r1, #0
 800c636:	aa0a      	add	r2, sp, #40	; 0x28
 800c638:	4b35      	ldr	r3, [pc, #212]	; (800c710 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800c63a:	910c      	str	r1, [sp, #48]	; 0x30
 800c63c:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c640:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c644:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800c648:	ab08      	add	r3, sp, #32
 800c64a:	e883 0003 	stmia.w	r3, {r0, r1}
 800c64e:	4618      	mov	r0, r3
 800c650:	a90c      	add	r1, sp, #48	; 0x30
 800c652:	f7ff fbd1 	bl	800bdf8 <_ZN8touchgfx4RectaNERKS0_>
 800c656:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800c658:	2b00      	cmp	r3, #0
 800c65a:	d13c      	bne.n	800c6d6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x172>
 800c65c:	2000      	movs	r0, #0
 800c65e:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800c662:	2600      	movs	r6, #0
 800c664:	682a      	ldr	r2, [r5, #0]
 800c666:	696b      	ldr	r3, [r5, #20]
 800c668:	616e      	str	r6, [r5, #20]
 800c66a:	9305      	str	r3, [sp, #20]
 800c66c:	6892      	ldr	r2, [r2, #8]
 800c66e:	a908      	add	r1, sp, #32
 800c670:	4628      	mov	r0, r5
 800c672:	4790      	blx	r2
 800c674:	9b05      	ldr	r3, [sp, #20]
 800c676:	616b      	str	r3, [r5, #20]
 800c678:	4652      	mov	r2, sl
 800c67a:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800c67e:	4649      	mov	r1, r9
 800c680:	4628      	mov	r0, r5
 800c682:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800c686:	f7fc f84e 	bl	8008726 <_ZN8touchgfx8Drawable5setXYEss>
 800c68a:	4b23      	ldr	r3, [pc, #140]	; (800c718 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800c68c:	9a01      	ldr	r2, [sp, #4]
 800c68e:	801a      	strh	r2, [r3, #0]
 800c690:	4b22      	ldr	r3, [pc, #136]	; (800c71c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800c692:	9a02      	ldr	r2, [sp, #8]
 800c694:	801a      	strh	r2, [r3, #0]
 800c696:	4b1d      	ldr	r3, [pc, #116]	; (800c70c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800c698:	9a03      	ldr	r2, [sp, #12]
 800c69a:	801a      	strh	r2, [r3, #0]
 800c69c:	4b1c      	ldr	r3, [pc, #112]	; (800c710 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800c69e:	9a04      	ldr	r2, [sp, #16]
 800c6a0:	801a      	strh	r2, [r3, #0]
 800c6a2:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800c6a6:	6823      	ldr	r3, [r4, #0]
 800c6a8:	4620      	mov	r0, r4
 800c6aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c6ac:	4798      	blx	r3
 800c6ae:	6823      	ldr	r3, [r4, #0]
 800c6b0:	4620      	mov	r0, r4
 800c6b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c6b4:	4798      	blx	r3
 800c6b6:	b00f      	add	sp, #60	; 0x3c
 800c6b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c6bc:	883b      	ldrh	r3, [r7, #0]
 800c6be:	f8ab 0000 	strh.w	r0, [fp]
 800c6c2:	f8aa 3000 	strh.w	r3, [sl]
 800c6c6:	e789      	b.n	800c5dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x78>
 800c6c8:	462a      	mov	r2, r5
 800c6ca:	ab0a      	add	r3, sp, #40	; 0x28
 800c6cc:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800c6d0:	6851      	ldr	r1, [r2, #4]
 800c6d2:	c303      	stmia	r3!, {r0, r1}
 800c6d4:	e7a9      	b.n	800c62a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc6>
 800c6d6:	a807      	add	r0, sp, #28
 800c6d8:	f005 fa14 	bl	8011b04 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800c6dc:	4606      	mov	r6, r0
 800c6de:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800c6e0:	6803      	ldr	r3, [r0, #0]
 800c6e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c6e4:	4798      	blx	r3
 800c6e6:	4286      	cmp	r6, r0
 800c6e8:	d1b8      	bne.n	800c65c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xf8>
 800c6ea:	f7fb fac1 	bl	8007c70 <_ZN8touchgfx3HAL3lcdEv>
 800c6ee:	6803      	ldr	r3, [r0, #0]
 800c6f0:	4606      	mov	r6, r0
 800c6f2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c6f4:	9305      	str	r3, [sp, #20]
 800c6f6:	a807      	add	r0, sp, #28
 800c6f8:	f005 fa04 	bl	8011b04 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800c6fc:	9b05      	ldr	r3, [sp, #20]
 800c6fe:	4601      	mov	r1, r0
 800c700:	4630      	mov	r0, r6
 800c702:	4798      	blx	r3
 800c704:	f080 0001 	eor.w	r0, r0, #1
 800c708:	b2c0      	uxtb	r0, r0
 800c70a:	e7a8      	b.n	800c65e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800c70c:	20026ef2 	.word	0x20026ef2
 800c710:	20026ef4 	.word	0x20026ef4
 800c714:	20026ef6 	.word	0x20026ef6
 800c718:	20026ef8 	.word	0x20026ef8
 800c71c:	20026efa 	.word	0x20026efa

0800c720 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800c720:	b510      	push	{r4, lr}
 800c722:	4b07      	ldr	r3, [pc, #28]	; (800c740 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800c724:	781b      	ldrb	r3, [r3, #0]
 800c726:	4604      	mov	r4, r0
 800c728:	b13b      	cbz	r3, 800c73a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800c72a:	6803      	ldr	r3, [r0, #0]
 800c72c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c72e:	4798      	blx	r3
 800c730:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c732:	4283      	cmp	r3, r0
 800c734:	d101      	bne.n	800c73a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800c736:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800c738:	bd10      	pop	{r4, pc}
 800c73a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800c73c:	e7fc      	b.n	800c738 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800c73e:	bf00      	nop
 800c740:	20026efc 	.word	0x20026efc

0800c744 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800c744:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c748:	b08a      	sub	sp, #40	; 0x28
 800c74a:	461d      	mov	r5, r3
 800c74c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800c750:	2400      	movs	r4, #0
 800c752:	f8bd 8048 	ldrh.w	r8, [sp, #72]	; 0x48
 800c756:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 800c75a:	f8bd 9054 	ldrh.w	r9, [sp, #84]	; 0x54
 800c75e:	9404      	str	r4, [sp, #16]
 800c760:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800c764:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800c768:	f8ad 8018 	strh.w	r8, [sp, #24]
 800c76c:	4692      	mov	sl, r2
 800c76e:	4606      	mov	r6, r0
 800c770:	f8ad 701a 	strh.w	r7, [sp, #26]
 800c774:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c778:	f88d 4020 	strb.w	r4, [sp, #32]
 800c77c:	f7ff ffd0 	bl	800c720 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c780:	fb09 a505 	mla	r5, r9, r5, sl
 800c784:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800c788:	9505      	str	r5, [sp, #20]
 800c78a:	f8ad 901e 	strh.w	r9, [sp, #30]
 800c78e:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800c792:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800c796:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800c79a:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800c79e:	f1b8 0f00 	cmp.w	r8, #0
 800c7a2:	d000      	beq.n	800c7a6 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x62>
 800c7a4:	b937      	cbnz	r7, 800c7b4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x70>
 800c7a6:	4b0d      	ldr	r3, [pc, #52]	; (800c7dc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 800c7a8:	4a0d      	ldr	r2, [pc, #52]	; (800c7e0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 800c7aa:	f240 2102 	movw	r1, #514	; 0x202
 800c7ae:	480d      	ldr	r0, [pc, #52]	; (800c7e4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa0>)
 800c7b0:	f011 f93c 	bl	801da2c <__assert_func>
 800c7b4:	6833      	ldr	r3, [r6, #0]
 800c7b6:	9c01      	ldr	r4, [sp, #4]
 800c7b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c7ba:	4630      	mov	r0, r6
 800c7bc:	4798      	blx	r3
 800c7be:	4220      	tst	r0, r4
 800c7c0:	d104      	bne.n	800c7cc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x88>
 800c7c2:	4b09      	ldr	r3, [pc, #36]	; (800c7e8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa4>)
 800c7c4:	4a06      	ldr	r2, [pc, #24]	; (800c7e0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 800c7c6:	f240 2103 	movw	r1, #515	; 0x203
 800c7ca:	e7f0      	b.n	800c7ae <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x6a>
 800c7cc:	6870      	ldr	r0, [r6, #4]
 800c7ce:	6803      	ldr	r3, [r0, #0]
 800c7d0:	a901      	add	r1, sp, #4
 800c7d2:	685b      	ldr	r3, [r3, #4]
 800c7d4:	4798      	blx	r3
 800c7d6:	b00a      	add	sp, #40	; 0x28
 800c7d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c7dc:	0801fff7 	.word	0x0801fff7
 800c7e0:	08020328 	.word	0x08020328
 800c7e4:	080201a2 	.word	0x080201a2
 800c7e8:	0802002f 	.word	0x0802002f

0800c7ec <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800c7ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c7f0:	b08b      	sub	sp, #44	; 0x2c
 800c7f2:	2400      	movs	r4, #0
 800c7f4:	461d      	mov	r5, r3
 800c7f6:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800c7fa:	f8bd 9058 	ldrh.w	r9, [sp, #88]	; 0x58
 800c7fe:	f8bd 8050 	ldrh.w	r8, [sp, #80]	; 0x50
 800c802:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 800c806:	9404      	str	r4, [sp, #16]
 800c808:	468a      	mov	sl, r1
 800c80a:	4693      	mov	fp, r2
 800c80c:	4606      	mov	r6, r0
 800c80e:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800c812:	f7ff ff85 	bl	800c720 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c816:	fb09 b505 	mla	r5, r9, r5, fp
 800c81a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800c81e:	9505      	str	r5, [sp, #20]
 800c820:	f8ad 8018 	strh.w	r8, [sp, #24]
 800c824:	f8ad 701a 	strh.w	r7, [sp, #26]
 800c828:	f8ad 401c 	strh.w	r4, [sp, #28]
 800c82c:	f8ad 901e 	strh.w	r9, [sp, #30]
 800c830:	f8cd a010 	str.w	sl, [sp, #16]
 800c834:	f8ad 4020 	strh.w	r4, [sp, #32]
 800c838:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800c83c:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800c840:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800c844:	f1b8 0f00 	cmp.w	r8, #0
 800c848:	d000      	beq.n	800c84c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x60>
 800c84a:	b937      	cbnz	r7, 800c85a <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x6e>
 800c84c:	4b0d      	ldr	r3, [pc, #52]	; (800c884 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 800c84e:	4a0e      	ldr	r2, [pc, #56]	; (800c888 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 800c850:	f240 2119 	movw	r1, #537	; 0x219
 800c854:	480d      	ldr	r0, [pc, #52]	; (800c88c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa0>)
 800c856:	f011 f8e9 	bl	801da2c <__assert_func>
 800c85a:	6833      	ldr	r3, [r6, #0]
 800c85c:	9c01      	ldr	r4, [sp, #4]
 800c85e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c860:	4630      	mov	r0, r6
 800c862:	4798      	blx	r3
 800c864:	4220      	tst	r0, r4
 800c866:	d104      	bne.n	800c872 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x86>
 800c868:	4b09      	ldr	r3, [pc, #36]	; (800c890 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa4>)
 800c86a:	4a07      	ldr	r2, [pc, #28]	; (800c888 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 800c86c:	f240 211a 	movw	r1, #538	; 0x21a
 800c870:	e7f0      	b.n	800c854 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x68>
 800c872:	6870      	ldr	r0, [r6, #4]
 800c874:	6803      	ldr	r3, [r0, #0]
 800c876:	a901      	add	r1, sp, #4
 800c878:	685b      	ldr	r3, [r3, #4]
 800c87a:	4798      	blx	r3
 800c87c:	b00b      	add	sp, #44	; 0x2c
 800c87e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c882:	bf00      	nop
 800c884:	08020074 	.word	0x08020074
 800c888:	0802039e 	.word	0x0802039e
 800c88c:	080201a2 	.word	0x080201a2
 800c890:	080200ac 	.word	0x080200ac

0800c894 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 800c894:	b508      	push	{r3, lr}
 800c896:	290d      	cmp	r1, #13
 800c898:	d817      	bhi.n	800c8ca <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 800c89a:	e8df f001 	tbb	[pc, r1]
 800c89e:	090b      	.short	0x090b
 800c8a0:	0d0d0d07 	.word	0x0d0d0d07
 800c8a4:	1414140d 	.word	0x1414140d
 800c8a8:	0d0d1414 	.word	0x0d0d1414
 800c8ac:	2020      	movs	r0, #32
 800c8ae:	bd08      	pop	{r3, pc}
 800c8b0:	2018      	movs	r0, #24
 800c8b2:	e7fc      	b.n	800c8ae <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800c8b4:	2010      	movs	r0, #16
 800c8b6:	e7fa      	b.n	800c8ae <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800c8b8:	4b05      	ldr	r3, [pc, #20]	; (800c8d0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 800c8ba:	4a06      	ldr	r2, [pc, #24]	; (800c8d4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800c8bc:	4806      	ldr	r0, [pc, #24]	; (800c8d8 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800c8be:	f240 2183 	movw	r1, #643	; 0x283
 800c8c2:	f011 f8b3 	bl	801da2c <__assert_func>
 800c8c6:	2008      	movs	r0, #8
 800c8c8:	e7f1      	b.n	800c8ae <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800c8ca:	2000      	movs	r0, #0
 800c8cc:	e7ef      	b.n	800c8ae <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800c8ce:	bf00      	nop
 800c8d0:	0802021e 	.word	0x0802021e
 800c8d4:	080206c9 	.word	0x080206c9
 800c8d8:	080201a2 	.word	0x080201a2

0800c8dc <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800c8dc:	b570      	push	{r4, r5, r6, lr}
 800c8de:	460d      	mov	r5, r1
 800c8e0:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800c8e4:	4616      	mov	r6, r2
 800c8e6:	461c      	mov	r4, r3
 800c8e8:	f7ff ffd4 	bl	800c894 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800c8ec:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800c8f0:	10c0      	asrs	r0, r0, #3
 800c8f2:	fb06 5101 	mla	r1, r6, r1, r5
 800c8f6:	fb00 4001 	mla	r0, r0, r1, r4
 800c8fa:	bd70      	pop	{r4, r5, r6, pc}

0800c8fc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800c8fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c900:	b08c      	sub	sp, #48	; 0x30
 800c902:	f04f 0c00 	mov.w	ip, #0
 800c906:	f89d 506c 	ldrb.w	r5, [sp, #108]	; 0x6c
 800c90a:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 800c90e:	f8bd 6058 	ldrh.w	r6, [sp, #88]	; 0x58
 800c912:	f8bd 9068 	ldrh.w	r9, [sp, #104]	; 0x68
 800c916:	f89d 8070 	ldrb.w	r8, [sp, #112]	; 0x70
 800c91a:	f8cd c018 	str.w	ip, [sp, #24]
 800c91e:	2d0b      	cmp	r5, #11
 800c920:	4604      	mov	r4, r0
 800c922:	469a      	mov	sl, r3
 800c924:	f89d 0064 	ldrb.w	r0, [sp, #100]	; 0x64
 800c928:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 800c92c:	d130      	bne.n	800c990 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x94>
 800c92e:	2080      	movs	r0, #128	; 0x80
 800c930:	e9cd 0103 	strd	r0, r1, [sp, #12]
 800c934:	9205      	str	r2, [sp, #20]
 800c936:	4620      	mov	r0, r4
 800c938:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 800c93c:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800c940:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800c944:	f8ad 7020 	strh.w	r7, [sp, #32]
 800c948:	f8ad 6022 	strh.w	r6, [sp, #34]	; 0x22
 800c94c:	f7ff fee8 	bl	800c720 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c950:	e9cd 9800 	strd	r9, r8, [sp]
 800c954:	4603      	mov	r3, r0
 800c956:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800c95a:	4651      	mov	r1, sl
 800c95c:	4620      	mov	r0, r4
 800c95e:	f7ff ffbd 	bl	800c8dc <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800c962:	f89d 3074 	ldrb.w	r3, [sp, #116]	; 0x74
 800c966:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800c96a:	2300      	movs	r3, #0
 800c96c:	9007      	str	r0, [sp, #28]
 800c96e:	f8ad 9026 	strh.w	r9, [sp, #38]	; 0x26
 800c972:	f88d 5029 	strb.w	r5, [sp, #41]	; 0x29
 800c976:	f88d 802a 	strb.w	r8, [sp, #42]	; 0x2a
 800c97a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800c97e:	b107      	cbz	r7, 800c982 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x86>
 800c980:	b9d6      	cbnz	r6, 800c9b8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbc>
 800c982:	4b17      	ldr	r3, [pc, #92]	; (800c9e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 800c984:	4a17      	ldr	r2, [pc, #92]	; (800c9e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 800c986:	f240 11c9 	movw	r1, #457	; 0x1c9
 800c98a:	4817      	ldr	r0, [pc, #92]	; (800c9e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xec>)
 800c98c:	f011 f84e 	bl	801da2c <__assert_func>
 800c990:	2d02      	cmp	r5, #2
 800c992:	d108      	bne.n	800c9a6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800c994:	2bff      	cmp	r3, #255	; 0xff
 800c996:	d104      	bne.n	800c9a2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa6>
 800c998:	2800      	cmp	r0, #0
 800c99a:	bf14      	ite	ne
 800c99c:	2040      	movne	r0, #64	; 0x40
 800c99e:	2020      	moveq	r0, #32
 800c9a0:	e7c6      	b.n	800c930 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800c9a2:	2040      	movs	r0, #64	; 0x40
 800c9a4:	e7c4      	b.n	800c930 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800c9a6:	2bff      	cmp	r3, #255	; 0xff
 800c9a8:	d104      	bne.n	800c9b4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb8>
 800c9aa:	2800      	cmp	r0, #0
 800c9ac:	bf14      	ite	ne
 800c9ae:	2004      	movne	r0, #4
 800c9b0:	2001      	moveq	r0, #1
 800c9b2:	e7bd      	b.n	800c930 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800c9b4:	2004      	movs	r0, #4
 800c9b6:	e7bb      	b.n	800c930 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800c9b8:	6823      	ldr	r3, [r4, #0]
 800c9ba:	9d03      	ldr	r5, [sp, #12]
 800c9bc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c9be:	4620      	mov	r0, r4
 800c9c0:	4798      	blx	r3
 800c9c2:	4228      	tst	r0, r5
 800c9c4:	d104      	bne.n	800c9d0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xd4>
 800c9c6:	4b09      	ldr	r3, [pc, #36]	; (800c9ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xf0>)
 800c9c8:	4a06      	ldr	r2, [pc, #24]	; (800c9e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 800c9ca:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 800c9ce:	e7dc      	b.n	800c98a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x8e>
 800c9d0:	6860      	ldr	r0, [r4, #4]
 800c9d2:	6803      	ldr	r3, [r0, #0]
 800c9d4:	a903      	add	r1, sp, #12
 800c9d6:	685b      	ldr	r3, [r3, #4]
 800c9d8:	4798      	blx	r3
 800c9da:	b00c      	add	sp, #48	; 0x30
 800c9dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c9e0:	0801fff7 	.word	0x0801fff7
 800c9e4:	08020557 	.word	0x08020557
 800c9e8:	080201a2 	.word	0x080201a2
 800c9ec:	0802002f 	.word	0x0802002f

0800c9f0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800c9f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c9f4:	b08d      	sub	sp, #52	; 0x34
 800c9f6:	469b      	mov	fp, r3
 800c9f8:	f89d 7060 	ldrb.w	r7, [sp, #96]	; 0x60
 800c9fc:	f89d 6068 	ldrb.w	r6, [sp, #104]	; 0x68
 800ca00:	f8bd 8064 	ldrh.w	r8, [sp, #100]	; 0x64
 800ca04:	2fff      	cmp	r7, #255	; 0xff
 800ca06:	bf14      	ite	ne
 800ca08:	2308      	movne	r3, #8
 800ca0a:	2302      	moveq	r3, #2
 800ca0c:	2500      	movs	r5, #0
 800ca0e:	4604      	mov	r4, r0
 800ca10:	4689      	mov	r9, r1
 800ca12:	4692      	mov	sl, r2
 800ca14:	e9cd 3503 	strd	r3, r5, [sp, #12]
 800ca18:	9506      	str	r5, [sp, #24]
 800ca1a:	f7ff fe81 	bl	800c720 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ca1e:	465a      	mov	r2, fp
 800ca20:	4603      	mov	r3, r0
 800ca22:	4651      	mov	r1, sl
 800ca24:	e9cd 8600 	strd	r8, r6, [sp]
 800ca28:	4620      	mov	r0, r4
 800ca2a:	f7ff ff57 	bl	800c8dc <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800ca2e:	f8bd 3058 	ldrh.w	r3, [sp, #88]	; 0x58
 800ca32:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ca36:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 800ca3a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800ca3e:	f89d 306c 	ldrb.w	r3, [sp, #108]	; 0x6c
 800ca42:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800ca46:	6823      	ldr	r3, [r4, #0]
 800ca48:	9007      	str	r0, [sp, #28]
 800ca4a:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 800ca4e:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800ca52:	f8ad 8026 	strh.w	r8, [sp, #38]	; 0x26
 800ca56:	f8cd 9018 	str.w	r9, [sp, #24]
 800ca5a:	f88d 7028 	strb.w	r7, [sp, #40]	; 0x28
 800ca5e:	f88d 6029 	strb.w	r6, [sp, #41]	; 0x29
 800ca62:	f88d 602a 	strb.w	r6, [sp, #42]	; 0x2a
 800ca66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ca68:	9d03      	ldr	r5, [sp, #12]
 800ca6a:	4620      	mov	r0, r4
 800ca6c:	4798      	blx	r3
 800ca6e:	4228      	tst	r0, r5
 800ca70:	d106      	bne.n	800ca80 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x90>
 800ca72:	4b07      	ldr	r3, [pc, #28]	; (800ca90 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa0>)
 800ca74:	4a07      	ldr	r2, [pc, #28]	; (800ca94 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa4>)
 800ca76:	4808      	ldr	r0, [pc, #32]	; (800ca98 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa8>)
 800ca78:	f44f 710c 	mov.w	r1, #560	; 0x230
 800ca7c:	f010 ffd6 	bl	801da2c <__assert_func>
 800ca80:	6860      	ldr	r0, [r4, #4]
 800ca82:	6803      	ldr	r3, [r0, #0]
 800ca84:	a903      	add	r1, sp, #12
 800ca86:	685b      	ldr	r3, [r3, #4]
 800ca88:	4798      	blx	r3
 800ca8a:	b00d      	add	sp, #52	; 0x34
 800ca8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ca90:	0802002f 	.word	0x0802002f
 800ca94:	0802062e 	.word	0x0802062e
 800ca98:	080201a2 	.word	0x080201a2

0800ca9c <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800ca9c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800caa0:	461f      	mov	r7, r3
 800caa2:	4b0b      	ldr	r3, [pc, #44]	; (800cad0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800caa4:	460d      	mov	r5, r1
 800caa6:	f8b3 8000 	ldrh.w	r8, [r3]
 800caaa:	4616      	mov	r6, r2
 800caac:	4604      	mov	r4, r0
 800caae:	f7fb f8df 	bl	8007c70 <_ZN8touchgfx3HAL3lcdEv>
 800cab2:	6803      	ldr	r3, [r0, #0]
 800cab4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cab6:	4798      	blx	r3
 800cab8:	463b      	mov	r3, r7
 800caba:	e9cd 8000 	strd	r8, r0, [sp]
 800cabe:	4632      	mov	r2, r6
 800cac0:	4629      	mov	r1, r5
 800cac2:	4620      	mov	r0, r4
 800cac4:	f7ff ff0a 	bl	800c8dc <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800cac8:	b002      	add	sp, #8
 800caca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cace:	bf00      	nop
 800cad0:	20026ef8 	.word	0x20026ef8

0800cad4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800cad4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cad8:	b08b      	sub	sp, #44	; 0x2c
 800cada:	4699      	mov	r9, r3
 800cadc:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 800cae0:	f8bd 7048 	ldrh.w	r7, [sp, #72]	; 0x48
 800cae4:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800cae8:	f8ad 7018 	strh.w	r7, [sp, #24]
 800caec:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800caf0:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800caf4:	f8ad 301c 	strh.w	r3, [sp, #28]
 800caf8:	2500      	movs	r5, #0
 800cafa:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800cafe:	f88d 3020 	strb.w	r3, [sp, #32]
 800cb02:	4690      	mov	r8, r2
 800cb04:	4604      	mov	r4, r0
 800cb06:	9504      	str	r5, [sp, #16]
 800cb08:	f8ad 601a 	strh.w	r6, [sp, #26]
 800cb0c:	f7ff fe08 	bl	800c720 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cb10:	464a      	mov	r2, r9
 800cb12:	4603      	mov	r3, r0
 800cb14:	4641      	mov	r1, r8
 800cb16:	4620      	mov	r0, r4
 800cb18:	f7ff ffc0 	bl	800ca9c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800cb1c:	4b19      	ldr	r3, [pc, #100]	; (800cb84 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb0>)
 800cb1e:	9005      	str	r0, [sp, #20]
 800cb20:	881b      	ldrh	r3, [r3, #0]
 800cb22:	f8ad 301e 	strh.w	r3, [sp, #30]
 800cb26:	f7fb f8a3 	bl	8007c70 <_ZN8touchgfx3HAL3lcdEv>
 800cb2a:	6803      	ldr	r3, [r0, #0]
 800cb2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cb2e:	4798      	blx	r3
 800cb30:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800cb34:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800cb38:	b107      	cbz	r7, 800cb3c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x68>
 800cb3a:	b936      	cbnz	r6, 800cb4a <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x76>
 800cb3c:	4b12      	ldr	r3, [pc, #72]	; (800cb88 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 800cb3e:	4a13      	ldr	r2, [pc, #76]	; (800cb8c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 800cb40:	f44f 71f3 	mov.w	r1, #486	; 0x1e6
 800cb44:	4812      	ldr	r0, [pc, #72]	; (800cb90 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xbc>)
 800cb46:	f010 ff71 	bl	801da2c <__assert_func>
 800cb4a:	6823      	ldr	r3, [r4, #0]
 800cb4c:	9e01      	ldr	r6, [sp, #4]
 800cb4e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cb50:	4620      	mov	r0, r4
 800cb52:	4798      	blx	r3
 800cb54:	4230      	tst	r0, r6
 800cb56:	d104      	bne.n	800cb62 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x8e>
 800cb58:	4b0e      	ldr	r3, [pc, #56]	; (800cb94 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xc0>)
 800cb5a:	4a0c      	ldr	r2, [pc, #48]	; (800cb8c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 800cb5c:	f240 11e7 	movw	r1, #487	; 0x1e7
 800cb60:	e7f0      	b.n	800cb44 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x70>
 800cb62:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800cb64:	9304      	str	r3, [sp, #16]
 800cb66:	6860      	ldr	r0, [r4, #4]
 800cb68:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 800cb6c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800cb70:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800cb74:	6803      	ldr	r3, [r0, #0]
 800cb76:	a901      	add	r1, sp, #4
 800cb78:	685b      	ldr	r3, [r3, #4]
 800cb7a:	4798      	blx	r3
 800cb7c:	b00b      	add	sp, #44	; 0x2c
 800cb7e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cb82:	bf00      	nop
 800cb84:	20026ef8 	.word	0x20026ef8
 800cb88:	0801fff7 	.word	0x0801fff7
 800cb8c:	08020403 	.word	0x08020403
 800cb90:	080201a2 	.word	0x080201a2
 800cb94:	0802002f 	.word	0x0802002f

0800cb98 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800cb98:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cb9a:	b08d      	sub	sp, #52	; 0x34
 800cb9c:	466b      	mov	r3, sp
 800cb9e:	e883 0006 	stmia.w	r3, {r1, r2}
 800cba2:	4b22      	ldr	r3, [pc, #136]	; (800cc2c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800cba4:	781b      	ldrb	r3, [r3, #0]
 800cba6:	4604      	mov	r4, r0
 800cba8:	b933      	cbnz	r3, 800cbb8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800cbaa:	4b21      	ldr	r3, [pc, #132]	; (800cc30 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800cbac:	4a21      	ldr	r2, [pc, #132]	; (800cc34 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800cbae:	4822      	ldr	r0, [pc, #136]	; (800cc38 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa0>)
 800cbb0:	f240 2141 	movw	r1, #577	; 0x241
 800cbb4:	f010 ff3a 	bl	801da2c <__assert_func>
 800cbb8:	2300      	movs	r3, #0
 800cbba:	9306      	str	r3, [sp, #24]
 800cbbc:	6803      	ldr	r3, [r0, #0]
 800cbbe:	f8bd 6000 	ldrh.w	r6, [sp]
 800cbc2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cbc4:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800cbc8:	2501      	movs	r5, #1
 800cbca:	9503      	str	r5, [sp, #12]
 800cbcc:	4798      	blx	r3
 800cbce:	463a      	mov	r2, r7
 800cbd0:	4631      	mov	r1, r6
 800cbd2:	4603      	mov	r3, r0
 800cbd4:	4620      	mov	r0, r4
 800cbd6:	f7ff ff61 	bl	800ca9c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800cbda:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800cbdc:	9307      	str	r3, [sp, #28]
 800cbde:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800cbe2:	f8ad 3020 	strh.w	r3, [sp, #32]
 800cbe6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800cbea:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800cbee:	4b13      	ldr	r3, [pc, #76]	; (800cc3c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa4>)
 800cbf0:	9004      	str	r0, [sp, #16]
 800cbf2:	881b      	ldrh	r3, [r3, #0]
 800cbf4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800cbf8:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800cbfc:	f7fb f838 	bl	8007c70 <_ZN8touchgfx3HAL3lcdEv>
 800cc00:	6803      	ldr	r3, [r0, #0]
 800cc02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cc04:	4798      	blx	r3
 800cc06:	23ff      	movs	r3, #255	; 0xff
 800cc08:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800cc0c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800cc10:	6860      	ldr	r0, [r4, #4]
 800cc12:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800cc16:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800cc1a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800cc1e:	6803      	ldr	r3, [r0, #0]
 800cc20:	a903      	add	r1, sp, #12
 800cc22:	685b      	ldr	r3, [r3, #4]
 800cc24:	4798      	blx	r3
 800cc26:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800cc28:	b00d      	add	sp, #52	; 0x34
 800cc2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cc2c:	20026efd 	.word	0x20026efd
 800cc30:	080200f6 	.word	0x080200f6
 800cc34:	080204ad 	.word	0x080204ad
 800cc38:	080201a2 	.word	0x080201a2
 800cc3c:	20026ef8 	.word	0x20026ef8

0800cc40 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800cc40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc44:	b08c      	sub	sp, #48	; 0x30
 800cc46:	461e      	mov	r6, r3
 800cc48:	466d      	mov	r5, sp
 800cc4a:	2300      	movs	r3, #0
 800cc4c:	e885 0006 	stmia.w	r5, {r1, r2}
 800cc50:	9306      	str	r3, [sp, #24]
 800cc52:	6803      	ldr	r3, [r0, #0]
 800cc54:	f8bd 7000 	ldrh.w	r7, [sp]
 800cc58:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cc5a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800cc5e:	2501      	movs	r5, #1
 800cc60:	9503      	str	r5, [sp, #12]
 800cc62:	4604      	mov	r4, r0
 800cc64:	4798      	blx	r3
 800cc66:	4642      	mov	r2, r8
 800cc68:	4639      	mov	r1, r7
 800cc6a:	4603      	mov	r3, r0
 800cc6c:	4620      	mov	r0, r4
 800cc6e:	f7ff ff15 	bl	800ca9c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800cc72:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800cc76:	f8ad 3020 	strh.w	r3, [sp, #32]
 800cc7a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800cc7e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800cc82:	4b11      	ldr	r3, [pc, #68]	; (800ccc8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800cc84:	9004      	str	r0, [sp, #16]
 800cc86:	881b      	ldrh	r3, [r3, #0]
 800cc88:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800cc8c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800cc8e:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800cc92:	9607      	str	r6, [sp, #28]
 800cc94:	f7fa ffec 	bl	8007c70 <_ZN8touchgfx3HAL3lcdEv>
 800cc98:	6803      	ldr	r3, [r0, #0]
 800cc9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cc9c:	4798      	blx	r3
 800cc9e:	23ff      	movs	r3, #255	; 0xff
 800cca0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800cca4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800cca8:	6860      	ldr	r0, [r4, #4]
 800ccaa:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800ccae:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800ccb2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800ccb6:	6803      	ldr	r3, [r0, #0]
 800ccb8:	a903      	add	r1, sp, #12
 800ccba:	685b      	ldr	r3, [r3, #4]
 800ccbc:	4798      	blx	r3
 800ccbe:	4630      	mov	r0, r6
 800ccc0:	b00c      	add	sp, #48	; 0x30
 800ccc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ccc6:	bf00      	nop
 800ccc8:	20026ef8 	.word	0x20026ef8

0800cccc <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800cccc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ccce:	b085      	sub	sp, #20
 800ccd0:	ac02      	add	r4, sp, #8
 800ccd2:	e884 0006 	stmia.w	r4, {r1, r2}
 800ccd6:	4605      	mov	r5, r0
 800ccd8:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800ccdc:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800cce0:	f7ff fd1e 	bl	800c720 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cce4:	463a      	mov	r2, r7
 800cce6:	4603      	mov	r3, r0
 800cce8:	4631      	mov	r1, r6
 800ccea:	4628      	mov	r0, r5
 800ccec:	f7ff fed6 	bl	800ca9c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ccf0:	4a05      	ldr	r2, [pc, #20]	; (800cd08 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800ccf2:	682b      	ldr	r3, [r5, #0]
 800ccf4:	8812      	ldrh	r2, [r2, #0]
 800ccf6:	9200      	str	r2, [sp, #0]
 800ccf8:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800ccfa:	e894 0006 	ldmia.w	r4, {r1, r2}
 800ccfe:	4603      	mov	r3, r0
 800cd00:	4628      	mov	r0, r5
 800cd02:	47b0      	blx	r6
 800cd04:	b005      	add	sp, #20
 800cd06:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cd08:	20026ef8 	.word	0x20026ef8

0800cd0c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800cd0c:	b570      	push	{r4, r5, r6, lr}
 800cd0e:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800cd12:	4604      	mov	r4, r0
 800cd14:	b19b      	cbz	r3, 800cd3e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800cd16:	2002      	movs	r0, #2
 800cd18:	f7fc fff6 	bl	8009d08 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800cd1c:	2300      	movs	r3, #0
 800cd1e:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800cd22:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800cd26:	6823      	ldr	r3, [r4, #0]
 800cd28:	4620      	mov	r0, r4
 800cd2a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800cd2e:	f7ff fcf7 	bl	800c720 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cd32:	462b      	mov	r3, r5
 800cd34:	4601      	mov	r1, r0
 800cd36:	4620      	mov	r0, r4
 800cd38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cd3c:	4718      	bx	r3
 800cd3e:	bd70      	pop	{r4, r5, r6, pc}

0800cd40 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800cd40:	b538      	push	{r3, r4, r5, lr}
 800cd42:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800cd46:	428b      	cmp	r3, r1
 800cd48:	4604      	mov	r4, r0
 800cd4a:	460d      	mov	r5, r1
 800cd4c:	d006      	beq.n	800cd5c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800cd4e:	6803      	ldr	r3, [r0, #0]
 800cd50:	b929      	cbnz	r1, 800cd5e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800cd52:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800cd56:	4798      	blx	r3
 800cd58:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800cd5c:	bd38      	pop	{r3, r4, r5, pc}
 800cd5e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800cd62:	e7f8      	b.n	800cd56 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800cd64 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800cd64:	b510      	push	{r4, lr}
 800cd66:	4b0d      	ldr	r3, [pc, #52]	; (800cd9c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800cd68:	781b      	ldrb	r3, [r3, #0]
 800cd6a:	4604      	mov	r4, r0
 800cd6c:	b95b      	cbnz	r3, 800cd86 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800cd6e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800cd72:	2b02      	cmp	r3, #2
 800cd74:	d007      	beq.n	800cd86 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800cd76:	6840      	ldr	r0, [r0, #4]
 800cd78:	f000 f938 	bl	800cfec <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800cd7c:	b118      	cbz	r0, 800cd86 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800cd7e:	6862      	ldr	r2, [r4, #4]
 800cd80:	7a53      	ldrb	r3, [r2, #9]
 800cd82:	2b00      	cmp	r3, #0
 800cd84:	d0fc      	beq.n	800cd80 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800cd86:	f7fd fa2d 	bl	800a1e4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800cd8a:	4620      	mov	r0, r4
 800cd8c:	2100      	movs	r1, #0
 800cd8e:	f7ff ffd7 	bl	800cd40 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800cd92:	4620      	mov	r0, r4
 800cd94:	f7ff fcc4 	bl	800c720 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cd98:	bd10      	pop	{r4, pc}
 800cd9a:	bf00      	nop
 800cd9c:	20026efc 	.word	0x20026efc

0800cda0 <_ZN8touchgfx13DMA_Interface10initializeEv>:
 800cda0:	4770      	bx	lr

0800cda2 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
 800cda2:	2000      	movs	r0, #0
 800cda4:	4770      	bx	lr

0800cda6 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800cda6:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800cdaa:	1a13      	subs	r3, r2, r0
 800cdac:	4258      	negs	r0, r3
 800cdae:	4158      	adcs	r0, r3
 800cdb0:	4770      	bx	lr

0800cdb2 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800cdb2:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800cdb6:	1a9b      	subs	r3, r3, r2
 800cdb8:	2b00      	cmp	r3, #0
 800cdba:	bfdc      	itt	le
 800cdbc:	6882      	ldrle	r2, [r0, #8]
 800cdbe:	189b      	addle	r3, r3, r2
 800cdc0:	2b01      	cmp	r3, #1
 800cdc2:	bfcc      	ite	gt
 800cdc4:	2000      	movgt	r0, #0
 800cdc6:	2001      	movle	r0, #1
 800cdc8:	4770      	bx	lr

0800cdca <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800cdca:	6902      	ldr	r2, [r0, #16]
 800cdcc:	6843      	ldr	r3, [r0, #4]
 800cdce:	2024      	movs	r0, #36	; 0x24
 800cdd0:	fb00 3002 	mla	r0, r0, r2, r3
 800cdd4:	4770      	bx	lr

0800cdd6 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800cdd6:	6803      	ldr	r3, [r0, #0]
 800cdd8:	691b      	ldr	r3, [r3, #16]
 800cdda:	4718      	bx	r3

0800cddc <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800cddc:	4770      	bx	lr

0800cdde <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800cdde:	4770      	bx	lr

0800cde0 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800cde0:	b570      	push	{r4, r5, r6, lr}
 800cde2:	2301      	movs	r3, #1
 800cde4:	7203      	strb	r3, [r0, #8]
 800cde6:	4604      	mov	r4, r0
 800cde8:	6840      	ldr	r0, [r0, #4]
 800cdea:	6803      	ldr	r3, [r0, #0]
 800cdec:	699b      	ldr	r3, [r3, #24]
 800cdee:	4798      	blx	r3
 800cdf0:	6803      	ldr	r3, [r0, #0]
 800cdf2:	2b40      	cmp	r3, #64	; 0x40
 800cdf4:	4605      	mov	r5, r0
 800cdf6:	d039      	beq.n	800ce6c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800cdf8:	d815      	bhi.n	800ce26 <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800cdfa:	2b04      	cmp	r3, #4
 800cdfc:	d022      	beq.n	800ce44 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800cdfe:	d808      	bhi.n	800ce12 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800ce00:	2b01      	cmp	r3, #1
 800ce02:	d033      	beq.n	800ce6c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800ce04:	2b02      	cmp	r3, #2
 800ce06:	d108      	bne.n	800ce1a <_ZN8touchgfx13DMA_Interface7executeEv+0x3a>
 800ce08:	6823      	ldr	r3, [r4, #0]
 800ce0a:	4620      	mov	r0, r4
 800ce0c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ce0e:	4798      	blx	r3
 800ce10:	e025      	b.n	800ce5e <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 800ce12:	2b08      	cmp	r3, #8
 800ce14:	d01e      	beq.n	800ce54 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>
 800ce16:	2b20      	cmp	r3, #32
 800ce18:	d028      	beq.n	800ce6c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800ce1a:	4b17      	ldr	r3, [pc, #92]	; (800ce78 <_ZN8touchgfx13DMA_Interface7executeEv+0x98>)
 800ce1c:	4a17      	ldr	r2, [pc, #92]	; (800ce7c <_ZN8touchgfx13DMA_Interface7executeEv+0x9c>)
 800ce1e:	4818      	ldr	r0, [pc, #96]	; (800ce80 <_ZN8touchgfx13DMA_Interface7executeEv+0xa0>)
 800ce20:	2188      	movs	r1, #136	; 0x88
 800ce22:	f010 fe03 	bl	801da2c <__assert_func>
 800ce26:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800ce2a:	d01f      	beq.n	800ce6c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800ce2c:	d804      	bhi.n	800ce38 <_ZN8touchgfx13DMA_Interface7executeEv+0x58>
 800ce2e:	2b80      	cmp	r3, #128	; 0x80
 800ce30:	d01c      	beq.n	800ce6c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800ce32:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800ce36:	e7ef      	b.n	800ce18 <_ZN8touchgfx13DMA_Interface7executeEv+0x38>
 800ce38:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800ce3c:	d016      	beq.n	800ce6c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800ce3e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800ce42:	e7e0      	b.n	800ce06 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800ce44:	6823      	ldr	r3, [r4, #0]
 800ce46:	7f01      	ldrb	r1, [r0, #28]
 800ce48:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ce4a:	4620      	mov	r0, r4
 800ce4c:	4798      	blx	r3
 800ce4e:	6823      	ldr	r3, [r4, #0]
 800ce50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ce52:	e006      	b.n	800ce62 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800ce54:	6823      	ldr	r3, [r4, #0]
 800ce56:	7f01      	ldrb	r1, [r0, #28]
 800ce58:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ce5a:	4620      	mov	r0, r4
 800ce5c:	4798      	blx	r3
 800ce5e:	6823      	ldr	r3, [r4, #0]
 800ce60:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ce62:	4629      	mov	r1, r5
 800ce64:	4620      	mov	r0, r4
 800ce66:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ce6a:	4718      	bx	r3
 800ce6c:	6823      	ldr	r3, [r4, #0]
 800ce6e:	4620      	mov	r0, r4
 800ce70:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ce72:	4798      	blx	r3
 800ce74:	e7eb      	b.n	800ce4e <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800ce76:	bf00      	nop
 800ce78:	08020712 	.word	0x08020712
 800ce7c:	08020824 	.word	0x08020824
 800ce80:	08020737 	.word	0x08020737

0800ce84 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800ce84:	b570      	push	{r4, r5, r6, lr}
 800ce86:	4604      	mov	r4, r0
 800ce88:	460e      	mov	r6, r1
 800ce8a:	6860      	ldr	r0, [r4, #4]
 800ce8c:	6803      	ldr	r3, [r0, #0]
 800ce8e:	685b      	ldr	r3, [r3, #4]
 800ce90:	4798      	blx	r3
 800ce92:	2800      	cmp	r0, #0
 800ce94:	d1f9      	bne.n	800ce8a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800ce96:	4d0d      	ldr	r5, [pc, #52]	; (800cecc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800ce98:	6828      	ldr	r0, [r5, #0]
 800ce9a:	6803      	ldr	r3, [r0, #0]
 800ce9c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800ce9e:	4798      	blx	r3
 800cea0:	f7fd f9c2 	bl	800a228 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800cea4:	6828      	ldr	r0, [r5, #0]
 800cea6:	2101      	movs	r1, #1
 800cea8:	f7ff ff4a 	bl	800cd40 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800ceac:	6860      	ldr	r0, [r4, #4]
 800ceae:	6803      	ldr	r3, [r0, #0]
 800ceb0:	4631      	mov	r1, r6
 800ceb2:	689b      	ldr	r3, [r3, #8]
 800ceb4:	4798      	blx	r3
 800ceb6:	6823      	ldr	r3, [r4, #0]
 800ceb8:	4620      	mov	r0, r4
 800ceba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cebc:	4798      	blx	r3
 800cebe:	6828      	ldr	r0, [r5, #0]
 800cec0:	6803      	ldr	r3, [r0, #0]
 800cec2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cec6:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800cec8:	4718      	bx	r3
 800ceca:	bf00      	nop
 800cecc:	20026f00 	.word	0x20026f00

0800ced0 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800ced0:	b508      	push	{r3, lr}
 800ced2:	f7fd f987 	bl	800a1e4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800ced6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ceda:	f7fd b999 	b.w	800a210 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800cede <_ZN8touchgfx13DMA_Interface5startEv>:
 800cede:	b510      	push	{r4, lr}
 800cee0:	4604      	mov	r4, r0
 800cee2:	6840      	ldr	r0, [r0, #4]
 800cee4:	6803      	ldr	r3, [r0, #0]
 800cee6:	681b      	ldr	r3, [r3, #0]
 800cee8:	4798      	blx	r3
 800ceea:	b948      	cbnz	r0, 800cf00 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800ceec:	7a63      	ldrb	r3, [r4, #9]
 800ceee:	b13b      	cbz	r3, 800cf00 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800cef0:	7a23      	ldrb	r3, [r4, #8]
 800cef2:	b92b      	cbnz	r3, 800cf00 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800cef4:	6823      	ldr	r3, [r4, #0]
 800cef6:	4620      	mov	r0, r4
 800cef8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cefa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cefe:	4718      	bx	r3
 800cf00:	bd10      	pop	{r4, pc}
	...

0800cf04 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800cf04:	b510      	push	{r4, lr}
 800cf06:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800cf0a:	1ad2      	subs	r2, r2, r3
 800cf0c:	2a00      	cmp	r2, #0
 800cf0e:	bfdc      	itt	le
 800cf10:	6884      	ldrle	r4, [r0, #8]
 800cf12:	1912      	addle	r2, r2, r4
 800cf14:	2a01      	cmp	r2, #1
 800cf16:	dd17      	ble.n	800cf48 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x44>
 800cf18:	6842      	ldr	r2, [r0, #4]
 800cf1a:	2424      	movs	r4, #36	; 0x24
 800cf1c:	fb04 2303 	mla	r3, r4, r3, r2
 800cf20:	f101 0220 	add.w	r2, r1, #32
 800cf24:	f851 4b04 	ldr.w	r4, [r1], #4
 800cf28:	f843 4b04 	str.w	r4, [r3], #4
 800cf2c:	4291      	cmp	r1, r2
 800cf2e:	d1f9      	bne.n	800cf24 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800cf30:	780a      	ldrb	r2, [r1, #0]
 800cf32:	701a      	strb	r2, [r3, #0]
 800cf34:	68c3      	ldr	r3, [r0, #12]
 800cf36:	6882      	ldr	r2, [r0, #8]
 800cf38:	f3bf 8f5b 	dmb	ish
 800cf3c:	3301      	adds	r3, #1
 800cf3e:	429a      	cmp	r2, r3
 800cf40:	bfd8      	it	le
 800cf42:	1a9b      	suble	r3, r3, r2
 800cf44:	60c3      	str	r3, [r0, #12]
 800cf46:	bd10      	pop	{r4, pc}
 800cf48:	4b02      	ldr	r3, [pc, #8]	; (800cf54 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x50>)
 800cf4a:	4a03      	ldr	r2, [pc, #12]	; (800cf58 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800cf4c:	4803      	ldr	r0, [pc, #12]	; (800cf5c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800cf4e:	2136      	movs	r1, #54	; 0x36
 800cf50:	f010 fd6c 	bl	801da2c <__assert_func>
 800cf54:	0802075d 	.word	0x0802075d
 800cf58:	08020854 	.word	0x08020854
 800cf5c:	08020737 	.word	0x08020737

0800cf60 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800cf60:	b510      	push	{r4, lr}
 800cf62:	6803      	ldr	r3, [r0, #0]
 800cf64:	681b      	ldr	r3, [r3, #0]
 800cf66:	4604      	mov	r4, r0
 800cf68:	4798      	blx	r3
 800cf6a:	b128      	cbz	r0, 800cf78 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800cf6c:	4b07      	ldr	r3, [pc, #28]	; (800cf8c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800cf6e:	4a08      	ldr	r2, [pc, #32]	; (800cf90 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800cf70:	4808      	ldr	r0, [pc, #32]	; (800cf94 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800cf72:	213c      	movs	r1, #60	; 0x3c
 800cf74:	f010 fd5a 	bl	801da2c <__assert_func>
 800cf78:	6923      	ldr	r3, [r4, #16]
 800cf7a:	68a2      	ldr	r2, [r4, #8]
 800cf7c:	f3bf 8f5b 	dmb	ish
 800cf80:	3301      	adds	r3, #1
 800cf82:	429a      	cmp	r2, r3
 800cf84:	bfd8      	it	le
 800cf86:	1a9b      	suble	r3, r3, r2
 800cf88:	6123      	str	r3, [r4, #16]
 800cf8a:	bd10      	pop	{r4, pc}
 800cf8c:	08020780 	.word	0x08020780
 800cf90:	080208a2 	.word	0x080208a2
 800cf94:	08020737 	.word	0x08020737

0800cf98 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800cf98:	b570      	push	{r4, r5, r6, lr}
 800cf9a:	4604      	mov	r4, r0
 800cf9c:	6840      	ldr	r0, [r0, #4]
 800cf9e:	6803      	ldr	r3, [r0, #0]
 800cfa0:	681b      	ldr	r3, [r3, #0]
 800cfa2:	4798      	blx	r3
 800cfa4:	4605      	mov	r5, r0
 800cfa6:	b930      	cbnz	r0, 800cfb6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800cfa8:	7a23      	ldrb	r3, [r4, #8]
 800cfaa:	b123      	cbz	r3, 800cfb6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800cfac:	6860      	ldr	r0, [r4, #4]
 800cfae:	6803      	ldr	r3, [r0, #0]
 800cfb0:	695b      	ldr	r3, [r3, #20]
 800cfb2:	4798      	blx	r3
 800cfb4:	7225      	strb	r5, [r4, #8]
 800cfb6:	6860      	ldr	r0, [r4, #4]
 800cfb8:	6803      	ldr	r3, [r0, #0]
 800cfba:	681b      	ldr	r3, [r3, #0]
 800cfbc:	4798      	blx	r3
 800cfbe:	b928      	cbnz	r0, 800cfcc <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800cfc0:	6823      	ldr	r3, [r4, #0]
 800cfc2:	4620      	mov	r0, r4
 800cfc4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cfc6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cfca:	4718      	bx	r3
 800cfcc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cfd0:	f7fd b936 	b.w	800a240 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800cfd4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800cfd4:	b510      	push	{r4, lr}
 800cfd6:	4c04      	ldr	r4, [pc, #16]	; (800cfe8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800cfd8:	6082      	str	r2, [r0, #8]
 800cfda:	2200      	movs	r2, #0
 800cfdc:	e9c0 4100 	strd	r4, r1, [r0]
 800cfe0:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800cfe4:	bd10      	pop	{r4, pc}
 800cfe6:	bf00      	nop
 800cfe8:	08020808 	.word	0x08020808

0800cfec <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800cfec:	6840      	ldr	r0, [r0, #4]
 800cfee:	6803      	ldr	r3, [r0, #0]
 800cff0:	681b      	ldr	r3, [r3, #0]
 800cff2:	4718      	bx	r3

0800cff4 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800cff4:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800cff8:	4770      	bx	lr

0800cffa <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800cffa:	b510      	push	{r4, lr}
 800cffc:	4604      	mov	r4, r0
 800cffe:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800d000:	b150      	cbz	r0, 800d018 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800d002:	6803      	ldr	r3, [r0, #0]
 800d004:	68db      	ldr	r3, [r3, #12]
 800d006:	4798      	blx	r3
 800d008:	b130      	cbz	r0, 800d018 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800d00a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800d00c:	6803      	ldr	r3, [r0, #0]
 800d00e:	4621      	mov	r1, r4
 800d010:	689b      	ldr	r3, [r3, #8]
 800d012:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d016:	4718      	bx	r3
 800d018:	bd10      	pop	{r4, pc}

0800d01a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800d01a:	b570      	push	{r4, r5, r6, lr}
 800d01c:	790b      	ldrb	r3, [r1, #4]
 800d01e:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 800d022:	2b00      	cmp	r3, #0
 800d024:	bf0c      	ite	eq
 800d026:	2301      	moveq	r3, #1
 800d028:	2300      	movne	r3, #0
 800d02a:	4604      	mov	r4, r0
 800d02c:	460e      	mov	r6, r1
 800d02e:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800d032:	d109      	bne.n	800d048 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 800d034:	b14d      	cbz	r5, 800d04a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 800d036:	7933      	ldrb	r3, [r6, #4]
 800d038:	2b01      	cmp	r3, #1
 800d03a:	d10c      	bne.n	800d056 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800d03c:	6823      	ldr	r3, [r4, #0]
 800d03e:	4620      	mov	r0, r4
 800d040:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800d042:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d046:	4718      	bx	r3
 800d048:	b12d      	cbz	r5, 800d056 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800d04a:	6823      	ldr	r3, [r4, #0]
 800d04c:	4620      	mov	r0, r4
 800d04e:	695b      	ldr	r3, [r3, #20]
 800d050:	4798      	blx	r3
 800d052:	2d00      	cmp	r5, #0
 800d054:	d1ef      	bne.n	800d036 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800d056:	bd70      	pop	{r4, r5, r6, pc}

0800d058 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800d058:	2300      	movs	r3, #0
 800d05a:	8083      	strh	r3, [r0, #4]
 800d05c:	80c3      	strh	r3, [r0, #6]
 800d05e:	8003      	strh	r3, [r0, #0]
 800d060:	8043      	strh	r3, [r0, #2]
 800d062:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800d066:	2bff      	cmp	r3, #255	; 0xff
 800d068:	bf01      	itttt	eq
 800d06a:	890b      	ldrheq	r3, [r1, #8]
 800d06c:	8083      	strheq	r3, [r0, #4]
 800d06e:	894b      	ldrheq	r3, [r1, #10]
 800d070:	80c3      	strheq	r3, [r0, #6]
 800d072:	4770      	bx	lr

0800d074 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800d074:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d076:	4604      	mov	r4, r0
 800d078:	6808      	ldr	r0, [r1, #0]
 800d07a:	6849      	ldr	r1, [r1, #4]
 800d07c:	466b      	mov	r3, sp
 800d07e:	c303      	stmia	r3!, {r0, r1}
 800d080:	6823      	ldr	r3, [r4, #0]
 800d082:	4669      	mov	r1, sp
 800d084:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d086:	4620      	mov	r0, r4
 800d088:	4798      	blx	r3
 800d08a:	4b08      	ldr	r3, [pc, #32]	; (800d0ac <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800d08c:	681b      	ldr	r3, [r3, #0]
 800d08e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d092:	b10a      	cbz	r2, 800d098 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800d094:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800d096:	b900      	cbnz	r0, 800d09a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800d098:	6898      	ldr	r0, [r3, #8]
 800d09a:	6803      	ldr	r3, [r0, #0]
 800d09c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800d09e:	6a1d      	ldr	r5, [r3, #32]
 800d0a0:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800d0a4:	4669      	mov	r1, sp
 800d0a6:	47a8      	blx	r5
 800d0a8:	b003      	add	sp, #12
 800d0aa:	bd30      	pop	{r4, r5, pc}
 800d0ac:	20026f00 	.word	0x20026f00

0800d0b0 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800d0b0:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800d0b4:	b12a      	cbz	r2, 800d0c2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800d0b6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800d0ba:	b112      	cbz	r2, 800d0c2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800d0bc:	6803      	ldr	r3, [r0, #0]
 800d0be:	695b      	ldr	r3, [r3, #20]
 800d0c0:	4718      	bx	r3
 800d0c2:	4770      	bx	lr

0800d0c4 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800d0c4:	b570      	push	{r4, r5, r6, lr}
 800d0c6:	880b      	ldrh	r3, [r1, #0]
 800d0c8:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800d0ca:	4605      	mov	r5, r0
 800d0cc:	8813      	ldrh	r3, [r2, #0]
 800d0ce:	f825 3f30 	strh.w	r3, [r5, #48]!
 800d0d2:	4604      	mov	r4, r0
 800d0d4:	4628      	mov	r0, r5
 800d0d6:	f004 fb6f 	bl	80117b8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d0da:	4606      	mov	r6, r0
 800d0dc:	4628      	mov	r0, r5
 800d0de:	f004 fbaf 	bl	8011840 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d0e2:	6823      	ldr	r3, [r4, #0]
 800d0e4:	4605      	mov	r5, r0
 800d0e6:	b231      	sxth	r1, r6
 800d0e8:	4620      	mov	r0, r4
 800d0ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d0ec:	4798      	blx	r3
 800d0ee:	6823      	ldr	r3, [r4, #0]
 800d0f0:	b229      	sxth	r1, r5
 800d0f2:	4620      	mov	r0, r4
 800d0f4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d0f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d0fa:	4718      	bx	r3

0800d0fc <_ZNK8touchgfx6Button12getSolidRectEv>:
 800d0fc:	b510      	push	{r4, lr}
 800d0fe:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800d102:	2bff      	cmp	r3, #255	; 0xff
 800d104:	4604      	mov	r4, r0
 800d106:	d006      	beq.n	800d116 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800d108:	2300      	movs	r3, #0
 800d10a:	8003      	strh	r3, [r0, #0]
 800d10c:	8043      	strh	r3, [r0, #2]
 800d10e:	8083      	strh	r3, [r0, #4]
 800d110:	80c3      	strh	r3, [r0, #6]
 800d112:	4620      	mov	r0, r4
 800d114:	bd10      	pop	{r4, pc}
 800d116:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800d11a:	b11b      	cbz	r3, 800d124 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800d11c:	3130      	adds	r1, #48	; 0x30
 800d11e:	f004 fbd3 	bl	80118c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800d122:	e7f6      	b.n	800d112 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800d124:	312e      	adds	r1, #46	; 0x2e
 800d126:	e7fa      	b.n	800d11e <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800d128 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800d128:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d12c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d130:	b08a      	sub	sp, #40	; 0x28
 800d132:	4604      	mov	r4, r0
 800d134:	4688      	mov	r8, r1
 800d136:	2b00      	cmp	r3, #0
 800d138:	d044      	beq.n	800d1c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 800d13a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800d13c:	f8ad 3014 	strh.w	r3, [sp, #20]
 800d140:	a805      	add	r0, sp, #20
 800d142:	f004 fb39 	bl	80117b8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d146:	4605      	mov	r5, r0
 800d148:	b206      	sxth	r6, r0
 800d14a:	a805      	add	r0, sp, #20
 800d14c:	f004 fb78 	bl	8011840 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d150:	f9b8 2000 	ldrsh.w	r2, [r8]
 800d154:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 800d158:	4417      	add	r7, r2
 800d15a:	b2bf      	uxth	r7, r7
 800d15c:	2300      	movs	r3, #0
 800d15e:	fa0f fe87 	sxth.w	lr, r7
 800d162:	459e      	cmp	lr, r3
 800d164:	fa0f fc80 	sxth.w	ip, r0
 800d168:	9306      	str	r3, [sp, #24]
 800d16a:	dd2d      	ble.n	800d1c8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800d16c:	4296      	cmp	r6, r2
 800d16e:	dd2b      	ble.n	800d1c8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800d170:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 800d174:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 800d178:	4419      	add	r1, r3
 800d17a:	b289      	uxth	r1, r1
 800d17c:	fa0f f881 	sxth.w	r8, r1
 800d180:	f1b8 0f00 	cmp.w	r8, #0
 800d184:	dd20      	ble.n	800d1c8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800d186:	459c      	cmp	ip, r3
 800d188:	dd1e      	ble.n	800d1c8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800d18a:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800d18e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800d192:	4576      	cmp	r6, lr
 800d194:	bfa8      	it	ge
 800d196:	463d      	movge	r5, r7
 800d198:	45c4      	cmp	ip, r8
 800d19a:	bfa8      	it	ge
 800d19c:	4608      	movge	r0, r1
 800d19e:	1aad      	subs	r5, r5, r2
 800d1a0:	1ac0      	subs	r0, r0, r3
 800d1a2:	f8ad 501c 	strh.w	r5, [sp, #28]
 800d1a6:	f8ad 001e 	strh.w	r0, [sp, #30]
 800d1aa:	f8ad 2018 	strh.w	r2, [sp, #24]
 800d1ae:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d1b2:	4b1f      	ldr	r3, [pc, #124]	; (800d230 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800d1b4:	681b      	ldr	r3, [r3, #0]
 800d1b6:	b953      	cbnz	r3, 800d1ce <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 800d1b8:	4b1e      	ldr	r3, [pc, #120]	; (800d234 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800d1ba:	4a1f      	ldr	r2, [pc, #124]	; (800d238 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800d1bc:	481f      	ldr	r0, [pc, #124]	; (800d23c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 800d1be:	2187      	movs	r1, #135	; 0x87
 800d1c0:	f010 fc34 	bl	801da2c <__assert_func>
 800d1c4:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800d1c6:	e7b9      	b.n	800d13c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800d1c8:	2300      	movs	r3, #0
 800d1ca:	9307      	str	r3, [sp, #28]
 800d1cc:	e7f1      	b.n	800d1b2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 800d1ce:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d1d2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d1d6:	429a      	cmp	r2, r3
 800d1d8:	d026      	beq.n	800d228 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800d1da:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800d1de:	2b00      	cmp	r3, #0
 800d1e0:	dd22      	ble.n	800d228 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800d1e2:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800d1e6:	2b00      	cmp	r3, #0
 800d1e8:	dd1e      	ble.n	800d228 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800d1ea:	2300      	movs	r3, #0
 800d1ec:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800d1f0:	6823      	ldr	r3, [r4, #0]
 800d1f2:	a908      	add	r1, sp, #32
 800d1f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d1f6:	4620      	mov	r0, r4
 800d1f8:	4798      	blx	r3
 800d1fa:	4b11      	ldr	r3, [pc, #68]	; (800d240 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 800d1fc:	681b      	ldr	r3, [r3, #0]
 800d1fe:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d202:	b10a      	cbz	r2, 800d208 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800d204:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800d206:	b900      	cbnz	r0, 800d20a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 800d208:	6898      	ldr	r0, [r3, #8]
 800d20a:	6801      	ldr	r1, [r0, #0]
 800d20c:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d210:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800d214:	2501      	movs	r5, #1
 800d216:	9502      	str	r5, [sp, #8]
 800d218:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800d21c:	9401      	str	r4, [sp, #4]
 800d21e:	ac06      	add	r4, sp, #24
 800d220:	9400      	str	r4, [sp, #0]
 800d222:	688c      	ldr	r4, [r1, #8]
 800d224:	a905      	add	r1, sp, #20
 800d226:	47a0      	blx	r4
 800d228:	b00a      	add	sp, #40	; 0x28
 800d22a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d22e:	bf00      	nop
 800d230:	20026f88 	.word	0x20026f88
 800d234:	080209ac 	.word	0x080209ac
 800d238:	08020a84 	.word	0x08020a84
 800d23c:	080209e8 	.word	0x080209e8
 800d240:	20026f00 	.word	0x20026f00

0800d244 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800d244:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800d248:	b12a      	cbz	r2, 800d256 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800d24a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800d24e:	b112      	cbz	r2, 800d256 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800d250:	6803      	ldr	r3, [r0, #0]
 800d252:	695b      	ldr	r3, [r3, #20]
 800d254:	4718      	bx	r3
 800d256:	4770      	bx	lr

0800d258 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800d258:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d25c:	4604      	mov	r4, r0
 800d25e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800d260:	8962      	ldrh	r2, [r4, #10]
 800d262:	b218      	sxth	r0, r3
 800d264:	460e      	mov	r6, r1
 800d266:	005b      	lsls	r3, r3, #1
 800d268:	8921      	ldrh	r1, [r4, #8]
 800d26a:	b29b      	uxth	r3, r3
 800d26c:	1ac9      	subs	r1, r1, r3
 800d26e:	b08e      	sub	sp, #56	; 0x38
 800d270:	b209      	sxth	r1, r1
 800d272:	1ad3      	subs	r3, r2, r3
 800d274:	b21b      	sxth	r3, r3
 800d276:	2900      	cmp	r1, #0
 800d278:	f8ad 0000 	strh.w	r0, [sp]
 800d27c:	f8ad 0002 	strh.w	r0, [sp, #2]
 800d280:	f8ad 1004 	strh.w	r1, [sp, #4]
 800d284:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d288:	dd5e      	ble.n	800d348 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800d28a:	2b00      	cmp	r3, #0
 800d28c:	dd5c      	ble.n	800d348 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800d28e:	6830      	ldr	r0, [r6, #0]
 800d290:	6871      	ldr	r1, [r6, #4]
 800d292:	ab02      	add	r3, sp, #8
 800d294:	c303      	stmia	r3!, {r0, r1}
 800d296:	4669      	mov	r1, sp
 800d298:	a802      	add	r0, sp, #8
 800d29a:	f7fe fdad 	bl	800bdf8 <_ZN8touchgfx4RectaNERKS0_>
 800d29e:	4620      	mov	r0, r4
 800d2a0:	a902      	add	r1, sp, #8
 800d2a2:	f7ff fee7 	bl	800d074 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800d2a6:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800d2a8:	2800      	cmp	r0, #0
 800d2aa:	d05f      	beq.n	800d36c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800d2ac:	8963      	ldrh	r3, [r4, #10]
 800d2ae:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800d2b2:	f8ad 101c 	strh.w	r1, [sp, #28]
 800d2b6:	1a1f      	subs	r7, r3, r0
 800d2b8:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800d2bc:	b202      	sxth	r2, r0
 800d2be:	2500      	movs	r5, #0
 800d2c0:	b21b      	sxth	r3, r3
 800d2c2:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800d2c6:	1a09      	subs	r1, r1, r0
 800d2c8:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800d2cc:	9506      	str	r5, [sp, #24]
 800d2ce:	f8ad 201e 	strh.w	r2, [sp, #30]
 800d2d2:	f8ad 5020 	strh.w	r5, [sp, #32]
 800d2d6:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800d2da:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800d2de:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800d2e2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800d2e6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800d2ea:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800d2ee:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800d2f2:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800d2f6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800d2fa:	af04      	add	r7, sp, #16
 800d2fc:	ab06      	add	r3, sp, #24
 800d2fe:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d302:	e893 0003 	ldmia.w	r3, {r0, r1}
 800d306:	e887 0003 	stmia.w	r7, {r0, r1}
 800d30a:	4631      	mov	r1, r6
 800d30c:	4638      	mov	r0, r7
 800d30e:	f7fe fd73 	bl	800bdf8 <_ZN8touchgfx4RectaNERKS0_>
 800d312:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800d316:	2b00      	cmp	r3, #0
 800d318:	dd12      	ble.n	800d340 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800d31a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800d31e:	2b00      	cmp	r3, #0
 800d320:	dd0e      	ble.n	800d340 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800d322:	6823      	ldr	r3, [r4, #0]
 800d324:	4639      	mov	r1, r7
 800d326:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d328:	4620      	mov	r0, r4
 800d32a:	4798      	blx	r3
 800d32c:	f7fa fca0 	bl	8007c70 <_ZN8touchgfx3HAL3lcdEv>
 800d330:	6803      	ldr	r3, [r0, #0]
 800d332:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d334:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800d338:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800d33c:	4639      	mov	r1, r7
 800d33e:	47c0      	blx	r8
 800d340:	3501      	adds	r5, #1
 800d342:	2d04      	cmp	r5, #4
 800d344:	d1da      	bne.n	800d2fc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800d346:	e011      	b.n	800d36c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800d348:	6830      	ldr	r0, [r6, #0]
 800d34a:	6871      	ldr	r1, [r6, #4]
 800d34c:	ab06      	add	r3, sp, #24
 800d34e:	c303      	stmia	r3!, {r0, r1}
 800d350:	6823      	ldr	r3, [r4, #0]
 800d352:	a906      	add	r1, sp, #24
 800d354:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d356:	4620      	mov	r0, r4
 800d358:	4798      	blx	r3
 800d35a:	f7fa fc89 	bl	8007c70 <_ZN8touchgfx3HAL3lcdEv>
 800d35e:	6803      	ldr	r3, [r0, #0]
 800d360:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d362:	6a1d      	ldr	r5, [r3, #32]
 800d364:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800d368:	a906      	add	r1, sp, #24
 800d36a:	47a8      	blx	r5
 800d36c:	b00e      	add	sp, #56	; 0x38
 800d36e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800d374 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800d374:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d378:	4604      	mov	r4, r0
 800d37a:	4d57      	ldr	r5, [pc, #348]	; (800d4d8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 800d37c:	b08c      	sub	sp, #48	; 0x30
 800d37e:	4688      	mov	r8, r1
 800d380:	f7ff fed2 	bl	800d128 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800d384:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800d386:	882b      	ldrh	r3, [r5, #0]
 800d388:	4293      	cmp	r3, r2
 800d38a:	f240 80a1 	bls.w	800d4d0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15c>
 800d38e:	4e53      	ldr	r6, [pc, #332]	; (800d4dc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 800d390:	6833      	ldr	r3, [r6, #0]
 800d392:	b92b      	cbnz	r3, 800d3a0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x2c>
 800d394:	4b52      	ldr	r3, [pc, #328]	; (800d4e0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 800d396:	4a53      	ldr	r2, [pc, #332]	; (800d4e4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 800d398:	21ae      	movs	r1, #174	; 0xae
 800d39a:	4853      	ldr	r0, [pc, #332]	; (800d4e8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800d39c:	f010 fb46 	bl	801da2c <__assert_func>
 800d3a0:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800d3a4:	4b51      	ldr	r3, [pc, #324]	; (800d4ec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x178>)
 800d3a6:	f894 e044 	ldrb.w	lr, [r4, #68]	; 0x44
 800d3aa:	681b      	ldr	r3, [r3, #0]
 800d3ac:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800d3b0:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800d3b4:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800d3b8:	2300      	movs	r3, #0
 800d3ba:	f1be 0f01 	cmp.w	lr, #1
 800d3be:	9303      	str	r3, [sp, #12]
 800d3c0:	b208      	sxth	r0, r1
 800d3c2:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800d3c6:	f04f 0c02 	mov.w	ip, #2
 800d3ca:	d044      	beq.n	800d456 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xe2>
 800d3cc:	f1be 0f03 	cmp.w	lr, #3
 800d3d0:	d041      	beq.n	800d456 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xe2>
 800d3d2:	1a52      	subs	r2, r2, r1
 800d3d4:	f8ad 3010 	strh.w	r3, [sp, #16]
 800d3d8:	fb92 f2fc 	sdiv	r2, r2, ip
 800d3dc:	f8ad 0012 	strh.w	r0, [sp, #18]
 800d3e0:	f8ad 200e 	strh.w	r2, [sp, #14]
 800d3e4:	f10d 090c 	add.w	r9, sp, #12
 800d3e8:	e899 0003 	ldmia.w	r9, {r0, r1}
 800d3ec:	f10d 0a14 	add.w	sl, sp, #20
 800d3f0:	e88a 0003 	stmia.w	sl, {r0, r1}
 800d3f4:	4641      	mov	r1, r8
 800d3f6:	4650      	mov	r0, sl
 800d3f8:	f7fe fcfe 	bl	800bdf8 <_ZN8touchgfx4RectaNERKS0_>
 800d3fc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800d400:	2b00      	cmp	r3, #0
 800d402:	dd65      	ble.n	800d4d0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15c>
 800d404:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800d408:	2b00      	cmp	r3, #0
 800d40a:	dd61      	ble.n	800d4d0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15c>
 800d40c:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800d410:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800d414:	1a9b      	subs	r3, r3, r2
 800d416:	f8ad 3014 	strh.w	r3, [sp, #20]
 800d41a:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800d41e:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800d422:	1a9b      	subs	r3, r3, r2
 800d424:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d428:	6823      	ldr	r3, [r4, #0]
 800d42a:	4649      	mov	r1, r9
 800d42c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d42e:	4620      	mov	r0, r4
 800d430:	4798      	blx	r3
 800d432:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800d436:	b1c3      	cbz	r3, 800d46a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xf6>
 800d438:	f104 0240 	add.w	r2, r4, #64	; 0x40
 800d43c:	6833      	ldr	r3, [r6, #0]
 800d43e:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800d442:	2b00      	cmp	r3, #0
 800d444:	d0a6      	beq.n	800d394 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x20>
 800d446:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800d448:	882d      	ldrh	r5, [r5, #0]
 800d44a:	428d      	cmp	r5, r1
 800d44c:	d810      	bhi.n	800d470 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xfc>
 800d44e:	4b28      	ldr	r3, [pc, #160]	; (800d4f0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x17c>)
 800d450:	4a24      	ldr	r2, [pc, #144]	; (800d4e4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 800d452:	21af      	movs	r1, #175	; 0xaf
 800d454:	e7a1      	b.n	800d39a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x26>
 800d456:	1a5b      	subs	r3, r3, r1
 800d458:	f8ad 0010 	strh.w	r0, [sp, #16]
 800d45c:	fb93 f3fc 	sdiv	r3, r3, ip
 800d460:	f8ad 2012 	strh.w	r2, [sp, #18]
 800d464:	f8ad 300c 	strh.w	r3, [sp, #12]
 800d468:	e7bc      	b.n	800d3e4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x70>
 800d46a:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800d46e:	e7e5      	b.n	800d43c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xc8>
 800d470:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800d474:	6812      	ldr	r2, [r2, #0]
 800d476:	785b      	ldrb	r3, [r3, #1]
 800d478:	9209      	str	r2, [sp, #36]	; 0x24
 800d47a:	f3c3 0501 	ubfx	r5, r3, #0, #2
 800d47e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d482:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800d486:	2300      	movs	r3, #0
 800d488:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800d48c:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800d490:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800d494:	4b17      	ldr	r3, [pc, #92]	; (800d4f4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x180>)
 800d496:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800d49a:	681b      	ldr	r3, [r3, #0]
 800d49c:	9707      	str	r7, [sp, #28]
 800d49e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d4a2:	f88d 5020 	strb.w	r5, [sp, #32]
 800d4a6:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800d4aa:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800d4ae:	b10a      	cbz	r2, 800d4b4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x140>
 800d4b0:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800d4b2:	b904      	cbnz	r4, 800d4b6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x142>
 800d4b4:	689c      	ldr	r4, [r3, #8]
 800d4b6:	4b10      	ldr	r3, [pc, #64]	; (800d4f8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x184>)
 800d4b8:	6818      	ldr	r0, [r3, #0]
 800d4ba:	f7fc f8b9 	bl	8009630 <_ZNK8touchgfx5Texts7getTextEt>
 800d4be:	ab07      	add	r3, sp, #28
 800d4c0:	9001      	str	r0, [sp, #4]
 800d4c2:	9300      	str	r3, [sp, #0]
 800d4c4:	e899 0006 	ldmia.w	r9, {r1, r2}
 800d4c8:	4653      	mov	r3, sl
 800d4ca:	4620      	mov	r0, r4
 800d4cc:	f7fc f841 	bl	8009552 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d4d0:	b00c      	add	sp, #48	; 0x30
 800d4d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d4d6:	bf00      	nop
 800d4d8:	20026f54 	.word	0x20026f54
 800d4dc:	20026f50 	.word	0x20026f50
 800d4e0:	08020b20 	.word	0x08020b20
 800d4e4:	08020c40 	.word	0x08020c40
 800d4e8:	08020b62 	.word	0x08020b62
 800d4ec:	20026f58 	.word	0x20026f58
 800d4f0:	08020b8b 	.word	0x08020b8b
 800d4f4:	20026f00 	.word	0x20026f00
 800d4f8:	20026f5c 	.word	0x20026f5c

0800d4fc <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800d4fc:	b510      	push	{r4, lr}
 800d4fe:	2101      	movs	r1, #1
 800d500:	4c13      	ldr	r4, [pc, #76]	; (800d550 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800d502:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800d506:	2200      	movs	r2, #0
 800d508:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800d50c:	6004      	str	r4, [r0, #0]
 800d50e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800d512:	4c10      	ldr	r4, [pc, #64]	; (800d554 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800d514:	8082      	strh	r2, [r0, #4]
 800d516:	80c2      	strh	r2, [r0, #6]
 800d518:	8102      	strh	r2, [r0, #8]
 800d51a:	8142      	strh	r2, [r0, #10]
 800d51c:	8182      	strh	r2, [r0, #12]
 800d51e:	81c2      	strh	r2, [r0, #14]
 800d520:	8202      	strh	r2, [r0, #16]
 800d522:	8242      	strh	r2, [r0, #18]
 800d524:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800d528:	61c2      	str	r2, [r0, #28]
 800d52a:	8402      	strh	r2, [r0, #32]
 800d52c:	8442      	strh	r2, [r0, #34]	; 0x22
 800d52e:	6282      	str	r2, [r0, #40]	; 0x28
 800d530:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800d534:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800d536:	8601      	strh	r1, [r0, #48]	; 0x30
 800d538:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800d53c:	6344      	str	r4, [r0, #52]	; 0x34
 800d53e:	8701      	strh	r1, [r0, #56]	; 0x38
 800d540:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800d544:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800d548:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800d54c:	bd10      	pop	{r4, pc}
 800d54e:	bf00      	nop
 800d550:	08020bd4 	.word	0x08020bd4
 800d554:	0801f598 	.word	0x0801f598

0800d558 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800d558:	b510      	push	{r4, lr}
 800d55a:	6803      	ldr	r3, [r0, #0]
 800d55c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d55e:	460c      	mov	r4, r1
 800d560:	4798      	blx	r3
 800d562:	1b03      	subs	r3, r0, r4
 800d564:	4258      	negs	r0, r3
 800d566:	4158      	adcs	r0, r3
 800d568:	bd10      	pop	{r4, pc}
	...

0800d56c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800d56c:	4b01      	ldr	r3, [pc, #4]	; (800d574 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800d56e:	6019      	str	r1, [r3, #0]
 800d570:	4770      	bx	lr
 800d572:	bf00      	nop
 800d574:	20026f08 	.word	0x20026f08

0800d578 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800d578:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d57c:	4696      	mov	lr, r2
 800d57e:	4605      	mov	r5, r0
 800d580:	4614      	mov	r4, r2
 800d582:	460e      	mov	r6, r1
 800d584:	461f      	mov	r7, r3
 800d586:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800d58a:	b097      	sub	sp, #92	; 0x5c
 800d58c:	f10d 0c1c 	add.w	ip, sp, #28
 800d590:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d594:	f8de 3000 	ldr.w	r3, [lr]
 800d598:	f8cc 3000 	str.w	r3, [ip]
 800d59c:	f104 0e14 	add.w	lr, r4, #20
 800d5a0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800d5a4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800d5a8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d5ac:	f8de 3000 	ldr.w	r3, [lr]
 800d5b0:	f8cc 3000 	str.w	r3, [ip]
 800d5b4:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800d5b8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800d5bc:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800d5c0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d5c4:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800d5c8:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800d5cc:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800d5d0:	f8de 3000 	ldr.w	r3, [lr]
 800d5d4:	f8cc 3000 	str.w	r3, [ip]
 800d5d8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800d5da:	682b      	ldr	r3, [r5, #0]
 800d5dc:	9201      	str	r2, [sp, #4]
 800d5de:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800d5e2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800d5e4:	9200      	str	r2, [sp, #0]
 800d5e6:	f8cd 8008 	str.w	r8, [sp, #8]
 800d5ea:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800d5ee:	aa07      	add	r2, sp, #28
 800d5f0:	463b      	mov	r3, r7
 800d5f2:	4631      	mov	r1, r6
 800d5f4:	4628      	mov	r0, r5
 800d5f6:	47d8      	blx	fp
 800d5f8:	46a6      	mov	lr, r4
 800d5fa:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800d5fe:	f10d 0c1c 	add.w	ip, sp, #28
 800d602:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d606:	f8de 3000 	ldr.w	r3, [lr]
 800d60a:	f8cc 3000 	str.w	r3, [ip]
 800d60e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800d612:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800d616:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800d61a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d61e:	343c      	adds	r4, #60	; 0x3c
 800d620:	f8de 3000 	ldr.w	r3, [lr]
 800d624:	f8cc 3000 	str.w	r3, [ip]
 800d628:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d62a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800d62e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d632:	6823      	ldr	r3, [r4, #0]
 800d634:	f8cc 3000 	str.w	r3, [ip]
 800d638:	682b      	ldr	r3, [r5, #0]
 800d63a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800d63e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800d640:	9201      	str	r2, [sp, #4]
 800d642:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800d644:	9200      	str	r2, [sp, #0]
 800d646:	f8cd 8008 	str.w	r8, [sp, #8]
 800d64a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800d64c:	aa07      	add	r2, sp, #28
 800d64e:	463b      	mov	r3, r7
 800d650:	4631      	mov	r1, r6
 800d652:	4628      	mov	r0, r5
 800d654:	47a0      	blx	r4
 800d656:	b017      	add	sp, #92	; 0x5c
 800d658:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d65c <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800d65c:	2000      	movs	r0, #0
 800d65e:	4770      	bx	lr

0800d660 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800d660:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d664:	b08d      	sub	sp, #52	; 0x34
 800d666:	4688      	mov	r8, r1
 800d668:	9916      	ldr	r1, [sp, #88]	; 0x58
 800d66a:	f8d3 c000 	ldr.w	ip, [r3]
 800d66e:	680f      	ldr	r7, [r1, #0]
 800d670:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800d674:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800d678:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800d67c:	edd3 6a07 	vldr	s13, [r3, #28]
 800d680:	9918      	ldr	r1, [sp, #96]	; 0x60
 800d682:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800d686:	f9b1 9000 	ldrsh.w	r9, [r1]
 800d68a:	f9ba 1000 	ldrsh.w	r1, [sl]
 800d68e:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800d692:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800d696:	eba7 070c 	sub.w	r7, r7, ip
 800d69a:	42bc      	cmp	r4, r7
 800d69c:	bfa8      	it	ge
 800d69e:	463c      	movge	r4, r7
 800d6a0:	ee07 4a90 	vmov	s15, r4
 800d6a4:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800d6a8:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800d6ac:	ee25 4a04 	vmul.f32	s8, s10, s8
 800d6b0:	ee65 4a24 	vmul.f32	s9, s10, s9
 800d6b4:	ee25 5a27 	vmul.f32	s10, s10, s15
 800d6b8:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800d6bc:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800d6c0:	eb09 0e0c 	add.w	lr, r9, ip
 800d6c4:	4571      	cmp	r1, lr
 800d6c6:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800d6ca:	ee32 1a05 	vadd.f32	s2, s4, s10
 800d6ce:	ee36 0a84 	vadd.f32	s0, s13, s8
 800d6d2:	ee61 1a87 	vmul.f32	s3, s3, s14
 800d6d6:	ee22 2a07 	vmul.f32	s4, s4, s14
 800d6da:	f340 808d 	ble.w	800d7f8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800d6de:	eba1 060e 	sub.w	r6, r1, lr
 800d6e2:	fb96 f5f4 	sdiv	r5, r6, r4
 800d6e6:	ee07 5a10 	vmov	s14, r5
 800d6ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d6ee:	2d00      	cmp	r5, #0
 800d6f0:	fb04 6615 	mls	r6, r4, r5, r6
 800d6f4:	eea7 0a04 	vfma.f32	s0, s14, s8
 800d6f8:	eee7 0a24 	vfma.f32	s1, s14, s9
 800d6fc:	eea7 1a05 	vfma.f32	s2, s14, s10
 800d700:	dd13      	ble.n	800d72a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800d702:	ee70 6a44 	vsub.f32	s13, s0, s8
 800d706:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800d70a:	eef5 6a40 	vcmp.f32	s13, #0.0
 800d70e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d712:	bf18      	it	ne
 800d714:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800d718:	ee31 2a45 	vsub.f32	s4, s2, s10
 800d71c:	bf08      	it	eq
 800d71e:	eeb0 7a67 	vmoveq.f32	s14, s15
 800d722:	ee61 1a87 	vmul.f32	s3, s3, s14
 800d726:	ee22 2a07 	vmul.f32	s4, s4, s14
 800d72a:	fb05 f204 	mul.w	r2, r5, r4
 800d72e:	1abf      	subs	r7, r7, r2
 800d730:	4494      	add	ip, r2
 800d732:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800d736:	4411      	add	r1, r2
 800d738:	eb09 020c 	add.w	r2, r9, ip
 800d73c:	443a      	add	r2, r7
 800d73e:	b209      	sxth	r1, r1
 800d740:	428a      	cmp	r2, r1
 800d742:	bfc4      	itt	gt
 800d744:	eba1 0209 	subgt.w	r2, r1, r9
 800d748:	eba2 070c 	subgt.w	r7, r2, ip
 800d74c:	2f00      	cmp	r7, #0
 800d74e:	dd50      	ble.n	800d7f2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800d750:	fb97 f1f4 	sdiv	r1, r7, r4
 800d754:	fb04 7211 	mls	r2, r4, r1, r7
 800d758:	b90a      	cbnz	r2, 800d75e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800d75a:	3901      	subs	r1, #1
 800d75c:	4622      	mov	r2, r4
 800d75e:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800d762:	6840      	ldr	r0, [r0, #4]
 800d764:	900b      	str	r0, [sp, #44]	; 0x2c
 800d766:	f8d0 a000 	ldr.w	sl, [r0]
 800d76a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800d76c:	9008      	str	r0, [sp, #32]
 800d76e:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800d772:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d774:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800d778:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800d77c:	695b      	ldr	r3, [r3, #20]
 800d77e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800d780:	445b      	add	r3, fp
 800d782:	eef0 6a42 	vmov.f32	s13, s4
 800d786:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800d78a:	ee21 3a23 	vmul.f32	s6, s2, s7
 800d78e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800d792:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800d796:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800d79a:	9307      	str	r3, [sp, #28]
 800d79c:	ee17 7a90 	vmov	r7, s15
 800d7a0:	ee73 7a42 	vsub.f32	s15, s6, s4
 800d7a4:	eeb0 7a61 	vmov.f32	s14, s3
 800d7a8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800d7ac:	ee16 3a90 	vmov	r3, s13
 800d7b0:	fb97 f7f4 	sdiv	r7, r7, r4
 800d7b4:	ee17 ca90 	vmov	ip, s15
 800d7b8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800d7bc:	fb9c fcf4 	sdiv	ip, ip, r4
 800d7c0:	fb0c 3306 	mla	r3, ip, r6, r3
 800d7c4:	9302      	str	r3, [sp, #8]
 800d7c6:	ee17 3a10 	vmov	r3, s14
 800d7ca:	44b6      	add	lr, r6
 800d7cc:	fb04 e505 	mla	r5, r4, r5, lr
 800d7d0:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800d7d4:	fb07 3706 	mla	r7, r7, r6, r3
 800d7d8:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800d7dc:	e9cd 4700 	strd	r4, r7, [sp]
 800d7e0:	2900      	cmp	r1, #0
 800d7e2:	bfcc      	ite	gt
 800d7e4:	46a1      	movgt	r9, r4
 800d7e6:	4691      	movle	r9, r2
 800d7e8:	eba9 0306 	sub.w	r3, r9, r6
 800d7ec:	f8da 4008 	ldr.w	r4, [sl, #8]
 800d7f0:	47a0      	blx	r4
 800d7f2:	b00d      	add	sp, #52	; 0x34
 800d7f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d7f8:	2500      	movs	r5, #0
 800d7fa:	462e      	mov	r6, r5
 800d7fc:	e799      	b.n	800d732 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800d800 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800d800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d804:	b0db      	sub	sp, #364	; 0x16c
 800d806:	461d      	mov	r5, r3
 800d808:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800d80c:	930a      	str	r3, [sp, #40]	; 0x28
 800d80e:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800d812:	930b      	str	r3, [sp, #44]	; 0x2c
 800d814:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800d818:	9310      	str	r3, [sp, #64]	; 0x40
 800d81a:	6803      	ldr	r3, [r0, #0]
 800d81c:	910f      	str	r1, [sp, #60]	; 0x3c
 800d81e:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800d820:	9009      	str	r0, [sp, #36]	; 0x24
 800d822:	4614      	mov	r4, r2
 800d824:	4629      	mov	r1, r5
 800d826:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800d82a:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800d82e:	47b8      	blx	r7
 800d830:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d832:	6058      	str	r0, [r3, #4]
 800d834:	2800      	cmp	r0, #0
 800d836:	f000 83a1 	beq.w	800df7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d83a:	682b      	ldr	r3, [r5, #0]
 800d83c:	9314      	str	r3, [sp, #80]	; 0x50
 800d83e:	686b      	ldr	r3, [r5, #4]
 800d840:	9315      	str	r3, [sp, #84]	; 0x54
 800d842:	4bc4      	ldr	r3, [pc, #784]	; (800db54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800d844:	ed94 7a02 	vldr	s14, [r4, #8]
 800d848:	7819      	ldrb	r1, [r3, #0]
 800d84a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800d84e:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800d852:	2900      	cmp	r1, #0
 800d854:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800d858:	bf16      	itet	ne
 800d85a:	4619      	movne	r1, r3
 800d85c:	4611      	moveq	r1, r2
 800d85e:	4613      	movne	r3, r2
 800d860:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d864:	9116      	str	r1, [sp, #88]	; 0x58
 800d866:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800d86a:	f240 8387 	bls.w	800df7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d86e:	ed94 7a07 	vldr	s14, [r4, #28]
 800d872:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800d876:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d87a:	f240 837f 	bls.w	800df7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d87e:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800d882:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800d886:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d88a:	f240 8377 	bls.w	800df7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d88e:	6822      	ldr	r2, [r4, #0]
 800d890:	4bb1      	ldr	r3, [pc, #708]	; (800db58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800d892:	429a      	cmp	r2, r3
 800d894:	f2c0 8372 	blt.w	800df7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d898:	49b0      	ldr	r1, [pc, #704]	; (800db5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800d89a:	6963      	ldr	r3, [r4, #20]
 800d89c:	428a      	cmp	r2, r1
 800d89e:	f300 836d 	bgt.w	800df7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d8a2:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800d8a6:	48ae      	ldr	r0, [pc, #696]	; (800db60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800d8a8:	33ff      	adds	r3, #255	; 0xff
 800d8aa:	4283      	cmp	r3, r0
 800d8ac:	f200 8366 	bhi.w	800df7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d8b0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800d8b2:	4dac      	ldr	r5, [pc, #688]	; (800db64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800d8b4:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800d8b8:	33ff      	adds	r3, #255	; 0xff
 800d8ba:	42ab      	cmp	r3, r5
 800d8bc:	f200 835e 	bhi.w	800df7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d8c0:	6862      	ldr	r2, [r4, #4]
 800d8c2:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800d8c6:	33ff      	adds	r3, #255	; 0xff
 800d8c8:	4283      	cmp	r3, r0
 800d8ca:	f200 8357 	bhi.w	800df7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d8ce:	69a1      	ldr	r1, [r4, #24]
 800d8d0:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800d8d4:	33ff      	adds	r3, #255	; 0xff
 800d8d6:	4283      	cmp	r3, r0
 800d8d8:	f200 8350 	bhi.w	800df7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d8dc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800d8de:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800d8e2:	30ff      	adds	r0, #255	; 0xff
 800d8e4:	42a8      	cmp	r0, r5
 800d8e6:	f200 8349 	bhi.w	800df7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d8ea:	428a      	cmp	r2, r1
 800d8ec:	f280 8110 	bge.w	800db10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800d8f0:	429a      	cmp	r2, r3
 800d8f2:	f300 8119 	bgt.w	800db28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800d8f6:	4299      	cmp	r1, r3
 800d8f8:	f280 811d 	bge.w	800db36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800d8fc:	2502      	movs	r5, #2
 800d8fe:	2701      	movs	r7, #1
 800d900:	46a9      	mov	r9, r5
 800d902:	46b8      	mov	r8, r7
 800d904:	f04f 0a00 	mov.w	sl, #0
 800d908:	4621      	mov	r1, r4
 800d90a:	a849      	add	r0, sp, #292	; 0x124
 800d90c:	f003 fc66 	bl	80111dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800d910:	4622      	mov	r2, r4
 800d912:	4653      	mov	r3, sl
 800d914:	a949      	add	r1, sp, #292	; 0x124
 800d916:	f8cd 9000 	str.w	r9, [sp]
 800d91a:	a819      	add	r0, sp, #100	; 0x64
 800d91c:	f003 fd8e 	bl	801143c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800d920:	4622      	mov	r2, r4
 800d922:	4653      	mov	r3, sl
 800d924:	a949      	add	r1, sp, #292	; 0x124
 800d926:	f8cd 8000 	str.w	r8, [sp]
 800d92a:	a829      	add	r0, sp, #164	; 0xa4
 800d92c:	f003 fd86 	bl	801143c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800d930:	4643      	mov	r3, r8
 800d932:	4622      	mov	r2, r4
 800d934:	a949      	add	r1, sp, #292	; 0x124
 800d936:	f8cd 9000 	str.w	r9, [sp]
 800d93a:	a839      	add	r0, sp, #228	; 0xe4
 800d93c:	f003 fd7e 	bl	801143c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800d940:	42af      	cmp	r7, r5
 800d942:	bfb5      	itete	lt
 800d944:	2300      	movlt	r3, #0
 800d946:	2301      	movge	r3, #1
 800d948:	930e      	strlt	r3, [sp, #56]	; 0x38
 800d94a:	930e      	strge	r3, [sp, #56]	; 0x38
 800d94c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800d94e:	e893 0003 	ldmia.w	r3, {r0, r1}
 800d952:	af12      	add	r7, sp, #72	; 0x48
 800d954:	bfb9      	ittee	lt
 800d956:	ad29      	addlt	r5, sp, #164	; 0xa4
 800d958:	ac19      	addlt	r4, sp, #100	; 0x64
 800d95a:	ad19      	addge	r5, sp, #100	; 0x64
 800d95c:	ac29      	addge	r4, sp, #164	; 0xa4
 800d95e:	e887 0003 	stmia.w	r7, {r0, r1}
 800d962:	b928      	cbnz	r0, 800d970 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800d964:	4b80      	ldr	r3, [pc, #512]	; (800db68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800d966:	6818      	ldr	r0, [r3, #0]
 800d968:	6803      	ldr	r3, [r0, #0]
 800d96a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d96c:	4798      	blx	r3
 800d96e:	6038      	str	r0, [r7, #0]
 800d970:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800d972:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800d976:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800d97a:	930c      	str	r3, [sp, #48]	; 0x30
 800d97c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800d97e:	6963      	ldr	r3, [r4, #20]
 800d980:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800d982:	440b      	add	r3, r1
 800d984:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800d988:	4408      	add	r0, r1
 800d98a:	b200      	sxth	r0, r0
 800d98c:	4283      	cmp	r3, r0
 800d98e:	900d      	str	r0, [sp, #52]	; 0x34
 800d990:	f280 80dd 	bge.w	800db4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800d994:	428b      	cmp	r3, r1
 800d996:	da08      	bge.n	800d9aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800d998:	2a00      	cmp	r2, #0
 800d99a:	dd06      	ble.n	800d9aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800d99c:	1acb      	subs	r3, r1, r3
 800d99e:	429a      	cmp	r2, r3
 800d9a0:	f2c0 80e4 	blt.w	800db6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800d9a4:	2b00      	cmp	r3, #0
 800d9a6:	f300 80e2 	bgt.w	800db6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800d9aa:	6967      	ldr	r7, [r4, #20]
 800d9ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d9ae:	443b      	add	r3, r7
 800d9b0:	461f      	mov	r7, r3
 800d9b2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d9b4:	1bdf      	subs	r7, r3, r7
 800d9b6:	4297      	cmp	r7, r2
 800d9b8:	bfa8      	it	ge
 800d9ba:	4617      	movge	r7, r2
 800d9bc:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800d9c0:	2f00      	cmp	r7, #0
 800d9c2:	f340 8166 	ble.w	800dc92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800d9c6:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800d9c8:	6829      	ldr	r1, [r5, #0]
 800d9ca:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d9ce:	f9bb 3000 	ldrsh.w	r3, [fp]
 800d9d2:	6820      	ldr	r0, [r4, #0]
 800d9d4:	4411      	add	r1, r2
 800d9d6:	4299      	cmp	r1, r3
 800d9d8:	dd1a      	ble.n	800da10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800d9da:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800d9de:	440b      	add	r3, r1
 800d9e0:	4402      	add	r2, r0
 800d9e2:	b21b      	sxth	r3, r3
 800d9e4:	429a      	cmp	r2, r3
 800d9e6:	dc13      	bgt.n	800da10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800d9e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d9ea:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800d9ec:	681b      	ldr	r3, [r3, #0]
 800d9ee:	9206      	str	r2, [sp, #24]
 800d9f0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d9f2:	9205      	str	r2, [sp, #20]
 800d9f4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d9f6:	9500      	str	r5, [sp, #0]
 800d9f8:	e9cd b203 	strd	fp, r2, [sp, #12]
 800d9fc:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800d9fe:	9809      	ldr	r0, [sp, #36]	; 0x24
 800da00:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800da04:	a912      	add	r1, sp, #72	; 0x48
 800da06:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800da0a:	aa49      	add	r2, sp, #292	; 0x124
 800da0c:	4623      	mov	r3, r4
 800da0e:	47c8      	blx	r9
 800da10:	e9d4 2300 	ldrd	r2, r3, [r4]
 800da14:	441a      	add	r2, r3
 800da16:	6963      	ldr	r3, [r4, #20]
 800da18:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800da1c:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800da20:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800da24:	68a1      	ldr	r1, [r4, #8]
 800da26:	ed94 6a08 	vldr	s12, [r4, #32]
 800da2a:	6022      	str	r2, [r4, #0]
 800da2c:	3301      	adds	r3, #1
 800da2e:	6163      	str	r3, [r4, #20]
 800da30:	69a3      	ldr	r3, [r4, #24]
 800da32:	ee37 7a27 	vadd.f32	s14, s14, s15
 800da36:	3b01      	subs	r3, #1
 800da38:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800da3c:	61a3      	str	r3, [r4, #24]
 800da3e:	6923      	ldr	r3, [r4, #16]
 800da40:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800da44:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800da48:	edd4 6a07 	vldr	s13, [r4, #28]
 800da4c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800da50:	440b      	add	r3, r1
 800da52:	68e1      	ldr	r1, [r4, #12]
 800da54:	6123      	str	r3, [r4, #16]
 800da56:	ee76 6a86 	vadd.f32	s13, s13, s12
 800da5a:	428b      	cmp	r3, r1
 800da5c:	edc4 6a07 	vstr	s13, [r4, #28]
 800da60:	db15      	blt.n	800da8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800da62:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800da66:	ee76 6a26 	vadd.f32	s13, s12, s13
 800da6a:	3201      	adds	r2, #1
 800da6c:	edc4 6a07 	vstr	s13, [r4, #28]
 800da70:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800da74:	6022      	str	r2, [r4, #0]
 800da76:	ee36 7a87 	vadd.f32	s14, s13, s14
 800da7a:	1a5b      	subs	r3, r3, r1
 800da7c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800da80:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800da84:	6123      	str	r3, [r4, #16]
 800da86:	ee77 7a27 	vadd.f32	s15, s14, s15
 800da8a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800da8e:	e9d5 2300 	ldrd	r2, r3, [r5]
 800da92:	441a      	add	r2, r3
 800da94:	696b      	ldr	r3, [r5, #20]
 800da96:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800da9a:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800da9e:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800daa2:	68a9      	ldr	r1, [r5, #8]
 800daa4:	ed95 6a08 	vldr	s12, [r5, #32]
 800daa8:	602a      	str	r2, [r5, #0]
 800daaa:	3301      	adds	r3, #1
 800daac:	616b      	str	r3, [r5, #20]
 800daae:	69ab      	ldr	r3, [r5, #24]
 800dab0:	ee37 7a27 	vadd.f32	s14, s14, s15
 800dab4:	3b01      	subs	r3, #1
 800dab6:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800daba:	61ab      	str	r3, [r5, #24]
 800dabc:	692b      	ldr	r3, [r5, #16]
 800dabe:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800dac2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dac6:	edd5 6a07 	vldr	s13, [r5, #28]
 800daca:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800dace:	440b      	add	r3, r1
 800dad0:	68e9      	ldr	r1, [r5, #12]
 800dad2:	612b      	str	r3, [r5, #16]
 800dad4:	ee76 6a86 	vadd.f32	s13, s13, s12
 800dad8:	428b      	cmp	r3, r1
 800dada:	edc5 6a07 	vstr	s13, [r5, #28]
 800dade:	db15      	blt.n	800db0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800dae0:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800dae4:	ee76 6a26 	vadd.f32	s13, s12, s13
 800dae8:	3201      	adds	r2, #1
 800daea:	edc5 6a07 	vstr	s13, [r5, #28]
 800daee:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800daf2:	602a      	str	r2, [r5, #0]
 800daf4:	ee36 7a87 	vadd.f32	s14, s13, s14
 800daf8:	1a5b      	subs	r3, r3, r1
 800dafa:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800dafe:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800db02:	612b      	str	r3, [r5, #16]
 800db04:	ee77 7a27 	vadd.f32	s15, s14, s15
 800db08:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800db0c:	3f01      	subs	r7, #1
 800db0e:	e757      	b.n	800d9c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800db10:	4299      	cmp	r1, r3
 800db12:	dc13      	bgt.n	800db3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800db14:	429a      	cmp	r2, r3
 800db16:	da14      	bge.n	800db42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800db18:	2502      	movs	r5, #2
 800db1a:	2703      	movs	r7, #3
 800db1c:	46a9      	mov	r9, r5
 800db1e:	f04f 0800 	mov.w	r8, #0
 800db22:	f04f 0a01 	mov.w	sl, #1
 800db26:	e6ef      	b.n	800d908 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800db28:	2501      	movs	r5, #1
 800db2a:	2700      	movs	r7, #0
 800db2c:	46a9      	mov	r9, r5
 800db2e:	46b8      	mov	r8, r7
 800db30:	f04f 0a02 	mov.w	sl, #2
 800db34:	e6e8      	b.n	800d908 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800db36:	2501      	movs	r5, #1
 800db38:	2702      	movs	r7, #2
 800db3a:	e6e1      	b.n	800d900 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800db3c:	2500      	movs	r5, #0
 800db3e:	2701      	movs	r7, #1
 800db40:	e7f4      	b.n	800db2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800db42:	2702      	movs	r7, #2
 800db44:	2503      	movs	r5, #3
 800db46:	f04f 0900 	mov.w	r9, #0
 800db4a:	46b8      	mov	r8, r7
 800db4c:	e7e9      	b.n	800db22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800db4e:	4613      	mov	r3, r2
 800db50:	e728      	b.n	800d9a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800db52:	bf00      	nop
 800db54:	20026ef6 	.word	0x20026ef6
 800db58:	fffd8f01 	.word	0xfffd8f01
 800db5c:	00027100 	.word	0x00027100
 800db60:	0004e1ff 	.word	0x0004e1ff
 800db64:	0004e1fe 	.word	0x0004e1fe
 800db68:	20026f00 	.word	0x20026f00
 800db6c:	4613      	mov	r3, r2
 800db6e:	992b      	ldr	r1, [sp, #172]	; 0xac
 800db70:	9111      	str	r1, [sp, #68]	; 0x44
 800db72:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800db76:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800db7a:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800db7c:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800db80:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800db84:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800db88:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800db8c:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800db90:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800db94:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800db98:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800db9c:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800dba0:	469e      	mov	lr, r3
 800dba2:	469c      	mov	ip, r3
 800dba4:	f04f 0900 	mov.w	r9, #0
 800dba8:	f1bc 0f00 	cmp.w	ip, #0
 800dbac:	d147      	bne.n	800dc3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800dbae:	eb03 0c07 	add.w	ip, r3, r7
 800dbb2:	1ad7      	subs	r7, r2, r3
 800dbb4:	f1b9 0f00 	cmp.w	r9, #0
 800dbb8:	d009      	beq.n	800dbce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800dbba:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800dbbe:	9029      	str	r0, [sp, #164]	; 0xa4
 800dbc0:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800dbc4:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800dbc8:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800dbcc:	912d      	str	r1, [sp, #180]	; 0xb4
 800dbce:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800dbd0:	9111      	str	r1, [sp, #68]	; 0x44
 800dbd2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800dbd6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800dbda:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800dbde:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800dbe2:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800dbe6:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800dbea:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800dbee:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800dbf2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800dbf6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800dbfa:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800dbfe:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800dc02:	f04f 0800 	mov.w	r8, #0
 800dc06:	f1be 0f00 	cmp.w	lr, #0
 800dc0a:	d031      	beq.n	800dc70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800dc0c:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800dc0e:	4431      	add	r1, r6
 800dc10:	4549      	cmp	r1, r9
 800dc12:	4450      	add	r0, sl
 800dc14:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800dc18:	ee37 7a04 	vadd.f32	s14, s14, s8
 800dc1c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800dc20:	db08      	blt.n	800dc34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800dc22:	ee77 7a85 	vadd.f32	s15, s15, s10
 800dc26:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800dc2a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800dc2e:	3001      	adds	r0, #1
 800dc30:	eba1 0109 	sub.w	r1, r1, r9
 800dc34:	f10e 3eff 	add.w	lr, lr, #4294967295
 800dc38:	f04f 0801 	mov.w	r8, #1
 800dc3c:	e7e3      	b.n	800dc06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800dc3e:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800dc40:	4431      	add	r1, r6
 800dc42:	4541      	cmp	r1, r8
 800dc44:	4450      	add	r0, sl
 800dc46:	ee37 7a24 	vadd.f32	s14, s14, s9
 800dc4a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800dc4e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800dc52:	db08      	blt.n	800dc66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800dc54:	ee76 6a85 	vadd.f32	s13, s13, s10
 800dc58:	ee37 7a25 	vadd.f32	s14, s14, s11
 800dc5c:	ee77 7a86 	vadd.f32	s15, s15, s12
 800dc60:	3001      	adds	r0, #1
 800dc62:	eba1 0108 	sub.w	r1, r1, r8
 800dc66:	f10c 3cff 	add.w	ip, ip, #4294967295
 800dc6a:	f04f 0901 	mov.w	r9, #1
 800dc6e:	e79b      	b.n	800dba8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800dc70:	449c      	add	ip, r3
 800dc72:	1aff      	subs	r7, r7, r3
 800dc74:	f1b8 0f00 	cmp.w	r8, #0
 800dc78:	d009      	beq.n	800dc8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800dc7a:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800dc7e:	9019      	str	r0, [sp, #100]	; 0x64
 800dc80:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800dc84:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800dc88:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800dc8c:	911d      	str	r1, [sp, #116]	; 0x74
 800dc8e:	1ad2      	subs	r2, r2, r3
 800dc90:	e68b      	b.n	800d9aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800dc92:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800dc94:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800dc96:	2b00      	cmp	r3, #0
 800dc98:	f000 80d1 	beq.w	800de3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800dc9c:	ad19      	add	r5, sp, #100	; 0x64
 800dc9e:	ac39      	add	r4, sp, #228	; 0xe4
 800dca0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800dca2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800dca6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800dcaa:	930c      	str	r3, [sp, #48]	; 0x30
 800dcac:	990c      	ldr	r1, [sp, #48]	; 0x30
 800dcae:	6963      	ldr	r3, [r4, #20]
 800dcb0:	440b      	add	r3, r1
 800dcb2:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800dcb6:	4408      	add	r0, r1
 800dcb8:	b200      	sxth	r0, r0
 800dcba:	4283      	cmp	r3, r0
 800dcbc:	900d      	str	r0, [sp, #52]	; 0x34
 800dcbe:	f280 80c1 	bge.w	800de44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800dcc2:	428b      	cmp	r3, r1
 800dcc4:	da08      	bge.n	800dcd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800dcc6:	2a00      	cmp	r2, #0
 800dcc8:	dd06      	ble.n	800dcd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800dcca:	1acb      	subs	r3, r1, r3
 800dccc:	429a      	cmp	r2, r3
 800dcce:	f2c0 80bb 	blt.w	800de48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800dcd2:	2b00      	cmp	r3, #0
 800dcd4:	f300 80b9 	bgt.w	800de4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800dcd8:	6967      	ldr	r7, [r4, #20]
 800dcda:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800dcdc:	443b      	add	r3, r7
 800dcde:	461f      	mov	r7, r3
 800dce0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800dce2:	1bdf      	subs	r7, r3, r7
 800dce4:	4297      	cmp	r7, r2
 800dce6:	bfa8      	it	ge
 800dce8:	4617      	movge	r7, r2
 800dcea:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800dcee:	2f00      	cmp	r7, #0
 800dcf0:	f340 813c 	ble.w	800df6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800dcf4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800dcf6:	6829      	ldr	r1, [r5, #0]
 800dcf8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dcfc:	f9bb 3000 	ldrsh.w	r3, [fp]
 800dd00:	6820      	ldr	r0, [r4, #0]
 800dd02:	4411      	add	r1, r2
 800dd04:	4299      	cmp	r1, r3
 800dd06:	dd1a      	ble.n	800dd3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800dd08:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800dd0c:	440b      	add	r3, r1
 800dd0e:	4402      	add	r2, r0
 800dd10:	b21b      	sxth	r3, r3
 800dd12:	429a      	cmp	r2, r3
 800dd14:	dc13      	bgt.n	800dd3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800dd16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dd18:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800dd1a:	681b      	ldr	r3, [r3, #0]
 800dd1c:	9206      	str	r2, [sp, #24]
 800dd1e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800dd20:	9205      	str	r2, [sp, #20]
 800dd22:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800dd24:	9500      	str	r5, [sp, #0]
 800dd26:	e9cd b203 	strd	fp, r2, [sp, #12]
 800dd2a:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800dd2c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800dd2e:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800dd32:	a912      	add	r1, sp, #72	; 0x48
 800dd34:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800dd38:	aa49      	add	r2, sp, #292	; 0x124
 800dd3a:	4623      	mov	r3, r4
 800dd3c:	47c8      	blx	r9
 800dd3e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800dd42:	441a      	add	r2, r3
 800dd44:	6963      	ldr	r3, [r4, #20]
 800dd46:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800dd4a:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800dd4e:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800dd52:	68a1      	ldr	r1, [r4, #8]
 800dd54:	ed94 6a08 	vldr	s12, [r4, #32]
 800dd58:	6022      	str	r2, [r4, #0]
 800dd5a:	3301      	adds	r3, #1
 800dd5c:	6163      	str	r3, [r4, #20]
 800dd5e:	69a3      	ldr	r3, [r4, #24]
 800dd60:	ee37 7a27 	vadd.f32	s14, s14, s15
 800dd64:	3b01      	subs	r3, #1
 800dd66:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800dd6a:	61a3      	str	r3, [r4, #24]
 800dd6c:	6923      	ldr	r3, [r4, #16]
 800dd6e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800dd72:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dd76:	edd4 6a07 	vldr	s13, [r4, #28]
 800dd7a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800dd7e:	440b      	add	r3, r1
 800dd80:	68e1      	ldr	r1, [r4, #12]
 800dd82:	6123      	str	r3, [r4, #16]
 800dd84:	ee76 6a86 	vadd.f32	s13, s13, s12
 800dd88:	428b      	cmp	r3, r1
 800dd8a:	edc4 6a07 	vstr	s13, [r4, #28]
 800dd8e:	db15      	blt.n	800ddbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800dd90:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800dd94:	ee76 6a26 	vadd.f32	s13, s12, s13
 800dd98:	3201      	adds	r2, #1
 800dd9a:	edc4 6a07 	vstr	s13, [r4, #28]
 800dd9e:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800dda2:	6022      	str	r2, [r4, #0]
 800dda4:	ee36 7a87 	vadd.f32	s14, s13, s14
 800dda8:	1a5b      	subs	r3, r3, r1
 800ddaa:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ddae:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800ddb2:	6123      	str	r3, [r4, #16]
 800ddb4:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ddb8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ddbc:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ddc0:	441a      	add	r2, r3
 800ddc2:	696b      	ldr	r3, [r5, #20]
 800ddc4:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800ddc8:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800ddcc:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800ddd0:	68a9      	ldr	r1, [r5, #8]
 800ddd2:	ed95 6a08 	vldr	s12, [r5, #32]
 800ddd6:	602a      	str	r2, [r5, #0]
 800ddd8:	3301      	adds	r3, #1
 800ddda:	616b      	str	r3, [r5, #20]
 800dddc:	69ab      	ldr	r3, [r5, #24]
 800ddde:	ee37 7a27 	vadd.f32	s14, s14, s15
 800dde2:	3b01      	subs	r3, #1
 800dde4:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800dde8:	61ab      	str	r3, [r5, #24]
 800ddea:	692b      	ldr	r3, [r5, #16]
 800ddec:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800ddf0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ddf4:	edd5 6a07 	vldr	s13, [r5, #28]
 800ddf8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ddfc:	440b      	add	r3, r1
 800ddfe:	68e9      	ldr	r1, [r5, #12]
 800de00:	612b      	str	r3, [r5, #16]
 800de02:	ee76 6a86 	vadd.f32	s13, s13, s12
 800de06:	428b      	cmp	r3, r1
 800de08:	edc5 6a07 	vstr	s13, [r5, #28]
 800de0c:	db15      	blt.n	800de3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800de0e:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800de12:	ee76 6a26 	vadd.f32	s13, s12, s13
 800de16:	3201      	adds	r2, #1
 800de18:	edc5 6a07 	vstr	s13, [r5, #28]
 800de1c:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800de20:	602a      	str	r2, [r5, #0]
 800de22:	ee36 7a87 	vadd.f32	s14, s13, s14
 800de26:	1a5b      	subs	r3, r3, r1
 800de28:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800de2c:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800de30:	612b      	str	r3, [r5, #16]
 800de32:	ee77 7a27 	vadd.f32	s15, s14, s15
 800de36:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800de3a:	3f01      	subs	r7, #1
 800de3c:	e757      	b.n	800dcee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800de3e:	ad39      	add	r5, sp, #228	; 0xe4
 800de40:	ac19      	add	r4, sp, #100	; 0x64
 800de42:	e72d      	b.n	800dca0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800de44:	4613      	mov	r3, r2
 800de46:	e744      	b.n	800dcd2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800de48:	4613      	mov	r3, r2
 800de4a:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800de4e:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800de50:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800de54:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800de58:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800de5c:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800de60:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800de64:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800de68:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800de6c:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800de6e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800de72:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800de76:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800de7a:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800de7e:	960e      	str	r6, [sp, #56]	; 0x38
 800de80:	469e      	mov	lr, r3
 800de82:	461f      	mov	r7, r3
 800de84:	f04f 0900 	mov.w	r9, #0
 800de88:	2f00      	cmp	r7, #0
 800de8a:	d146      	bne.n	800df1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800de8c:	449c      	add	ip, r3
 800de8e:	1ad7      	subs	r7, r2, r3
 800de90:	f1b9 0f00 	cmp.w	r9, #0
 800de94:	d009      	beq.n	800deaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800de96:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800de9a:	9039      	str	r0, [sp, #228]	; 0xe4
 800de9c:	913d      	str	r1, [sp, #244]	; 0xf4
 800de9e:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800dea2:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800dea6:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800deaa:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800deac:	910e      	str	r1, [sp, #56]	; 0x38
 800deae:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800deb2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800deb6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800deba:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800debe:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800dec2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800dec6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800deca:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800dece:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800ded2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800ded6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800deda:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800dede:	f04f 0800 	mov.w	r8, #0
 800dee2:	f1be 0f00 	cmp.w	lr, #0
 800dee6:	d030      	beq.n	800df4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800dee8:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800deea:	4431      	add	r1, r6
 800deec:	4549      	cmp	r1, r9
 800deee:	4450      	add	r0, sl
 800def0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800def4:	ee37 7a04 	vadd.f32	s14, s14, s8
 800def8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800defc:	db08      	blt.n	800df10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800defe:	ee77 7a85 	vadd.f32	s15, s15, s10
 800df02:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800df06:	ee37 7a06 	vadd.f32	s14, s14, s12
 800df0a:	3001      	adds	r0, #1
 800df0c:	eba1 0109 	sub.w	r1, r1, r9
 800df10:	f10e 3eff 	add.w	lr, lr, #4294967295
 800df14:	f04f 0801 	mov.w	r8, #1
 800df18:	e7e3      	b.n	800dee2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800df1a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800df1c:	4431      	add	r1, r6
 800df1e:	4541      	cmp	r1, r8
 800df20:	4450      	add	r0, sl
 800df22:	ee37 7a24 	vadd.f32	s14, s14, s9
 800df26:	ee77 7a84 	vadd.f32	s15, s15, s8
 800df2a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800df2e:	db08      	blt.n	800df42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800df30:	ee76 6a85 	vadd.f32	s13, s13, s10
 800df34:	ee37 7a25 	vadd.f32	s14, s14, s11
 800df38:	ee77 7a86 	vadd.f32	s15, s15, s12
 800df3c:	3001      	adds	r0, #1
 800df3e:	eba1 0108 	sub.w	r1, r1, r8
 800df42:	3f01      	subs	r7, #1
 800df44:	f04f 0901 	mov.w	r9, #1
 800df48:	e79e      	b.n	800de88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800df4a:	449c      	add	ip, r3
 800df4c:	1aff      	subs	r7, r7, r3
 800df4e:	f1b8 0f00 	cmp.w	r8, #0
 800df52:	d009      	beq.n	800df68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800df54:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800df58:	9019      	str	r0, [sp, #100]	; 0x64
 800df5a:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800df5e:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800df62:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800df66:	911d      	str	r1, [sp, #116]	; 0x74
 800df68:	1ad2      	subs	r2, r2, r3
 800df6a:	e6b5      	b.n	800dcd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800df6c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800df6e:	681b      	ldr	r3, [r3, #0]
 800df70:	b923      	cbnz	r3, 800df7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800df72:	4b04      	ldr	r3, [pc, #16]	; (800df84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800df74:	6818      	ldr	r0, [r3, #0]
 800df76:	6803      	ldr	r3, [r0, #0]
 800df78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800df7a:	4798      	blx	r3
 800df7c:	b05b      	add	sp, #364	; 0x16c
 800df7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800df82:	bf00      	nop
 800df84:	20026f00 	.word	0x20026f00

0800df88 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800df88:	b570      	push	{r4, r5, r6, lr}
 800df8a:	4604      	mov	r4, r0
 800df8c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800df90:	9804      	ldr	r0, [sp, #16]
 800df92:	6061      	str	r1, [r4, #4]
 800df94:	2500      	movs	r5, #0
 800df96:	8025      	strh	r5, [r4, #0]
 800df98:	7223      	strb	r3, [r4, #8]
 800df9a:	7266      	strb	r6, [r4, #9]
 800df9c:	60e0      	str	r0, [r4, #12]
 800df9e:	8222      	strh	r2, [r4, #16]
 800dfa0:	8265      	strh	r5, [r4, #18]
 800dfa2:	82a5      	strh	r5, [r4, #20]
 800dfa4:	82e5      	strh	r5, [r4, #22]
 800dfa6:	8325      	strh	r5, [r4, #24]
 800dfa8:	8365      	strh	r5, [r4, #26]
 800dfaa:	83a5      	strh	r5, [r4, #28]
 800dfac:	77a5      	strb	r5, [r4, #30]
 800dfae:	b32e      	cbz	r6, 800dffc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800dfb0:	6803      	ldr	r3, [r0, #0]
 800dfb2:	695b      	ldr	r3, [r3, #20]
 800dfb4:	4798      	blx	r3
 800dfb6:	4606      	mov	r6, r0
 800dfb8:	b300      	cbz	r0, 800dffc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800dfba:	68e0      	ldr	r0, [r4, #12]
 800dfbc:	6803      	ldr	r3, [r0, #0]
 800dfbe:	4631      	mov	r1, r6
 800dfc0:	68db      	ldr	r3, [r3, #12]
 800dfc2:	4798      	blx	r3
 800dfc4:	4605      	mov	r5, r0
 800dfc6:	b1c8      	cbz	r0, 800dffc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800dfc8:	7b43      	ldrb	r3, [r0, #13]
 800dfca:	7a82      	ldrb	r2, [r0, #10]
 800dfcc:	005b      	lsls	r3, r3, #1
 800dfce:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800dfd2:	4313      	orrs	r3, r2
 800dfd4:	83a3      	strh	r3, [r4, #28]
 800dfd6:	7a63      	ldrb	r3, [r4, #9]
 800dfd8:	2b04      	cmp	r3, #4
 800dfda:	d10f      	bne.n	800dffc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800dfdc:	68e0      	ldr	r0, [r4, #12]
 800dfde:	6803      	ldr	r3, [r0, #0]
 800dfe0:	462a      	mov	r2, r5
 800dfe2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dfe4:	4631      	mov	r1, r6
 800dfe6:	4798      	blx	r3
 800dfe8:	7b6b      	ldrb	r3, [r5, #13]
 800dfea:	005b      	lsls	r3, r3, #1
 800dfec:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800dff0:	7aab      	ldrb	r3, [r5, #10]
 800dff2:	4313      	orrs	r3, r2
 800dff4:	4418      	add	r0, r3
 800dff6:	8ba3      	ldrh	r3, [r4, #28]
 800dff8:	4418      	add	r0, r3
 800dffa:	83a0      	strh	r0, [r4, #28]
 800dffc:	4620      	mov	r0, r4
 800dffe:	bd70      	pop	{r4, r5, r6, pc}

0800e000 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800e000:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e004:	2400      	movs	r4, #0
 800e006:	b085      	sub	sp, #20
 800e008:	4681      	mov	r9, r0
 800e00a:	4688      	mov	r8, r1
 800e00c:	4692      	mov	sl, r2
 800e00e:	469b      	mov	fp, r3
 800e010:	4627      	mov	r7, r4
 800e012:	4625      	mov	r5, r4
 800e014:	4626      	mov	r6, r4
 800e016:	4554      	cmp	r4, sl
 800e018:	da2a      	bge.n	800e070 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800e01a:	2300      	movs	r3, #0
 800e01c:	9303      	str	r3, [sp, #12]
 800e01e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800e022:	429d      	cmp	r5, r3
 800e024:	d004      	beq.n	800e030 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800e026:	f242 030b 	movw	r3, #8203	; 0x200b
 800e02a:	429d      	cmp	r5, r3
 800e02c:	bf18      	it	ne
 800e02e:	462f      	movne	r7, r5
 800e030:	ab03      	add	r3, sp, #12
 800e032:	4642      	mov	r2, r8
 800e034:	4659      	mov	r1, fp
 800e036:	4648      	mov	r0, r9
 800e038:	f002 fe8c 	bl	8010d54 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e03c:	4605      	mov	r5, r0
 800e03e:	b1b8      	cbz	r0, 800e070 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800e040:	280a      	cmp	r0, #10
 800e042:	d015      	beq.n	800e070 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800e044:	9a03      	ldr	r2, [sp, #12]
 800e046:	b18a      	cbz	r2, 800e06c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800e048:	7b50      	ldrb	r0, [r2, #13]
 800e04a:	7a93      	ldrb	r3, [r2, #10]
 800e04c:	8895      	ldrh	r5, [r2, #4]
 800e04e:	0040      	lsls	r0, r0, #1
 800e050:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800e054:	4303      	orrs	r3, r0
 800e056:	9301      	str	r3, [sp, #4]
 800e058:	f8d8 3000 	ldr.w	r3, [r8]
 800e05c:	4639      	mov	r1, r7
 800e05e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e060:	4640      	mov	r0, r8
 800e062:	4798      	blx	r3
 800e064:	9b01      	ldr	r3, [sp, #4]
 800e066:	4418      	add	r0, r3
 800e068:	4406      	add	r6, r0
 800e06a:	b2b6      	uxth	r6, r6
 800e06c:	3401      	adds	r4, #1
 800e06e:	e7d2      	b.n	800e016 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800e070:	4630      	mov	r0, r6
 800e072:	b005      	add	sp, #20
 800e074:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e078 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800e078:	2a02      	cmp	r2, #2
 800e07a:	b530      	push	{r4, r5, lr}
 800e07c:	d011      	beq.n	800e0a2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800e07e:	2a03      	cmp	r2, #3
 800e080:	d01c      	beq.n	800e0bc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800e082:	2a01      	cmp	r2, #1
 800e084:	d10c      	bne.n	800e0a0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800e086:	888b      	ldrh	r3, [r1, #4]
 800e088:	8801      	ldrh	r1, [r0, #0]
 800e08a:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800e08e:	8844      	ldrh	r4, [r0, #2]
 800e090:	8004      	strh	r4, [r0, #0]
 800e092:	1a5b      	subs	r3, r3, r1
 800e094:	1a9b      	subs	r3, r3, r2
 800e096:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800e09a:	8043      	strh	r3, [r0, #2]
 800e09c:	8081      	strh	r1, [r0, #4]
 800e09e:	80c2      	strh	r2, [r0, #6]
 800e0a0:	bd30      	pop	{r4, r5, pc}
 800e0a2:	88cb      	ldrh	r3, [r1, #6]
 800e0a4:	8842      	ldrh	r2, [r0, #2]
 800e0a6:	1a9b      	subs	r3, r3, r2
 800e0a8:	88c2      	ldrh	r2, [r0, #6]
 800e0aa:	1a9b      	subs	r3, r3, r2
 800e0ac:	888a      	ldrh	r2, [r1, #4]
 800e0ae:	8801      	ldrh	r1, [r0, #0]
 800e0b0:	8043      	strh	r3, [r0, #2]
 800e0b2:	1a52      	subs	r2, r2, r1
 800e0b4:	8881      	ldrh	r1, [r0, #4]
 800e0b6:	1a52      	subs	r2, r2, r1
 800e0b8:	8002      	strh	r2, [r0, #0]
 800e0ba:	e7f1      	b.n	800e0a0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800e0bc:	88cb      	ldrh	r3, [r1, #6]
 800e0be:	8841      	ldrh	r1, [r0, #2]
 800e0c0:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800e0c4:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e0c8:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800e0cc:	8045      	strh	r5, [r0, #2]
 800e0ce:	1a5b      	subs	r3, r3, r1
 800e0d0:	1a9b      	subs	r3, r3, r2
 800e0d2:	8003      	strh	r3, [r0, #0]
 800e0d4:	8082      	strh	r2, [r0, #4]
 800e0d6:	80c4      	strh	r4, [r0, #6]
 800e0d8:	e7e2      	b.n	800e0a0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800e0da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800e0da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e0de:	b09f      	sub	sp, #124	; 0x7c
 800e0e0:	9116      	str	r1, [sp, #88]	; 0x58
 800e0e2:	9317      	str	r3, [sp, #92]	; 0x5c
 800e0e4:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800e0e6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800e0e8:	8809      	ldrh	r1, [r1, #0]
 800e0ea:	889b      	ldrh	r3, [r3, #4]
 800e0ec:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800e0f0:	9212      	str	r2, [sp, #72]	; 0x48
 800e0f2:	440b      	add	r3, r1
 800e0f4:	b21b      	sxth	r3, r3
 800e0f6:	9310      	str	r3, [sp, #64]	; 0x40
 800e0f8:	f8d8 3000 	ldr.w	r3, [r8]
 800e0fc:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800e100:	7a59      	ldrb	r1, [r3, #9]
 800e102:	7a1b      	ldrb	r3, [r3, #8]
 800e104:	9011      	str	r0, [sp, #68]	; 0x44
 800e106:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800e10a:	9114      	str	r1, [sp, #80]	; 0x50
 800e10c:	9315      	str	r3, [sp, #84]	; 0x54
 800e10e:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 800e112:	2a00      	cmp	r2, #0
 800e114:	d067      	beq.n	800e1e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10c>
 800e116:	f898 3010 	ldrb.w	r3, [r8, #16]
 800e11a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800e11c:	2b04      	cmp	r3, #4
 800e11e:	bf14      	ite	ne
 800e120:	2301      	movne	r3, #1
 800e122:	2302      	moveq	r3, #2
 800e124:	4413      	add	r3, r2
 800e126:	f04f 0900 	mov.w	r9, #0
 800e12a:	930f      	str	r3, [sp, #60]	; 0x3c
 800e12c:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800e130:	464c      	mov	r4, r9
 800e132:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800e136:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800e13a:	4293      	cmp	r3, r2
 800e13c:	f280 808c 	bge.w	800e258 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17e>
 800e140:	2300      	movs	r3, #0
 800e142:	931c      	str	r3, [sp, #112]	; 0x70
 800e144:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800e148:	429c      	cmp	r4, r3
 800e14a:	d006      	beq.n	800e15a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x80>
 800e14c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e14e:	f242 020b 	movw	r2, #8203	; 0x200b
 800e152:	4294      	cmp	r4, r2
 800e154:	bf18      	it	ne
 800e156:	4623      	movne	r3, r4
 800e158:	930d      	str	r3, [sp, #52]	; 0x34
 800e15a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e15c:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800e15e:	f8d8 2000 	ldr.w	r2, [r8]
 800e162:	428b      	cmp	r3, r1
 800e164:	db41      	blt.n	800e1ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x110>
 800e166:	6813      	ldr	r3, [r2, #0]
 800e168:	4610      	mov	r0, r2
 800e16a:	695b      	ldr	r3, [r3, #20]
 800e16c:	4798      	blx	r3
 800e16e:	4604      	mov	r4, r0
 800e170:	f8d8 0000 	ldr.w	r0, [r8]
 800e174:	6803      	ldr	r3, [r0, #0]
 800e176:	aa1d      	add	r2, sp, #116	; 0x74
 800e178:	689e      	ldr	r6, [r3, #8]
 800e17a:	4621      	mov	r1, r4
 800e17c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800e180:	47b0      	blx	r6
 800e182:	901c      	str	r0, [sp, #112]	; 0x70
 800e184:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800e188:	429c      	cmp	r4, r3
 800e18a:	f000 80e9 	beq.w	800e360 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800e18e:	f242 030b 	movw	r3, #8203	; 0x200b
 800e192:	429c      	cmp	r4, r3
 800e194:	f000 80e4 	beq.w	800e360 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800e198:	2c00      	cmp	r4, #0
 800e19a:	f000 80f6 	beq.w	800e38a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 800e19e:	2c0a      	cmp	r4, #10
 800e1a0:	d060      	beq.n	800e264 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18a>
 800e1a2:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800e1a4:	b36a      	cbz	r2, 800e202 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x128>
 800e1a6:	8894      	ldrh	r4, [r2, #4]
 800e1a8:	f1bb 0f00 	cmp.w	fp, #0
 800e1ac:	d03b      	beq.n	800e226 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14c>
 800e1ae:	f892 900d 	ldrb.w	r9, [r2, #13]
 800e1b2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800e1b6:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800e1ba:	f892 900a 	ldrb.w	r9, [r2, #10]
 800e1be:	f1bb 0f01 	cmp.w	fp, #1
 800e1c2:	ea49 0903 	orr.w	r9, r9, r3
 800e1c6:	d134      	bne.n	800e232 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x158>
 800e1c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e1ca:	eba5 0509 	sub.w	r5, r5, r9
 800e1ce:	2b00      	cmp	r3, #0
 800e1d0:	d14f      	bne.n	800e272 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x198>
 800e1d2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800e1d4:	eb09 0305 	add.w	r3, r9, r5
 800e1d8:	4413      	add	r3, r2
 800e1da:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800e1dc:	f9b2 2000 	ldrsh.w	r2, [r2]
 800e1e0:	4293      	cmp	r3, r2
 800e1e2:	da51      	bge.n	800e288 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800e1e4:	e038      	b.n	800e258 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17e>
 800e1e6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800e1e8:	e79d      	b.n	800e126 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 800e1ea:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800e1ee:	9301      	str	r3, [sp, #4]
 800e1f0:	ab1d      	add	r3, sp, #116	; 0x74
 800e1f2:	9300      	str	r3, [sp, #0]
 800e1f4:	4659      	mov	r1, fp
 800e1f6:	ab1c      	add	r3, sp, #112	; 0x70
 800e1f8:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800e1fa:	f002 fe03 	bl	8010e04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800e1fe:	4604      	mov	r4, r0
 800e200:	e7c0      	b.n	800e184 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xaa>
 800e202:	f8d8 0000 	ldr.w	r0, [r8]
 800e206:	6803      	ldr	r3, [r0, #0]
 800e208:	691b      	ldr	r3, [r3, #16]
 800e20a:	4798      	blx	r3
 800e20c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800e210:	4298      	cmp	r0, r3
 800e212:	f000 80a5 	beq.w	800e360 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800e216:	f242 030b 	movw	r3, #8203	; 0x200b
 800e21a:	4298      	cmp	r0, r3
 800e21c:	f000 80a0 	beq.w	800e360 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800e220:	f1bb 0f00 	cmp.w	fp, #0
 800e224:	d100      	bne.n	800e228 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800e226:	444d      	add	r5, r9
 800e228:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800e22a:	2a00      	cmp	r2, #0
 800e22c:	d1bf      	bne.n	800e1ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd4>
 800e22e:	4691      	mov	r9, r2
 800e230:	e096      	b.n	800e360 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800e232:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e234:	2b00      	cmp	r3, #0
 800e236:	f000 80aa 	beq.w	800e38e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b4>
 800e23a:	f1bb 0f00 	cmp.w	fp, #0
 800e23e:	d118      	bne.n	800e272 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x198>
 800e240:	f8d8 0000 	ldr.w	r0, [r8]
 800e244:	990d      	ldr	r1, [sp, #52]	; 0x34
 800e246:	6803      	ldr	r3, [r0, #0]
 800e248:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e24a:	4798      	blx	r3
 800e24c:	4405      	add	r5, r0
 800e24e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800e250:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800e252:	1aeb      	subs	r3, r5, r3
 800e254:	4293      	cmp	r3, r2
 800e256:	dd17      	ble.n	800e288 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800e258:	2c00      	cmp	r4, #0
 800e25a:	f000 8096 	beq.w	800e38a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 800e25e:	2c0a      	cmp	r4, #10
 800e260:	f040 8084 	bne.w	800e36c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800e264:	240a      	movs	r4, #10
 800e266:	fab4 f084 	clz	r0, r4
 800e26a:	0940      	lsrs	r0, r0, #5
 800e26c:	b01f      	add	sp, #124	; 0x7c
 800e26e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e272:	f8d8 0000 	ldr.w	r0, [r8]
 800e276:	990d      	ldr	r1, [sp, #52]	; 0x34
 800e278:	6803      	ldr	r3, [r0, #0]
 800e27a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e27c:	4798      	blx	r3
 800e27e:	f1bb 0f01 	cmp.w	fp, #1
 800e282:	eba5 0500 	sub.w	r5, r5, r0
 800e286:	d0a4      	beq.n	800e1d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xf8>
 800e288:	981c      	ldr	r0, [sp, #112]	; 0x70
 800e28a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800e28c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800e290:	f9b3 6000 	ldrsh.w	r6, [r3]
 800e294:	7b43      	ldrb	r3, [r0, #13]
 800e296:	015b      	lsls	r3, r3, #5
 800e298:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e29c:	7983      	ldrb	r3, [r0, #6]
 800e29e:	4429      	add	r1, r5
 800e2a0:	4313      	orrs	r3, r2
 800e2a2:	440b      	add	r3, r1
 800e2a4:	42b3      	cmp	r3, r6
 800e2a6:	db5b      	blt.n	800e360 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800e2a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e2aa:	4299      	cmp	r1, r3
 800e2ac:	da58      	bge.n	800e360 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800e2ae:	f8d8 0000 	ldr.w	r0, [r8]
 800e2b2:	6803      	ldr	r3, [r0, #0]
 800e2b4:	42ae      	cmp	r6, r5
 800e2b6:	bfc8      	it	gt
 800e2b8:	1b76      	subgt	r6, r6, r5
 800e2ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e2bc:	bfcc      	ite	gt
 800e2be:	b2b6      	uxthgt	r6, r6
 800e2c0:	2600      	movle	r6, #0
 800e2c2:	4798      	blx	r3
 800e2c4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800e2c6:	7b5a      	ldrb	r2, [r3, #13]
 800e2c8:	00d1      	lsls	r1, r2, #3
 800e2ca:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800e2ce:	7a19      	ldrb	r1, [r3, #8]
 800e2d0:	4339      	orrs	r1, r7
 800e2d2:	0657      	lsls	r7, r2, #25
 800e2d4:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800e2d6:	bf44      	itt	mi
 800e2d8:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800e2dc:	b209      	sxthmi	r1, r1
 800e2de:	19c7      	adds	r7, r0, r7
 800e2e0:	1a7f      	subs	r7, r7, r1
 800e2e2:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800e2e4:	b2bf      	uxth	r7, r7
 800e2e6:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800e2ea:	fa0f fa87 	sxth.w	sl, r7
 800e2ee:	4551      	cmp	r1, sl
 800e2f0:	dd3a      	ble.n	800e368 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800e2f2:	0112      	lsls	r2, r2, #4
 800e2f4:	79d8      	ldrb	r0, [r3, #7]
 800e2f6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800e2fa:	4302      	orrs	r2, r0
 800e2fc:	4492      	add	sl, r2
 800e2fe:	4551      	cmp	r1, sl
 800e300:	dc2e      	bgt.n	800e360 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800e302:	1bcf      	subs	r7, r1, r7
 800e304:	b2bf      	uxth	r7, r7
 800e306:	468a      	mov	sl, r1
 800e308:	9319      	str	r3, [sp, #100]	; 0x64
 800e30a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e30c:	f8d8 0000 	ldr.w	r0, [r8]
 800e310:	681a      	ldr	r2, [r3, #0]
 800e312:	6801      	ldr	r1, [r0, #0]
 800e314:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 800e316:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800e318:	9313      	str	r3, [sp, #76]	; 0x4c
 800e31a:	9218      	str	r2, [sp, #96]	; 0x60
 800e31c:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800e31e:	4788      	blx	r1
 800e320:	f898 1006 	ldrb.w	r1, [r8, #6]
 800e324:	910b      	str	r1, [sp, #44]	; 0x2c
 800e326:	f898 100e 	ldrb.w	r1, [r8, #14]
 800e32a:	910a      	str	r1, [sp, #40]	; 0x28
 800e32c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800e330:	9109      	str	r1, [sp, #36]	; 0x24
 800e332:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800e334:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800e338:	9305      	str	r3, [sp, #20]
 800e33a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800e33c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800e33e:	9206      	str	r2, [sp, #24]
 800e340:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800e344:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800e348:	e9cd a601 	strd	sl, r6, [sp, #4]
 800e34c:	442e      	add	r6, r5
 800e34e:	b236      	sxth	r6, r6
 800e350:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800e352:	9600      	str	r6, [sp, #0]
 800e354:	681a      	ldr	r2, [r3, #0]
 800e356:	9916      	ldr	r1, [sp, #88]	; 0x58
 800e358:	685b      	ldr	r3, [r3, #4]
 800e35a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e35c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800e35e:	47b0      	blx	r6
 800e360:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e362:	3301      	adds	r3, #1
 800e364:	930e      	str	r3, [sp, #56]	; 0x38
 800e366:	e6e6      	b.n	800e136 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 800e368:	2700      	movs	r7, #0
 800e36a:	e7cd      	b.n	800e308 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x22e>
 800e36c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800e36e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800e370:	3501      	adds	r5, #1
 800e372:	429d      	cmp	r5, r3
 800e374:	f6bf af77 	bge.w	800e266 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800e378:	4659      	mov	r1, fp
 800e37a:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800e37c:	f7fb f838 	bl	80093f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800e380:	4604      	mov	r4, r0
 800e382:	b110      	cbz	r0, 800e38a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 800e384:	280a      	cmp	r0, #10
 800e386:	d1f2      	bne.n	800e36e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800e388:	e76c      	b.n	800e264 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18a>
 800e38a:	2400      	movs	r4, #0
 800e38c:	e76b      	b.n	800e266 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800e38e:	f1bb 0f00 	cmp.w	fp, #0
 800e392:	f43f af5c 	beq.w	800e24e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x174>
 800e396:	e777      	b.n	800e288 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

0800e398 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800e398:	b530      	push	{r4, r5, lr}
 800e39a:	8a44      	ldrh	r4, [r0, #18]
 800e39c:	8ac5      	ldrh	r5, [r0, #22]
 800e39e:	82c3      	strh	r3, [r0, #22]
 800e3a0:	442c      	add	r4, r5
 800e3a2:	1ae4      	subs	r4, r4, r3
 800e3a4:	8244      	strh	r4, [r0, #18]
 800e3a6:	8b03      	ldrh	r3, [r0, #24]
 800e3a8:	8a84      	ldrh	r4, [r0, #20]
 800e3aa:	4422      	add	r2, r4
 800e3ac:	440c      	add	r4, r1
 800e3ae:	1a59      	subs	r1, r3, r1
 800e3b0:	8342      	strh	r2, [r0, #26]
 800e3b2:	8284      	strh	r4, [r0, #20]
 800e3b4:	8301      	strh	r1, [r0, #24]
 800e3b6:	bd30      	pop	{r4, r5, pc}

0800e3b8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800e3b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e3bc:	7a43      	ldrb	r3, [r0, #9]
 800e3be:	1eda      	subs	r2, r3, #3
 800e3c0:	b087      	sub	sp, #28
 800e3c2:	4604      	mov	r4, r0
 800e3c4:	b2d2      	uxtb	r2, r2
 800e3c6:	460f      	mov	r7, r1
 800e3c8:	2900      	cmp	r1, #0
 800e3ca:	d036      	beq.n	800e43a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800e3cc:	2a01      	cmp	r2, #1
 800e3ce:	d932      	bls.n	800e436 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800e3d0:	1e58      	subs	r0, r3, #1
 800e3d2:	f1d0 0b00 	rsbs	fp, r0, #0
 800e3d6:	eb4b 0b00 	adc.w	fp, fp, r0
 800e3da:	1e99      	subs	r1, r3, #2
 800e3dc:	424b      	negs	r3, r1
 800e3de:	414b      	adcs	r3, r1
 800e3e0:	9303      	str	r3, [sp, #12]
 800e3e2:	2300      	movs	r3, #0
 800e3e4:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800e3e8:	2500      	movs	r5, #0
 800e3ea:	8265      	strh	r5, [r4, #18]
 800e3ec:	82a5      	strh	r5, [r4, #20]
 800e3ee:	46a9      	mov	r9, r5
 800e3f0:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800e3f4:	2300      	movs	r3, #0
 800e3f6:	9305      	str	r3, [sp, #20]
 800e3f8:	8823      	ldrh	r3, [r4, #0]
 800e3fa:	2b20      	cmp	r3, #32
 800e3fc:	d02b      	beq.n	800e456 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800e3fe:	eba3 020a 	sub.w	r2, r3, sl
 800e402:	4256      	negs	r6, r2
 800e404:	4156      	adcs	r6, r2
 800e406:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800e40a:	4293      	cmp	r3, r2
 800e40c:	d004      	beq.n	800e418 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800e40e:	4553      	cmp	r3, sl
 800e410:	bf16      	itet	ne
 800e412:	4699      	movne	r9, r3
 800e414:	2601      	moveq	r6, #1
 800e416:	2600      	movne	r6, #0
 800e418:	ab05      	add	r3, sp, #20
 800e41a:	68e2      	ldr	r2, [r4, #12]
 800e41c:	7a21      	ldrb	r1, [r4, #8]
 800e41e:	6860      	ldr	r0, [r4, #4]
 800e420:	f002 fc98 	bl	8010d54 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e424:	8020      	strh	r0, [r4, #0]
 800e426:	b9c8      	cbnz	r0, 800e45c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800e428:	8b22      	ldrh	r2, [r4, #24]
 800e42a:	2300      	movs	r3, #0
 800e42c:	4611      	mov	r1, r2
 800e42e:	4620      	mov	r0, r4
 800e430:	f7ff ffb2 	bl	800e398 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800e434:	e066      	b.n	800e504 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800e436:	468b      	mov	fp, r1
 800e438:	e7cf      	b.n	800e3da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800e43a:	3b01      	subs	r3, #1
 800e43c:	2a01      	cmp	r2, #1
 800e43e:	bf8c      	ite	hi
 800e440:	2200      	movhi	r2, #0
 800e442:	2201      	movls	r2, #1
 800e444:	2b01      	cmp	r3, #1
 800e446:	bf8c      	ite	hi
 800e448:	2300      	movhi	r3, #0
 800e44a:	2301      	movls	r3, #1
 800e44c:	9202      	str	r2, [sp, #8]
 800e44e:	9301      	str	r3, [sp, #4]
 800e450:	9103      	str	r1, [sp, #12]
 800e452:	468b      	mov	fp, r1
 800e454:	e7c8      	b.n	800e3e8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800e456:	4699      	mov	r9, r3
 800e458:	2601      	movs	r6, #1
 800e45a:	e7dd      	b.n	800e418 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800e45c:	8ae3      	ldrh	r3, [r4, #22]
 800e45e:	280a      	cmp	r0, #10
 800e460:	f103 0301 	add.w	r3, r3, #1
 800e464:	82e3      	strh	r3, [r4, #22]
 800e466:	d0df      	beq.n	800e428 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800e468:	9a05      	ldr	r2, [sp, #20]
 800e46a:	bb42      	cbnz	r2, 800e4be <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800e46c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800e470:	4298      	cmp	r0, r3
 800e472:	d001      	beq.n	800e478 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800e474:	4550      	cmp	r0, sl
 800e476:	d1bd      	bne.n	800e3f4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e478:	8823      	ldrh	r3, [r4, #0]
 800e47a:	8b21      	ldrh	r1, [r4, #24]
 800e47c:	2b20      	cmp	r3, #32
 800e47e:	d001      	beq.n	800e484 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800e480:	4553      	cmp	r3, sl
 800e482:	d131      	bne.n	800e4e8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800e484:	2e00      	cmp	r6, #0
 800e486:	bf0a      	itet	eq
 800e488:	460d      	moveq	r5, r1
 800e48a:	4630      	movne	r0, r6
 800e48c:	2001      	moveq	r0, #1
 800e48e:	440a      	add	r2, r1
 800e490:	8aa3      	ldrh	r3, [r4, #20]
 800e492:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800e496:	b292      	uxth	r2, r2
 800e498:	8322      	strh	r2, [r4, #24]
 800e49a:	4413      	add	r3, r2
 800e49c:	2f00      	cmp	r7, #0
 800e49e:	d03a      	beq.n	800e516 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800e4a0:	f1bb 0f00 	cmp.w	fp, #0
 800e4a4:	d102      	bne.n	800e4ac <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800e4a6:	9903      	ldr	r1, [sp, #12]
 800e4a8:	b301      	cbz	r1, 800e4ec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800e4aa:	b1f8      	cbz	r0, 800e4ec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800e4ac:	8ba1      	ldrh	r1, [r4, #28]
 800e4ae:	4419      	add	r1, r3
 800e4b0:	458c      	cmp	ip, r1
 800e4b2:	da2a      	bge.n	800e50a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800e4b4:	8a61      	ldrh	r1, [r4, #18]
 800e4b6:	b341      	cbz	r1, 800e50a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800e4b8:	4563      	cmp	r3, ip
 800e4ba:	dd9b      	ble.n	800e3f4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e4bc:	e01c      	b.n	800e4f8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800e4be:	8893      	ldrh	r3, [r2, #4]
 800e4c0:	8023      	strh	r3, [r4, #0]
 800e4c2:	f892 800d 	ldrb.w	r8, [r2, #13]
 800e4c6:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800e4ca:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800e4ce:	f892 800a 	ldrb.w	r8, [r2, #10]
 800e4d2:	ea48 0800 	orr.w	r8, r8, r0
 800e4d6:	68e0      	ldr	r0, [r4, #12]
 800e4d8:	6803      	ldr	r3, [r0, #0]
 800e4da:	4649      	mov	r1, r9
 800e4dc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e4de:	4798      	blx	r3
 800e4e0:	eb08 0200 	add.w	r2, r8, r0
 800e4e4:	b292      	uxth	r2, r2
 800e4e6:	e7c7      	b.n	800e478 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800e4e8:	2000      	movs	r0, #0
 800e4ea:	e7d0      	b.n	800e48e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800e4ec:	4563      	cmp	r3, ip
 800e4ee:	dd81      	ble.n	800e3f4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e4f0:	8a63      	ldrh	r3, [r4, #18]
 800e4f2:	2b00      	cmp	r3, #0
 800e4f4:	f43f af7e 	beq.w	800e3f4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e4f8:	2301      	movs	r3, #1
 800e4fa:	77a3      	strb	r3, [r4, #30]
 800e4fc:	8ba2      	ldrh	r2, [r4, #28]
 800e4fe:	8b63      	ldrh	r3, [r4, #26]
 800e500:	4413      	add	r3, r2
 800e502:	8363      	strh	r3, [r4, #26]
 800e504:	b007      	add	sp, #28
 800e506:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e50a:	2300      	movs	r3, #0
 800e50c:	4611      	mov	r1, r2
 800e50e:	4620      	mov	r0, r4
 800e510:	f7ff ff42 	bl	800e398 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800e514:	e76e      	b.n	800e3f4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e516:	4563      	cmp	r3, ip
 800e518:	dd14      	ble.n	800e544 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800e51a:	9b02      	ldr	r3, [sp, #8]
 800e51c:	b113      	cbz	r3, 800e524 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800e51e:	2301      	movs	r3, #1
 800e520:	460a      	mov	r2, r1
 800e522:	e783      	b.n	800e42c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800e524:	9b01      	ldr	r3, [sp, #4]
 800e526:	2b00      	cmp	r3, #0
 800e528:	f43f af64 	beq.w	800e3f4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e52c:	2800      	cmp	r0, #0
 800e52e:	f47f af61 	bne.w	800e3f4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e532:	b116      	cbz	r6, 800e53a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800e534:	2301      	movs	r3, #1
 800e536:	462a      	mov	r2, r5
 800e538:	e779      	b.n	800e42e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800e53a:	8a63      	ldrh	r3, [r4, #18]
 800e53c:	2b00      	cmp	r3, #0
 800e53e:	f43f af59 	beq.w	800e3f4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e542:	e7df      	b.n	800e504 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800e544:	2800      	cmp	r0, #0
 800e546:	f47f af55 	bne.w	800e3f4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e54a:	2e00      	cmp	r6, #0
 800e54c:	f43f af52 	beq.w	800e3f4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e550:	2301      	movs	r3, #1
 800e552:	462a      	mov	r2, r5
 800e554:	e7db      	b.n	800e50e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800e556 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800e556:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e55a:	b0e5      	sub	sp, #404	; 0x194
 800e55c:	4689      	mov	r9, r1
 800e55e:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 800e562:	900a      	str	r0, [sp, #40]	; 0x28
 800e564:	461c      	mov	r4, r3
 800e566:	f1ba 0f00 	cmp.w	sl, #0
 800e56a:	f000 80b4 	beq.w	800e6d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800e56e:	681b      	ldr	r3, [r3, #0]
 800e570:	2b00      	cmp	r3, #0
 800e572:	f000 80b0 	beq.w	800e6d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800e576:	7ba3      	ldrb	r3, [r4, #14]
 800e578:	2b00      	cmp	r3, #0
 800e57a:	f000 80ac 	beq.w	800e6d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800e57e:	6810      	ldr	r0, [r2, #0]
 800e580:	6851      	ldr	r1, [r2, #4]
 800e582:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800e586:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 800e58a:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 800e58e:	4643      	mov	r3, r8
 800e590:	c303      	stmia	r3!, {r0, r1}
 800e592:	2500      	movs	r5, #0
 800e594:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800e598:	79a2      	ldrb	r2, [r4, #6]
 800e59a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800e59e:	a90f      	add	r1, sp, #60	; 0x3c
 800e5a0:	4640      	mov	r0, r8
 800e5a2:	950f      	str	r5, [sp, #60]	; 0x3c
 800e5a4:	f7ff fd68 	bl	800e078 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800e5a8:	a90f      	add	r1, sp, #60	; 0x3c
 800e5aa:	4608      	mov	r0, r1
 800e5ac:	79a2      	ldrb	r2, [r4, #6]
 800e5ae:	af19      	add	r7, sp, #100	; 0x64
 800e5b0:	f7ff fd62 	bl	800e078 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800e5b4:	4638      	mov	r0, r7
 800e5b6:	f002 f87b 	bl	80106b0 <_ZN8touchgfx12TextProviderC1Ev>
 800e5ba:	6820      	ldr	r0, [r4, #0]
 800e5bc:	6803      	ldr	r3, [r0, #0]
 800e5be:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e5c0:	4798      	blx	r3
 800e5c2:	4606      	mov	r6, r0
 800e5c4:	6820      	ldr	r0, [r4, #0]
 800e5c6:	6803      	ldr	r3, [r0, #0]
 800e5c8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e5ca:	4798      	blx	r3
 800e5cc:	4633      	mov	r3, r6
 800e5ce:	9000      	str	r0, [sp, #0]
 800e5d0:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800e5d2:	4651      	mov	r1, sl
 800e5d4:	4638      	mov	r0, r7
 800e5d6:	f002 f8be 	bl	8010756 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e5da:	6820      	ldr	r0, [r4, #0]
 800e5dc:	7923      	ldrb	r3, [r4, #4]
 800e5de:	9308      	str	r3, [sp, #32]
 800e5e0:	6803      	ldr	r3, [r0, #0]
 800e5e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800e5e4:	4798      	blx	r3
 800e5e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800e5ea:	181e      	adds	r6, r3, r0
 800e5ec:	42ae      	cmp	r6, r5
 800e5ee:	dd06      	ble.n	800e5fe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 800e5f0:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800e5f4:	4282      	cmp	r2, r0
 800e5f6:	bfa4      	itt	ge
 800e5f8:	189d      	addge	r5, r3, r2
 800e5fa:	fb95 f5f6 	sdivge	r5, r5, r6
 800e5fe:	a832      	add	r0, sp, #200	; 0xc8
 800e600:	f002 f856 	bl	80106b0 <_ZN8touchgfx12TextProviderC1Ev>
 800e604:	7c23      	ldrb	r3, [r4, #16]
 800e606:	b17b      	cbz	r3, 800e628 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 800e608:	6820      	ldr	r0, [r4, #0]
 800e60a:	6803      	ldr	r3, [r0, #0]
 800e60c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e60e:	4798      	blx	r3
 800e610:	4683      	mov	fp, r0
 800e612:	6820      	ldr	r0, [r4, #0]
 800e614:	6803      	ldr	r3, [r0, #0]
 800e616:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e618:	4798      	blx	r3
 800e61a:	465b      	mov	r3, fp
 800e61c:	9000      	str	r0, [sp, #0]
 800e61e:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800e620:	4651      	mov	r1, sl
 800e622:	a832      	add	r0, sp, #200	; 0xc8
 800e624:	f002 f897 	bl	8010756 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e628:	7be1      	ldrb	r1, [r4, #15]
 800e62a:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800e62e:	7963      	ldrb	r3, [r4, #5]
 800e630:	1a52      	subs	r2, r2, r1
 800e632:	7c21      	ldrb	r1, [r4, #16]
 800e634:	9101      	str	r1, [sp, #4]
 800e636:	6821      	ldr	r1, [r4, #0]
 800e638:	9100      	str	r1, [sp, #0]
 800e63a:	b292      	uxth	r2, r2
 800e63c:	a932      	add	r1, sp, #200	; 0xc8
 800e63e:	a811      	add	r0, sp, #68	; 0x44
 800e640:	f7ff fca2 	bl	800df88 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800e644:	7c23      	ldrb	r3, [r4, #16]
 800e646:	b9bb      	cbnz	r3, 800e678 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 800e648:	fa1f fa86 	uxth.w	sl, r6
 800e64c:	2d00      	cmp	r5, #0
 800e64e:	dd45      	ble.n	800e6dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800e650:	4638      	mov	r0, r7
 800e652:	f002 fc79 	bl	8010f48 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e656:	2800      	cmp	r0, #0
 800e658:	d03d      	beq.n	800e6d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800e65a:	280a      	cmp	r0, #10
 800e65c:	d1f6      	bne.n	800e64c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800e65e:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800e662:	4453      	add	r3, sl
 800e664:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800e668:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800e66c:	eba3 030a 	sub.w	r3, r3, sl
 800e670:	3d01      	subs	r5, #1
 800e672:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800e676:	e7e9      	b.n	800e64c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800e678:	0073      	lsls	r3, r6, #1
 800e67a:	9309      	str	r3, [sp, #36]	; 0x24
 800e67c:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800e680:	fa1f fa86 	uxth.w	sl, r6
 800e684:	2d00      	cmp	r5, #0
 800e686:	dd29      	ble.n	800e6dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800e688:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800e68c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e68e:	428b      	cmp	r3, r1
 800e690:	bfd4      	ite	le
 800e692:	2100      	movle	r1, #0
 800e694:	2101      	movgt	r1, #1
 800e696:	a811      	add	r0, sp, #68	; 0x44
 800e698:	f7ff fe8e 	bl	800e3b8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800e69c:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 800e6a0:	3b01      	subs	r3, #1
 800e6a2:	b29b      	uxth	r3, r3
 800e6a4:	455b      	cmp	r3, fp
 800e6a6:	930b      	str	r3, [sp, #44]	; 0x2c
 800e6a8:	d005      	beq.n	800e6b6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 800e6aa:	7961      	ldrb	r1, [r4, #5]
 800e6ac:	4638      	mov	r0, r7
 800e6ae:	f7fa fe9f 	bl	80093f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800e6b2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e6b4:	e7f4      	b.n	800e6a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 800e6b6:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800e6ba:	4453      	add	r3, sl
 800e6bc:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800e6c0:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800e6c4:	eba3 030a 	sub.w	r3, r3, sl
 800e6c8:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800e6cc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800e6d0:	3d01      	subs	r5, #1
 800e6d2:	2b00      	cmp	r3, #0
 800e6d4:	d1d6      	bne.n	800e684 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 800e6d6:	b065      	add	sp, #404	; 0x194
 800e6d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e6dc:	0075      	lsls	r5, r6, #1
 800e6de:	f04f 0a00 	mov.w	sl, #0
 800e6e2:	7c23      	ldrb	r3, [r4, #16]
 800e6e4:	2b00      	cmp	r3, #0
 800e6e6:	d066      	beq.n	800e7b6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 800e6e8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800e6ec:	428d      	cmp	r5, r1
 800e6ee:	bfd4      	ite	le
 800e6f0:	2100      	movle	r1, #0
 800e6f2:	2101      	movgt	r1, #1
 800e6f4:	a811      	add	r0, sp, #68	; 0x44
 800e6f6:	f7ff fe5f 	bl	800e3b8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800e6fa:	9b08      	ldr	r3, [sp, #32]
 800e6fc:	2b00      	cmp	r3, #0
 800e6fe:	d055      	beq.n	800e7ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800e700:	f894 b010 	ldrb.w	fp, [r4, #16]
 800e704:	2264      	movs	r2, #100	; 0x64
 800e706:	4639      	mov	r1, r7
 800e708:	a84b      	add	r0, sp, #300	; 0x12c
 800e70a:	f00f fa0d 	bl	801db28 <memcpy>
 800e70e:	f1bb 0f00 	cmp.w	fp, #0
 800e712:	d058      	beq.n	800e7c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 800e714:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 800e718:	7922      	ldrb	r2, [r4, #4]
 800e71a:	2a01      	cmp	r2, #1
 800e71c:	d13c      	bne.n	800e798 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800e71e:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 800e722:	1ac0      	subs	r0, r0, r3
 800e724:	2302      	movs	r3, #2
 800e726:	fb90 f0f3 	sdiv	r0, r0, r3
 800e72a:	b200      	sxth	r0, r0
 800e72c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800e730:	4418      	add	r0, r3
 800e732:	7c23      	ldrb	r3, [r4, #16]
 800e734:	b200      	sxth	r0, r0
 800e736:	2b00      	cmp	r3, #0
 800e738:	d03a      	beq.n	800e7b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 800e73a:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 800e73e:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 800e742:	9000      	str	r0, [sp, #0]
 800e744:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800e748:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 800e74c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800e74e:	e9cd a703 	strd	sl, r7, [sp, #12]
 800e752:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800e756:	464a      	mov	r2, r9
 800e758:	2100      	movs	r1, #0
 800e75a:	f7ff fcbe 	bl	800e0da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800e75e:	2800      	cmp	r0, #0
 800e760:	d1b9      	bne.n	800e6d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800e762:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800e766:	b2b2      	uxth	r2, r6
 800e768:	4611      	mov	r1, r2
 800e76a:	4413      	add	r3, r2
 800e76c:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 800e770:	1a52      	subs	r2, r2, r1
 800e772:	7c21      	ldrb	r1, [r4, #16]
 800e774:	b21b      	sxth	r3, r3
 800e776:	b212      	sxth	r2, r2
 800e778:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800e77c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 800e780:	b109      	cbz	r1, 800e786 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 800e782:	42b2      	cmp	r2, r6
 800e784:	dba7      	blt.n	800e6d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800e786:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800e78a:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800e78e:	440a      	add	r2, r1
 800e790:	b212      	sxth	r2, r2
 800e792:	4293      	cmp	r3, r2
 800e794:	dda5      	ble.n	800e6e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 800e796:	e79e      	b.n	800e6d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800e798:	2a02      	cmp	r2, #2
 800e79a:	d105      	bne.n	800e7a8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800e79c:	7be2      	ldrb	r2, [r4, #15]
 800e79e:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 800e7a2:	1a80      	subs	r0, r0, r2
 800e7a4:	1ac0      	subs	r0, r0, r3
 800e7a6:	e7c0      	b.n	800e72a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 800e7a8:	2000      	movs	r0, #0
 800e7aa:	e7bf      	b.n	800e72c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 800e7ac:	7be0      	ldrb	r0, [r4, #15]
 800e7ae:	e7bd      	b.n	800e72c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 800e7b0:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800e7b4:	e7c3      	b.n	800e73e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 800e7b6:	9b08      	ldr	r3, [sp, #32]
 800e7b8:	2b00      	cmp	r3, #0
 800e7ba:	d0f7      	beq.n	800e7ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800e7bc:	2264      	movs	r2, #100	; 0x64
 800e7be:	4639      	mov	r1, r7
 800e7c0:	a84b      	add	r0, sp, #300	; 0x12c
 800e7c2:	f00f f9b1 	bl	801db28 <memcpy>
 800e7c6:	2300      	movs	r3, #0
 800e7c8:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800e7cc:	6821      	ldr	r1, [r4, #0]
 800e7ce:	a84b      	add	r0, sp, #300	; 0x12c
 800e7d0:	f7ff fc16 	bl	800e000 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800e7d4:	b203      	sxth	r3, r0
 800e7d6:	e79f      	b.n	800e718 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

0800e7d8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800e7d8:	b510      	push	{r4, lr}
 800e7da:	2b02      	cmp	r3, #2
 800e7dc:	f9b0 4000 	ldrsh.w	r4, [r0]
 800e7e0:	d00b      	beq.n	800e7fa <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800e7e2:	2b03      	cmp	r3, #3
 800e7e4:	d00e      	beq.n	800e804 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800e7e6:	2b01      	cmp	r3, #1
 800e7e8:	d001      	beq.n	800e7ee <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800e7ea:	1860      	adds	r0, r4, r1
 800e7ec:	bd10      	pop	{r4, pc}
 800e7ee:	8880      	ldrh	r0, [r0, #4]
 800e7f0:	4420      	add	r0, r4
 800e7f2:	b200      	sxth	r0, r0
 800e7f4:	1a80      	subs	r0, r0, r2
 800e7f6:	3801      	subs	r0, #1
 800e7f8:	e7f8      	b.n	800e7ec <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800e7fa:	8880      	ldrh	r0, [r0, #4]
 800e7fc:	4420      	add	r0, r4
 800e7fe:	b200      	sxth	r0, r0
 800e800:	1a40      	subs	r0, r0, r1
 800e802:	e7f8      	b.n	800e7f6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800e804:	18a0      	adds	r0, r4, r2
 800e806:	e7f1      	b.n	800e7ec <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800e808 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800e808:	b510      	push	{r4, lr}
 800e80a:	2b02      	cmp	r3, #2
 800e80c:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800e810:	d006      	beq.n	800e820 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800e812:	2b03      	cmp	r3, #3
 800e814:	d00a      	beq.n	800e82c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800e816:	2b01      	cmp	r3, #1
 800e818:	bf14      	ite	ne
 800e81a:	18a0      	addne	r0, r4, r2
 800e81c:	1860      	addeq	r0, r4, r1
 800e81e:	bd10      	pop	{r4, pc}
 800e820:	88c0      	ldrh	r0, [r0, #6]
 800e822:	4420      	add	r0, r4
 800e824:	b200      	sxth	r0, r0
 800e826:	1a80      	subs	r0, r0, r2
 800e828:	3801      	subs	r0, #1
 800e82a:	e7f8      	b.n	800e81e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800e82c:	88c0      	ldrh	r0, [r0, #6]
 800e82e:	4420      	add	r0, r4
 800e830:	b200      	sxth	r0, r0
 800e832:	1a40      	subs	r0, r0, r1
 800e834:	e7f8      	b.n	800e828 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0800e838 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800e838:	4b01      	ldr	r3, [pc, #4]	; (800e840 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800e83a:	2200      	movs	r2, #0
 800e83c:	601a      	str	r2, [r3, #0]
 800e83e:	4770      	bx	lr
 800e840:	20026f08 	.word	0x20026f08

0800e844 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800e844:	4603      	mov	r3, r0
 800e846:	b1c8      	cbz	r0, 800e87c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800e848:	0c02      	lsrs	r2, r0, #16
 800e84a:	0412      	lsls	r2, r2, #16
 800e84c:	b9a2      	cbnz	r2, 800e878 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800e84e:	0403      	lsls	r3, r0, #16
 800e850:	2010      	movs	r0, #16
 800e852:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800e856:	bf04      	itt	eq
 800e858:	021b      	lsleq	r3, r3, #8
 800e85a:	3008      	addeq	r0, #8
 800e85c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800e860:	bf04      	itt	eq
 800e862:	011b      	lsleq	r3, r3, #4
 800e864:	3004      	addeq	r0, #4
 800e866:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800e86a:	bf04      	itt	eq
 800e86c:	009b      	lsleq	r3, r3, #2
 800e86e:	3002      	addeq	r0, #2
 800e870:	2b00      	cmp	r3, #0
 800e872:	db04      	blt.n	800e87e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800e874:	3001      	adds	r0, #1
 800e876:	4770      	bx	lr
 800e878:	2000      	movs	r0, #0
 800e87a:	e7ea      	b.n	800e852 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800e87c:	2020      	movs	r0, #32
 800e87e:	4770      	bx	lr

0800e880 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800e880:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e884:	b087      	sub	sp, #28
 800e886:	4681      	mov	r9, r0
 800e888:	4698      	mov	r8, r3
 800e88a:	4610      	mov	r0, r2
 800e88c:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800e890:	460d      	mov	r5, r1
 800e892:	b981      	cbnz	r1, 800e8b6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800e894:	b14b      	cbz	r3, 800e8aa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800e896:	460b      	mov	r3, r1
 800e898:	e9cd 4700 	strd	r4, r7, [sp]
 800e89c:	464a      	mov	r2, r9
 800e89e:	4641      	mov	r1, r8
 800e8a0:	f7ff ffee 	bl	800e880 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800e8a4:	b007      	add	sp, #28
 800e8a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e8aa:	f04f 33ff 	mov.w	r3, #4294967295
 800e8ae:	603b      	str	r3, [r7, #0]
 800e8b0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800e8b4:	e7f6      	b.n	800e8a4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800e8b6:	fa32 fa01 	lsrs.w	sl, r2, r1
 800e8ba:	d107      	bne.n	800e8cc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800e8bc:	fb09 f602 	mul.w	r6, r9, r2
 800e8c0:	fbb6 f0f4 	udiv	r0, r6, r4
 800e8c4:	fb04 6610 	mls	r6, r4, r0, r6
 800e8c8:	603e      	str	r6, [r7, #0]
 800e8ca:	e7eb      	b.n	800e8a4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800e8cc:	2601      	movs	r6, #1
 800e8ce:	408e      	lsls	r6, r1
 800e8d0:	3e01      	subs	r6, #1
 800e8d2:	4016      	ands	r6, r2
 800e8d4:	fa09 fb01 	lsl.w	fp, r9, r1
 800e8d8:	4630      	mov	r0, r6
 800e8da:	fbbb f3f4 	udiv	r3, fp, r4
 800e8de:	9302      	str	r3, [sp, #8]
 800e8e0:	fb0a f303 	mul.w	r3, sl, r3
 800e8e4:	9303      	str	r3, [sp, #12]
 800e8e6:	f7ff ffad 	bl	800e844 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800e8ea:	464a      	mov	r2, r9
 800e8ec:	460b      	mov	r3, r1
 800e8ee:	e9cd 4700 	strd	r4, r7, [sp]
 800e8f2:	4601      	mov	r1, r0
 800e8f4:	4630      	mov	r0, r6
 800e8f6:	f7ff ffc3 	bl	800e880 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800e8fa:	9b02      	ldr	r3, [sp, #8]
 800e8fc:	fb04 bb13 	mls	fp, r4, r3, fp
 800e900:	4606      	mov	r6, r0
 800e902:	4658      	mov	r0, fp
 800e904:	eb05 0108 	add.w	r1, r5, r8
 800e908:	f7ff ff9c 	bl	800e844 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800e90c:	ab05      	add	r3, sp, #20
 800e90e:	e9cd 4300 	strd	r4, r3, [sp]
 800e912:	465a      	mov	r2, fp
 800e914:	4603      	mov	r3, r0
 800e916:	4650      	mov	r0, sl
 800e918:	f7ff ffb2 	bl	800e880 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800e91c:	6839      	ldr	r1, [r7, #0]
 800e91e:	9a05      	ldr	r2, [sp, #20]
 800e920:	9b03      	ldr	r3, [sp, #12]
 800e922:	4411      	add	r1, r2
 800e924:	fbb1 f2f4 	udiv	r2, r1, r4
 800e928:	18d3      	adds	r3, r2, r3
 800e92a:	441e      	add	r6, r3
 800e92c:	fb04 1412 	mls	r4, r4, r2, r1
 800e930:	4430      	add	r0, r6
 800e932:	603c      	str	r4, [r7, #0]
 800e934:	e7b6      	b.n	800e8a4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800e936 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800e936:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e93a:	b085      	sub	sp, #20
 800e93c:	f1b0 0900 	subs.w	r9, r0, #0
 800e940:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800e942:	461d      	mov	r5, r3
 800e944:	bfbf      	itttt	lt
 800e946:	6823      	ldrlt	r3, [r4, #0]
 800e948:	425b      	neglt	r3, r3
 800e94a:	f1c9 0900 	rsblt	r9, r9, #0
 800e94e:	6023      	strlt	r3, [r4, #0]
 800e950:	bfb4      	ite	lt
 800e952:	f04f 36ff 	movlt.w	r6, #4294967295
 800e956:	2601      	movge	r6, #1
 800e958:	2a00      	cmp	r2, #0
 800e95a:	4617      	mov	r7, r2
 800e95c:	da04      	bge.n	800e968 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800e95e:	6823      	ldr	r3, [r4, #0]
 800e960:	425b      	negs	r3, r3
 800e962:	4257      	negs	r7, r2
 800e964:	4276      	negs	r6, r6
 800e966:	6023      	str	r3, [r4, #0]
 800e968:	2d00      	cmp	r5, #0
 800e96a:	4638      	mov	r0, r7
 800e96c:	bfba      	itte	lt
 800e96e:	426d      	neglt	r5, r5
 800e970:	f04f 38ff 	movlt.w	r8, #4294967295
 800e974:	f04f 0801 	movge.w	r8, #1
 800e978:	f7ff ff64 	bl	800e844 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800e97c:	ab03      	add	r3, sp, #12
 800e97e:	e9cd 5300 	strd	r5, r3, [sp]
 800e982:	463a      	mov	r2, r7
 800e984:	4603      	mov	r3, r0
 800e986:	4648      	mov	r0, r9
 800e988:	f7ff ff7a 	bl	800e880 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800e98c:	6823      	ldr	r3, [r4, #0]
 800e98e:	9a03      	ldr	r2, [sp, #12]
 800e990:	4546      	cmp	r6, r8
 800e992:	441a      	add	r2, r3
 800e994:	fb92 f3f5 	sdiv	r3, r2, r5
 800e998:	4418      	add	r0, r3
 800e99a:	bf18      	it	ne
 800e99c:	4240      	negne	r0, r0
 800e99e:	fb05 2313 	mls	r3, r5, r3, r2
 800e9a2:	1c72      	adds	r2, r6, #1
 800e9a4:	6023      	str	r3, [r4, #0]
 800e9a6:	d105      	bne.n	800e9b4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800e9a8:	2b00      	cmp	r3, #0
 800e9aa:	f1c3 0200 	rsb	r2, r3, #0
 800e9ae:	db0b      	blt.n	800e9c8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800e9b0:	6022      	str	r2, [r4, #0]
 800e9b2:	e006      	b.n	800e9c2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800e9b4:	2e01      	cmp	r6, #1
 800e9b6:	d104      	bne.n	800e9c2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800e9b8:	2b00      	cmp	r3, #0
 800e9ba:	da02      	bge.n	800e9c2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800e9bc:	442b      	add	r3, r5
 800e9be:	3801      	subs	r0, #1
 800e9c0:	6023      	str	r3, [r4, #0]
 800e9c2:	b005      	add	sp, #20
 800e9c4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e9c8:	3801      	subs	r0, #1
 800e9ca:	1b52      	subs	r2, r2, r5
 800e9cc:	e7f0      	b.n	800e9b0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800e9d0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800e9d0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800e9d4:	4c1c      	ldr	r4, [pc, #112]	; (800ea48 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800e9d6:	6807      	ldr	r7, [r0, #0]
 800e9d8:	69a3      	ldr	r3, [r4, #24]
 800e9da:	4605      	mov	r5, r0
 800e9dc:	b92b      	cbnz	r3, 800e9ea <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800e9de:	6840      	ldr	r0, [r0, #4]
 800e9e0:	e9c5 7000 	strd	r7, r0, [r5]
 800e9e4:	b004      	add	sp, #16
 800e9e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e9ea:	68a2      	ldr	r2, [r4, #8]
 800e9ec:	6820      	ldr	r0, [r4, #0]
 800e9ee:	ae04      	add	r6, sp, #16
 800e9f0:	f04f 0802 	mov.w	r8, #2
 800e9f4:	fb93 f1f8 	sdiv	r1, r3, r8
 800e9f8:	440a      	add	r2, r1
 800e9fa:	f846 2d04 	str.w	r2, [r6, #-4]!
 800e9fe:	69e1      	ldr	r1, [r4, #28]
 800ea00:	9600      	str	r6, [sp, #0]
 800ea02:	463a      	mov	r2, r7
 800ea04:	f7ff ff97 	bl	800e936 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ea08:	69a3      	ldr	r3, [r4, #24]
 800ea0a:	686a      	ldr	r2, [r5, #4]
 800ea0c:	6a21      	ldr	r1, [r4, #32]
 800ea0e:	9600      	str	r6, [sp, #0]
 800ea10:	4607      	mov	r7, r0
 800ea12:	6860      	ldr	r0, [r4, #4]
 800ea14:	f7ff ff8f 	bl	800e936 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ea18:	6962      	ldr	r2, [r4, #20]
 800ea1a:	69a3      	ldr	r3, [r4, #24]
 800ea1c:	fb93 f8f8 	sdiv	r8, r3, r8
 800ea20:	4442      	add	r2, r8
 800ea22:	9203      	str	r2, [sp, #12]
 800ea24:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800ea26:	682a      	ldr	r2, [r5, #0]
 800ea28:	9600      	str	r6, [sp, #0]
 800ea2a:	4407      	add	r7, r0
 800ea2c:	68e0      	ldr	r0, [r4, #12]
 800ea2e:	f7ff ff82 	bl	800e936 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ea32:	9600      	str	r6, [sp, #0]
 800ea34:	4680      	mov	r8, r0
 800ea36:	69a3      	ldr	r3, [r4, #24]
 800ea38:	686a      	ldr	r2, [r5, #4]
 800ea3a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800ea3c:	6920      	ldr	r0, [r4, #16]
 800ea3e:	f7ff ff7a 	bl	800e936 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ea42:	4440      	add	r0, r8
 800ea44:	e7cc      	b.n	800e9e0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800ea46:	bf00      	nop
 800ea48:	20026f0c 	.word	0x20026f0c

0800ea4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800ea4c:	4b07      	ldr	r3, [pc, #28]	; (800ea6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800ea4e:	781b      	ldrb	r3, [r3, #0]
 800ea50:	2b01      	cmp	r3, #1
 800ea52:	d109      	bne.n	800ea68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800ea54:	f9b1 3000 	ldrsh.w	r3, [r1]
 800ea58:	f9b0 2000 	ldrsh.w	r2, [r0]
 800ea5c:	8003      	strh	r3, [r0, #0]
 800ea5e:	4b04      	ldr	r3, [pc, #16]	; (800ea70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800ea60:	881b      	ldrh	r3, [r3, #0]
 800ea62:	3b01      	subs	r3, #1
 800ea64:	1a9b      	subs	r3, r3, r2
 800ea66:	800b      	strh	r3, [r1, #0]
 800ea68:	4770      	bx	lr
 800ea6a:	bf00      	nop
 800ea6c:	20026ef6 	.word	0x20026ef6
 800ea70:	20026ef2 	.word	0x20026ef2

0800ea74 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800ea74:	b510      	push	{r4, lr}
 800ea76:	4b07      	ldr	r3, [pc, #28]	; (800ea94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800ea78:	781b      	ldrb	r3, [r3, #0]
 800ea7a:	2b01      	cmp	r3, #1
 800ea7c:	d108      	bne.n	800ea90 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800ea7e:	4b06      	ldr	r3, [pc, #24]	; (800ea98 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800ea80:	880c      	ldrh	r4, [r1, #0]
 800ea82:	881b      	ldrh	r3, [r3, #0]
 800ea84:	f9b0 2000 	ldrsh.w	r2, [r0]
 800ea88:	3b01      	subs	r3, #1
 800ea8a:	1b1b      	subs	r3, r3, r4
 800ea8c:	8003      	strh	r3, [r0, #0]
 800ea8e:	800a      	strh	r2, [r1, #0]
 800ea90:	bd10      	pop	{r4, pc}
 800ea92:	bf00      	nop
 800ea94:	20026ef6 	.word	0x20026ef6
 800ea98:	20026ef2 	.word	0x20026ef2

0800ea9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800ea9c:	b510      	push	{r4, lr}
 800ea9e:	4b0a      	ldr	r3, [pc, #40]	; (800eac8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800eaa0:	781b      	ldrb	r3, [r3, #0]
 800eaa2:	2b01      	cmp	r3, #1
 800eaa4:	d10e      	bne.n	800eac4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800eaa6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800eaaa:	8843      	ldrh	r3, [r0, #2]
 800eaac:	f9b0 4000 	ldrsh.w	r4, [r0]
 800eab0:	8044      	strh	r4, [r0, #2]
 800eab2:	18ca      	adds	r2, r1, r3
 800eab4:	4b05      	ldr	r3, [pc, #20]	; (800eacc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800eab6:	881b      	ldrh	r3, [r3, #0]
 800eab8:	1a9b      	subs	r3, r3, r2
 800eaba:	8003      	strh	r3, [r0, #0]
 800eabc:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800eac0:	80c3      	strh	r3, [r0, #6]
 800eac2:	8081      	strh	r1, [r0, #4]
 800eac4:	bd10      	pop	{r4, pc}
 800eac6:	bf00      	nop
 800eac8:	20026ef6 	.word	0x20026ef6
 800eacc:	20026ef2 	.word	0x20026ef2

0800ead0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800ead0:	4b08      	ldr	r3, [pc, #32]	; (800eaf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800ead2:	781b      	ldrb	r3, [r3, #0]
 800ead4:	2b01      	cmp	r3, #1
 800ead6:	d10c      	bne.n	800eaf2 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800ead8:	8803      	ldrh	r3, [r0, #0]
 800eada:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800eade:	8842      	ldrh	r2, [r0, #2]
 800eae0:	8002      	strh	r2, [r0, #0]
 800eae2:	185a      	adds	r2, r3, r1
 800eae4:	4b04      	ldr	r3, [pc, #16]	; (800eaf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800eae6:	881b      	ldrh	r3, [r3, #0]
 800eae8:	1a9b      	subs	r3, r3, r2
 800eaea:	8043      	strh	r3, [r0, #2]
 800eaec:	88c3      	ldrh	r3, [r0, #6]
 800eaee:	8083      	strh	r3, [r0, #4]
 800eaf0:	80c1      	strh	r1, [r0, #6]
 800eaf2:	4770      	bx	lr
 800eaf4:	20026ef6 	.word	0x20026ef6
 800eaf8:	20026ef2 	.word	0x20026ef2

0800eafc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800eafc:	b510      	push	{r4, lr}
 800eafe:	4b07      	ldr	r3, [pc, #28]	; (800eb1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800eb00:	781b      	ldrb	r3, [r3, #0]
 800eb02:	2b01      	cmp	r3, #1
 800eb04:	d108      	bne.n	800eb18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800eb06:	f9b1 3000 	ldrsh.w	r3, [r1]
 800eb0a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800eb0e:	8003      	strh	r3, [r0, #0]
 800eb10:	8893      	ldrh	r3, [r2, #4]
 800eb12:	3b01      	subs	r3, #1
 800eb14:	1b1b      	subs	r3, r3, r4
 800eb16:	800b      	strh	r3, [r1, #0]
 800eb18:	bd10      	pop	{r4, pc}
 800eb1a:	bf00      	nop
 800eb1c:	20026ef6 	.word	0x20026ef6

0800eb20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800eb20:	b510      	push	{r4, lr}
 800eb22:	4b0a      	ldr	r3, [pc, #40]	; (800eb4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800eb24:	781b      	ldrb	r3, [r3, #0]
 800eb26:	2b01      	cmp	r3, #1
 800eb28:	460a      	mov	r2, r1
 800eb2a:	d10d      	bne.n	800eb48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800eb2c:	8881      	ldrh	r1, [r0, #4]
 800eb2e:	8803      	ldrh	r3, [r0, #0]
 800eb30:	440b      	add	r3, r1
 800eb32:	4601      	mov	r1, r0
 800eb34:	3b01      	subs	r3, #1
 800eb36:	f821 3b02 	strh.w	r3, [r1], #2
 800eb3a:	f7ff ffdf 	bl	800eafc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800eb3e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800eb42:	88c2      	ldrh	r2, [r0, #6]
 800eb44:	8082      	strh	r2, [r0, #4]
 800eb46:	80c3      	strh	r3, [r0, #6]
 800eb48:	bd10      	pop	{r4, pc}
 800eb4a:	bf00      	nop
 800eb4c:	20026ef6 	.word	0x20026ef6

0800eb50 <_ZN8touchgfx11Application13requestRedrawEv>:
 800eb50:	4b06      	ldr	r3, [pc, #24]	; (800eb6c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800eb52:	f9b3 2000 	ldrsh.w	r2, [r3]
 800eb56:	4b06      	ldr	r3, [pc, #24]	; (800eb70 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800eb58:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800eb5c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800eb60:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800eb64:	2100      	movs	r1, #0
 800eb66:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800eb6a:	4770      	bx	lr
 800eb6c:	20026ef2 	.word	0x20026ef2
 800eb70:	20026ef4 	.word	0x20026ef4

0800eb74 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800eb74:	4b03      	ldr	r3, [pc, #12]	; (800eb84 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800eb76:	6818      	ldr	r0, [r3, #0]
 800eb78:	b110      	cbz	r0, 800eb80 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800eb7a:	6803      	ldr	r3, [r0, #0]
 800eb7c:	699b      	ldr	r3, [r3, #24]
 800eb7e:	4718      	bx	r3
 800eb80:	4770      	bx	lr
 800eb82:	bf00      	nop
 800eb84:	20026f3c 	.word	0x20026f3c

0800eb88 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800eb88:	4770      	bx	lr
	...

0800eb8c <_ZN8touchgfx11Application4drawEv>:
 800eb8c:	b507      	push	{r0, r1, r2, lr}
 800eb8e:	4b09      	ldr	r3, [pc, #36]	; (800ebb4 <_ZN8touchgfx11Application4drawEv+0x28>)
 800eb90:	f9b3 2000 	ldrsh.w	r2, [r3]
 800eb94:	4b08      	ldr	r3, [pc, #32]	; (800ebb8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800eb96:	f8ad 2004 	strh.w	r2, [sp, #4]
 800eb9a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800eb9e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800eba2:	6803      	ldr	r3, [r0, #0]
 800eba4:	2100      	movs	r1, #0
 800eba6:	9100      	str	r1, [sp, #0]
 800eba8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ebaa:	4669      	mov	r1, sp
 800ebac:	4798      	blx	r3
 800ebae:	b003      	add	sp, #12
 800ebb0:	f85d fb04 	ldr.w	pc, [sp], #4
 800ebb4:	20026ef2 	.word	0x20026ef2
 800ebb8:	20026ef4 	.word	0x20026ef4

0800ebbc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800ebbc:	4b03      	ldr	r3, [pc, #12]	; (800ebcc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800ebbe:	6818      	ldr	r0, [r3, #0]
 800ebc0:	b110      	cbz	r0, 800ebc8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800ebc2:	6803      	ldr	r3, [r0, #0]
 800ebc4:	69db      	ldr	r3, [r3, #28]
 800ebc6:	4718      	bx	r3
 800ebc8:	4770      	bx	lr
 800ebca:	bf00      	nop
 800ebcc:	20026f3c 	.word	0x20026f3c

0800ebd0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800ebd0:	4b03      	ldr	r3, [pc, #12]	; (800ebe0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800ebd2:	6818      	ldr	r0, [r3, #0]
 800ebd4:	b110      	cbz	r0, 800ebdc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800ebd6:	6803      	ldr	r3, [r0, #0]
 800ebd8:	6a1b      	ldr	r3, [r3, #32]
 800ebda:	4718      	bx	r3
 800ebdc:	4770      	bx	lr
 800ebde:	bf00      	nop
 800ebe0:	20026f3c 	.word	0x20026f3c

0800ebe4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800ebe4:	2300      	movs	r3, #0
 800ebe6:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800ebea:	4770      	bx	lr

0800ebec <_ZN8touchgfx11Application14handleKeyEventEh>:
 800ebec:	4b03      	ldr	r3, [pc, #12]	; (800ebfc <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800ebee:	6818      	ldr	r0, [r3, #0]
 800ebf0:	b110      	cbz	r0, 800ebf8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800ebf2:	6803      	ldr	r3, [r0, #0]
 800ebf4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ebf6:	4718      	bx	r3
 800ebf8:	4770      	bx	lr
 800ebfa:	bf00      	nop
 800ebfc:	20026f3c 	.word	0x20026f3c

0800ec00 <_ZN8touchgfx11Application15handleTickEventEv>:
 800ec00:	b570      	push	{r4, r5, r6, lr}
 800ec02:	4d38      	ldr	r5, [pc, #224]	; (800ece4 <_ZN8touchgfx11Application15handleTickEventEv+0xe4>)
 800ec04:	4604      	mov	r4, r0
 800ec06:	6828      	ldr	r0, [r5, #0]
 800ec08:	b140      	cbz	r0, 800ec1c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800ec0a:	7a03      	ldrb	r3, [r0, #8]
 800ec0c:	b933      	cbnz	r3, 800ec1c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800ec0e:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 800ec12:	6803      	ldr	r3, [r0, #0]
 800ec14:	689b      	ldr	r3, [r3, #8]
 800ec16:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ec1a:	4718      	bx	r3
 800ec1c:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 800ec20:	b97b      	cbnz	r3, 800ec42 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800ec22:	b170      	cbz	r0, 800ec42 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800ec24:	7a03      	ldrb	r3, [r0, #8]
 800ec26:	b163      	cbz	r3, 800ec42 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800ec28:	4b2f      	ldr	r3, [pc, #188]	; (800ece8 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 800ec2a:	6818      	ldr	r0, [r3, #0]
 800ec2c:	b110      	cbz	r0, 800ec34 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800ec2e:	6803      	ldr	r3, [r0, #0]
 800ec30:	691b      	ldr	r3, [r3, #16]
 800ec32:	4798      	blx	r3
 800ec34:	6828      	ldr	r0, [r5, #0]
 800ec36:	6803      	ldr	r3, [r0, #0]
 800ec38:	68db      	ldr	r3, [r3, #12]
 800ec3a:	4798      	blx	r3
 800ec3c:	2301      	movs	r3, #1
 800ec3e:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 800ec42:	2500      	movs	r5, #0
 800ec44:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800ec48:	42a8      	cmp	r0, r5
 800ec4a:	dd0c      	ble.n	800ec66 <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800ec4c:	1963      	adds	r3, r4, r5
 800ec4e:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800ec52:	b132      	cbz	r2, 800ec62 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800ec54:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800ec58:	4413      	add	r3, r2
 800ec5a:	6858      	ldr	r0, [r3, #4]
 800ec5c:	6803      	ldr	r3, [r0, #0]
 800ec5e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800ec60:	4798      	blx	r3
 800ec62:	3501      	adds	r5, #1
 800ec64:	e7ee      	b.n	800ec44 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800ec66:	2300      	movs	r3, #0
 800ec68:	461a      	mov	r2, r3
 800ec6a:	4298      	cmp	r0, r3
 800ec6c:	d10f      	bne.n	800ec8e <_ZN8touchgfx11Application15handleTickEventEv+0x8e>
 800ec6e:	1d25      	adds	r5, r4, #4
 800ec70:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800ec74:	4291      	cmp	r1, r2
 800ec76:	dd2d      	ble.n	800ecd4 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>
 800ec78:	1e48      	subs	r0, r1, #1
 800ec7a:	b280      	uxth	r0, r0
 800ec7c:	4288      	cmp	r0, r1
 800ec7e:	d31a      	bcc.n	800ecb6 <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 800ec80:	4b1a      	ldr	r3, [pc, #104]	; (800ecec <_ZN8touchgfx11Application15handleTickEventEv+0xec>)
 800ec82:	4a1b      	ldr	r2, [pc, #108]	; (800ecf0 <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 800ec84:	481b      	ldr	r0, [pc, #108]	; (800ecf4 <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 800ec86:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 800ec8a:	f00e fecf 	bl	801da2c <__assert_func>
 800ec8e:	18e1      	adds	r1, r4, r3
 800ec90:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800ec94:	b16d      	cbz	r5, 800ecb2 <_ZN8touchgfx11Application15handleTickEventEv+0xb2>
 800ec96:	429a      	cmp	r2, r3
 800ec98:	d00a      	beq.n	800ecb0 <_ZN8touchgfx11Application15handleTickEventEv+0xb0>
 800ec9a:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800ec9e:	4431      	add	r1, r6
 800eca0:	684e      	ldr	r6, [r1, #4]
 800eca2:	b291      	uxth	r1, r2
 800eca4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800eca8:	604e      	str	r6, [r1, #4]
 800ecaa:	18a1      	adds	r1, r4, r2
 800ecac:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800ecb0:	3201      	adds	r2, #1
 800ecb2:	3301      	adds	r3, #1
 800ecb4:	e7d9      	b.n	800ec6a <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800ecb6:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800ecba:	3304      	adds	r3, #4
 800ecbc:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800ecc0:	428b      	cmp	r3, r1
 800ecc2:	d004      	beq.n	800ecce <_ZN8touchgfx11Application15handleTickEventEv+0xce>
 800ecc4:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800ecc8:	f843 6c04 	str.w	r6, [r3, #-4]
 800eccc:	e7f8      	b.n	800ecc0 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800ecce:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800ecd2:	e7cd      	b.n	800ec70 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800ecd4:	4b04      	ldr	r3, [pc, #16]	; (800ece8 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 800ecd6:	6818      	ldr	r0, [r3, #0]
 800ecd8:	b110      	cbz	r0, 800ece0 <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 800ecda:	6803      	ldr	r3, [r0, #0]
 800ecdc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ecde:	e79a      	b.n	800ec16 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800ece0:	bd70      	pop	{r4, r5, r6, pc}
 800ece2:	bf00      	nop
 800ece4:	20026f40 	.word	0x20026f40
 800ece8:	20026f3c 	.word	0x20026f3c
 800ecec:	08020cfc 	.word	0x08020cfc
 800ecf0:	08020ef0 	.word	0x08020ef0
 800ecf4:	08020d0a 	.word	0x08020d0a

0800ecf8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800ecf8:	b570      	push	{r4, r5, r6, lr}
 800ecfa:	4606      	mov	r6, r0
 800ecfc:	460c      	mov	r4, r1
 800ecfe:	b929      	cbnz	r1, 800ed0c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800ed00:	4b0c      	ldr	r3, [pc, #48]	; (800ed34 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800ed02:	4a0d      	ldr	r2, [pc, #52]	; (800ed38 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800ed04:	480d      	ldr	r0, [pc, #52]	; (800ed3c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800ed06:	215e      	movs	r1, #94	; 0x5e
 800ed08:	f00e fe90 	bl	801da2c <__assert_func>
 800ed0c:	4d0c      	ldr	r5, [pc, #48]	; (800ed40 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800ed0e:	2300      	movs	r3, #0
 800ed10:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800ed14:	6828      	ldr	r0, [r5, #0]
 800ed16:	b110      	cbz	r0, 800ed1e <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800ed18:	6803      	ldr	r3, [r0, #0]
 800ed1a:	695b      	ldr	r3, [r3, #20]
 800ed1c:	4798      	blx	r3
 800ed1e:	602c      	str	r4, [r5, #0]
 800ed20:	6823      	ldr	r3, [r4, #0]
 800ed22:	4620      	mov	r0, r4
 800ed24:	68db      	ldr	r3, [r3, #12]
 800ed26:	4798      	blx	r3
 800ed28:	6833      	ldr	r3, [r6, #0]
 800ed2a:	4630      	mov	r0, r6
 800ed2c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ed2e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ed32:	4718      	bx	r3
 800ed34:	08020cc8 	.word	0x08020cc8
 800ed38:	08020db0 	.word	0x08020db0
 800ed3c:	08020cd2 	.word	0x08020cd2
 800ed40:	20026f3c 	.word	0x20026f3c

0800ed44 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800ed44:	b510      	push	{r4, lr}
 800ed46:	f9b1 4000 	ldrsh.w	r4, [r1]
 800ed4a:	888a      	ldrh	r2, [r1, #4]
 800ed4c:	f9b0 3000 	ldrsh.w	r3, [r0]
 800ed50:	4422      	add	r2, r4
 800ed52:	b212      	sxth	r2, r2
 800ed54:	4293      	cmp	r3, r2
 800ed56:	da15      	bge.n	800ed84 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ed58:	8882      	ldrh	r2, [r0, #4]
 800ed5a:	4413      	add	r3, r2
 800ed5c:	b21b      	sxth	r3, r3
 800ed5e:	429c      	cmp	r4, r3
 800ed60:	da10      	bge.n	800ed84 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ed62:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800ed66:	88c9      	ldrh	r1, [r1, #6]
 800ed68:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800ed6c:	4419      	add	r1, r3
 800ed6e:	b209      	sxth	r1, r1
 800ed70:	428a      	cmp	r2, r1
 800ed72:	da07      	bge.n	800ed84 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ed74:	88c0      	ldrh	r0, [r0, #6]
 800ed76:	4410      	add	r0, r2
 800ed78:	b200      	sxth	r0, r0
 800ed7a:	4283      	cmp	r3, r0
 800ed7c:	bfac      	ite	ge
 800ed7e:	2000      	movge	r0, #0
 800ed80:	2001      	movlt	r0, #1
 800ed82:	bd10      	pop	{r4, pc}
 800ed84:	2000      	movs	r0, #0
 800ed86:	e7fc      	b.n	800ed82 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800ed88 <_ZN8touchgfx4Rect10restrictToEss>:
 800ed88:	f9b0 3000 	ldrsh.w	r3, [r0]
 800ed8c:	2b00      	cmp	r3, #0
 800ed8e:	b510      	push	{r4, lr}
 800ed90:	da04      	bge.n	800ed9c <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800ed92:	8884      	ldrh	r4, [r0, #4]
 800ed94:	4423      	add	r3, r4
 800ed96:	8083      	strh	r3, [r0, #4]
 800ed98:	2300      	movs	r3, #0
 800ed9a:	8003      	strh	r3, [r0, #0]
 800ed9c:	f9b0 4000 	ldrsh.w	r4, [r0]
 800eda0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800eda4:	1b09      	subs	r1, r1, r4
 800eda6:	428b      	cmp	r3, r1
 800eda8:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800edac:	bfc8      	it	gt
 800edae:	8081      	strhgt	r1, [r0, #4]
 800edb0:	2b00      	cmp	r3, #0
 800edb2:	da04      	bge.n	800edbe <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800edb4:	88c1      	ldrh	r1, [r0, #6]
 800edb6:	440b      	add	r3, r1
 800edb8:	80c3      	strh	r3, [r0, #6]
 800edba:	2300      	movs	r3, #0
 800edbc:	8043      	strh	r3, [r0, #2]
 800edbe:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800edc2:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800edc6:	1a52      	subs	r2, r2, r1
 800edc8:	4293      	cmp	r3, r2
 800edca:	bfc8      	it	gt
 800edcc:	80c2      	strhgt	r2, [r0, #6]
 800edce:	bd10      	pop	{r4, pc}

0800edd0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800edd0:	b510      	push	{r4, lr}
 800edd2:	4b10      	ldr	r3, [pc, #64]	; (800ee14 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800edd4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800edd8:	4b0f      	ldr	r3, [pc, #60]	; (800ee18 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800edda:	460c      	mov	r4, r1
 800eddc:	4620      	mov	r0, r4
 800edde:	f9b3 1000 	ldrsh.w	r1, [r3]
 800ede2:	f7ff ffd1 	bl	800ed88 <_ZN8touchgfx4Rect10restrictToEss>
 800ede6:	4b0d      	ldr	r3, [pc, #52]	; (800ee1c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800ede8:	6818      	ldr	r0, [r3, #0]
 800edea:	b190      	cbz	r0, 800ee12 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800edec:	6803      	ldr	r3, [r0, #0]
 800edee:	4621      	mov	r1, r4
 800edf0:	689b      	ldr	r3, [r3, #8]
 800edf2:	4798      	blx	r3
 800edf4:	4b0a      	ldr	r3, [pc, #40]	; (800ee20 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800edf6:	6818      	ldr	r0, [r3, #0]
 800edf8:	b118      	cbz	r0, 800ee02 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800edfa:	6803      	ldr	r3, [r0, #0]
 800edfc:	4621      	mov	r1, r4
 800edfe:	689b      	ldr	r3, [r3, #8]
 800ee00:	4798      	blx	r3
 800ee02:	4b08      	ldr	r3, [pc, #32]	; (800ee24 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800ee04:	6818      	ldr	r0, [r3, #0]
 800ee06:	6803      	ldr	r3, [r0, #0]
 800ee08:	4621      	mov	r1, r4
 800ee0a:	69db      	ldr	r3, [r3, #28]
 800ee0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ee10:	4718      	bx	r3
 800ee12:	bd10      	pop	{r4, pc}
 800ee14:	20026ef4 	.word	0x20026ef4
 800ee18:	20026ef2 	.word	0x20026ef2
 800ee1c:	20026f3c 	.word	0x20026f3c
 800ee20:	20026f38 	.word	0x20026f38
 800ee24:	20026f00 	.word	0x20026f00

0800ee28 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800ee28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ee2a:	4606      	mov	r6, r0
 800ee2c:	4608      	mov	r0, r1
 800ee2e:	460f      	mov	r7, r1
 800ee30:	f7fd f825 	bl	800be7e <_ZNK8touchgfx4Rect7isEmptyEv>
 800ee34:	b9e8      	cbnz	r0, 800ee72 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800ee36:	f9b7 5000 	ldrsh.w	r5, [r7]
 800ee3a:	f9b6 4000 	ldrsh.w	r4, [r6]
 800ee3e:	42a5      	cmp	r5, r4
 800ee40:	db17      	blt.n	800ee72 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800ee42:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800ee46:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800ee4a:	429a      	cmp	r2, r3
 800ee4c:	db11      	blt.n	800ee72 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800ee4e:	88b9      	ldrh	r1, [r7, #4]
 800ee50:	440d      	add	r5, r1
 800ee52:	88b1      	ldrh	r1, [r6, #4]
 800ee54:	440c      	add	r4, r1
 800ee56:	b22d      	sxth	r5, r5
 800ee58:	b224      	sxth	r4, r4
 800ee5a:	42a5      	cmp	r5, r4
 800ee5c:	dc09      	bgt.n	800ee72 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800ee5e:	88f8      	ldrh	r0, [r7, #6]
 800ee60:	4410      	add	r0, r2
 800ee62:	88f2      	ldrh	r2, [r6, #6]
 800ee64:	4413      	add	r3, r2
 800ee66:	b200      	sxth	r0, r0
 800ee68:	b21b      	sxth	r3, r3
 800ee6a:	4298      	cmp	r0, r3
 800ee6c:	bfcc      	ite	gt
 800ee6e:	2000      	movgt	r0, #0
 800ee70:	2001      	movle	r0, #1
 800ee72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800ee74 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800ee74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ee76:	4604      	mov	r4, r0
 800ee78:	4608      	mov	r0, r1
 800ee7a:	460d      	mov	r5, r1
 800ee7c:	f7fc ffff 	bl	800be7e <_ZNK8touchgfx4Rect7isEmptyEv>
 800ee80:	b978      	cbnz	r0, 800eea2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800ee82:	4620      	mov	r0, r4
 800ee84:	f7fc fffb 	bl	800be7e <_ZNK8touchgfx4Rect7isEmptyEv>
 800ee88:	f9b5 6000 	ldrsh.w	r6, [r5]
 800ee8c:	b150      	cbz	r0, 800eea4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800ee8e:	8026      	strh	r6, [r4, #0]
 800ee90:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800ee94:	8063      	strh	r3, [r4, #2]
 800ee96:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800ee9a:	80a3      	strh	r3, [r4, #4]
 800ee9c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800eea0:	80e3      	strh	r3, [r4, #6]
 800eea2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800eea4:	f9b4 1000 	ldrsh.w	r1, [r4]
 800eea8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800eeac:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800eeb0:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800eeb4:	88ed      	ldrh	r5, [r5, #6]
 800eeb6:	42b1      	cmp	r1, r6
 800eeb8:	460f      	mov	r7, r1
 800eeba:	bfa8      	it	ge
 800eebc:	4637      	movge	r7, r6
 800eebe:	4293      	cmp	r3, r2
 800eec0:	4618      	mov	r0, r3
 800eec2:	4466      	add	r6, ip
 800eec4:	bfa8      	it	ge
 800eec6:	4610      	movge	r0, r2
 800eec8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800eecc:	8027      	strh	r7, [r4, #0]
 800eece:	442a      	add	r2, r5
 800eed0:	88e5      	ldrh	r5, [r4, #6]
 800eed2:	8060      	strh	r0, [r4, #2]
 800eed4:	4461      	add	r1, ip
 800eed6:	442b      	add	r3, r5
 800eed8:	b236      	sxth	r6, r6
 800eeda:	b209      	sxth	r1, r1
 800eedc:	b212      	sxth	r2, r2
 800eede:	b21b      	sxth	r3, r3
 800eee0:	428e      	cmp	r6, r1
 800eee2:	bfac      	ite	ge
 800eee4:	ebc7 0106 	rsbge	r1, r7, r6
 800eee8:	ebc7 0101 	rsblt	r1, r7, r1
 800eeec:	429a      	cmp	r2, r3
 800eeee:	bfac      	ite	ge
 800eef0:	ebc0 0202 	rsbge	r2, r0, r2
 800eef4:	ebc0 0203 	rsblt	r2, r0, r3
 800eef8:	80a1      	strh	r1, [r4, #4]
 800eefa:	80e2      	strh	r2, [r4, #6]
 800eefc:	e7d1      	b.n	800eea2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800ef00 <_ZN8touchgfx11Application11getInstanceEv>:
 800ef00:	4b01      	ldr	r3, [pc, #4]	; (800ef08 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800ef02:	6818      	ldr	r0, [r3, #0]
 800ef04:	4770      	bx	lr
 800ef06:	bf00      	nop
 800ef08:	20026f4c 	.word	0x20026f4c

0800ef0c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800ef0c:	2300      	movs	r3, #0
 800ef0e:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800ef12:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800ef16:	30a8      	adds	r0, #168	; 0xa8
 800ef18:	f802 3b01 	strb.w	r3, [r2], #1
 800ef1c:	4282      	cmp	r2, r0
 800ef1e:	d1fb      	bne.n	800ef18 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800ef20:	4770      	bx	lr

0800ef22 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800ef22:	4603      	mov	r3, r0
 800ef24:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800ef28:	2200      	movs	r2, #0
 800ef2a:	801a      	strh	r2, [r3, #0]
 800ef2c:	805a      	strh	r2, [r3, #2]
 800ef2e:	809a      	strh	r2, [r3, #4]
 800ef30:	80da      	strh	r2, [r3, #6]
 800ef32:	3308      	adds	r3, #8
 800ef34:	428b      	cmp	r3, r1
 800ef36:	d1f8      	bne.n	800ef2a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800ef38:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800ef3c:	4770      	bx	lr
	...

0800ef40 <_ZN8touchgfx11ApplicationC1Ev>:
 800ef40:	b570      	push	{r4, r5, r6, lr}
 800ef42:	4b19      	ldr	r3, [pc, #100]	; (800efa8 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 800ef44:	6003      	str	r3, [r0, #0]
 800ef46:	2500      	movs	r5, #0
 800ef48:	4604      	mov	r4, r0
 800ef4a:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800ef4e:	30a8      	adds	r0, #168	; 0xa8
 800ef50:	f7ff ffe7 	bl	800ef22 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ef54:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800ef58:	f7ff ffe3 	bl	800ef22 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ef5c:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800ef60:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800ef64:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800ef68:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800ef6c:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800ef70:	490e      	ldr	r1, [pc, #56]	; (800efac <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800ef72:	480f      	ldr	r0, [pc, #60]	; (800efb0 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800ef74:	4e0f      	ldr	r6, [pc, #60]	; (800efb4 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800ef76:	f00e fc21 	bl	801d7bc <CRC_Lock>
 800ef7a:	4b0f      	ldr	r3, [pc, #60]	; (800efb8 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800ef7c:	b158      	cbz	r0, 800ef96 <_ZN8touchgfx11ApplicationC1Ev+0x56>
 800ef7e:	801d      	strh	r5, [r3, #0]
 800ef80:	4a0e      	ldr	r2, [pc, #56]	; (800efbc <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800ef82:	2300      	movs	r3, #0
 800ef84:	6013      	str	r3, [r2, #0]
 800ef86:	4a0e      	ldr	r2, [pc, #56]	; (800efc0 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800ef88:	6033      	str	r3, [r6, #0]
 800ef8a:	4620      	mov	r0, r4
 800ef8c:	6013      	str	r3, [r2, #0]
 800ef8e:	f7ff ffbd 	bl	800ef0c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800ef92:	4620      	mov	r0, r4
 800ef94:	bd70      	pop	{r4, r5, r6, pc}
 800ef96:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ef9a:	2002      	movs	r0, #2
 800ef9c:	801a      	strh	r2, [r3, #0]
 800ef9e:	6030      	str	r0, [r6, #0]
 800efa0:	f001 fa0c 	bl	80103bc <_ZN8touchgfx6Screen4drawEv>
 800efa4:	e7ec      	b.n	800ef80 <_ZN8touchgfx11ApplicationC1Ev+0x40>
 800efa6:	bf00      	nop
 800efa8:	08020d6c 	.word	0x08020d6c
 800efac:	b5e8b5cd 	.word	0xb5e8b5cd
 800efb0:	f407a5c2 	.word	0xf407a5c2
 800efb4:	20026f3c 	.word	0x20026f3c
 800efb8:	2000007c 	.word	0x2000007c
 800efbc:	20026f4c 	.word	0x20026f4c
 800efc0:	20026f40 	.word	0x20026f40

0800efc4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800efc4:	b510      	push	{r4, lr}
 800efc6:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800efca:	428b      	cmp	r3, r1
 800efcc:	d806      	bhi.n	800efdc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x18>
 800efce:	4b0b      	ldr	r3, [pc, #44]	; (800effc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x38>)
 800efd0:	4a0b      	ldr	r2, [pc, #44]	; (800f000 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3c>)
 800efd2:	480c      	ldr	r0, [pc, #48]	; (800f004 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x40>)
 800efd4:	f240 11dd 	movw	r1, #477	; 0x1dd
 800efd8:	f00e fd28 	bl	801da2c <__assert_func>
 800efdc:	3b01      	subs	r3, #1
 800efde:	b29b      	uxth	r3, r3
 800efe0:	428b      	cmp	r3, r1
 800efe2:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800efe6:	d908      	bls.n	800effa <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x36>
 800efe8:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800efec:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800eff0:	681a      	ldr	r2, [r3, #0]
 800eff2:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800eff6:	685a      	ldr	r2, [r3, #4]
 800eff8:	6062      	str	r2, [r4, #4]
 800effa:	bd10      	pop	{r4, pc}
 800effc:	08020cfc 	.word	0x08020cfc
 800f000:	08020df4 	.word	0x08020df4
 800f004:	08020d0a 	.word	0x08020d0a

0800f008 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800f008:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f00a:	466b      	mov	r3, sp
 800f00c:	e883 0006 	stmia.w	r3, {r1, r2}
 800f010:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800f014:	2a07      	cmp	r2, #7
 800f016:	4604      	mov	r4, r0
 800f018:	d906      	bls.n	800f028 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800f01a:	4b09      	ldr	r3, [pc, #36]	; (800f040 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800f01c:	4a09      	ldr	r2, [pc, #36]	; (800f044 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800f01e:	480a      	ldr	r0, [pc, #40]	; (800f048 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800f020:	f240 11a3 	movw	r1, #419	; 0x1a3
 800f024:	f00e fd02 	bl	801da2c <__assert_func>
 800f028:	1c51      	adds	r1, r2, #1
 800f02a:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800f02e:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800f032:	cb03      	ldmia	r3!, {r0, r1}
 800f034:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800f038:	6069      	str	r1, [r5, #4]
 800f03a:	b003      	add	sp, #12
 800f03c:	bd30      	pop	{r4, r5, pc}
 800f03e:	bf00      	nop
 800f040:	08020d33 	.word	0x08020d33
 800f044:	08020e8a 	.word	0x08020e8a
 800f048:	08020d0a 	.word	0x08020d0a

0800f04c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800f04c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f050:	4b94      	ldr	r3, [pc, #592]	; (800f2a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 800f052:	b08d      	sub	sp, #52	; 0x34
 800f054:	ac08      	add	r4, sp, #32
 800f056:	e884 0006 	stmia.w	r4, {r1, r2}
 800f05a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f05e:	4b92      	ldr	r3, [pc, #584]	; (800f2a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 800f060:	4683      	mov	fp, r0
 800f062:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f066:	4620      	mov	r0, r4
 800f068:	f7ff fe8e 	bl	800ed88 <_ZN8touchgfx4Rect10restrictToEss>
 800f06c:	4620      	mov	r0, r4
 800f06e:	f7fc ff06 	bl	800be7e <_ZNK8touchgfx4Rect7isEmptyEv>
 800f072:	2800      	cmp	r0, #0
 800f074:	d16a      	bne.n	800f14c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800f076:	9402      	str	r4, [sp, #8]
 800f078:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800f07c:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800f080:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 800f084:	2400      	movs	r4, #0
 800f086:	9301      	str	r3, [sp, #4]
 800f088:	36a0      	adds	r6, #160	; 0xa0
 800f08a:	42a5      	cmp	r5, r4
 800f08c:	d00d      	beq.n	800f0aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 800f08e:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 800f092:	9802      	ldr	r0, [sp, #8]
 800f094:	f7ff fec8 	bl	800ee28 <_ZNK8touchgfx4Rect8includesERKS0_>
 800f098:	b128      	cbz	r0, 800f0a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 800f09a:	1e69      	subs	r1, r5, #1
 800f09c:	1b09      	subs	r1, r1, r4
 800f09e:	b289      	uxth	r1, r1
 800f0a0:	9801      	ldr	r0, [sp, #4]
 800f0a2:	f7ff ff8f 	bl	800efc4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800f0a6:	3401      	adds	r4, #1
 800f0a8:	e7ef      	b.n	800f08a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 800f0aa:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800f0ae:	9703      	str	r7, [sp, #12]
 800f0b0:	1e7b      	subs	r3, r7, #1
 800f0b2:	9300      	str	r3, [sp, #0]
 800f0b4:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 800f0b8:	2400      	movs	r4, #0
 800f0ba:	4655      	mov	r5, sl
 800f0bc:	9704      	str	r7, [sp, #16]
 800f0be:	4626      	mov	r6, r4
 800f0c0:	9b04      	ldr	r3, [sp, #16]
 800f0c2:	2b00      	cmp	r3, #0
 800f0c4:	d078      	beq.n	800f1b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 800f0c6:	9902      	ldr	r1, [sp, #8]
 800f0c8:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800f0cc:	f7ff fe3a 	bl	800ed44 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f0d0:	b360      	cbz	r0, 800f12c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800f0d2:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 800f0d6:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 800f0da:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 800f0de:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 800f0e2:	45e6      	cmp	lr, ip
 800f0e4:	db35      	blt.n	800f152 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800f0e6:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800f0ea:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800f0ee:	4472      	add	r2, lr
 800f0f0:	4463      	add	r3, ip
 800f0f2:	b212      	sxth	r2, r2
 800f0f4:	b21b      	sxth	r3, r3
 800f0f6:	429a      	cmp	r2, r3
 800f0f8:	dc2b      	bgt.n	800f152 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800f0fa:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800f0fe:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800f102:	fa1f f288 	uxth.w	r2, r8
 800f106:	4413      	add	r3, r2
 800f108:	b29b      	uxth	r3, r3
 800f10a:	45c1      	cmp	r9, r8
 800f10c:	fa0f fe83 	sxth.w	lr, r3
 800f110:	fa1f fc89 	uxth.w	ip, r9
 800f114:	db0f      	blt.n	800f136 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800f116:	eba3 030c 	sub.w	r3, r3, ip
 800f11a:	1ac9      	subs	r1, r1, r3
 800f11c:	b209      	sxth	r1, r1
 800f11e:	2900      	cmp	r1, #0
 800f120:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800f124:	dd12      	ble.n	800f14c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800f126:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 800f12a:	4604      	mov	r4, r0
 800f12c:	9b04      	ldr	r3, [sp, #16]
 800f12e:	3b01      	subs	r3, #1
 800f130:	9304      	str	r3, [sp, #16]
 800f132:	3d08      	subs	r5, #8
 800f134:	e7c4      	b.n	800f0c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 800f136:	4461      	add	r1, ip
 800f138:	b209      	sxth	r1, r1
 800f13a:	4571      	cmp	r1, lr
 800f13c:	dc3a      	bgt.n	800f1b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800f13e:	eba2 020c 	sub.w	r2, r2, ip
 800f142:	b212      	sxth	r2, r2
 800f144:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800f148:	2a00      	cmp	r2, #0
 800f14a:	dcee      	bgt.n	800f12a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800f14c:	b00d      	add	sp, #52	; 0x34
 800f14e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f152:	45c1      	cmp	r9, r8
 800f154:	db2e      	blt.n	800f1b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800f156:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800f15a:	4499      	add	r9, r3
 800f15c:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800f160:	4498      	add	r8, r3
 800f162:	fa0f f989 	sxth.w	r9, r9
 800f166:	fa0f f888 	sxth.w	r8, r8
 800f16a:	45c1      	cmp	r9, r8
 800f16c:	dc22      	bgt.n	800f1b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800f16e:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800f172:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 800f176:	fa1f f28c 	uxth.w	r2, ip
 800f17a:	4413      	add	r3, r2
 800f17c:	b29b      	uxth	r3, r3
 800f17e:	45e6      	cmp	lr, ip
 800f180:	fa1f f88e 	uxth.w	r8, lr
 800f184:	fa0f f983 	sxth.w	r9, r3
 800f188:	db0a      	blt.n	800f1a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 800f18a:	eba3 0308 	sub.w	r3, r3, r8
 800f18e:	1ac9      	subs	r1, r1, r3
 800f190:	b209      	sxth	r1, r1
 800f192:	2900      	cmp	r1, #0
 800f194:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800f198:	ddd8      	ble.n	800f14c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800f19a:	f8ad 9020 	strh.w	r9, [sp, #32]
 800f19e:	e7c4      	b.n	800f12a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800f1a0:	4441      	add	r1, r8
 800f1a2:	b209      	sxth	r1, r1
 800f1a4:	4549      	cmp	r1, r9
 800f1a6:	dc05      	bgt.n	800f1b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800f1a8:	eba2 0208 	sub.w	r2, r2, r8
 800f1ac:	b212      	sxth	r2, r2
 800f1ae:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800f1b2:	e7c9      	b.n	800f148 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800f1b4:	4606      	mov	r6, r0
 800f1b6:	e7b9      	b.n	800f12c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800f1b8:	2c00      	cmp	r4, #0
 800f1ba:	f47f af7d 	bne.w	800f0b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 800f1be:	2e00      	cmp	r6, #0
 800f1c0:	f000 81e1 	beq.w	800f586 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800f1c4:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 800f1c8:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 800f1cc:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800f1d0:	b2b9      	uxth	r1, r7
 800f1d2:	9104      	str	r1, [sp, #16]
 800f1d4:	9804      	ldr	r0, [sp, #16]
 800f1d6:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800f1da:	4401      	add	r1, r0
 800f1dc:	b2b3      	uxth	r3, r6
 800f1de:	b289      	uxth	r1, r1
 800f1e0:	441a      	add	r2, r3
 800f1e2:	9105      	str	r1, [sp, #20]
 800f1e4:	b292      	uxth	r2, r2
 800f1e6:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 800f1ea:	fa0f f882 	sxth.w	r8, r2
 800f1ee:	4655      	mov	r5, sl
 800f1f0:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800f1f4:	9b03      	ldr	r3, [sp, #12]
 800f1f6:	2b00      	cmp	r3, #0
 800f1f8:	d058      	beq.n	800f2ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 800f1fa:	9902      	ldr	r1, [sp, #8]
 800f1fc:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800f200:	f7ff fda0 	bl	800ed44 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f204:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800f208:	b1d8      	cbz	r0, 800f242 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800f20a:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 800f20e:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 800f212:	4576      	cmp	r6, lr
 800f214:	dc26      	bgt.n	800f264 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 800f216:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 800f21a:	44f4      	add	ip, lr
 800f21c:	fa0f fc8c 	sxth.w	ip, ip
 800f220:	45e0      	cmp	r8, ip
 800f222:	db1f      	blt.n	800f264 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 800f224:	428f      	cmp	r7, r1
 800f226:	fa1f fc81 	uxth.w	ip, r1
 800f22a:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 800f22e:	dc0f      	bgt.n	800f250 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 800f230:	9805      	ldr	r0, [sp, #20]
 800f232:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 800f236:	eba0 0c0c 	sub.w	ip, r0, ip
 800f23a:	eba1 010c 	sub.w	r1, r1, ip
 800f23e:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 800f242:	4620      	mov	r0, r4
 800f244:	9903      	ldr	r1, [sp, #12]
 800f246:	3901      	subs	r1, #1
 800f248:	9103      	str	r1, [sp, #12]
 800f24a:	3d08      	subs	r5, #8
 800f24c:	4604      	mov	r4, r0
 800f24e:	e7cf      	b.n	800f1f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 800f250:	4461      	add	r1, ip
 800f252:	b209      	sxth	r1, r1
 800f254:	4549      	cmp	r1, r9
 800f256:	dcf5      	bgt.n	800f244 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800f258:	9904      	ldr	r1, [sp, #16]
 800f25a:	eba1 0c0c 	sub.w	ip, r1, ip
 800f25e:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 800f262:	e7ee      	b.n	800f242 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800f264:	428f      	cmp	r7, r1
 800f266:	dced      	bgt.n	800f244 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800f268:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 800f26c:	4461      	add	r1, ip
 800f26e:	b209      	sxth	r1, r1
 800f270:	4589      	cmp	r9, r1
 800f272:	dbe7      	blt.n	800f244 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800f274:	4576      	cmp	r6, lr
 800f276:	fa1f fc8e 	uxth.w	ip, lr
 800f27a:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 800f27e:	dc08      	bgt.n	800f292 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 800f280:	eba2 0c0c 	sub.w	ip, r2, ip
 800f284:	eba1 010c 	sub.w	r1, r1, ip
 800f288:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 800f28c:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 800f290:	e7d7      	b.n	800f242 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800f292:	4461      	add	r1, ip
 800f294:	b209      	sxth	r1, r1
 800f296:	4588      	cmp	r8, r1
 800f298:	dbd4      	blt.n	800f244 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800f29a:	eba3 0c0c 	sub.w	ip, r3, ip
 800f29e:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 800f2a2:	e7ce      	b.n	800f242 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800f2a4:	20026ef4 	.word	0x20026ef4
 800f2a8:	20026ef2 	.word	0x20026ef2
 800f2ac:	2c00      	cmp	r4, #0
 800f2ae:	f000 816a 	beq.w	800f586 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800f2b2:	9b00      	ldr	r3, [sp, #0]
 800f2b4:	3301      	adds	r3, #1
 800f2b6:	f000 8166 	beq.w	800f586 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800f2ba:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 800f2be:	4621      	mov	r1, r4
 800f2c0:	9802      	ldr	r0, [sp, #8]
 800f2c2:	f7ff fdb1 	bl	800ee28 <_ZNK8touchgfx4Rect8includesERKS0_>
 800f2c6:	b120      	cbz	r0, 800f2d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 800f2c8:	f8bd 1000 	ldrh.w	r1, [sp]
 800f2cc:	9801      	ldr	r0, [sp, #4]
 800f2ce:	f7ff fe79 	bl	800efc4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800f2d2:	9902      	ldr	r1, [sp, #8]
 800f2d4:	4620      	mov	r0, r4
 800f2d6:	f7ff fd35 	bl	800ed44 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f2da:	2800      	cmp	r0, #0
 800f2dc:	f000 809b 	beq.w	800f416 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 800f2e0:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 800f2e4:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 800f2e8:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 800f2ec:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 800f2f0:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800f2f4:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 800f2f8:	fa1f f288 	uxth.w	r2, r8
 800f2fc:	19d5      	adds	r5, r2, r7
 800f2fe:	fa1f f985 	uxth.w	r9, r5
 800f302:	fa0f f589 	sxth.w	r5, r9
 800f306:	b2a1      	uxth	r1, r4
 800f308:	440b      	add	r3, r1
 800f30a:	9503      	str	r5, [sp, #12]
 800f30c:	45a0      	cmp	r8, r4
 800f30e:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800f312:	9507      	str	r5, [sp, #28]
 800f314:	b29b      	uxth	r3, r3
 800f316:	f340 809d 	ble.w	800f454 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 800f31a:	1a52      	subs	r2, r2, r1
 800f31c:	b292      	uxth	r2, r2
 800f31e:	4584      	cmp	ip, r0
 800f320:	fa0f fe83 	sxth.w	lr, r3
 800f324:	b215      	sxth	r5, r2
 800f326:	dd2f      	ble.n	800f388 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33c>
 800f328:	9e00      	ldr	r6, [sp, #0]
 800f32a:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800f32e:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 800f332:	9e03      	ldr	r6, [sp, #12]
 800f334:	eba6 060e 	sub.w	r6, r6, lr
 800f338:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 800f33c:	fa1f fc8c 	uxth.w	ip, ip
 800f340:	b280      	uxth	r0, r0
 800f342:	ebac 0300 	sub.w	r3, ip, r0
 800f346:	448c      	add	ip, r1
 800f348:	4470      	add	r0, lr
 800f34a:	b29b      	uxth	r3, r3
 800f34c:	fa0f fc8c 	sxth.w	ip, ip
 800f350:	b200      	sxth	r0, r0
 800f352:	b21c      	sxth	r4, r3
 800f354:	ebac 0000 	sub.w	r0, ip, r0
 800f358:	4366      	muls	r6, r4
 800f35a:	4368      	muls	r0, r5
 800f35c:	4286      	cmp	r6, r0
 800f35e:	db09      	blt.n	800f374 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800f360:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 800f364:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 800f368:	4417      	add	r7, r2
 800f36a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800f36e:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800f372:	e681      	b.n	800f078 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f374:	440b      	add	r3, r1
 800f376:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800f37a:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 800f37e:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 800f382:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800f386:	e677      	b.n	800f078 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f388:	9e03      	ldr	r6, [sp, #12]
 800f38a:	45b6      	cmp	lr, r6
 800f38c:	da28      	bge.n	800f3e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 800f38e:	9b00      	ldr	r3, [sp, #0]
 800f390:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 800f394:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 800f398:	eb04 030c 	add.w	r3, r4, ip
 800f39c:	fa1f f883 	uxth.w	r8, r3
 800f3a0:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 800f3a4:	4403      	add	r3, r0
 800f3a6:	eba3 0308 	sub.w	r3, r3, r8
 800f3aa:	b29b      	uxth	r3, r3
 800f3ac:	fa0f f988 	sxth.w	r9, r8
 800f3b0:	eba0 000c 	sub.w	r0, r0, ip
 800f3b4:	fa0f f883 	sxth.w	r8, r3
 800f3b8:	eba6 060e 	sub.w	r6, r6, lr
 800f3bc:	4368      	muls	r0, r5
 800f3be:	fb08 f606 	mul.w	r6, r8, r6
 800f3c2:	42b0      	cmp	r0, r6
 800f3c4:	dc06      	bgt.n	800f3d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800f3c6:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 800f3ca:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 800f3ce:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 800f3d2:	e7c9      	b.n	800f368 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31c>
 800f3d4:	4423      	add	r3, r4
 800f3d6:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 800f3da:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800f3de:	e64b      	b.n	800f078 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f3e0:	9807      	ldr	r0, [sp, #28]
 800f3e2:	eba3 0309 	sub.w	r3, r3, r9
 800f3e6:	b29b      	uxth	r3, r3
 800f3e8:	2806      	cmp	r0, #6
 800f3ea:	fa0f fc83 	sxth.w	ip, r3
 800f3ee:	d818      	bhi.n	800f422 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 800f3f0:	4652      	mov	r2, sl
 800f3f2:	ab0a      	add	r3, sp, #40	; 0x28
 800f3f4:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 800f3f8:	6851      	ldr	r1, [r2, #4]
 800f3fa:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 800f3fe:	c303      	stmia	r3!, {r0, r1}
 800f400:	9b03      	ldr	r3, [sp, #12]
 800f402:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 800f406:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 800f40a:	ab0a      	add	r3, sp, #40	; 0x28
 800f40c:	e893 0006 	ldmia.w	r3, {r1, r2}
 800f410:	9801      	ldr	r0, [sp, #4]
 800f412:	f7ff fdf9 	bl	800f008 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800f416:	9b00      	ldr	r3, [sp, #0]
 800f418:	3b01      	subs	r3, #1
 800f41a:	9300      	str	r3, [sp, #0]
 800f41c:	f1aa 0a08 	sub.w	sl, sl, #8
 800f420:	e747      	b.n	800f2b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 800f422:	9800      	ldr	r0, [sp, #0]
 800f424:	45ac      	cmp	ip, r5
 800f426:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800f42a:	db0c      	blt.n	800f446 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fa>
 800f42c:	4417      	add	r7, r2
 800f42e:	b2bf      	uxth	r7, r7
 800f430:	4458      	add	r0, fp
 800f432:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800f436:	440f      	add	r7, r1
 800f438:	f8ad 4020 	strh.w	r4, [sp, #32]
 800f43c:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 800f440:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 800f444:	e618      	b.n	800f078 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f446:	4458      	add	r0, fp
 800f448:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 800f44c:	443b      	add	r3, r7
 800f44e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800f452:	e611      	b.n	800f078 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f454:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 800f458:	fa1f f18c 	uxth.w	r1, ip
 800f45c:	eb01 0e05 	add.w	lr, r1, r5
 800f460:	b282      	uxth	r2, r0
 800f462:	fa1f fe8e 	uxth.w	lr, lr
 800f466:	9204      	str	r2, [sp, #16]
 800f468:	fa0f f28e 	sxth.w	r2, lr
 800f46c:	9205      	str	r2, [sp, #20]
 800f46e:	9e04      	ldr	r6, [sp, #16]
 800f470:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 800f474:	4432      	add	r2, r6
 800f476:	b292      	uxth	r2, r2
 800f478:	4584      	cmp	ip, r0
 800f47a:	9206      	str	r2, [sp, #24]
 800f47c:	da26      	bge.n	800f4cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x480>
 800f47e:	eba3 0309 	sub.w	r3, r3, r9
 800f482:	eba2 020e 	sub.w	r2, r2, lr
 800f486:	b29b      	uxth	r3, r3
 800f488:	b292      	uxth	r2, r2
 800f48a:	fa0f fa83 	sxth.w	sl, r3
 800f48e:	b211      	sxth	r1, r2
 800f490:	eba0 000c 	sub.w	r0, r0, ip
 800f494:	eba4 0408 	sub.w	r4, r4, r8
 800f498:	fb0a f000 	mul.w	r0, sl, r0
 800f49c:	434c      	muls	r4, r1
 800f49e:	42a0      	cmp	r0, r4
 800f4a0:	9800      	ldr	r0, [sp, #0]
 800f4a2:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800f4a6:	dc06      	bgt.n	800f4b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 800f4a8:	4458      	add	r0, fp
 800f4aa:	9a05      	ldr	r2, [sp, #20]
 800f4ac:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 800f4b0:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 800f4b4:	e7ca      	b.n	800f44c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x400>
 800f4b6:	eb0b 0300 	add.w	r3, fp, r0
 800f4ba:	9903      	ldr	r1, [sp, #12]
 800f4bc:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 800f4c0:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 800f4c4:	442a      	add	r2, r5
 800f4c6:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800f4ca:	e5d5      	b.n	800f078 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f4cc:	9e04      	ldr	r6, [sp, #16]
 800f4ce:	9a03      	ldr	r2, [sp, #12]
 800f4d0:	1b89      	subs	r1, r1, r6
 800f4d2:	b21e      	sxth	r6, r3
 800f4d4:	b289      	uxth	r1, r1
 800f4d6:	4296      	cmp	r6, r2
 800f4d8:	fa0f fc81 	sxth.w	ip, r1
 800f4dc:	dd26      	ble.n	800f52c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4e0>
 800f4de:	eba3 0309 	sub.w	r3, r3, r9
 800f4e2:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 800f4e6:	9e05      	ldr	r6, [sp, #20]
 800f4e8:	b29b      	uxth	r3, r3
 800f4ea:	eba6 0902 	sub.w	r9, r6, r2
 800f4ee:	b218      	sxth	r0, r3
 800f4f0:	eba4 0408 	sub.w	r4, r4, r8
 800f4f4:	fb0c f404 	mul.w	r4, ip, r4
 800f4f8:	fb00 f909 	mul.w	r9, r0, r9
 800f4fc:	9a00      	ldr	r2, [sp, #0]
 800f4fe:	454c      	cmp	r4, r9
 800f500:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800f504:	db03      	blt.n	800f50e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 800f506:	445a      	add	r2, fp
 800f508:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 800f50c:	e79e      	b.n	800f44c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x400>
 800f50e:	eb0b 0302 	add.w	r3, fp, r2
 800f512:	9a03      	ldr	r2, [sp, #12]
 800f514:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 800f518:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 800f51c:	4429      	add	r1, r5
 800f51e:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 800f522:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800f526:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800f52a:	e5a5      	b.n	800f078 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f52c:	9b06      	ldr	r3, [sp, #24]
 800f52e:	9c07      	ldr	r4, [sp, #28]
 800f530:	eba3 020e 	sub.w	r2, r3, lr
 800f534:	b292      	uxth	r2, r2
 800f536:	2c06      	cmp	r4, #6
 800f538:	b213      	sxth	r3, r2
 800f53a:	d80d      	bhi.n	800f558 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 800f53c:	4651      	mov	r1, sl
 800f53e:	aa0a      	add	r2, sp, #40	; 0x28
 800f540:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 800f544:	6849      	ldr	r1, [r1, #4]
 800f546:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 800f54a:	9b05      	ldr	r3, [sp, #20]
 800f54c:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 800f550:	c203      	stmia	r2!, {r0, r1}
 800f552:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 800f556:	e758      	b.n	800f40a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800f558:	9c00      	ldr	r4, [sp, #0]
 800f55a:	4563      	cmp	r3, ip
 800f55c:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800f560:	db0d      	blt.n	800f57e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 800f562:	4429      	add	r1, r5
 800f564:	9a04      	ldr	r2, [sp, #16]
 800f566:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800f56a:	b289      	uxth	r1, r1
 800f56c:	445c      	add	r4, fp
 800f56e:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800f572:	4411      	add	r1, r2
 800f574:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 800f578:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 800f57c:	e57c      	b.n	800f078 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f57e:	445c      	add	r4, fp
 800f580:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 800f584:	e79e      	b.n	800f4c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x478>
 800f586:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800f58a:	2f07      	cmp	r7, #7
 800f58c:	d806      	bhi.n	800f59c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x550>
 800f58e:	ab08      	add	r3, sp, #32
 800f590:	e893 0006 	ldmia.w	r3, {r1, r2}
 800f594:	9801      	ldr	r0, [sp, #4]
 800f596:	f7ff fd37 	bl	800f008 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800f59a:	e5d7      	b.n	800f14c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800f59c:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800f5a0:	f107 39ff 	add.w	r9, r7, #4294967295
 800f5a4:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800f5a8:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 800f5ac:	f04f 35ff 	mov.w	r5, #4294967295
 800f5b0:	2400      	movs	r4, #0
 800f5b2:	9304      	str	r3, [sp, #16]
 800f5b4:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 800f5b8:	9300      	str	r3, [sp, #0]
 800f5ba:	f109 32ff 	add.w	r2, r9, #4294967295
 800f5be:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 800f5c2:	9303      	str	r3, [sp, #12]
 800f5c4:	4690      	mov	r8, r2
 800f5c6:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800f5ca:	f1b8 3fff 	cmp.w	r8, #4294967295
 800f5ce:	bf14      	ite	ne
 800f5d0:	9904      	ldrne	r1, [sp, #16]
 800f5d2:	f8dd e008 	ldreq.w	lr, [sp, #8]
 800f5d6:	6818      	ldr	r0, [r3, #0]
 800f5d8:	9206      	str	r2, [sp, #24]
 800f5da:	bf18      	it	ne
 800f5dc:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 800f5e0:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 800f5e4:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800f5e8:	f8be 6004 	ldrh.w	r6, [lr, #4]
 800f5ec:	9305      	str	r3, [sp, #20]
 800f5ee:	fb16 f601 	smulbb	r6, r6, r1
 800f5f2:	6859      	ldr	r1, [r3, #4]
 800f5f4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800f5f8:	4671      	mov	r1, lr
 800f5fa:	a80a      	add	r0, sp, #40	; 0x28
 800f5fc:	f7ff fc3a 	bl	800ee74 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800f600:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 800f604:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800f608:	9b03      	ldr	r3, [sp, #12]
 800f60a:	9a00      	ldr	r2, [sp, #0]
 800f60c:	fb11 f100 	smulbb	r1, r1, r0
 800f610:	fb02 6603 	mla	r6, r2, r3, r6
 800f614:	1b8e      	subs	r6, r1, r6
 800f616:	2008      	movs	r0, #8
 800f618:	fb91 f1f0 	sdiv	r1, r1, r0
 800f61c:	42b1      	cmp	r1, r6
 800f61e:	dc21      	bgt.n	800f664 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 800f620:	4556      	cmp	r6, sl
 800f622:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 800f626:	da03      	bge.n	800f630 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e4>
 800f628:	b1e6      	cbz	r6, 800f664 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 800f62a:	46b2      	mov	sl, r6
 800f62c:	4645      	mov	r5, r8
 800f62e:	464c      	mov	r4, r9
 800f630:	f108 38ff 	add.w	r8, r8, #4294967295
 800f634:	f118 0f02 	cmn.w	r8, #2
 800f638:	d1c7      	bne.n	800f5ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57e>
 800f63a:	f1b2 3fff 	cmp.w	r2, #4294967295
 800f63e:	f1a7 0708 	sub.w	r7, r7, #8
 800f642:	4691      	mov	r9, r2
 800f644:	d1b6      	bne.n	800f5b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x568>
 800f646:	9b01      	ldr	r3, [sp, #4]
 800f648:	b2a6      	uxth	r6, r4
 800f64a:	00e4      	lsls	r4, r4, #3
 800f64c:	1918      	adds	r0, r3, r4
 800f64e:	1c6b      	adds	r3, r5, #1
 800f650:	d10b      	bne.n	800f66a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x61e>
 800f652:	4601      	mov	r1, r0
 800f654:	9802      	ldr	r0, [sp, #8]
 800f656:	f7ff fc0d 	bl	800ee74 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800f65a:	4631      	mov	r1, r6
 800f65c:	9801      	ldr	r0, [sp, #4]
 800f65e:	f7ff fcb1 	bl	800efc4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800f662:	e509      	b.n	800f078 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f664:	4645      	mov	r5, r8
 800f666:	464c      	mov	r4, r9
 800f668:	e7ed      	b.n	800f646 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fa>
 800f66a:	9b01      	ldr	r3, [sp, #4]
 800f66c:	00ed      	lsls	r5, r5, #3
 800f66e:	1959      	adds	r1, r3, r5
 800f670:	f7ff fc00 	bl	800ee74 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800f674:	9b02      	ldr	r3, [sp, #8]
 800f676:	cb03      	ldmia	r3!, {r0, r1}
 800f678:	445d      	add	r5, fp
 800f67a:	445c      	add	r4, fp
 800f67c:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 800f680:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 800f684:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 800f688:	9b02      	ldr	r3, [sp, #8]
 800f68a:	6861      	ldr	r1, [r4, #4]
 800f68c:	c303      	stmia	r3!, {r0, r1}
 800f68e:	e7e4      	b.n	800f65a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60e>

0800f690 <_ZN8touchgfx11Application10invalidateEv>:
 800f690:	4b09      	ldr	r3, [pc, #36]	; (800f6b8 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800f692:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f696:	4b09      	ldr	r3, [pc, #36]	; (800f6bc <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800f698:	b082      	sub	sp, #8
 800f69a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f69e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f6a2:	2100      	movs	r1, #0
 800f6a4:	9100      	str	r1, [sp, #0]
 800f6a6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f6aa:	ab02      	add	r3, sp, #8
 800f6ac:	e913 0006 	ldmdb	r3, {r1, r2}
 800f6b0:	b002      	add	sp, #8
 800f6b2:	f7ff bccb 	b.w	800f04c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800f6b6:	bf00      	nop
 800f6b8:	20026ef2 	.word	0x20026ef2
 800f6bc:	20026ef4 	.word	0x20026ef4

0800f6c0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800f6c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f6c4:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800f6c8:	b09b      	sub	sp, #108	; 0x6c
 800f6ca:	4604      	mov	r4, r0
 800f6cc:	4630      	mov	r0, r6
 800f6ce:	f7fc fbd6 	bl	800be7e <_ZNK8touchgfx4Rect7isEmptyEv>
 800f6d2:	4605      	mov	r5, r0
 800f6d4:	b940      	cbnz	r0, 800f6e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 800f6d6:	e896 0006 	ldmia.w	r6, {r1, r2}
 800f6da:	4620      	mov	r0, r4
 800f6dc:	f7ff fcb6 	bl	800f04c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800f6e0:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800f6e4:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800f6e8:	4bc6      	ldr	r3, [pc, #792]	; (800fa04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 800f6ea:	681b      	ldr	r3, [r3, #0]
 800f6ec:	b33b      	cbz	r3, 800f73e <_ZN8touchgfx11Application15drawCachedAreasEv+0x7e>
 800f6ee:	4dc6      	ldr	r5, [pc, #792]	; (800fa08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 800f6f0:	4628      	mov	r0, r5
 800f6f2:	f7fc fbc4 	bl	800be7e <_ZNK8touchgfx4Rect7isEmptyEv>
 800f6f6:	4606      	mov	r6, r0
 800f6f8:	bb08      	cbnz	r0, 800f73e <_ZN8touchgfx11Application15drawCachedAreasEv+0x7e>
 800f6fa:	4628      	mov	r0, r5
 800f6fc:	f7ff f9ce 	bl	800ea9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800f700:	6829      	ldr	r1, [r5, #0]
 800f702:	686a      	ldr	r2, [r5, #4]
 800f704:	4620      	mov	r0, r4
 800f706:	f7ff fca1 	bl	800f04c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800f70a:	802e      	strh	r6, [r5, #0]
 800f70c:	806e      	strh	r6, [r5, #2]
 800f70e:	80ae      	strh	r6, [r5, #4]
 800f710:	80ee      	strh	r6, [r5, #6]
 800f712:	4dbe      	ldr	r5, [pc, #760]	; (800fa0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800f714:	a809      	add	r0, sp, #36	; 0x24
 800f716:	f7ff fc04 	bl	800ef22 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800f71a:	882f      	ldrh	r7, [r5, #0]
 800f71c:	463e      	mov	r6, r7
 800f71e:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800f722:	42b3      	cmp	r3, r6
 800f724:	d912      	bls.n	800f74c <_ZN8touchgfx11Application15drawCachedAreasEv+0x8c>
 800f726:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800f72a:	a809      	add	r0, sp, #36	; 0x24
 800f72c:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800f730:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800f734:	3601      	adds	r6, #1
 800f736:	f7ff fc67 	bl	800f008 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800f73a:	b2b6      	uxth	r6, r6
 800f73c:	e7ef      	b.n	800f71e <_ZN8touchgfx11Application15drawCachedAreasEv+0x5e>
 800f73e:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800f742:	2b00      	cmp	r3, #0
 800f744:	d1e5      	bne.n	800f712 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52>
 800f746:	b01b      	add	sp, #108	; 0x6c
 800f748:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f74c:	463e      	mov	r6, r7
 800f74e:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800f752:	42b3      	cmp	r3, r6
 800f754:	d90b      	bls.n	800f76e <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 800f756:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800f75a:	4620      	mov	r0, r4
 800f75c:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800f760:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800f764:	3601      	adds	r6, #1
 800f766:	f7ff fc71 	bl	800f04c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800f76a:	b2b6      	uxth	r6, r6
 800f76c:	e7ef      	b.n	800f74e <_ZN8touchgfx11Application15drawCachedAreasEv+0x8e>
 800f76e:	4ea8      	ldr	r6, [pc, #672]	; (800fa10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800f770:	6833      	ldr	r3, [r6, #0]
 800f772:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800f776:	2b01      	cmp	r3, #1
 800f778:	f040 80d2 	bne.w	800f920 <_ZN8touchgfx11Application15drawCachedAreasEv+0x260>
 800f77c:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 800f780:	f8b4 c0e8 	ldrh.w	ip, [r4, #232]	; 0xe8
 800f784:	4639      	mov	r1, r7
 800f786:	33aa      	adds	r3, #170	; 0xaa
 800f788:	2700      	movs	r7, #0
 800f78a:	458c      	cmp	ip, r1
 800f78c:	f103 0308 	add.w	r3, r3, #8
 800f790:	dd0a      	ble.n	800f7a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe8>
 800f792:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800f796:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 800f79a:	4402      	add	r2, r0
 800f79c:	b212      	sxth	r2, r2
 800f79e:	4297      	cmp	r7, r2
 800f7a0:	bfb8      	it	lt
 800f7a2:	4617      	movlt	r7, r2
 800f7a4:	3101      	adds	r1, #1
 800f7a6:	e7f0      	b.n	800f78a <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 800f7a8:	4b9a      	ldr	r3, [pc, #616]	; (800fa14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800f7aa:	f8b3 9000 	ldrh.w	r9, [r3]
 800f7ae:	2300      	movs	r3, #0
 800f7b0:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800f7b4:	f1b9 0f0f 	cmp.w	r9, #15
 800f7b8:	bf8c      	ite	hi
 800f7ba:	ea4f 09d9 	movhi.w	r9, r9, lsr #3
 800f7be:	f04f 0901 	movls.w	r9, #1
 800f7c2:	f8bd 801a 	ldrh.w	r8, [sp, #26]
 800f7c6:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 800f7ca:	4440      	add	r0, r8
 800f7cc:	fa0f f880 	sxth.w	r8, r0
 800f7d0:	6830      	ldr	r0, [r6, #0]
 800f7d2:	4547      	cmp	r7, r8
 800f7d4:	6803      	ldr	r3, [r0, #0]
 800f7d6:	f340 8086 	ble.w	800f8e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x226>
 800f7da:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800f7de:	4798      	blx	r3
 800f7e0:	eb08 0309 	add.w	r3, r8, r9
 800f7e4:	4298      	cmp	r0, r3
 800f7e6:	da08      	bge.n	800f7fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 800f7e8:	4287      	cmp	r7, r0
 800f7ea:	dd06      	ble.n	800f7fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 800f7ec:	4580      	cmp	r8, r0
 800f7ee:	dd70      	ble.n	800f8d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x212>
 800f7f0:	f1b8 0f00 	cmp.w	r8, #0
 800f7f4:	dd6d      	ble.n	800f8d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x212>
 800f7f6:	4638      	mov	r0, r7
 800f7f8:	e004      	b.n	800f804 <_ZN8touchgfx11Application15drawCachedAreasEv+0x144>
 800f7fa:	4580      	cmp	r8, r0
 800f7fc:	dcfb      	bgt.n	800f7f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x136>
 800f7fe:	42b8      	cmp	r0, r7
 800f800:	bfa8      	it	ge
 800f802:	4638      	movge	r0, r7
 800f804:	4b84      	ldr	r3, [pc, #528]	; (800fa18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800f806:	f8ad 8016 	strh.w	r8, [sp, #22]
 800f80a:	eba0 0008 	sub.w	r0, r0, r8
 800f80e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f812:	f8b5 8000 	ldrh.w	r8, [r5]
 800f816:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f81a:	2200      	movs	r2, #0
 800f81c:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f820:	f8ad 001a 	strh.w	r0, [sp, #26]
 800f824:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800f828:	4543      	cmp	r3, r8
 800f82a:	d9ca      	bls.n	800f7c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x102>
 800f82c:	eb04 02c8 	add.w	r2, r4, r8, lsl #3
 800f830:	ab07      	add	r3, sp, #28
 800f832:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800f836:	6851      	ldr	r1, [r2, #4]
 800f838:	c303      	stmia	r3!, {r0, r1}
 800f83a:	a905      	add	r1, sp, #20
 800f83c:	a807      	add	r0, sp, #28
 800f83e:	f7ff fa81 	bl	800ed44 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f842:	2800      	cmp	r0, #0
 800f844:	d04c      	beq.n	800f8e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x220>
 800f846:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800f84a:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800f84e:	f8bd a020 	ldrh.w	sl, [sp, #32]
 800f852:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800f856:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800f85a:	4686      	mov	lr, r0
 800f85c:	4290      	cmp	r0, r2
 800f85e:	4450      	add	r0, sl
 800f860:	f8bd a018 	ldrh.w	sl, [sp, #24]
 800f864:	bfb8      	it	lt
 800f866:	4696      	movlt	lr, r2
 800f868:	4452      	add	r2, sl
 800f86a:	b280      	uxth	r0, r0
 800f86c:	b292      	uxth	r2, r2
 800f86e:	4299      	cmp	r1, r3
 800f870:	fa0f fb80 	sxth.w	fp, r0
 800f874:	fa0f fa82 	sxth.w	sl, r2
 800f878:	468c      	mov	ip, r1
 800f87a:	bfb8      	it	lt
 800f87c:	469c      	movlt	ip, r3
 800f87e:	45d3      	cmp	fp, sl
 800f880:	bfb8      	it	lt
 800f882:	4602      	movlt	r2, r0
 800f884:	eba2 020e 	sub.w	r2, r2, lr
 800f888:	f8ad 2020 	strh.w	r2, [sp, #32]
 800f88c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 800f890:	f8ad e01c 	strh.w	lr, [sp, #28]
 800f894:	4411      	add	r1, r2
 800f896:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800f89a:	f8ad c01e 	strh.w	ip, [sp, #30]
 800f89e:	4413      	add	r3, r2
 800f8a0:	b289      	uxth	r1, r1
 800f8a2:	b29b      	uxth	r3, r3
 800f8a4:	b208      	sxth	r0, r1
 800f8a6:	b21a      	sxth	r2, r3
 800f8a8:	4290      	cmp	r0, r2
 800f8aa:	bfb8      	it	lt
 800f8ac:	460b      	movlt	r3, r1
 800f8ae:	eba3 030c 	sub.w	r3, r3, ip
 800f8b2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800f8b6:	a807      	add	r0, sp, #28
 800f8b8:	f7fc fae1 	bl	800be7e <_ZNK8touchgfx4Rect7isEmptyEv>
 800f8bc:	b920      	cbnz	r0, 800f8c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x208>
 800f8be:	6823      	ldr	r3, [r4, #0]
 800f8c0:	a907      	add	r1, sp, #28
 800f8c2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800f8c4:	4620      	mov	r0, r4
 800f8c6:	4798      	blx	r3
 800f8c8:	f108 0801 	add.w	r8, r8, #1
 800f8cc:	fa1f f888 	uxth.w	r8, r8
 800f8d0:	e7a8      	b.n	800f824 <_ZN8touchgfx11Application15drawCachedAreasEv+0x164>
 800f8d2:	6830      	ldr	r0, [r6, #0]
 800f8d4:	6803      	ldr	r3, [r0, #0]
 800f8d6:	2101      	movs	r1, #1
 800f8d8:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800f8dc:	4798      	blx	r3
 800f8de:	e770      	b.n	800f7c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x102>
 800f8e0:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800f8e4:	e7e7      	b.n	800f8b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1f6>
 800f8e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f8e8:	4798      	blx	r3
 800f8ea:	4b4c      	ldr	r3, [pc, #304]	; (800fa1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800f8ec:	781b      	ldrb	r3, [r3, #0]
 800f8ee:	2b00      	cmp	r3, #0
 800f8f0:	f43f af29 	beq.w	800f746 <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 800f8f4:	2300      	movs	r3, #0
 800f8f6:	882d      	ldrh	r5, [r5, #0]
 800f8f8:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800f8fc:	34ea      	adds	r4, #234	; 0xea
 800f8fe:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800f902:	42ab      	cmp	r3, r5
 800f904:	f67f af1f 	bls.w	800f746 <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 800f908:	ab1a      	add	r3, sp, #104	; 0x68
 800f90a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800f90e:	3b44      	subs	r3, #68	; 0x44
 800f910:	e893 0006 	ldmia.w	r3, {r1, r2}
 800f914:	4620      	mov	r0, r4
 800f916:	3501      	adds	r5, #1
 800f918:	f7ff fb76 	bl	800f008 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800f91c:	b2ad      	uxth	r5, r5
 800f91e:	e7ee      	b.n	800f8fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 800f920:	2b02      	cmp	r3, #2
 800f922:	f040 8136 	bne.w	800fb92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4d2>
 800f926:	4b3e      	ldr	r3, [pc, #248]	; (800fa20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 800f928:	781b      	ldrb	r3, [r3, #0]
 800f92a:	2b01      	cmp	r3, #1
 800f92c:	d02c      	beq.n	800f988 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c8>
 800f92e:	f104 0aa8 	add.w	sl, r4, #168	; 0xa8
 800f932:	882a      	ldrh	r2, [r5, #0]
 800f934:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800f938:	3201      	adds	r2, #1
 800f93a:	b292      	uxth	r2, r2
 800f93c:	2900      	cmp	r1, #0
 800f93e:	d0d4      	beq.n	800f8ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 800f940:	f8b4 70aa 	ldrh.w	r7, [r4, #170]	; 0xaa
 800f944:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800f948:	441f      	add	r7, r3
 800f94a:	b23f      	sxth	r7, r7
 800f94c:	4610      	mov	r0, r2
 800f94e:	f04f 0900 	mov.w	r9, #0
 800f952:	b283      	uxth	r3, r0
 800f954:	4299      	cmp	r1, r3
 800f956:	ea4f 08c9 	mov.w	r8, r9, lsl #3
 800f95a:	f240 80c5 	bls.w	800fae8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x428>
 800f95e:	44a0      	add	r8, r4
 800f960:	eb04 0bc0 	add.w	fp, r4, r0, lsl #3
 800f964:	f9b8 30aa 	ldrsh.w	r3, [r8, #170]	; 0xaa
 800f968:	f9bb e0aa 	ldrsh.w	lr, [fp, #170]	; 0xaa
 800f96c:	4573      	cmp	r3, lr
 800f96e:	4684      	mov	ip, r0
 800f970:	f340 80a7 	ble.w	800fac2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x402>
 800f974:	f8bb 70ae 	ldrh.w	r7, [fp, #174]	; 0xae
 800f978:	4477      	add	r7, lr
 800f97a:	b23f      	sxth	r7, r7
 800f97c:	429f      	cmp	r7, r3
 800f97e:	bfa8      	it	ge
 800f980:	461f      	movge	r7, r3
 800f982:	3001      	adds	r0, #1
 800f984:	46e1      	mov	r9, ip
 800f986:	e7e4      	b.n	800f952 <_ZN8touchgfx11Application15drawCachedAreasEv+0x292>
 800f988:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 800f98c:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 800f990:	f1bb 0f00 	cmp.w	fp, #0
 800f994:	d0a9      	beq.n	800f8ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 800f996:	882b      	ldrh	r3, [r5, #0]
 800f998:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800f99c:	3301      	adds	r3, #1
 800f99e:	b29b      	uxth	r3, r3
 800f9a0:	f04f 0800 	mov.w	r8, #0
 800f9a4:	b299      	uxth	r1, r3
 800f9a6:	458b      	cmp	fp, r1
 800f9a8:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 800f9ac:	d93a      	bls.n	800fa24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 800f9ae:	4427      	add	r7, r4
 800f9b0:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 800f9b4:	f8b7 10ac 	ldrh.w	r1, [r7, #172]	; 0xac
 800f9b8:	f8b7 00a8 	ldrh.w	r0, [r7, #168]	; 0xa8
 800f9bc:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 800f9c0:	4408      	add	r0, r1
 800f9c2:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 800f9c6:	4471      	add	r1, lr
 800f9c8:	b200      	sxth	r0, r0
 800f9ca:	b209      	sxth	r1, r1
 800f9cc:	4288      	cmp	r0, r1
 800f9ce:	469c      	mov	ip, r3
 800f9d0:	da06      	bge.n	800f9e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 800f9d2:	4586      	cmp	lr, r0
 800f9d4:	4672      	mov	r2, lr
 800f9d6:	bfb8      	it	lt
 800f9d8:	4602      	movlt	r2, r0
 800f9da:	3301      	adds	r3, #1
 800f9dc:	46e0      	mov	r8, ip
 800f9de:	e7e1      	b.n	800f9a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e4>
 800f9e0:	d10b      	bne.n	800f9fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 800f9e2:	f9b7 c0ae 	ldrsh.w	ip, [r7, #174]	; 0xae
 800f9e6:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 800f9ea:	458c      	cmp	ip, r1
 800f9ec:	bfb4      	ite	lt
 800f9ee:	469c      	movlt	ip, r3
 800f9f0:	46c4      	movge	ip, r8
 800f9f2:	4572      	cmp	r2, lr
 800f9f4:	bfb8      	it	lt
 800f9f6:	4672      	movlt	r2, lr
 800f9f8:	e7ef      	b.n	800f9da <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 800f9fa:	428a      	cmp	r2, r1
 800f9fc:	bfb8      	it	lt
 800f9fe:	460a      	movlt	r2, r1
 800fa00:	46c4      	mov	ip, r8
 800fa02:	e7ea      	b.n	800f9da <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 800fa04:	20026f38 	.word	0x20026f38
 800fa08:	20026f44 	.word	0x20026f44
 800fa0c:	2000007c 	.word	0x2000007c
 800fa10:	20026f00 	.word	0x20026f00
 800fa14:	20026ef4 	.word	0x20026ef4
 800fa18:	20026ef2 	.word	0x20026ef2
 800fa1c:	20026efc 	.word	0x20026efc
 800fa20:	20026ef6 	.word	0x20026ef6
 800fa24:	19e1      	adds	r1, r4, r7
 800fa26:	ab07      	add	r3, sp, #28
 800fa28:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800fa2c:	6849      	ldr	r1, [r1, #4]
 800fa2e:	c303      	stmia	r3!, {r0, r1}
 800fa30:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800fa34:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800fa38:	2b13      	cmp	r3, #19
 800fa3a:	bfd8      	it	le
 800fa3c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800fa40:	f8ad 201c 	strh.w	r2, [sp, #28]
 800fa44:	440b      	add	r3, r1
 800fa46:	1a9b      	subs	r3, r3, r2
 800fa48:	a807      	add	r0, sp, #28
 800fa4a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800fa4e:	f7ff f83f 	bl	800ead0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800fa52:	a807      	add	r0, sp, #28
 800fa54:	f7fc fa13 	bl	800be7e <_ZNK8touchgfx4Rect7isEmptyEv>
 800fa58:	2800      	cmp	r0, #0
 800fa5a:	d197      	bne.n	800f98c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 800fa5c:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800fa60:	6830      	ldr	r0, [r6, #0]
 800fa62:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800fa66:	f8d0 e000 	ldr.w	lr, [r0]
 800fa6a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800fa6e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800fa72:	f1bc 0f14 	cmp.w	ip, #20
 800fa76:	bfa8      	it	ge
 800fa78:	f04f 0c14 	movge.w	ip, #20
 800fa7c:	fa1f fc8c 	uxth.w	ip, ip
 800fa80:	f8cd c000 	str.w	ip, [sp]
 800fa84:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 800fa88:	47d0      	blx	sl
 800fa8a:	4682      	mov	sl, r0
 800fa8c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800fa90:	a807      	add	r0, sp, #28
 800fa92:	f7ff f803 	bl	800ea9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800fa96:	6823      	ldr	r3, [r4, #0]
 800fa98:	4427      	add	r7, r4
 800fa9a:	4620      	mov	r0, r4
 800fa9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800fa9e:	a907      	add	r1, sp, #28
 800faa0:	4798      	blx	r3
 800faa2:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	; 0xac
 800faa6:	eba0 000a 	sub.w	r0, r0, sl
 800faaa:	b200      	sxth	r0, r0
 800faac:	f8a7 00ac 	strh.w	r0, [r7, #172]	; 0xac
 800fab0:	2800      	cmp	r0, #0
 800fab2:	f47f af6b 	bne.w	800f98c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 800fab6:	fa1f f188 	uxth.w	r1, r8
 800faba:	4648      	mov	r0, r9
 800fabc:	f7ff fa82 	bl	800efc4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fac0:	e764      	b.n	800f98c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 800fac2:	d10c      	bne.n	800fade <_ZN8touchgfx11Application15drawCachedAreasEv+0x41e>
 800fac4:	f9b8 e0ac 	ldrsh.w	lr, [r8, #172]	; 0xac
 800fac8:	f9bb c0ac 	ldrsh.w	ip, [fp, #172]	; 0xac
 800facc:	45e6      	cmp	lr, ip
 800face:	bfb4      	ite	lt
 800fad0:	4684      	movlt	ip, r0
 800fad2:	46cc      	movge	ip, r9
 800fad4:	f8bb e0ae 	ldrh.w	lr, [fp, #174]	; 0xae
 800fad8:	4473      	add	r3, lr
 800fada:	b21b      	sxth	r3, r3
 800fadc:	e74e      	b.n	800f97c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2bc>
 800fade:	4577      	cmp	r7, lr
 800fae0:	bfa8      	it	ge
 800fae2:	4677      	movge	r7, lr
 800fae4:	46cc      	mov	ip, r9
 800fae6:	e74c      	b.n	800f982 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c2>
 800fae8:	eb0a 0008 	add.w	r0, sl, r8
 800faec:	44a0      	add	r8, r4
 800faee:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800faf2:	f9b8 b0ae 	ldrsh.w	fp, [r8, #174]	; 0xae
 800faf6:	f1bb 0f13 	cmp.w	fp, #19
 800fafa:	bfde      	ittt	le
 800fafc:	f8b8 70aa 	ldrhle.w	r7, [r8, #170]	; 0xaa
 800fb00:	445f      	addle	r7, fp
 800fb02:	b23f      	sxthle	r7, r7
 800fb04:	f7fc f9bb 	bl	800be7e <_ZNK8touchgfx4Rect7isEmptyEv>
 800fb08:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800fb0c:	2800      	cmp	r0, #0
 800fb0e:	f47f af15 	bne.w	800f93c <_ZN8touchgfx11Application15drawCachedAreasEv+0x27c>
 800fb12:	f9b8 20aa 	ldrsh.w	r2, [r8, #170]	; 0xaa
 800fb16:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800fb1a:	1abf      	subs	r7, r7, r2
 800fb1c:	2f14      	cmp	r7, #20
 800fb1e:	f9b8 10a8 	ldrsh.w	r1, [r8, #168]	; 0xa8
 800fb22:	f9b8 30ac 	ldrsh.w	r3, [r8, #172]	; 0xac
 800fb26:	6830      	ldr	r0, [r6, #0]
 800fb28:	f8ad 101c 	strh.w	r1, [sp, #28]
 800fb2c:	f8ad 201e 	strh.w	r2, [sp, #30]
 800fb30:	f8ad 3020 	strh.w	r3, [sp, #32]
 800fb34:	bfa8      	it	ge
 800fb36:	2714      	movge	r7, #20
 800fb38:	f8d0 c000 	ldr.w	ip, [r0]
 800fb3c:	b2bf      	uxth	r7, r7
 800fb3e:	fa1f fb8b 	uxth.w	fp, fp
 800fb42:	455f      	cmp	r7, fp
 800fb44:	bf94      	ite	ls
 800fb46:	9700      	strls	r7, [sp, #0]
 800fb48:	f8cd b000 	strhi.w	fp, [sp]
 800fb4c:	b292      	uxth	r2, r2
 800fb4e:	f8dc 7090 	ldr.w	r7, [ip, #144]	; 0x90
 800fb52:	b29b      	uxth	r3, r3
 800fb54:	b289      	uxth	r1, r1
 800fb56:	47b8      	blx	r7
 800fb58:	6823      	ldr	r3, [r4, #0]
 800fb5a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800fb5e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800fb60:	a907      	add	r1, sp, #28
 800fb62:	4620      	mov	r0, r4
 800fb64:	4798      	blx	r3
 800fb66:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800fb6a:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 800fb6e:	f8b8 20aa 	ldrh.w	r2, [r8, #170]	; 0xaa
 800fb72:	1a5b      	subs	r3, r3, r1
 800fb74:	440a      	add	r2, r1
 800fb76:	b21b      	sxth	r3, r3
 800fb78:	f8a8 20aa 	strh.w	r2, [r8, #170]	; 0xaa
 800fb7c:	f8a8 30ae 	strh.w	r3, [r8, #174]	; 0xae
 800fb80:	2b00      	cmp	r3, #0
 800fb82:	f47f aed6 	bne.w	800f932 <_ZN8touchgfx11Application15drawCachedAreasEv+0x272>
 800fb86:	fa1f f189 	uxth.w	r1, r9
 800fb8a:	4650      	mov	r0, sl
 800fb8c:	f7ff fa1a 	bl	800efc4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fb90:	e6cf      	b.n	800f932 <_ZN8touchgfx11Application15drawCachedAreasEv+0x272>
 800fb92:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800fb96:	42bb      	cmp	r3, r7
 800fb98:	f67f aea7 	bls.w	800f8ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 800fb9c:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800fba0:	ab07      	add	r3, sp, #28
 800fba2:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800fba6:	6851      	ldr	r1, [r2, #4]
 800fba8:	c303      	stmia	r3!, {r0, r1}
 800fbaa:	a807      	add	r0, sp, #28
 800fbac:	f7fc f967 	bl	800be7e <_ZNK8touchgfx4Rect7isEmptyEv>
 800fbb0:	b920      	cbnz	r0, 800fbbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fc>
 800fbb2:	6823      	ldr	r3, [r4, #0]
 800fbb4:	a907      	add	r1, sp, #28
 800fbb6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800fbb8:	4620      	mov	r0, r4
 800fbba:	4798      	blx	r3
 800fbbc:	3701      	adds	r7, #1
 800fbbe:	b2bf      	uxth	r7, r7
 800fbc0:	e7e7      	b.n	800fb92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4d2>
 800fbc2:	bf00      	nop

0800fbc4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800fbc4:	4b03      	ldr	r3, [pc, #12]	; (800fbd4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800fbc6:	2200      	movs	r2, #0
 800fbc8:	801a      	strh	r2, [r3, #0]
 800fbca:	805a      	strh	r2, [r3, #2]
 800fbcc:	809a      	strh	r2, [r3, #4]
 800fbce:	80da      	strh	r2, [r3, #6]
 800fbd0:	4770      	bx	lr
 800fbd2:	bf00      	nop
 800fbd4:	20026f44 	.word	0x20026f44

0800fbd8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800fbd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fbdc:	4606      	mov	r6, r0
 800fbde:	b09d      	sub	sp, #116	; 0x74
 800fbe0:	a803      	add	r0, sp, #12
 800fbe2:	4614      	mov	r4, r2
 800fbe4:	468a      	mov	sl, r1
 800fbe6:	461d      	mov	r5, r3
 800fbe8:	f000 fd62 	bl	80106b0 <_ZN8touchgfx12TextProviderC1Ev>
 800fbec:	6833      	ldr	r3, [r6, #0]
 800fbee:	4630      	mov	r0, r6
 800fbf0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800fbf2:	4798      	blx	r3
 800fbf4:	6833      	ldr	r3, [r6, #0]
 800fbf6:	4607      	mov	r7, r0
 800fbf8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800fbfa:	4630      	mov	r0, r6
 800fbfc:	4798      	blx	r3
 800fbfe:	462a      	mov	r2, r5
 800fc00:	9000      	str	r0, [sp, #0]
 800fc02:	4621      	mov	r1, r4
 800fc04:	463b      	mov	r3, r7
 800fc06:	a803      	add	r0, sp, #12
 800fc08:	f000 fda5 	bl	8010756 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800fc0c:	2500      	movs	r5, #0
 800fc0e:	462c      	mov	r4, r5
 800fc10:	46a9      	mov	r9, r5
 800fc12:	46a8      	mov	r8, r5
 800fc14:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800fc18:	2300      	movs	r3, #0
 800fc1a:	9302      	str	r3, [sp, #8]
 800fc1c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800fc20:	429c      	cmp	r4, r3
 800fc22:	d002      	beq.n	800fc2a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800fc24:	455c      	cmp	r4, fp
 800fc26:	bf18      	it	ne
 800fc28:	4625      	movne	r5, r4
 800fc2a:	ab02      	add	r3, sp, #8
 800fc2c:	4632      	mov	r2, r6
 800fc2e:	4651      	mov	r1, sl
 800fc30:	a803      	add	r0, sp, #12
 800fc32:	f001 f88f 	bl	8010d54 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800fc36:	4604      	mov	r4, r0
 800fc38:	b108      	cbz	r0, 800fc3e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800fc3a:	280a      	cmp	r0, #10
 800fc3c:	d10a      	bne.n	800fc54 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800fc3e:	45c1      	cmp	r9, r8
 800fc40:	bf38      	it	cc
 800fc42:	46c1      	movcc	r9, r8
 800fc44:	f04f 0800 	mov.w	r8, #0
 800fc48:	2c00      	cmp	r4, #0
 800fc4a:	d1e5      	bne.n	800fc18 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800fc4c:	4648      	mov	r0, r9
 800fc4e:	b01d      	add	sp, #116	; 0x74
 800fc50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fc54:	9a02      	ldr	r2, [sp, #8]
 800fc56:	2a00      	cmp	r2, #0
 800fc58:	d0de      	beq.n	800fc18 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800fc5a:	7b57      	ldrb	r7, [r2, #13]
 800fc5c:	6833      	ldr	r3, [r6, #0]
 800fc5e:	8894      	ldrh	r4, [r2, #4]
 800fc60:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fc62:	007f      	lsls	r7, r7, #1
 800fc64:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800fc68:	7a97      	ldrb	r7, [r2, #10]
 800fc6a:	4629      	mov	r1, r5
 800fc6c:	4307      	orrs	r7, r0
 800fc6e:	4630      	mov	r0, r6
 800fc70:	4798      	blx	r3
 800fc72:	4438      	add	r0, r7
 800fc74:	4480      	add	r8, r0
 800fc76:	fa1f f888 	uxth.w	r8, r8
 800fc7a:	e7e5      	b.n	800fc48 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800fc7c <_ZNK8touchgfx4Font12getCharWidthEt>:
 800fc7c:	b508      	push	{r3, lr}
 800fc7e:	6803      	ldr	r3, [r0, #0]
 800fc80:	68db      	ldr	r3, [r3, #12]
 800fc82:	4798      	blx	r3
 800fc84:	b128      	cbz	r0, 800fc92 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800fc86:	7b43      	ldrb	r3, [r0, #13]
 800fc88:	7a80      	ldrb	r0, [r0, #10]
 800fc8a:	005b      	lsls	r3, r3, #1
 800fc8c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800fc90:	4318      	orrs	r0, r3
 800fc92:	bd08      	pop	{r3, pc}

0800fc94 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800fc94:	b40e      	push	{r1, r2, r3}
 800fc96:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fc98:	b09e      	sub	sp, #120	; 0x78
 800fc9a:	ab23      	add	r3, sp, #140	; 0x8c
 800fc9c:	4605      	mov	r5, r0
 800fc9e:	f853 4b04 	ldr.w	r4, [r3], #4
 800fca2:	9303      	str	r3, [sp, #12]
 800fca4:	a805      	add	r0, sp, #20
 800fca6:	f000 fd03 	bl	80106b0 <_ZN8touchgfx12TextProviderC1Ev>
 800fcaa:	682b      	ldr	r3, [r5, #0]
 800fcac:	4628      	mov	r0, r5
 800fcae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800fcb0:	4798      	blx	r3
 800fcb2:	682b      	ldr	r3, [r5, #0]
 800fcb4:	4606      	mov	r6, r0
 800fcb6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800fcb8:	4628      	mov	r0, r5
 800fcba:	4798      	blx	r3
 800fcbc:	4633      	mov	r3, r6
 800fcbe:	ae1e      	add	r6, sp, #120	; 0x78
 800fcc0:	4621      	mov	r1, r4
 800fcc2:	9000      	str	r0, [sp, #0]
 800fcc4:	9a03      	ldr	r2, [sp, #12]
 800fcc6:	2400      	movs	r4, #0
 800fcc8:	a805      	add	r0, sp, #20
 800fcca:	f000 fd44 	bl	8010756 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800fcce:	f846 4d68 	str.w	r4, [r6, #-104]!
 800fcd2:	462a      	mov	r2, r5
 800fcd4:	4633      	mov	r3, r6
 800fcd6:	4621      	mov	r1, r4
 800fcd8:	a805      	add	r0, sp, #20
 800fcda:	f001 f83b 	bl	8010d54 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800fcde:	b1f0      	cbz	r0, 800fd1e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800fce0:	280a      	cmp	r0, #10
 800fce2:	d018      	beq.n	800fd16 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800fce4:	9f04      	ldr	r7, [sp, #16]
 800fce6:	b1b7      	cbz	r7, 800fd16 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800fce8:	7b78      	ldrb	r0, [r7, #13]
 800fcea:	7a3b      	ldrb	r3, [r7, #8]
 800fcec:	88aa      	ldrh	r2, [r5, #4]
 800fcee:	00c1      	lsls	r1, r0, #3
 800fcf0:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800fcf4:	4319      	orrs	r1, r3
 800fcf6:	0643      	lsls	r3, r0, #25
 800fcf8:	bf44      	itt	mi
 800fcfa:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800fcfe:	b219      	sxthmi	r1, r3
 800fd00:	0100      	lsls	r0, r0, #4
 800fd02:	79fb      	ldrb	r3, [r7, #7]
 800fd04:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800fd08:	4303      	orrs	r3, r0
 800fd0a:	4413      	add	r3, r2
 800fd0c:	1a5b      	subs	r3, r3, r1
 800fd0e:	b29b      	uxth	r3, r3
 800fd10:	42a3      	cmp	r3, r4
 800fd12:	bfc8      	it	gt
 800fd14:	b21c      	sxthgt	r4, r3
 800fd16:	4633      	mov	r3, r6
 800fd18:	462a      	mov	r2, r5
 800fd1a:	2100      	movs	r1, #0
 800fd1c:	e7dc      	b.n	800fcd8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800fd1e:	b2a0      	uxth	r0, r4
 800fd20:	b01e      	add	sp, #120	; 0x78
 800fd22:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800fd26:	b003      	add	sp, #12
 800fd28:	4770      	bx	lr

0800fd2a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800fd2a:	b40e      	push	{r1, r2, r3}
 800fd2c:	b570      	push	{r4, r5, r6, lr}
 800fd2e:	b09d      	sub	sp, #116	; 0x74
 800fd30:	ab21      	add	r3, sp, #132	; 0x84
 800fd32:	4604      	mov	r4, r0
 800fd34:	f853 5b04 	ldr.w	r5, [r3], #4
 800fd38:	9302      	str	r3, [sp, #8]
 800fd3a:	a803      	add	r0, sp, #12
 800fd3c:	f000 fcb8 	bl	80106b0 <_ZN8touchgfx12TextProviderC1Ev>
 800fd40:	6823      	ldr	r3, [r4, #0]
 800fd42:	4620      	mov	r0, r4
 800fd44:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800fd46:	4798      	blx	r3
 800fd48:	6823      	ldr	r3, [r4, #0]
 800fd4a:	4606      	mov	r6, r0
 800fd4c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800fd4e:	4620      	mov	r0, r4
 800fd50:	4798      	blx	r3
 800fd52:	4633      	mov	r3, r6
 800fd54:	9000      	str	r0, [sp, #0]
 800fd56:	9a02      	ldr	r2, [sp, #8]
 800fd58:	4629      	mov	r1, r5
 800fd5a:	a803      	add	r0, sp, #12
 800fd5c:	f000 fcfb 	bl	8010756 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800fd60:	a803      	add	r0, sp, #12
 800fd62:	f001 f8f1 	bl	8010f48 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800fd66:	2401      	movs	r4, #1
 800fd68:	b2a3      	uxth	r3, r4
 800fd6a:	b140      	cbz	r0, 800fd7e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800fd6c:	280a      	cmp	r0, #10
 800fd6e:	bf08      	it	eq
 800fd70:	3301      	addeq	r3, #1
 800fd72:	a803      	add	r0, sp, #12
 800fd74:	bf08      	it	eq
 800fd76:	b21c      	sxtheq	r4, r3
 800fd78:	f001 f8e6 	bl	8010f48 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800fd7c:	e7f4      	b.n	800fd68 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800fd7e:	4618      	mov	r0, r3
 800fd80:	b01d      	add	sp, #116	; 0x74
 800fd82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fd86:	b003      	add	sp, #12
 800fd88:	4770      	bx	lr

0800fd8a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800fd8a:	b40e      	push	{r1, r2, r3}
 800fd8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fd8e:	b09e      	sub	sp, #120	; 0x78
 800fd90:	ab23      	add	r3, sp, #140	; 0x8c
 800fd92:	4604      	mov	r4, r0
 800fd94:	f853 5b04 	ldr.w	r5, [r3], #4
 800fd98:	9303      	str	r3, [sp, #12]
 800fd9a:	a805      	add	r0, sp, #20
 800fd9c:	f000 fc88 	bl	80106b0 <_ZN8touchgfx12TextProviderC1Ev>
 800fda0:	6823      	ldr	r3, [r4, #0]
 800fda2:	4620      	mov	r0, r4
 800fda4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800fda6:	4798      	blx	r3
 800fda8:	6823      	ldr	r3, [r4, #0]
 800fdaa:	4606      	mov	r6, r0
 800fdac:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800fdae:	4620      	mov	r0, r4
 800fdb0:	4798      	blx	r3
 800fdb2:	4633      	mov	r3, r6
 800fdb4:	4629      	mov	r1, r5
 800fdb6:	9000      	str	r0, [sp, #0]
 800fdb8:	9a03      	ldr	r2, [sp, #12]
 800fdba:	a805      	add	r0, sp, #20
 800fdbc:	ad1e      	add	r5, sp, #120	; 0x78
 800fdbe:	f000 fcca 	bl	8010756 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800fdc2:	2100      	movs	r1, #0
 800fdc4:	f845 1d68 	str.w	r1, [r5, #-104]!
 800fdc8:	4622      	mov	r2, r4
 800fdca:	462b      	mov	r3, r5
 800fdcc:	a805      	add	r0, sp, #20
 800fdce:	f000 ffc1 	bl	8010d54 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800fdd2:	26ff      	movs	r6, #255	; 0xff
 800fdd4:	b1d8      	cbz	r0, 800fe0e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 800fdd6:	280a      	cmp	r0, #10
 800fdd8:	d012      	beq.n	800fe00 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800fdda:	9804      	ldr	r0, [sp, #16]
 800fddc:	b180      	cbz	r0, 800fe00 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800fdde:	7b47      	ldrb	r7, [r0, #13]
 800fde0:	7922      	ldrb	r2, [r4, #4]
 800fde2:	00fb      	lsls	r3, r7, #3
 800fde4:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800fde8:	7a03      	ldrb	r3, [r0, #8]
 800fdea:	430b      	orrs	r3, r1
 800fdec:	0679      	lsls	r1, r7, #25
 800fdee:	bf44      	itt	mi
 800fdf0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fdf4:	b21b      	sxthmi	r3, r3
 800fdf6:	1ad3      	subs	r3, r2, r3
 800fdf8:	b2db      	uxtb	r3, r3
 800fdfa:	429e      	cmp	r6, r3
 800fdfc:	bf28      	it	cs
 800fdfe:	461e      	movcs	r6, r3
 800fe00:	462b      	mov	r3, r5
 800fe02:	4622      	mov	r2, r4
 800fe04:	2100      	movs	r1, #0
 800fe06:	a805      	add	r0, sp, #20
 800fe08:	f000 ffa4 	bl	8010d54 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800fe0c:	e7e2      	b.n	800fdd4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 800fe0e:	4630      	mov	r0, r6
 800fe10:	b01e      	add	sp, #120	; 0x78
 800fe12:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800fe16:	b003      	add	sp, #12
 800fe18:	4770      	bx	lr

0800fe1a <_ZNK8touchgfx8Drawable10invalidateEv>:
 800fe1a:	b513      	push	{r0, r1, r4, lr}
 800fe1c:	6803      	ldr	r3, [r0, #0]
 800fe1e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800fe22:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800fe26:	f8ad 1004 	strh.w	r1, [sp, #4]
 800fe2a:	2400      	movs	r4, #0
 800fe2c:	9400      	str	r4, [sp, #0]
 800fe2e:	f8ad 2006 	strh.w	r2, [sp, #6]
 800fe32:	691b      	ldr	r3, [r3, #16]
 800fe34:	4669      	mov	r1, sp
 800fe36:	4798      	blx	r3
 800fe38:	b002      	add	sp, #8
 800fe3a:	bd10      	pop	{r4, pc}

0800fe3c <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800fe3c:	b538      	push	{r3, r4, r5, lr}
 800fe3e:	680b      	ldr	r3, [r1, #0]
 800fe40:	460c      	mov	r4, r1
 800fe42:	68db      	ldr	r3, [r3, #12]
 800fe44:	4605      	mov	r5, r0
 800fe46:	4798      	blx	r3
 800fe48:	6823      	ldr	r3, [r4, #0]
 800fe4a:	4620      	mov	r0, r4
 800fe4c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fe4e:	4629      	mov	r1, r5
 800fe50:	4798      	blx	r3
 800fe52:	4628      	mov	r0, r5
 800fe54:	bd38      	pop	{r3, r4, r5, pc}

0800fe56 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800fe56:	b410      	push	{r4}
 800fe58:	880a      	ldrh	r2, [r1, #0]
 800fe5a:	8884      	ldrh	r4, [r0, #4]
 800fe5c:	4422      	add	r2, r4
 800fe5e:	800a      	strh	r2, [r1, #0]
 800fe60:	88c4      	ldrh	r4, [r0, #6]
 800fe62:	884a      	ldrh	r2, [r1, #2]
 800fe64:	4422      	add	r2, r4
 800fe66:	804a      	strh	r2, [r1, #2]
 800fe68:	6940      	ldr	r0, [r0, #20]
 800fe6a:	b120      	cbz	r0, 800fe76 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800fe6c:	6803      	ldr	r3, [r0, #0]
 800fe6e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fe72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fe74:	4718      	bx	r3
 800fe76:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fe7a:	4770      	bx	lr

0800fe7c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800fe7c:	b570      	push	{r4, r5, r6, lr}
 800fe7e:	8882      	ldrh	r2, [r0, #4]
 800fe80:	880b      	ldrh	r3, [r1, #0]
 800fe82:	4413      	add	r3, r2
 800fe84:	800b      	strh	r3, [r1, #0]
 800fe86:	88c2      	ldrh	r2, [r0, #6]
 800fe88:	884b      	ldrh	r3, [r1, #2]
 800fe8a:	460c      	mov	r4, r1
 800fe8c:	4413      	add	r3, r2
 800fe8e:	804b      	strh	r3, [r1, #2]
 800fe90:	4605      	mov	r5, r0
 800fe92:	1d01      	adds	r1, r0, #4
 800fe94:	4620      	mov	r0, r4
 800fe96:	f7fb ffaf 	bl	800bdf8 <_ZN8touchgfx4RectaNERKS0_>
 800fe9a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800fe9e:	2b00      	cmp	r3, #0
 800fea0:	dd0b      	ble.n	800feba <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800fea2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800fea6:	2b00      	cmp	r3, #0
 800fea8:	dd07      	ble.n	800feba <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800feaa:	6968      	ldr	r0, [r5, #20]
 800feac:	b128      	cbz	r0, 800feba <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800feae:	6803      	ldr	r3, [r0, #0]
 800feb0:	4621      	mov	r1, r4
 800feb2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800feb4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800feb8:	4718      	bx	r3
 800feba:	bd70      	pop	{r4, r5, r6, pc}

0800febc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800febc:	b570      	push	{r4, r5, r6, lr}
 800febe:	8882      	ldrh	r2, [r0, #4]
 800fec0:	880b      	ldrh	r3, [r1, #0]
 800fec2:	4413      	add	r3, r2
 800fec4:	800b      	strh	r3, [r1, #0]
 800fec6:	88c2      	ldrh	r2, [r0, #6]
 800fec8:	884b      	ldrh	r3, [r1, #2]
 800feca:	460c      	mov	r4, r1
 800fecc:	4413      	add	r3, r2
 800fece:	804b      	strh	r3, [r1, #2]
 800fed0:	4605      	mov	r5, r0
 800fed2:	1d01      	adds	r1, r0, #4
 800fed4:	4620      	mov	r0, r4
 800fed6:	f7fb ff8f 	bl	800bdf8 <_ZN8touchgfx4RectaNERKS0_>
 800feda:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800fede:	2b00      	cmp	r3, #0
 800fee0:	dd18      	ble.n	800ff14 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800fee2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800fee6:	2b00      	cmp	r3, #0
 800fee8:	dd14      	ble.n	800ff14 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800feea:	6968      	ldr	r0, [r5, #20]
 800feec:	b128      	cbz	r0, 800fefa <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800feee:	6803      	ldr	r3, [r0, #0]
 800fef0:	4621      	mov	r1, r4
 800fef2:	691b      	ldr	r3, [r3, #16]
 800fef4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fef8:	4718      	bx	r3
 800fefa:	4b07      	ldr	r3, [pc, #28]	; (800ff18 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800fefc:	681b      	ldr	r3, [r3, #0]
 800fefe:	3304      	adds	r3, #4
 800ff00:	429d      	cmp	r5, r3
 800ff02:	d107      	bne.n	800ff14 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800ff04:	f7fe fffc 	bl	800ef00 <_ZN8touchgfx11Application11getInstanceEv>
 800ff08:	6821      	ldr	r1, [r4, #0]
 800ff0a:	6862      	ldr	r2, [r4, #4]
 800ff0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ff10:	f7ff b89c 	b.w	800f04c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800ff14:	bd70      	pop	{r4, r5, r6, pc}
 800ff16:	bf00      	nop
 800ff18:	20026f3c 	.word	0x20026f3c

0800ff1c <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800ff1c:	b570      	push	{r4, r5, r6, lr}
 800ff1e:	4604      	mov	r4, r0
 800ff20:	4616      	mov	r6, r2
 800ff22:	460d      	mov	r5, r1
 800ff24:	b901      	cbnz	r1, 800ff28 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800ff26:	b192      	cbz	r2, 800ff4e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800ff28:	6823      	ldr	r3, [r4, #0]
 800ff2a:	4620      	mov	r0, r4
 800ff2c:	699b      	ldr	r3, [r3, #24]
 800ff2e:	4798      	blx	r3
 800ff30:	88e2      	ldrh	r2, [r4, #6]
 800ff32:	88a1      	ldrh	r1, [r4, #4]
 800ff34:	4432      	add	r2, r6
 800ff36:	4429      	add	r1, r5
 800ff38:	4620      	mov	r0, r4
 800ff3a:	b212      	sxth	r2, r2
 800ff3c:	b209      	sxth	r1, r1
 800ff3e:	f7f8 fbf2 	bl	8008726 <_ZN8touchgfx8Drawable5setXYEss>
 800ff42:	6823      	ldr	r3, [r4, #0]
 800ff44:	4620      	mov	r0, r4
 800ff46:	699b      	ldr	r3, [r3, #24]
 800ff48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ff4c:	4718      	bx	r3
 800ff4e:	bd70      	pop	{r4, r5, r6, pc}

0800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800ff50:	b510      	push	{r4, lr}
 800ff52:	4604      	mov	r4, r0
 800ff54:	4608      	mov	r0, r1
 800ff56:	2300      	movs	r3, #0
 800ff58:	8023      	strh	r3, [r4, #0]
 800ff5a:	8063      	strh	r3, [r4, #2]
 800ff5c:	6803      	ldr	r3, [r0, #0]
 800ff5e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800ff62:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800ff66:	80a1      	strh	r1, [r4, #4]
 800ff68:	80e2      	strh	r2, [r4, #6]
 800ff6a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ff6c:	4621      	mov	r1, r4
 800ff6e:	4798      	blx	r3
 800ff70:	4620      	mov	r0, r4
 800ff72:	bd10      	pop	{r4, pc}

0800ff74 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800ff74:	b530      	push	{r4, r5, lr}
 800ff76:	8083      	strh	r3, [r0, #4]
 800ff78:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800ff7c:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800ff80:	7183      	strb	r3, [r0, #6]
 800ff82:	79c3      	ldrb	r3, [r0, #7]
 800ff84:	6101      	str	r1, [r0, #16]
 800ff86:	f365 0306 	bfi	r3, r5, #0, #7
 800ff8a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800ff8e:	8282      	strh	r2, [r0, #20]
 800ff90:	f365 13c7 	bfi	r3, r5, #7, #1
 800ff94:	71c3      	strb	r3, [r0, #7]
 800ff96:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800ff9a:	7203      	strb	r3, [r0, #8]
 800ff9c:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800ffa0:	7243      	strb	r3, [r0, #9]
 800ffa2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800ffa6:	8143      	strh	r3, [r0, #10]
 800ffa8:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800ffac:	8183      	strh	r3, [r0, #12]
 800ffae:	4b01      	ldr	r3, [pc, #4]	; (800ffb4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800ffb0:	6003      	str	r3, [r0, #0]
 800ffb2:	bd30      	pop	{r4, r5, pc}
 800ffb4:	08020ff4 	.word	0x08020ff4

0800ffb8 <_ZNK8touchgfx9ConstFont4findEt>:
 800ffb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ffba:	6904      	ldr	r4, [r0, #16]
 800ffbc:	b3bc      	cbz	r4, 801002e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800ffbe:	88a3      	ldrh	r3, [r4, #4]
 800ffc0:	8a82      	ldrh	r2, [r0, #20]
 800ffc2:	1acb      	subs	r3, r1, r3
 800ffc4:	f102 32ff 	add.w	r2, r2, #4294967295
 800ffc8:	d431      	bmi.n	801002e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800ffca:	4293      	cmp	r3, r2
 800ffcc:	dd0c      	ble.n	800ffe8 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800ffce:	230e      	movs	r3, #14
 800ffd0:	fb03 4302 	mla	r3, r3, r2, r4
 800ffd4:	889b      	ldrh	r3, [r3, #4]
 800ffd6:	1a5b      	subs	r3, r3, r1
 800ffd8:	1ad3      	subs	r3, r2, r3
 800ffda:	429a      	cmp	r2, r3
 800ffdc:	db27      	blt.n	801002e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800ffde:	2b00      	cmp	r3, #0
 800ffe0:	bfbc      	itt	lt
 800ffe2:	2302      	movlt	r3, #2
 800ffe4:	fb92 f3f3 	sdivlt	r3, r2, r3
 800ffe8:	2500      	movs	r5, #0
 800ffea:	260e      	movs	r6, #14
 800ffec:	4295      	cmp	r5, r2
 800ffee:	dc1e      	bgt.n	801002e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800fff0:	fb06 4003 	mla	r0, r6, r3, r4
 800fff4:	8887      	ldrh	r7, [r0, #4]
 800fff6:	42b9      	cmp	r1, r7
 800fff8:	d01a      	beq.n	8010030 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800fffa:	d20d      	bcs.n	8010018 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800fffc:	1e5a      	subs	r2, r3, #1
 800fffe:	4295      	cmp	r5, r2
 8010000:	dc15      	bgt.n	801002e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010002:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8010006:	1a5b      	subs	r3, r3, r1
 8010008:	1ad3      	subs	r3, r2, r3
 801000a:	429a      	cmp	r2, r3
 801000c:	db0f      	blt.n	801002e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801000e:	429d      	cmp	r5, r3
 8010010:	ddec      	ble.n	800ffec <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010012:	1953      	adds	r3, r2, r5
 8010014:	105b      	asrs	r3, r3, #1
 8010016:	e7e9      	b.n	800ffec <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010018:	1c5d      	adds	r5, r3, #1
 801001a:	42aa      	cmp	r2, r5
 801001c:	db07      	blt.n	801002e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801001e:	8a43      	ldrh	r3, [r0, #18]
 8010020:	1acb      	subs	r3, r1, r3
 8010022:	442b      	add	r3, r5
 8010024:	429d      	cmp	r5, r3
 8010026:	dc02      	bgt.n	801002e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010028:	429a      	cmp	r2, r3
 801002a:	dadf      	bge.n	800ffec <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801002c:	e7f1      	b.n	8010012 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801002e:	2000      	movs	r0, #0
 8010030:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010032 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8010032:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010034:	4604      	mov	r4, r0
 8010036:	4617      	mov	r7, r2
 8010038:	461e      	mov	r6, r3
 801003a:	b911      	cbnz	r1, 8010042 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 801003c:	2500      	movs	r5, #0
 801003e:	4628      	mov	r0, r5
 8010040:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010042:	290a      	cmp	r1, #10
 8010044:	d0fa      	beq.n	801003c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010046:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801004a:	4291      	cmp	r1, r2
 801004c:	d0f6      	beq.n	801003c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801004e:	f242 020b 	movw	r2, #8203	; 0x200b
 8010052:	4291      	cmp	r1, r2
 8010054:	d0f2      	beq.n	801003c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010056:	f7ff ffaf 	bl	800ffb8 <_ZNK8touchgfx9ConstFont4findEt>
 801005a:	4605      	mov	r5, r0
 801005c:	b950      	cbnz	r0, 8010074 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801005e:	6823      	ldr	r3, [r4, #0]
 8010060:	4620      	mov	r0, r4
 8010062:	691b      	ldr	r3, [r3, #16]
 8010064:	4798      	blx	r3
 8010066:	4601      	mov	r1, r0
 8010068:	4620      	mov	r0, r4
 801006a:	f7ff ffa5 	bl	800ffb8 <_ZNK8touchgfx9ConstFont4findEt>
 801006e:	4605      	mov	r5, r0
 8010070:	2800      	cmp	r0, #0
 8010072:	d0e3      	beq.n	801003c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010074:	6823      	ldr	r3, [r4, #0]
 8010076:	4629      	mov	r1, r5
 8010078:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801007a:	4620      	mov	r0, r4
 801007c:	4798      	blx	r3
 801007e:	6038      	str	r0, [r7, #0]
 8010080:	6823      	ldr	r3, [r4, #0]
 8010082:	4620      	mov	r0, r4
 8010084:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010086:	4798      	blx	r3
 8010088:	7030      	strb	r0, [r6, #0]
 801008a:	e7d8      	b.n	801003e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0801008c <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801008c:	2000      	movs	r0, #0
 801008e:	4770      	bx	lr

08010090 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8010090:	2001      	movs	r0, #1
 8010092:	4770      	bx	lr

08010094 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8010094:	2002      	movs	r0, #2
 8010096:	4770      	bx	lr

08010098 <_ZN8touchgfx12GestureEventD1Ev>:
 8010098:	4770      	bx	lr

0801009a <_ZN8touchgfx9DragEventD1Ev>:
 801009a:	4770      	bx	lr

0801009c <_ZN8touchgfx10ClickEventD1Ev>:
 801009c:	4770      	bx	lr

0801009e <_ZN8touchgfx10ClickEventD0Ev>:
 801009e:	b510      	push	{r4, lr}
 80100a0:	210c      	movs	r1, #12
 80100a2:	4604      	mov	r4, r0
 80100a4:	f00d fc93 	bl	801d9ce <_ZdlPvj>
 80100a8:	4620      	mov	r0, r4
 80100aa:	bd10      	pop	{r4, pc}

080100ac <_ZN8touchgfx9DragEventD0Ev>:
 80100ac:	b510      	push	{r4, lr}
 80100ae:	2110      	movs	r1, #16
 80100b0:	4604      	mov	r4, r0
 80100b2:	f00d fc8c 	bl	801d9ce <_ZdlPvj>
 80100b6:	4620      	mov	r0, r4
 80100b8:	bd10      	pop	{r4, pc}

080100ba <_ZN8touchgfx12GestureEventD0Ev>:
 80100ba:	b510      	push	{r4, lr}
 80100bc:	210c      	movs	r1, #12
 80100be:	4604      	mov	r4, r0
 80100c0:	f00d fc85 	bl	801d9ce <_ZdlPvj>
 80100c4:	4620      	mov	r0, r4
 80100c6:	bd10      	pop	{r4, pc}

080100c8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80100c8:	b530      	push	{r4, r5, lr}
 80100ca:	460d      	mov	r5, r1
 80100cc:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80100ce:	b087      	sub	sp, #28
 80100d0:	4604      	mov	r4, r0
 80100d2:	b301      	cbz	r1, 8010116 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80100d4:	a801      	add	r0, sp, #4
 80100d6:	f7ff ff3b 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80100da:	892a      	ldrh	r2, [r5, #8]
 80100dc:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80100e0:	7928      	ldrb	r0, [r5, #4]
 80100e2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80100e6:	f88d 0010 	strb.w	r0, [sp, #16]
 80100ea:	1ad2      	subs	r2, r2, r3
 80100ec:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80100ee:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80100f0:	f8ad 1012 	strh.w	r1, [sp, #18]
 80100f4:	441a      	add	r2, r3
 80100f6:	896b      	ldrh	r3, [r5, #10]
 80100f8:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80100fc:	f8ad 2014 	strh.w	r2, [sp, #20]
 8010100:	1b5b      	subs	r3, r3, r5
 8010102:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8010104:	442b      	add	r3, r5
 8010106:	4d05      	ldr	r5, [pc, #20]	; (801011c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8010108:	9503      	str	r5, [sp, #12]
 801010a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801010e:	6803      	ldr	r3, [r0, #0]
 8010110:	a903      	add	r1, sp, #12
 8010112:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010114:	4798      	blx	r3
 8010116:	b007      	add	sp, #28
 8010118:	bd30      	pop	{r4, r5, pc}
 801011a:	bf00      	nop
 801011c:	08021074 	.word	0x08021074

08010120 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8010120:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010124:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8010126:	b08a      	sub	sp, #40	; 0x28
 8010128:	4604      	mov	r4, r0
 801012a:	460d      	mov	r5, r1
 801012c:	b113      	cbz	r3, 8010134 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801012e:	790b      	ldrb	r3, [r1, #4]
 8010130:	2b00      	cmp	r3, #0
 8010132:	d044      	beq.n	80101be <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8010134:	f104 0804 	add.w	r8, r4, #4
 8010138:	4641      	mov	r1, r8
 801013a:	a803      	add	r0, sp, #12
 801013c:	f7ff ff08 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010140:	792b      	ldrb	r3, [r5, #4]
 8010142:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8010146:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801014a:	b983      	cbnz	r3, 801016e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 801014c:	892a      	ldrh	r2, [r5, #8]
 801014e:	88e9      	ldrh	r1, [r5, #6]
 8010150:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8010154:	1b92      	subs	r2, r2, r6
 8010156:	1bc9      	subs	r1, r1, r7
 8010158:	9301      	str	r3, [sp, #4]
 801015a:	f104 0334 	add.w	r3, r4, #52	; 0x34
 801015e:	9300      	str	r3, [sp, #0]
 8010160:	b212      	sxth	r2, r2
 8010162:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8010166:	b209      	sxth	r1, r1
 8010168:	4640      	mov	r0, r8
 801016a:	f7fb fd61 	bl	800bc30 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801016e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8010170:	b329      	cbz	r1, 80101be <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8010172:	a805      	add	r0, sp, #20
 8010174:	f7ff feec 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010178:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801017c:	792b      	ldrb	r3, [r5, #4]
 801017e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8010180:	f88d 3020 	strb.w	r3, [sp, #32]
 8010184:	1abf      	subs	r7, r7, r2
 8010186:	88ea      	ldrh	r2, [r5, #6]
 8010188:	4417      	add	r7, r2
 801018a:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 801018c:	4417      	add	r7, r2
 801018e:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8010192:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8010196:	1ab6      	subs	r6, r6, r2
 8010198:	892a      	ldrh	r2, [r5, #8]
 801019a:	4416      	add	r6, r2
 801019c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801019e:	4416      	add	r6, r2
 80101a0:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80101a4:	4a07      	ldr	r2, [pc, #28]	; (80101c4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80101a6:	9207      	str	r2, [sp, #28]
 80101a8:	2600      	movs	r6, #0
 80101aa:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 80101ae:	6803      	ldr	r3, [r0, #0]
 80101b0:	a907      	add	r1, sp, #28
 80101b2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80101b4:	4798      	blx	r3
 80101b6:	792b      	ldrb	r3, [r5, #4]
 80101b8:	b10b      	cbz	r3, 80101be <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80101ba:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 80101be:	b00a      	add	sp, #40	; 0x28
 80101c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80101c4:	0802104c 	.word	0x0802104c

080101c8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80101c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80101cc:	460c      	mov	r4, r1
 80101ce:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80101d0:	b088      	sub	sp, #32
 80101d2:	4605      	mov	r5, r0
 80101d4:	2900      	cmp	r1, #0
 80101d6:	d06d      	beq.n	80102b4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80101d8:	4668      	mov	r0, sp
 80101da:	f7ff feb9 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80101de:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 80101e0:	88e3      	ldrh	r3, [r4, #6]
 80101e2:	f9bd 8000 	ldrsh.w	r8, [sp]
 80101e6:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80101ea:	440b      	add	r3, r1
 80101ec:	b21b      	sxth	r3, r3
 80101ee:	4543      	cmp	r3, r8
 80101f0:	db31      	blt.n	8010256 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80101f2:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80101f6:	44c4      	add	ip, r8
 80101f8:	fa0f fc8c 	sxth.w	ip, ip
 80101fc:	4563      	cmp	r3, ip
 80101fe:	da2a      	bge.n	8010256 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010200:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8010202:	8926      	ldrh	r6, [r4, #8]
 8010204:	4416      	add	r6, r2
 8010206:	b236      	sxth	r6, r6
 8010208:	42be      	cmp	r6, r7
 801020a:	db24      	blt.n	8010256 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801020c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8010210:	4438      	add	r0, r7
 8010212:	b200      	sxth	r0, r0
 8010214:	4286      	cmp	r6, r0
 8010216:	da1e      	bge.n	8010256 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010218:	8963      	ldrh	r3, [r4, #10]
 801021a:	4419      	add	r1, r3
 801021c:	b209      	sxth	r1, r1
 801021e:	4541      	cmp	r1, r8
 8010220:	db08      	blt.n	8010234 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8010222:	4561      	cmp	r1, ip
 8010224:	da06      	bge.n	8010234 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8010226:	89a3      	ldrh	r3, [r4, #12]
 8010228:	441a      	add	r2, r3
 801022a:	b212      	sxth	r2, r2
 801022c:	42ba      	cmp	r2, r7
 801022e:	db01      	blt.n	8010234 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8010230:	4282      	cmp	r2, r0
 8010232:	db10      	blt.n	8010256 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010234:	4b21      	ldr	r3, [pc, #132]	; (80102bc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8010236:	9304      	str	r3, [sp, #16]
 8010238:	2302      	movs	r3, #2
 801023a:	f88d 3014 	strb.w	r3, [sp, #20]
 801023e:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8010240:	2300      	movs	r3, #0
 8010242:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010246:	f8ad 3018 	strh.w	r3, [sp, #24]
 801024a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801024e:	6803      	ldr	r3, [r0, #0]
 8010250:	a904      	add	r1, sp, #16
 8010252:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010254:	4798      	blx	r3
 8010256:	1d29      	adds	r1, r5, #4
 8010258:	a802      	add	r0, sp, #8
 801025a:	f7ff fe79 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801025e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8010262:	88e0      	ldrh	r0, [r4, #6]
 8010264:	7921      	ldrb	r1, [r4, #4]
 8010266:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801026a:	8922      	ldrh	r2, [r4, #8]
 801026c:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 801026e:	f88d 1014 	strb.w	r1, [sp, #20]
 8010272:	eba3 0808 	sub.w	r8, r3, r8
 8010276:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801027a:	1bdf      	subs	r7, r3, r7
 801027c:	b2bb      	uxth	r3, r7
 801027e:	fa1f f888 	uxth.w	r8, r8
 8010282:	8967      	ldrh	r7, [r4, #10]
 8010284:	89a4      	ldrh	r4, [r4, #12]
 8010286:	4440      	add	r0, r8
 8010288:	4460      	add	r0, ip
 801028a:	441a      	add	r2, r3
 801028c:	44b8      	add	r8, r7
 801028e:	4423      	add	r3, r4
 8010290:	f8ad 0016 	strh.w	r0, [sp, #22]
 8010294:	4433      	add	r3, r6
 8010296:	4432      	add	r2, r6
 8010298:	44e0      	add	r8, ip
 801029a:	4c09      	ldr	r4, [pc, #36]	; (80102c0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 801029c:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801029e:	9404      	str	r4, [sp, #16]
 80102a0:	f8ad 2018 	strh.w	r2, [sp, #24]
 80102a4:	f8ad 801a 	strh.w	r8, [sp, #26]
 80102a8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80102ac:	6803      	ldr	r3, [r0, #0]
 80102ae:	a904      	add	r1, sp, #16
 80102b0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80102b2:	4798      	blx	r3
 80102b4:	b008      	add	sp, #32
 80102b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80102ba:	bf00      	nop
 80102bc:	0802104c 	.word	0x0802104c
 80102c0:	08021060 	.word	0x08021060

080102c4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80102c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80102c6:	4604      	mov	r4, r0
 80102c8:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80102cc:	3201      	adds	r2, #1
 80102ce:	d112      	bne.n	80102f6 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80102d0:	6803      	ldr	r3, [r0, #0]
 80102d2:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80102d6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80102da:	f8ad 1004 	strh.w	r1, [sp, #4]
 80102de:	2500      	movs	r5, #0
 80102e0:	9500      	str	r5, [sp, #0]
 80102e2:	466d      	mov	r5, sp
 80102e4:	4629      	mov	r1, r5
 80102e6:	f8ad 2006 	strh.w	r2, [sp, #6]
 80102ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80102ec:	4798      	blx	r3
 80102ee:	e895 0003 	ldmia.w	r5, {r0, r1}
 80102f2:	e884 0003 	stmia.w	r4, {r0, r1}
 80102f6:	4620      	mov	r0, r4
 80102f8:	b003      	add	sp, #12
 80102fa:	bd30      	pop	{r4, r5, pc}

080102fc <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 80102fc:	b513      	push	{r0, r1, r4, lr}
 80102fe:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8010302:	3301      	adds	r3, #1
 8010304:	4604      	mov	r4, r0
 8010306:	d109      	bne.n	801031c <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8010308:	4601      	mov	r1, r0
 801030a:	4668      	mov	r0, sp
 801030c:	f7ff fe20 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010310:	f8bd 3000 	ldrh.w	r3, [sp]
 8010314:	8423      	strh	r3, [r4, #32]
 8010316:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801031a:	8463      	strh	r3, [r4, #34]	; 0x22
 801031c:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8010320:	b002      	add	sp, #8
 8010322:	bd10      	pop	{r4, pc}

08010324 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8010324:	b513      	push	{r0, r1, r4, lr}
 8010326:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801032a:	3301      	adds	r3, #1
 801032c:	4604      	mov	r4, r0
 801032e:	d109      	bne.n	8010344 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8010330:	4601      	mov	r1, r0
 8010332:	4668      	mov	r0, sp
 8010334:	f7ff fe0c 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010338:	f8bd 3000 	ldrh.w	r3, [sp]
 801033c:	8423      	strh	r3, [r4, #32]
 801033e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010342:	8463      	strh	r3, [r4, #34]	; 0x22
 8010344:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8010348:	b002      	add	sp, #8
 801034a:	bd10      	pop	{r4, pc}

0801034c <_ZN8touchgfx6ScreenC1Ev>:
 801034c:	b570      	push	{r4, r5, r6, lr}
 801034e:	4605      	mov	r5, r0
 8010350:	4b16      	ldr	r3, [pc, #88]	; (80103ac <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8010352:	f845 3b04 	str.w	r3, [r5], #4
 8010356:	2300      	movs	r3, #0
 8010358:	8103      	strh	r3, [r0, #8]
 801035a:	8143      	strh	r3, [r0, #10]
 801035c:	8183      	strh	r3, [r0, #12]
 801035e:	81c3      	strh	r3, [r0, #14]
 8010360:	8203      	strh	r3, [r0, #16]
 8010362:	8243      	strh	r3, [r0, #18]
 8010364:	8283      	strh	r3, [r0, #20]
 8010366:	82c3      	strh	r3, [r0, #22]
 8010368:	e9c0 3306 	strd	r3, r3, [r0, #24]
 801036c:	6203      	str	r3, [r0, #32]
 801036e:	8483      	strh	r3, [r0, #36]	; 0x24
 8010370:	84c3      	strh	r3, [r0, #38]	; 0x26
 8010372:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8010376:	4a0e      	ldr	r2, [pc, #56]	; (80103b0 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8010378:	6343      	str	r3, [r0, #52]	; 0x34
 801037a:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 801037e:	4b0d      	ldr	r3, [pc, #52]	; (80103b4 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8010380:	6042      	str	r2, [r0, #4]
 8010382:	f9b3 6000 	ldrsh.w	r6, [r3]
 8010386:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8010388:	4a0b      	ldr	r2, [pc, #44]	; (80103b8 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801038a:	4604      	mov	r4, r0
 801038c:	2101      	movs	r1, #1
 801038e:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8010392:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8010396:	f9b2 1000 	ldrsh.w	r1, [r2]
 801039a:	4628      	mov	r0, r5
 801039c:	4798      	blx	r3
 801039e:	6863      	ldr	r3, [r4, #4]
 80103a0:	4628      	mov	r0, r5
 80103a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80103a4:	4631      	mov	r1, r6
 80103a6:	4798      	blx	r3
 80103a8:	4620      	mov	r0, r4
 80103aa:	bd70      	pop	{r4, r5, r6, pc}
 80103ac:	08021088 	.word	0x08021088
 80103b0:	0801ff34 	.word	0x0801ff34
 80103b4:	20026ef4 	.word	0x20026ef4
 80103b8:	20026ef2 	.word	0x20026ef2

080103bc <_ZN8touchgfx6Screen4drawEv>:
 80103bc:	b507      	push	{r0, r1, r2, lr}
 80103be:	4b09      	ldr	r3, [pc, #36]	; (80103e4 <_ZN8touchgfx6Screen4drawEv+0x28>)
 80103c0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80103c4:	4b08      	ldr	r3, [pc, #32]	; (80103e8 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80103c6:	f8ad 2004 	strh.w	r2, [sp, #4]
 80103ca:	f9b3 3000 	ldrsh.w	r3, [r3]
 80103ce:	f8ad 3006 	strh.w	r3, [sp, #6]
 80103d2:	6803      	ldr	r3, [r0, #0]
 80103d4:	2100      	movs	r1, #0
 80103d6:	9100      	str	r1, [sp, #0]
 80103d8:	689b      	ldr	r3, [r3, #8]
 80103da:	4669      	mov	r1, sp
 80103dc:	4798      	blx	r3
 80103de:	b003      	add	sp, #12
 80103e0:	f85d fb04 	ldr.w	pc, [sp], #4
 80103e4:	20026ef2 	.word	0x20026ef2
 80103e8:	20026ef4 	.word	0x20026ef4

080103ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80103ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80103f0:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80103f4:	2b00      	cmp	r3, #0
 80103f6:	b089      	sub	sp, #36	; 0x24
 80103f8:	4680      	mov	r8, r0
 80103fa:	460c      	mov	r4, r1
 80103fc:	4615      	mov	r5, r2
 80103fe:	dd0e      	ble.n	801041e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8010400:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8010404:	2b00      	cmp	r3, #0
 8010406:	dd0a      	ble.n	801041e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8010408:	4628      	mov	r0, r5
 801040a:	f7ff ff5b 	bl	80102c4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801040e:	4621      	mov	r1, r4
 8010410:	f7fe fc98 	bl	800ed44 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010414:	69eb      	ldr	r3, [r5, #28]
 8010416:	b928      	cbnz	r0, 8010424 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8010418:	461d      	mov	r5, r3
 801041a:	2b00      	cmp	r3, #0
 801041c:	d1f4      	bne.n	8010408 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801041e:	b009      	add	sp, #36	; 0x24
 8010420:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010424:	ae04      	add	r6, sp, #16
 8010426:	2b00      	cmp	r3, #0
 8010428:	f000 80b5 	beq.w	8010596 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801042c:	682b      	ldr	r3, [r5, #0]
 801042e:	4629      	mov	r1, r5
 8010430:	68db      	ldr	r3, [r3, #12]
 8010432:	a802      	add	r0, sp, #8
 8010434:	4798      	blx	r3
 8010436:	4628      	mov	r0, r5
 8010438:	f7ff ff60 	bl	80102fc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801043c:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8010440:	4407      	add	r7, r0
 8010442:	4628      	mov	r0, r5
 8010444:	f7ff ff6e 	bl	8010324 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8010448:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801044c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8010450:	f8ad 2014 	strh.w	r2, [sp, #20]
 8010454:	4418      	add	r0, r3
 8010456:	4621      	mov	r1, r4
 8010458:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801045c:	f8ad 0012 	strh.w	r0, [sp, #18]
 8010460:	b23f      	sxth	r7, r7
 8010462:	4630      	mov	r0, r6
 8010464:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010468:	f8ad 7010 	strh.w	r7, [sp, #16]
 801046c:	f7fb fcc4 	bl	800bdf8 <_ZN8touchgfx4RectaNERKS0_>
 8010470:	4628      	mov	r0, r5
 8010472:	f7ff ff27 	bl	80102c4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8010476:	4602      	mov	r2, r0
 8010478:	e896 0003 	ldmia.w	r6, {r0, r1}
 801047c:	ab06      	add	r3, sp, #24
 801047e:	e883 0003 	stmia.w	r3, {r0, r1}
 8010482:	4611      	mov	r1, r2
 8010484:	4618      	mov	r0, r3
 8010486:	f7fb fcb7 	bl	800bdf8 <_ZN8touchgfx4RectaNERKS0_>
 801048a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801048e:	f9b4 1000 	ldrsh.w	r1, [r4]
 8010492:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8010496:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801049a:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801049e:	4299      	cmp	r1, r3
 80104a0:	d10b      	bne.n	80104ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80104a2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80104a6:	4552      	cmp	r2, sl
 80104a8:	d107      	bne.n	80104ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80104aa:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80104ae:	455a      	cmp	r2, fp
 80104b0:	d103      	bne.n	80104ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80104b2:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80104b6:	454a      	cmp	r2, r9
 80104b8:	d06d      	beq.n	8010596 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80104ba:	f1bb 0f00 	cmp.w	fp, #0
 80104be:	dd65      	ble.n	801058c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80104c0:	f1b9 0f00 	cmp.w	r9, #0
 80104c4:	dd62      	ble.n	801058c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80104c6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80104ca:	fa1f f08a 	uxth.w	r0, sl
 80104ce:	4552      	cmp	r2, sl
 80104d0:	9000      	str	r0, [sp, #0]
 80104d2:	da12      	bge.n	80104fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80104d4:	9301      	str	r3, [sp, #4]
 80104d6:	9b00      	ldr	r3, [sp, #0]
 80104d8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80104dc:	f8ad 2012 	strh.w	r2, [sp, #18]
 80104e0:	1a9a      	subs	r2, r3, r2
 80104e2:	f8ad 1010 	strh.w	r1, [sp, #16]
 80104e6:	f8ad 0014 	strh.w	r0, [sp, #20]
 80104ea:	f8ad 2016 	strh.w	r2, [sp, #22]
 80104ee:	69ea      	ldr	r2, [r5, #28]
 80104f0:	4631      	mov	r1, r6
 80104f2:	4640      	mov	r0, r8
 80104f4:	f7ff ff7a 	bl	80103ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80104f8:	9b01      	ldr	r3, [sp, #4]
 80104fa:	f9b4 2000 	ldrsh.w	r2, [r4]
 80104fe:	429a      	cmp	r2, r3
 8010500:	b29f      	uxth	r7, r3
 8010502:	da0d      	bge.n	8010520 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8010504:	f8ad 2010 	strh.w	r2, [sp, #16]
 8010508:	1aba      	subs	r2, r7, r2
 801050a:	f8ad a012 	strh.w	sl, [sp, #18]
 801050e:	f8ad 2014 	strh.w	r2, [sp, #20]
 8010512:	f8ad 9016 	strh.w	r9, [sp, #22]
 8010516:	69ea      	ldr	r2, [r5, #28]
 8010518:	4631      	mov	r1, r6
 801051a:	4640      	mov	r0, r8
 801051c:	f7ff ff66 	bl	80103ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010520:	8822      	ldrh	r2, [r4, #0]
 8010522:	88a3      	ldrh	r3, [r4, #4]
 8010524:	445f      	add	r7, fp
 8010526:	4413      	add	r3, r2
 8010528:	b29b      	uxth	r3, r3
 801052a:	b2bf      	uxth	r7, r7
 801052c:	b23a      	sxth	r2, r7
 801052e:	b219      	sxth	r1, r3
 8010530:	4291      	cmp	r1, r2
 8010532:	dd0d      	ble.n	8010550 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8010534:	1bdb      	subs	r3, r3, r7
 8010536:	f8ad 2010 	strh.w	r2, [sp, #16]
 801053a:	f8ad a012 	strh.w	sl, [sp, #18]
 801053e:	f8ad 3014 	strh.w	r3, [sp, #20]
 8010542:	f8ad 9016 	strh.w	r9, [sp, #22]
 8010546:	69ea      	ldr	r2, [r5, #28]
 8010548:	4631      	mov	r1, r6
 801054a:	4640      	mov	r0, r8
 801054c:	f7ff ff4e 	bl	80103ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010550:	88e2      	ldrh	r2, [r4, #6]
 8010552:	8863      	ldrh	r3, [r4, #2]
 8010554:	4413      	add	r3, r2
 8010556:	9a00      	ldr	r2, [sp, #0]
 8010558:	444a      	add	r2, r9
 801055a:	b29b      	uxth	r3, r3
 801055c:	fa1f f982 	uxth.w	r9, r2
 8010560:	fa0f f289 	sxth.w	r2, r9
 8010564:	b219      	sxth	r1, r3
 8010566:	428a      	cmp	r2, r1
 8010568:	da15      	bge.n	8010596 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801056a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801056e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010572:	f8ad 1014 	strh.w	r1, [sp, #20]
 8010576:	eba3 0309 	sub.w	r3, r3, r9
 801057a:	f8ad 0010 	strh.w	r0, [sp, #16]
 801057e:	f8ad 2012 	strh.w	r2, [sp, #18]
 8010582:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010586:	69ea      	ldr	r2, [r5, #28]
 8010588:	4631      	mov	r1, r6
 801058a:	e001      	b.n	8010590 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 801058c:	69ea      	ldr	r2, [r5, #28]
 801058e:	4621      	mov	r1, r4
 8010590:	4640      	mov	r0, r8
 8010592:	f7ff ff2b 	bl	80103ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010596:	4628      	mov	r0, r5
 8010598:	f7ff fe94 	bl	80102c4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801059c:	6861      	ldr	r1, [r4, #4]
 801059e:	4602      	mov	r2, r0
 80105a0:	6820      	ldr	r0, [r4, #0]
 80105a2:	4633      	mov	r3, r6
 80105a4:	c303      	stmia	r3!, {r0, r1}
 80105a6:	4611      	mov	r1, r2
 80105a8:	4630      	mov	r0, r6
 80105aa:	f7fb fc25 	bl	800bdf8 <_ZN8touchgfx4RectaNERKS0_>
 80105ae:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80105b2:	2b00      	cmp	r3, #0
 80105b4:	f77f af33 	ble.w	801041e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80105b8:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80105bc:	2b00      	cmp	r3, #0
 80105be:	f77f af2e 	ble.w	801041e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80105c2:	4628      	mov	r0, r5
 80105c4:	f7ff fe9a 	bl	80102fc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80105c8:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80105cc:	1a18      	subs	r0, r3, r0
 80105ce:	f8ad 0010 	strh.w	r0, [sp, #16]
 80105d2:	4628      	mov	r0, r5
 80105d4:	f7ff fea6 	bl	8010324 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80105d8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80105dc:	1a18      	subs	r0, r3, r0
 80105de:	f8ad 0012 	strh.w	r0, [sp, #18]
 80105e2:	682b      	ldr	r3, [r5, #0]
 80105e4:	4631      	mov	r1, r6
 80105e6:	689b      	ldr	r3, [r3, #8]
 80105e8:	4628      	mov	r0, r5
 80105ea:	4798      	blx	r3
 80105ec:	e717      	b.n	801041e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080105ee <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80105ee:	b570      	push	{r4, r5, r6, lr}
 80105f0:	460c      	mov	r4, r1
 80105f2:	b086      	sub	sp, #24
 80105f4:	1d06      	adds	r6, r0, #4
 80105f6:	2300      	movs	r3, #0
 80105f8:	4631      	mov	r1, r6
 80105fa:	4605      	mov	r5, r0
 80105fc:	a802      	add	r0, sp, #8
 80105fe:	9301      	str	r3, [sp, #4]
 8010600:	f7ff fca6 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010604:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8010608:	8822      	ldrh	r2, [r4, #0]
 801060a:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801060e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8010612:	f8ad 0014 	strh.w	r0, [sp, #20]
 8010616:	1ad2      	subs	r2, r2, r3
 8010618:	8863      	ldrh	r3, [r4, #2]
 801061a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801061e:	1a5b      	subs	r3, r3, r1
 8010620:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8010624:	f8ad 1016 	strh.w	r1, [sp, #22]
 8010628:	aa01      	add	r2, sp, #4
 801062a:	a904      	add	r1, sp, #16
 801062c:	4630      	mov	r0, r6
 801062e:	f8ad 3012 	strh.w	r3, [sp, #18]
 8010632:	f7fb fcb9 	bl	800bfa8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8010636:	9a01      	ldr	r2, [sp, #4]
 8010638:	b11a      	cbz	r2, 8010642 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801063a:	4621      	mov	r1, r4
 801063c:	4628      	mov	r0, r5
 801063e:	f7ff fed5 	bl	80103ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010642:	b006      	add	sp, #24
 8010644:	bd70      	pop	{r4, r5, r6, pc}

08010646 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8010646:	b530      	push	{r4, r5, lr}
 8010648:	4602      	mov	r2, r0
 801064a:	4604      	mov	r4, r0
 801064c:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8010650:	b085      	sub	sp, #20
 8010652:	460d      	mov	r5, r1
 8010654:	6851      	ldr	r1, [r2, #4]
 8010656:	466b      	mov	r3, sp
 8010658:	c303      	stmia	r3!, {r0, r1}
 801065a:	4629      	mov	r1, r5
 801065c:	4668      	mov	r0, sp
 801065e:	f7fb fbcb 	bl	800bdf8 <_ZN8touchgfx4RectaNERKS0_>
 8010662:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8010666:	b12b      	cbz	r3, 8010674 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8010668:	4669      	mov	r1, sp
 801066a:	4620      	mov	r0, r4
 801066c:	f7ff ffbf 	bl	80105ee <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8010670:	b005      	add	sp, #20
 8010672:	bd30      	pop	{r4, r5, pc}
 8010674:	3404      	adds	r4, #4
 8010676:	4621      	mov	r1, r4
 8010678:	a802      	add	r0, sp, #8
 801067a:	f7ff fc69 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801067e:	f8bd 3000 	ldrh.w	r3, [sp]
 8010682:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8010686:	1a9b      	subs	r3, r3, r2
 8010688:	f8ad 3000 	strh.w	r3, [sp]
 801068c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8010690:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010694:	4669      	mov	r1, sp
 8010696:	1a9b      	subs	r3, r3, r2
 8010698:	4620      	mov	r0, r4
 801069a:	f8ad 3002 	strh.w	r3, [sp, #2]
 801069e:	f7fb fc4a 	bl	800bf36 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80106a2:	e7e5      	b.n	8010670 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080106a4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80106a4:	680a      	ldr	r2, [r1, #0]
 80106a6:	460b      	mov	r3, r1
 80106a8:	6992      	ldr	r2, [r2, #24]
 80106aa:	1d01      	adds	r1, r0, #4
 80106ac:	4618      	mov	r0, r3
 80106ae:	4710      	bx	r2

080106b0 <_ZN8touchgfx12TextProviderC1Ev>:
 80106b0:	b538      	push	{r3, r4, r5, lr}
 80106b2:	2500      	movs	r5, #0
 80106b4:	2302      	movs	r3, #2
 80106b6:	4604      	mov	r4, r0
 80106b8:	e9c0 5500 	strd	r5, r5, [r0]
 80106bc:	7403      	strb	r3, [r0, #16]
 80106be:	6145      	str	r5, [r0, #20]
 80106c0:	7605      	strb	r5, [r0, #24]
 80106c2:	83c5      	strh	r5, [r0, #30]
 80106c4:	8405      	strh	r5, [r0, #32]
 80106c6:	86c5      	strh	r5, [r0, #54]	; 0x36
 80106c8:	8705      	strh	r5, [r0, #56]	; 0x38
 80106ca:	87c5      	strh	r5, [r0, #62]	; 0x3e
 80106cc:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 80106d0:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 80106d4:	220e      	movs	r2, #14
 80106d6:	4629      	mov	r1, r5
 80106d8:	304c      	adds	r0, #76	; 0x4c
 80106da:	f00d fa33 	bl	801db44 <memset>
 80106de:	2301      	movs	r3, #1
 80106e0:	4620      	mov	r0, r4
 80106e2:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 80106e6:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80106ea:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 80106ee:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 80106f2:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 80106f6:	f7f8 ff21 	bl	800953c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80106fa:	4620      	mov	r0, r4
 80106fc:	bd38      	pop	{r3, r4, r5, pc}

080106fe <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 80106fe:	b530      	push	{r4, r5, lr}
 8010700:	2500      	movs	r5, #0
 8010702:	2401      	movs	r4, #1
 8010704:	6843      	ldr	r3, [r0, #4]
 8010706:	b913      	cbnz	r3, 801070e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8010708:	6803      	ldr	r3, [r0, #0]
 801070a:	b313      	cbz	r3, 8010752 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801070c:	6043      	str	r3, [r0, #4]
 801070e:	7e03      	ldrb	r3, [r0, #24]
 8010710:	b143      	cbz	r3, 8010724 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8010712:	6943      	ldr	r3, [r0, #20]
 8010714:	b12b      	cbz	r3, 8010722 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8010716:	881a      	ldrh	r2, [r3, #0]
 8010718:	b11a      	cbz	r2, 8010722 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801071a:	1c9a      	adds	r2, r3, #2
 801071c:	6142      	str	r2, [r0, #20]
 801071e:	8818      	ldrh	r0, [r3, #0]
 8010720:	bd30      	pop	{r4, r5, pc}
 8010722:	7605      	strb	r5, [r0, #24]
 8010724:	6843      	ldr	r3, [r0, #4]
 8010726:	8819      	ldrh	r1, [r3, #0]
 8010728:	b199      	cbz	r1, 8010752 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801072a:	1c9a      	adds	r2, r3, #2
 801072c:	2902      	cmp	r1, #2
 801072e:	6042      	str	r2, [r0, #4]
 8010730:	d1f5      	bne.n	801071e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8010732:	7c03      	ldrb	r3, [r0, #16]
 8010734:	2b01      	cmp	r3, #1
 8010736:	d8e5      	bhi.n	8010704 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8010738:	1c5a      	adds	r2, r3, #1
 801073a:	3302      	adds	r3, #2
 801073c:	7402      	strb	r2, [r0, #16]
 801073e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8010742:	6143      	str	r3, [r0, #20]
 8010744:	2b00      	cmp	r3, #0
 8010746:	d0dd      	beq.n	8010704 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8010748:	881b      	ldrh	r3, [r3, #0]
 801074a:	2b00      	cmp	r3, #0
 801074c:	d0da      	beq.n	8010704 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801074e:	7604      	strb	r4, [r0, #24]
 8010750:	e7d8      	b.n	8010704 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8010752:	2000      	movs	r0, #0
 8010754:	e7e4      	b.n	8010720 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08010756 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8010756:	b430      	push	{r4, r5}
 8010758:	6001      	str	r1, [r0, #0]
 801075a:	2100      	movs	r1, #0
 801075c:	6041      	str	r1, [r0, #4]
 801075e:	6815      	ldr	r5, [r2, #0]
 8010760:	6085      	str	r5, [r0, #8]
 8010762:	6852      	ldr	r2, [r2, #4]
 8010764:	6443      	str	r3, [r0, #68]	; 0x44
 8010766:	9b02      	ldr	r3, [sp, #8]
 8010768:	60c2      	str	r2, [r0, #12]
 801076a:	7401      	strb	r1, [r0, #16]
 801076c:	6141      	str	r1, [r0, #20]
 801076e:	7601      	strb	r1, [r0, #24]
 8010770:	8701      	strh	r1, [r0, #56]	; 0x38
 8010772:	8401      	strh	r1, [r0, #32]
 8010774:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8010778:	6483      	str	r3, [r0, #72]	; 0x48
 801077a:	bc30      	pop	{r4, r5}
 801077c:	f7f8 bede 	b.w	800953c <_ZN8touchgfx12TextProvider18initializeInternalEv>

08010780 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8010780:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010782:	4605      	mov	r5, r0
 8010784:	4608      	mov	r0, r1
 8010786:	b1e9      	cbz	r1, 80107c4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8010788:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 801078c:	460b      	mov	r3, r1
 801078e:	f101 0708 	add.w	r7, r1, #8
 8010792:	4622      	mov	r2, r4
 8010794:	6818      	ldr	r0, [r3, #0]
 8010796:	6859      	ldr	r1, [r3, #4]
 8010798:	4626      	mov	r6, r4
 801079a:	c603      	stmia	r6!, {r0, r1}
 801079c:	3308      	adds	r3, #8
 801079e:	42bb      	cmp	r3, r7
 80107a0:	4634      	mov	r4, r6
 80107a2:	d1f7      	bne.n	8010794 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 80107a4:	6818      	ldr	r0, [r3, #0]
 80107a6:	6030      	str	r0, [r6, #0]
 80107a8:	889b      	ldrh	r3, [r3, #4]
 80107aa:	80b3      	strh	r3, [r6, #4]
 80107ac:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 80107b0:	015b      	lsls	r3, r3, #5
 80107b2:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80107b6:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 80107ba:	430b      	orrs	r3, r1
 80107bc:	425b      	negs	r3, r3
 80107be:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 80107c2:	4610      	mov	r0, r2
 80107c4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080107c6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80107c6:	b538      	push	{r3, r4, r5, lr}
 80107c8:	460c      	mov	r4, r1
 80107ca:	6811      	ldr	r1, [r2, #0]
 80107cc:	4610      	mov	r0, r2
 80107ce:	68cd      	ldr	r5, [r1, #12]
 80107d0:	4619      	mov	r1, r3
 80107d2:	47a8      	blx	r5
 80107d4:	2800      	cmp	r0, #0
 80107d6:	bf08      	it	eq
 80107d8:	4620      	moveq	r0, r4
 80107da:	bd38      	pop	{r3, r4, r5, pc}

080107dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 80107dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80107de:	4604      	mov	r4, r0
 80107e0:	4615      	mov	r5, r2
 80107e2:	4608      	mov	r0, r1
 80107e4:	b93a      	cbnz	r2, 80107f6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 80107e6:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80107ea:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 80107ee:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80107f2:	4628      	mov	r0, r5
 80107f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80107f6:	f892 c00d 	ldrb.w	ip, [r2, #13]
 80107fa:	8893      	ldrh	r3, [r2, #4]
 80107fc:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8010800:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8010804:	79ee      	ldrb	r6, [r5, #7]
 8010806:	4316      	orrs	r6, r2
 8010808:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 801080c:	189a      	adds	r2, r3, r2
 801080e:	b291      	uxth	r1, r2
 8010810:	291d      	cmp	r1, #29
 8010812:	b2b7      	uxth	r7, r6
 8010814:	f200 8083 	bhi.w	801091e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 8010818:	2201      	movs	r2, #1
 801081a:	408a      	lsls	r2, r1
 801081c:	4978      	ldr	r1, [pc, #480]	; (8010a00 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 801081e:	420a      	tst	r2, r1
 8010820:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8010824:	d12d      	bne.n	8010882 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 8010826:	f412 7f60 	tst.w	r2, #896	; 0x380
 801082a:	d078      	beq.n	801091e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 801082c:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8010830:	462b      	mov	r3, r5
 8010832:	f105 0e08 	add.w	lr, r5, #8
 8010836:	4615      	mov	r5, r2
 8010838:	6818      	ldr	r0, [r3, #0]
 801083a:	6859      	ldr	r1, [r3, #4]
 801083c:	4694      	mov	ip, r2
 801083e:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8010842:	3308      	adds	r3, #8
 8010844:	4573      	cmp	r3, lr
 8010846:	4662      	mov	r2, ip
 8010848:	d1f6      	bne.n	8010838 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 801084a:	6818      	ldr	r0, [r3, #0]
 801084c:	f8cc 0000 	str.w	r0, [ip]
 8010850:	889b      	ldrh	r3, [r3, #4]
 8010852:	f8ac 3004 	strh.w	r3, [ip, #4]
 8010856:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 801085a:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 801085e:	b2b3      	uxth	r3, r6
 8010860:	1aca      	subs	r2, r1, r3
 8010862:	b292      	uxth	r2, r2
 8010864:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8010868:	10d2      	asrs	r2, r2, #3
 801086a:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801086e:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8010872:	4302      	orrs	r2, r0
 8010874:	1bcf      	subs	r7, r1, r7
 8010876:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801087a:	1afb      	subs	r3, r7, r3
 801087c:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8010880:	e7b7      	b.n	80107f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8010882:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8010884:	b92b      	cbnz	r3, 8010892 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 8010886:	4b5f      	ldr	r3, [pc, #380]	; (8010a04 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 8010888:	4a5f      	ldr	r2, [pc, #380]	; (8010a08 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 801088a:	4860      	ldr	r0, [pc, #384]	; (8010a0c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 801088c:	21c0      	movs	r1, #192	; 0xc0
 801088e:	f00d f8cd 	bl	801da2c <__assert_func>
 8010892:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8010894:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8010898:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801089a:	f640 6333 	movw	r3, #3635	; 0xe33
 801089e:	4299      	cmp	r1, r3
 80108a0:	d110      	bne.n	80108c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 80108a2:	6803      	ldr	r3, [r0, #0]
 80108a4:	68db      	ldr	r3, [r3, #12]
 80108a6:	4798      	blx	r3
 80108a8:	7b41      	ldrb	r1, [r0, #13]
 80108aa:	00cb      	lsls	r3, r1, #3
 80108ac:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80108b0:	7a03      	ldrb	r3, [r0, #8]
 80108b2:	0648      	lsls	r0, r1, #25
 80108b4:	ea43 0302 	orr.w	r3, r3, r2
 80108b8:	bf44      	itt	mi
 80108ba:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80108be:	b21b      	sxthmi	r3, r3
 80108c0:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80108c4:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 80108c8:	443b      	add	r3, r7
 80108ca:	4433      	add	r3, r6
 80108cc:	b29b      	uxth	r3, r3
 80108ce:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 80108d2:	462a      	mov	r2, r5
 80108d4:	f105 0c08 	add.w	ip, r5, #8
 80108d8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80108dc:	4635      	mov	r5, r6
 80108de:	6810      	ldr	r0, [r2, #0]
 80108e0:	6851      	ldr	r1, [r2, #4]
 80108e2:	4637      	mov	r7, r6
 80108e4:	c703      	stmia	r7!, {r0, r1}
 80108e6:	3208      	adds	r2, #8
 80108e8:	4562      	cmp	r2, ip
 80108ea:	463e      	mov	r6, r7
 80108ec:	d1f7      	bne.n	80108de <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 80108ee:	6810      	ldr	r0, [r2, #0]
 80108f0:	6038      	str	r0, [r7, #0]
 80108f2:	8892      	ldrh	r2, [r2, #4]
 80108f4:	80ba      	strh	r2, [r7, #4]
 80108f6:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80108fa:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80108fe:	10db      	asrs	r3, r3, #3
 8010900:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8010904:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8010908:	4313      	orrs	r3, r2
 801090a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801090e:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8010912:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8010916:	1a9b      	subs	r3, r3, r2
 8010918:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 801091c:	e769      	b.n	80107f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801091e:	f023 0204 	bic.w	r2, r3, #4
 8010922:	f640 611b 	movw	r1, #3611	; 0xe1b
 8010926:	428a      	cmp	r2, r1
 8010928:	d003      	beq.n	8010932 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 801092a:	f640 621d 	movw	r2, #3613	; 0xe1d
 801092e:	4293      	cmp	r3, r2
 8010930:	d120      	bne.n	8010974 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 8010932:	3b01      	subs	r3, #1
 8010934:	4602      	mov	r2, r0
 8010936:	b29b      	uxth	r3, r3
 8010938:	4629      	mov	r1, r5
 801093a:	4620      	mov	r0, r4
 801093c:	f7ff ff43 	bl	80107c6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8010940:	7b41      	ldrb	r1, [r0, #13]
 8010942:	00cb      	lsls	r3, r1, #3
 8010944:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010948:	7a03      	ldrb	r3, [r0, #8]
 801094a:	0649      	lsls	r1, r1, #25
 801094c:	ea43 0302 	orr.w	r3, r3, r2
 8010950:	bf44      	itt	mi
 8010952:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8010956:	b21b      	sxthmi	r3, r3
 8010958:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801095c:	7b6b      	ldrb	r3, [r5, #13]
 801095e:	7aaa      	ldrb	r2, [r5, #10]
 8010960:	005b      	lsls	r3, r3, #1
 8010962:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010966:	4313      	orrs	r3, r2
 8010968:	115a      	asrs	r2, r3, #5
 801096a:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801096e:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8010972:	e036      	b.n	80109e2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 8010974:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8010978:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801097c:	7a2a      	ldrb	r2, [r5, #8]
 801097e:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8010982:	ea42 0201 	orr.w	r2, r2, r1
 8010986:	bf1c      	itt	ne
 8010988:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801098c:	b212      	sxthne	r2, r2
 801098e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8010992:	f640 6109 	movw	r1, #3593	; 0xe09
 8010996:	f023 0210 	bic.w	r2, r3, #16
 801099a:	428a      	cmp	r2, r1
 801099c:	d003      	beq.n	80109a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 801099e:	f640 6213 	movw	r2, #3603	; 0xe13
 80109a2:	4293      	cmp	r3, r2
 80109a4:	d12a      	bne.n	80109fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 80109a6:	7b6e      	ldrb	r6, [r5, #13]
 80109a8:	0076      	lsls	r6, r6, #1
 80109aa:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80109ae:	7aae      	ldrb	r6, [r5, #10]
 80109b0:	4316      	orrs	r6, r2
 80109b2:	f640 6213 	movw	r2, #3603	; 0xe13
 80109b6:	4293      	cmp	r3, r2
 80109b8:	bf18      	it	ne
 80109ba:	f103 33ff 	addne.w	r3, r3, #4294967295
 80109be:	4602      	mov	r2, r0
 80109c0:	bf14      	ite	ne
 80109c2:	b29b      	uxthne	r3, r3
 80109c4:	f640 630c 	movweq	r3, #3596	; 0xe0c
 80109c8:	4629      	mov	r1, r5
 80109ca:	4620      	mov	r0, r4
 80109cc:	f7ff fefb 	bl	80107c6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80109d0:	7b43      	ldrb	r3, [r0, #13]
 80109d2:	7a82      	ldrb	r2, [r0, #10]
 80109d4:	005b      	lsls	r3, r3, #1
 80109d6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80109da:	4313      	orrs	r3, r2
 80109dc:	1af6      	subs	r6, r6, r3
 80109de:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 80109e2:	7b69      	ldrb	r1, [r5, #13]
 80109e4:	00cb      	lsls	r3, r1, #3
 80109e6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80109ea:	7a2b      	ldrb	r3, [r5, #8]
 80109ec:	4313      	orrs	r3, r2
 80109ee:	064a      	lsls	r2, r1, #25
 80109f0:	bf44      	itt	mi
 80109f2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80109f6:	b21b      	sxthmi	r3, r3
 80109f8:	1bdb      	subs	r3, r3, r7
 80109fa:	e73f      	b.n	801087c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 80109fc:	2300      	movs	r3, #0
 80109fe:	e7b6      	b.n	801096e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 8010a00:	3fc00079 	.word	0x3fc00079
 8010a04:	080210b4 	.word	0x080210b4
 8010a08:	08021326 	.word	0x08021326
 8010a0c:	080210bd 	.word	0x080210bd

08010a10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8010a10:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010a14:	4604      	mov	r4, r0
 8010a16:	b942      	cbnz	r2, 8010a2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8010a18:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8010a1c:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8010a20:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8010a24:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8010a28:	e046      	b.n	8010ab8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 8010a2a:	7b51      	ldrb	r1, [r2, #13]
 8010a2c:	8893      	ldrh	r3, [r2, #4]
 8010a2e:	010f      	lsls	r7, r1, #4
 8010a30:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8010a34:	79d7      	ldrb	r7, [r2, #7]
 8010a36:	4307      	orrs	r7, r0
 8010a38:	2f04      	cmp	r7, #4
 8010a3a:	b2bd      	uxth	r5, r7
 8010a3c:	bfcc      	ite	gt
 8010a3e:	08bf      	lsrgt	r7, r7, #2
 8010a40:	2701      	movle	r7, #1
 8010a42:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8010a46:	f200 80ab 	bhi.w	8010ba0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 8010a4a:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8010a4e:	4283      	cmp	r3, r0
 8010a50:	d216      	bcs.n	8010a80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8010a52:	f240 605b 	movw	r0, #1627	; 0x65b
 8010a56:	4283      	cmp	r3, r0
 8010a58:	d859      	bhi.n	8010b0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 8010a5a:	f240 6057 	movw	r0, #1623	; 0x657
 8010a5e:	4283      	cmp	r3, r0
 8010a60:	d20e      	bcs.n	8010a80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8010a62:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8010a66:	d24a      	bcs.n	8010afe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 8010a68:	f240 604e 	movw	r0, #1614	; 0x64e
 8010a6c:	4283      	cmp	r3, r0
 8010a6e:	d207      	bcs.n	8010a80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8010a70:	f240 601a 	movw	r0, #1562	; 0x61a
 8010a74:	4283      	cmp	r3, r0
 8010a76:	d02a      	beq.n	8010ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8010a78:	d821      	bhi.n	8010abe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 8010a7a:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8010a7e:	d35b      	bcc.n	8010b38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8010a80:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8010a84:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8010a88:	f040 80d0 	bne.w	8010c2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 8010a8c:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8010a90:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8010a94:	f040 80ca 	bne.w	8010c2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 8010a98:	00cb      	lsls	r3, r1, #3
 8010a9a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8010a9e:	7a13      	ldrb	r3, [r2, #8]
 8010aa0:	0649      	lsls	r1, r1, #25
 8010aa2:	ea43 0300 	orr.w	r3, r3, r0
 8010aa6:	bf44      	itt	mi
 8010aa8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8010aac:	b21b      	sxthmi	r3, r3
 8010aae:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8010ab2:	1b5d      	subs	r5, r3, r5
 8010ab4:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8010ab8:	4610      	mov	r0, r2
 8010aba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010abe:	f240 604b 	movw	r0, #1611	; 0x64b
 8010ac2:	4283      	cmp	r3, r0
 8010ac4:	d338      	bcc.n	8010b38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8010ac6:	f240 604c 	movw	r0, #1612	; 0x64c
 8010aca:	4283      	cmp	r3, r0
 8010acc:	d9d8      	bls.n	8010a80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8010ace:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8010ad2:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8010ad6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8010ada:	f040 80f1 	bne.w	8010cc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 8010ade:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8010ae2:	f040 80ed 	bne.w	8010cc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 8010ae6:	00cb      	lsls	r3, r1, #3
 8010ae8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8010aec:	7a13      	ldrb	r3, [r2, #8]
 8010aee:	064e      	lsls	r6, r1, #25
 8010af0:	ea43 0300 	orr.w	r3, r3, r0
 8010af4:	bf44      	itt	mi
 8010af6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8010afa:	b21b      	sxthmi	r3, r3
 8010afc:	e7d9      	b.n	8010ab2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 8010afe:	f240 6054 	movw	r0, #1620	; 0x654
 8010b02:	4283      	cmp	r3, r0
 8010b04:	d8e3      	bhi.n	8010ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8010b06:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8010b0a:	d9e0      	bls.n	8010ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8010b0c:	e7b8      	b.n	8010a80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8010b0e:	f240 6074 	movw	r0, #1652	; 0x674
 8010b12:	4283      	cmp	r3, r0
 8010b14:	d0b4      	beq.n	8010a80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8010b16:	d82d      	bhi.n	8010b74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 8010b18:	f240 605e 	movw	r0, #1630	; 0x65e
 8010b1c:	4283      	cmp	r3, r0
 8010b1e:	d804      	bhi.n	8010b2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 8010b20:	f240 605d 	movw	r0, #1629	; 0x65d
 8010b24:	4283      	cmp	r3, r0
 8010b26:	d3d2      	bcc.n	8010ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8010b28:	e7aa      	b.n	8010a80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8010b2a:	f240 605f 	movw	r0, #1631	; 0x65f
 8010b2e:	4283      	cmp	r3, r0
 8010b30:	d0cd      	beq.n	8010ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8010b32:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8010b36:	d0a3      	beq.n	8010a80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8010b38:	00cb      	lsls	r3, r1, #3
 8010b3a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8010b3e:	7a13      	ldrb	r3, [r2, #8]
 8010b40:	0649      	lsls	r1, r1, #25
 8010b42:	ea43 0300 	orr.w	r3, r3, r0
 8010b46:	bf44      	itt	mi
 8010b48:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8010b4c:	b21b      	sxthmi	r3, r3
 8010b4e:	1b5d      	subs	r5, r3, r5
 8010b50:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8010b54:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8010b58:	7b53      	ldrb	r3, [r2, #13]
 8010b5a:	015b      	lsls	r3, r3, #5
 8010b5c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8010b60:	7993      	ldrb	r3, [r2, #6]
 8010b62:	430b      	orrs	r3, r1
 8010b64:	005b      	lsls	r3, r3, #1
 8010b66:	2105      	movs	r1, #5
 8010b68:	fb93 f3f1 	sdiv	r3, r3, r1
 8010b6c:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8010b70:	440b      	add	r3, r1
 8010b72:	e757      	b.n	8010a24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8010b74:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8010b78:	4283      	cmp	r3, r0
 8010b7a:	d809      	bhi.n	8010b90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 8010b7c:	f240 60df 	movw	r0, #1759	; 0x6df
 8010b80:	4283      	cmp	r3, r0
 8010b82:	f4bf af7d 	bcs.w	8010a80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8010b86:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8010b8a:	2b05      	cmp	r3, #5
 8010b8c:	d8d4      	bhi.n	8010b38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8010b8e:	e777      	b.n	8010a80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8010b90:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8010b94:	4283      	cmp	r3, r0
 8010b96:	d09a      	beq.n	8010ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8010b98:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8010b9c:	4283      	cmp	r3, r0
 8010b9e:	e7ca      	b.n	8010b36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 8010ba0:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8010ba4:	d22b      	bcs.n	8010bfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 8010ba6:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8010baa:	4283      	cmp	r3, r0
 8010bac:	d28f      	bcs.n	8010ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8010bae:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8010bb2:	4283      	cmp	r3, r0
 8010bb4:	d816      	bhi.n	8010be4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 8010bb6:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8010bba:	4283      	cmp	r3, r0
 8010bbc:	f4bf af60 	bcs.w	8010a80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8010bc0:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8010bc4:	4283      	cmp	r3, r0
 8010bc6:	d80a      	bhi.n	8010bde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 8010bc8:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8010bcc:	4283      	cmp	r3, r0
 8010bce:	f4bf af57 	bcs.w	8010a80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8010bd2:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8010bd6:	4283      	cmp	r3, r0
 8010bd8:	f43f af79 	beq.w	8010ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8010bdc:	e7ac      	b.n	8010b38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8010bde:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8010be2:	e7f8      	b.n	8010bd6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 8010be4:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8010be8:	4283      	cmp	r3, r0
 8010bea:	d802      	bhi.n	8010bf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 8010bec:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8010bf0:	e798      	b.n	8010b24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 8010bf2:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8010bf6:	4283      	cmp	r3, r0
 8010bf8:	f47f af42 	bne.w	8010a80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8010bfc:	e767      	b.n	8010ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8010bfe:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8010c02:	4283      	cmp	r3, r0
 8010c04:	f43f af63 	beq.w	8010ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8010c08:	d802      	bhi.n	8010c10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 8010c0a:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8010c0e:	e7f2      	b.n	8010bf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 8010c10:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8010c14:	4283      	cmp	r3, r0
 8010c16:	d805      	bhi.n	8010c24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 8010c18:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8010c1c:	4283      	cmp	r3, r0
 8010c1e:	f4ff af2f 	bcc.w	8010a80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8010c22:	e754      	b.n	8010ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8010c24:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8010c28:	4283      	cmp	r3, r0
 8010c2a:	e7af      	b.n	8010b8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 8010c2c:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8010c30:	4617      	mov	r7, r2
 8010c32:	f102 0808 	add.w	r8, r2, #8
 8010c36:	4666      	mov	r6, ip
 8010c38:	6838      	ldr	r0, [r7, #0]
 8010c3a:	6879      	ldr	r1, [r7, #4]
 8010c3c:	46e6      	mov	lr, ip
 8010c3e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8010c42:	3708      	adds	r7, #8
 8010c44:	4547      	cmp	r7, r8
 8010c46:	46f4      	mov	ip, lr
 8010c48:	d1f6      	bne.n	8010c38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 8010c4a:	6838      	ldr	r0, [r7, #0]
 8010c4c:	f8ce 0000 	str.w	r0, [lr]
 8010c50:	88b9      	ldrh	r1, [r7, #4]
 8010c52:	f8ae 1004 	strh.w	r1, [lr, #4]
 8010c56:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8010c5a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8010c5e:	d009      	beq.n	8010c74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 8010c60:	7b51      	ldrb	r1, [r2, #13]
 8010c62:	7992      	ldrb	r2, [r2, #6]
 8010c64:	0149      	lsls	r1, r1, #5
 8010c66:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8010c6a:	4311      	orrs	r1, r2
 8010c6c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8010c70:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8010c74:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8010c78:	d00d      	beq.n	8010c96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 8010c7a:	442b      	add	r3, r5
 8010c7c:	b29b      	uxth	r3, r3
 8010c7e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8010c82:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8010c86:	10db      	asrs	r3, r3, #3
 8010c88:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8010c8c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8010c90:	4313      	orrs	r3, r2
 8010c92:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8010c96:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8010c9a:	00cb      	lsls	r3, r1, #3
 8010c9c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010ca0:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8010ca4:	064f      	lsls	r7, r1, #25
 8010ca6:	ea43 0302 	orr.w	r3, r3, r2
 8010caa:	bf44      	itt	mi
 8010cac:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8010cb0:	b21b      	sxthmi	r3, r3
 8010cb2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8010cb6:	1b5d      	subs	r5, r3, r5
 8010cb8:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8010cbc:	4632      	mov	r2, r6
 8010cbe:	e6fb      	b.n	8010ab8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 8010cc0:	f104 0e4c 	add.w	lr, r4, #76	; 0x4c
 8010cc4:	4694      	mov	ip, r2
 8010cc6:	f102 0908 	add.w	r9, r2, #8
 8010cca:	4676      	mov	r6, lr
 8010ccc:	f8dc 0000 	ldr.w	r0, [ip]
 8010cd0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8010cd4:	46f0      	mov	r8, lr
 8010cd6:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8010cda:	f10c 0c08 	add.w	ip, ip, #8
 8010cde:	45cc      	cmp	ip, r9
 8010ce0:	46c6      	mov	lr, r8
 8010ce2:	d1f3      	bne.n	8010ccc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 8010ce4:	f8dc 0000 	ldr.w	r0, [ip]
 8010ce8:	f8c8 0000 	str.w	r0, [r8]
 8010cec:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 8010cf0:	f8a8 1004 	strh.w	r1, [r8, #4]
 8010cf4:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8010cf8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8010cfc:	d009      	beq.n	8010d12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 8010cfe:	7b51      	ldrb	r1, [r2, #13]
 8010d00:	7992      	ldrb	r2, [r2, #6]
 8010d02:	0149      	lsls	r1, r1, #5
 8010d04:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8010d08:	4311      	orrs	r1, r2
 8010d0a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8010d0e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8010d12:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8010d16:	d00d      	beq.n	8010d34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 8010d18:	1bdb      	subs	r3, r3, r7
 8010d1a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8010d1e:	b29b      	uxth	r3, r3
 8010d20:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8010d24:	10db      	asrs	r3, r3, #3
 8010d26:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8010d2a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8010d2e:	4313      	orrs	r3, r2
 8010d30:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8010d34:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8010d38:	00cb      	lsls	r3, r1, #3
 8010d3a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010d3e:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8010d42:	0648      	lsls	r0, r1, #25
 8010d44:	ea43 0302 	orr.w	r3, r3, r2
 8010d48:	bf44      	itt	mi
 8010d4a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8010d4e:	b21b      	sxthmi	r3, r3
 8010d50:	e7b1      	b.n	8010cb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

08010d54 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8010d54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010d58:	461e      	mov	r6, r3
 8010d5a:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8010d5c:	4604      	mov	r4, r0
 8010d5e:	4617      	mov	r7, r2
 8010d60:	b92b      	cbnz	r3, 8010d6e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 8010d62:	4b25      	ldr	r3, [pc, #148]	; (8010df8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 8010d64:	4a25      	ldr	r2, [pc, #148]	; (8010dfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 8010d66:	4826      	ldr	r0, [pc, #152]	; (8010e00 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 8010d68:	21c0      	movs	r1, #192	; 0xc0
 8010d6a:	f00c fe5f 	bl	801da2c <__assert_func>
 8010d6e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8010d70:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8010d74:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8010d78:	f7f8 fb3a 	bl	80093f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010d7c:	4605      	mov	r5, r0
 8010d7e:	b918      	cbnz	r0, 8010d88 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 8010d80:	6030      	str	r0, [r6, #0]
 8010d82:	4628      	mov	r0, r5
 8010d84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010d88:	683b      	ldr	r3, [r7, #0]
 8010d8a:	4601      	mov	r1, r0
 8010d8c:	68db      	ldr	r3, [r3, #12]
 8010d8e:	4638      	mov	r0, r7
 8010d90:	4798      	blx	r3
 8010d92:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8010d96:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8010d9a:	4602      	mov	r2, r0
 8010d9c:	6030      	str	r0, [r6, #0]
 8010d9e:	d213      	bcs.n	8010dc8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 8010da0:	4643      	mov	r3, r8
 8010da2:	4639      	mov	r1, r7
 8010da4:	4620      	mov	r0, r4
 8010da6:	f7ff fe33 	bl	8010a10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8010daa:	6030      	str	r0, [r6, #0]
 8010dac:	6833      	ldr	r3, [r6, #0]
 8010dae:	b143      	cbz	r3, 8010dc2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 8010db0:	7b5a      	ldrb	r2, [r3, #13]
 8010db2:	7a9b      	ldrb	r3, [r3, #10]
 8010db4:	0052      	lsls	r2, r2, #1
 8010db6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8010dba:	4313      	orrs	r3, r2
 8010dbc:	bf0c      	ite	eq
 8010dbe:	2301      	moveq	r3, #1
 8010dc0:	2300      	movne	r3, #0
 8010dc2:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8010dc6:	e7dc      	b.n	8010d82 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 8010dc8:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8010dcc:	b29b      	uxth	r3, r3
 8010dce:	2b7f      	cmp	r3, #127	; 0x7f
 8010dd0:	d804      	bhi.n	8010ddc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 8010dd2:	4639      	mov	r1, r7
 8010dd4:	4620      	mov	r0, r4
 8010dd6:	f7ff fd01 	bl	80107dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8010dda:	e7e6      	b.n	8010daa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 8010ddc:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8010de0:	2b00      	cmp	r3, #0
 8010de2:	d0e3      	beq.n	8010dac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 8010de4:	f640 1302 	movw	r3, #2306	; 0x902
 8010de8:	429d      	cmp	r5, r3
 8010dea:	d1df      	bne.n	8010dac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 8010dec:	4601      	mov	r1, r0
 8010dee:	4620      	mov	r0, r4
 8010df0:	f7ff fcc6 	bl	8010780 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8010df4:	e7d9      	b.n	8010daa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 8010df6:	bf00      	nop
 8010df8:	080210b4 	.word	0x080210b4
 8010dfc:	08021326 	.word	0x08021326
 8010e00:	080210bd 	.word	0x080210bd

08010e04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8010e04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010e08:	461e      	mov	r6, r3
 8010e0a:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8010e0c:	4604      	mov	r4, r0
 8010e0e:	4617      	mov	r7, r2
 8010e10:	b92b      	cbnz	r3, 8010e1e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 8010e12:	4b26      	ldr	r3, [pc, #152]	; (8010eac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 8010e14:	4a26      	ldr	r2, [pc, #152]	; (8010eb0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 8010e16:	4827      	ldr	r0, [pc, #156]	; (8010eb4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 8010e18:	21c0      	movs	r1, #192	; 0xc0
 8010e1a:	f00c fe07 	bl	801da2c <__assert_func>
 8010e1e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8010e20:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8010e24:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8010e28:	f7f8 fae2 	bl	80093f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010e2c:	4605      	mov	r5, r0
 8010e2e:	b918      	cbnz	r0, 8010e38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 8010e30:	6030      	str	r0, [r6, #0]
 8010e32:	4628      	mov	r0, r5
 8010e34:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010e38:	683b      	ldr	r3, [r7, #0]
 8010e3a:	4601      	mov	r1, r0
 8010e3c:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8010e40:	4638      	mov	r0, r7
 8010e42:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8010e46:	47c8      	blx	r9
 8010e48:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8010e4c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8010e50:	4602      	mov	r2, r0
 8010e52:	6030      	str	r0, [r6, #0]
 8010e54:	d213      	bcs.n	8010e7e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 8010e56:	4643      	mov	r3, r8
 8010e58:	4639      	mov	r1, r7
 8010e5a:	4620      	mov	r0, r4
 8010e5c:	f7ff fdd8 	bl	8010a10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8010e60:	6030      	str	r0, [r6, #0]
 8010e62:	6833      	ldr	r3, [r6, #0]
 8010e64:	b143      	cbz	r3, 8010e78 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 8010e66:	7b5a      	ldrb	r2, [r3, #13]
 8010e68:	7a9b      	ldrb	r3, [r3, #10]
 8010e6a:	0052      	lsls	r2, r2, #1
 8010e6c:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8010e70:	4313      	orrs	r3, r2
 8010e72:	bf0c      	ite	eq
 8010e74:	2301      	moveq	r3, #1
 8010e76:	2300      	movne	r3, #0
 8010e78:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8010e7c:	e7d9      	b.n	8010e32 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 8010e7e:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8010e82:	b29b      	uxth	r3, r3
 8010e84:	2b7f      	cmp	r3, #127	; 0x7f
 8010e86:	d804      	bhi.n	8010e92 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 8010e88:	4639      	mov	r1, r7
 8010e8a:	4620      	mov	r0, r4
 8010e8c:	f7ff fca6 	bl	80107dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8010e90:	e7e6      	b.n	8010e60 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 8010e92:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8010e96:	2b00      	cmp	r3, #0
 8010e98:	d0e3      	beq.n	8010e62 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 8010e9a:	f640 1302 	movw	r3, #2306	; 0x902
 8010e9e:	429d      	cmp	r5, r3
 8010ea0:	d1df      	bne.n	8010e62 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 8010ea2:	4601      	mov	r1, r0
 8010ea4:	4620      	mov	r0, r4
 8010ea6:	f7ff fc6b 	bl	8010780 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8010eaa:	e7d9      	b.n	8010e60 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 8010eac:	080210b4 	.word	0x080210b4
 8010eb0:	08021326 	.word	0x08021326
 8010eb4:	080210bd 	.word	0x080210bd

08010eb8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8010eb8:	b510      	push	{r4, lr}
 8010eba:	4604      	mov	r4, r0
 8010ebc:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8010ec0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8010ec2:	b9d9      	cbnz	r1, 8010efc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x44>
 8010ec4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8010ec6:	2b0a      	cmp	r3, #10
 8010ec8:	d037      	beq.n	8010f3a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 8010eca:	4620      	mov	r0, r4
 8010ecc:	f7ff fc17 	bl	80106fe <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8010ed0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8010ed2:	2b09      	cmp	r3, #9
 8010ed4:	d906      	bls.n	8010ee4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 8010ed6:	4b19      	ldr	r3, [pc, #100]	; (8010f3c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 8010ed8:	4a19      	ldr	r2, [pc, #100]	; (8010f40 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 8010eda:	481a      	ldr	r0, [pc, #104]	; (8010f44 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8c>)
 8010edc:	f44f 7182 	mov.w	r1, #260	; 0x104
 8010ee0:	f00c fda4 	bl	801da2c <__assert_func>
 8010ee4:	1c5a      	adds	r2, r3, #1
 8010ee6:	8722      	strh	r2, [r4, #56]	; 0x38
 8010ee8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8010eea:	4413      	add	r3, r2
 8010eec:	b29b      	uxth	r3, r3
 8010eee:	2b09      	cmp	r3, #9
 8010ef0:	bf88      	it	hi
 8010ef2:	3b0a      	subhi	r3, #10
 8010ef4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8010ef8:	8458      	strh	r0, [r3, #34]	; 0x22
 8010efa:	e7e3      	b.n	8010ec4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xc>
 8010efc:	2b0a      	cmp	r3, #10
 8010efe:	d01c      	beq.n	8010f3a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 8010f00:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8010f02:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8010f06:	3901      	subs	r1, #1
 8010f08:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8010f0a:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8010f0e:	1c51      	adds	r1, r2, #1
 8010f10:	b289      	uxth	r1, r1
 8010f12:	2901      	cmp	r1, #1
 8010f14:	bf8a      	itet	hi
 8010f16:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8010f1a:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8010f1c:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8010f1e:	2b09      	cmp	r3, #9
 8010f20:	d8d9      	bhi.n	8010ed6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1e>
 8010f22:	1c5a      	adds	r2, r3, #1
 8010f24:	8722      	strh	r2, [r4, #56]	; 0x38
 8010f26:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8010f28:	4413      	add	r3, r2
 8010f2a:	b29b      	uxth	r3, r3
 8010f2c:	2b09      	cmp	r3, #9
 8010f2e:	bf88      	it	hi
 8010f30:	3b0a      	subhi	r3, #10
 8010f32:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8010f36:	8458      	strh	r0, [r3, #34]	; 0x22
 8010f38:	e7c0      	b.n	8010ebc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8010f3a:	bd10      	pop	{r4, pc}
 8010f3c:	080210e9 	.word	0x080210e9
 8010f40:	0802147c 	.word	0x0802147c
 8010f44:	080210bd 	.word	0x080210bd

08010f48 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8010f48:	b538      	push	{r3, r4, r5, lr}
 8010f4a:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8010f4c:	4604      	mov	r4, r0
 8010f4e:	b92a      	cbnz	r2, 8010f5c <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 8010f50:	4b13      	ldr	r3, [pc, #76]	; (8010fa0 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 8010f52:	4a14      	ldr	r2, [pc, #80]	; (8010fa4 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 8010f54:	4814      	ldr	r0, [pc, #80]	; (8010fa8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 8010f56:	21d5      	movs	r1, #213	; 0xd5
 8010f58:	f00c fd68 	bl	801da2c <__assert_func>
 8010f5c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8010f5e:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 8010f62:	3a01      	subs	r2, #1
 8010f64:	8c4d      	ldrh	r5, [r1, #34]	; 0x22
 8010f66:	8702      	strh	r2, [r0, #56]	; 0x38
 8010f68:	1c5a      	adds	r2, r3, #1
 8010f6a:	b292      	uxth	r2, r2
 8010f6c:	2a09      	cmp	r2, #9
 8010f6e:	bf86      	itte	hi
 8010f70:	3b09      	subhi	r3, #9
 8010f72:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8010f74:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8010f76:	f7ff ff9f 	bl	8010eb8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8010f7a:	8c23      	ldrh	r3, [r4, #32]
 8010f7c:	2b01      	cmp	r3, #1
 8010f7e:	bf9c      	itt	ls
 8010f80:	3301      	addls	r3, #1
 8010f82:	8423      	strhls	r3, [r4, #32]
 8010f84:	8be3      	ldrh	r3, [r4, #30]
 8010f86:	b90b      	cbnz	r3, 8010f8c <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 8010f88:	2302      	movs	r3, #2
 8010f8a:	83e3      	strh	r3, [r4, #30]
 8010f8c:	8be3      	ldrh	r3, [r4, #30]
 8010f8e:	3b01      	subs	r3, #1
 8010f90:	b29b      	uxth	r3, r3
 8010f92:	83e3      	strh	r3, [r4, #30]
 8010f94:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010f98:	4628      	mov	r0, r5
 8010f9a:	8365      	strh	r5, [r4, #26]
 8010f9c:	bd38      	pop	{r3, r4, r5, pc}
 8010f9e:	bf00      	nop
 8010fa0:	080210b4 	.word	0x080210b4
 8010fa4:	080213d1 	.word	0x080213d1
 8010fa8:	080210bd 	.word	0x080210bd

08010fac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8010fac:	b538      	push	{r3, r4, r5, lr}
 8010fae:	428a      	cmp	r2, r1
 8010fb0:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8010fb2:	d90c      	bls.n	8010fce <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 8010fb4:	b92c      	cbnz	r4, 8010fc2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 8010fb6:	4b1c      	ldr	r3, [pc, #112]	; (8011028 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 8010fb8:	4a1c      	ldr	r2, [pc, #112]	; (801102c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 8010fba:	21e1      	movs	r1, #225	; 0xe1
 8010fbc:	481c      	ldr	r0, [pc, #112]	; (8011030 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 8010fbe:	f00c fd35 	bl	801da2c <__assert_func>
 8010fc2:	3c01      	subs	r4, #1
 8010fc4:	8704      	strh	r4, [r0, #56]	; 0x38
 8010fc6:	4b1b      	ldr	r3, [pc, #108]	; (8011034 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 8010fc8:	4a1b      	ldr	r2, [pc, #108]	; (8011038 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 8010fca:	21c5      	movs	r1, #197	; 0xc5
 8010fcc:	e7f6      	b.n	8010fbc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 8010fce:	428c      	cmp	r4, r1
 8010fd0:	d203      	bcs.n	8010fda <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 8010fd2:	4b1a      	ldr	r3, [pc, #104]	; (801103c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 8010fd4:	4a1a      	ldr	r2, [pc, #104]	; (8011040 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 8010fd6:	21cb      	movs	r1, #203	; 0xcb
 8010fd8:	e7f0      	b.n	8010fbc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 8010fda:	1a64      	subs	r4, r4, r1
 8010fdc:	8704      	strh	r4, [r0, #56]	; 0x38
 8010fde:	8ec4      	ldrh	r4, [r0, #54]	; 0x36
 8010fe0:	4421      	add	r1, r4
 8010fe2:	b289      	uxth	r1, r1
 8010fe4:	2909      	cmp	r1, #9
 8010fe6:	bf88      	it	hi
 8010fe8:	390a      	subhi	r1, #10
 8010fea:	86c1      	strh	r1, [r0, #54]	; 0x36
 8010fec:	250a      	movs	r5, #10
 8010fee:	b1ba      	cbz	r2, 8011020 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 8010ff0:	3a01      	subs	r2, #1
 8010ff2:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8010ff4:	b292      	uxth	r2, r2
 8010ff6:	2909      	cmp	r1, #9
 8010ff8:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8010ffc:	d903      	bls.n	8011006 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 8010ffe:	4b11      	ldr	r3, [pc, #68]	; (8011044 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 8011000:	4a11      	ldr	r2, [pc, #68]	; (8011048 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 8011002:	21e6      	movs	r1, #230	; 0xe6
 8011004:	e7da      	b.n	8010fbc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 8011006:	3101      	adds	r1, #1
 8011008:	8701      	strh	r1, [r0, #56]	; 0x38
 801100a:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801100c:	b901      	cbnz	r1, 8011010 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 801100e:	86c5      	strh	r5, [r0, #54]	; 0x36
 8011010:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8011012:	3901      	subs	r1, #1
 8011014:	b289      	uxth	r1, r1
 8011016:	86c1      	strh	r1, [r0, #54]	; 0x36
 8011018:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801101c:	844c      	strh	r4, [r1, #34]	; 0x22
 801101e:	e7e6      	b.n	8010fee <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 8011020:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011024:	f7ff bf48 	b.w	8010eb8 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8011028:	080210b4 	.word	0x080210b4
 801102c:	080211aa 	.word	0x080211aa
 8011030:	080210bd 	.word	0x080210bd
 8011034:	080210f5 	.word	0x080210f5
 8011038:	08021254 	.word	0x08021254
 801103c:	08021103 	.word	0x08021103
 8011040:	0802152b 	.word	0x0802152b
 8011044:	0802110f 	.word	0x0802110f
 8011048:	08021122 	.word	0x08021122

0801104c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801104c:	3a01      	subs	r2, #1
 801104e:	b570      	push	{r4, r5, r6, lr}
 8011050:	b292      	uxth	r2, r2
 8011052:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8011056:	42b2      	cmp	r2, r6
 8011058:	d019      	beq.n	801108e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 801105a:	8c04      	ldrh	r4, [r0, #32]
 801105c:	f831 5b02 	ldrh.w	r5, [r1], #2
 8011060:	4294      	cmp	r4, r2
 8011062:	d805      	bhi.n	8011070 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 8011064:	4b19      	ldr	r3, [pc, #100]	; (80110cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 8011066:	4a1a      	ldr	r2, [pc, #104]	; (80110d0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 8011068:	481a      	ldr	r0, [pc, #104]	; (80110d4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 801106a:	21c5      	movs	r1, #197	; 0xc5
 801106c:	f00c fcde 	bl	801da2c <__assert_func>
 8011070:	8bc4      	ldrh	r4, [r0, #30]
 8011072:	4414      	add	r4, r2
 8011074:	b2a4      	uxth	r4, r4
 8011076:	2c01      	cmp	r4, #1
 8011078:	bf88      	it	hi
 801107a:	3c02      	subhi	r4, #2
 801107c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8011080:	3a01      	subs	r2, #1
 8011082:	8b64      	ldrh	r4, [r4, #26]
 8011084:	42ac      	cmp	r4, r5
 8011086:	b292      	uxth	r2, r2
 8011088:	d0e5      	beq.n	8011056 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 801108a:	2000      	movs	r0, #0
 801108c:	bd70      	pop	{r4, r5, r6, pc}
 801108e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8011092:	2400      	movs	r4, #0
 8011094:	4413      	add	r3, r2
 8011096:	b2a2      	uxth	r2, r4
 8011098:	429a      	cmp	r2, r3
 801109a:	da14      	bge.n	80110c6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 801109c:	8f06      	ldrh	r6, [r0, #56]	; 0x38
 801109e:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80110a2:	4296      	cmp	r6, r2
 80110a4:	d802      	bhi.n	80110ac <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 80110a6:	4b09      	ldr	r3, [pc, #36]	; (80110cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 80110a8:	4a0b      	ldr	r2, [pc, #44]	; (80110d8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 80110aa:	e7dd      	b.n	8011068 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 80110ac:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80110ae:	4432      	add	r2, r6
 80110b0:	b292      	uxth	r2, r2
 80110b2:	2a09      	cmp	r2, #9
 80110b4:	bf88      	it	hi
 80110b6:	3a0a      	subhi	r2, #10
 80110b8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80110bc:	3401      	adds	r4, #1
 80110be:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 80110c0:	42aa      	cmp	r2, r5
 80110c2:	d0e8      	beq.n	8011096 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 80110c4:	e7e1      	b.n	801108a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 80110c6:	2001      	movs	r0, #1
 80110c8:	e7e0      	b.n	801108c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 80110ca:	bf00      	nop
 80110cc:	080210f5 	.word	0x080210f5
 80110d0:	080215af 	.word	0x080215af
 80110d4:	080210bd 	.word	0x080210bd
 80110d8:	08021254 	.word	0x08021254

080110dc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80110dc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80110e0:	4605      	mov	r5, r0
 80110e2:	4616      	mov	r6, r2
 80110e4:	1c8c      	adds	r4, r1, #2
 80110e6:	8809      	ldrh	r1, [r1, #0]
 80110e8:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80110ec:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80110f0:	42b3      	cmp	r3, r6
 80110f2:	d124      	bne.n	801113e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80110f4:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80110f8:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80110fc:	f001 070f 	and.w	r7, r1, #15
 8011100:	f8cd 8000 	str.w	r8, [sp]
 8011104:	464b      	mov	r3, r9
 8011106:	4652      	mov	r2, sl
 8011108:	4621      	mov	r1, r4
 801110a:	4628      	mov	r0, r5
 801110c:	f7ff ff9e 	bl	801104c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8011110:	4683      	mov	fp, r0
 8011112:	b168      	cbz	r0, 8011130 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8011114:	eb0a 0109 	add.w	r1, sl, r9
 8011118:	4441      	add	r1, r8
 801111a:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801111e:	463a      	mov	r2, r7
 8011120:	4649      	mov	r1, r9
 8011122:	4628      	mov	r0, r5
 8011124:	f7ff ff42 	bl	8010fac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8011128:	4658      	mov	r0, fp
 801112a:	b003      	add	sp, #12
 801112c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011130:	eb07 010a 	add.w	r1, r7, sl
 8011134:	4449      	add	r1, r9
 8011136:	4441      	add	r1, r8
 8011138:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801113c:	e7d2      	b.n	80110e4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801113e:	f04f 0b00 	mov.w	fp, #0
 8011142:	e7f1      	b.n	8011128 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08011144 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8011144:	b570      	push	{r4, r5, r6, lr}
 8011146:	8810      	ldrh	r0, [r2, #0]
 8011148:	4298      	cmp	r0, r3
 801114a:	d817      	bhi.n	801117c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801114c:	1e48      	subs	r0, r1, #1
 801114e:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8011152:	4298      	cmp	r0, r3
 8011154:	d312      	bcc.n	801117c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8011156:	2400      	movs	r4, #0
 8011158:	428c      	cmp	r4, r1
 801115a:	d20f      	bcs.n	801117c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801115c:	1860      	adds	r0, r4, r1
 801115e:	1040      	asrs	r0, r0, #1
 8011160:	0085      	lsls	r5, r0, #2
 8011162:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8011166:	42b3      	cmp	r3, r6
 8011168:	d902      	bls.n	8011170 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801116a:	3001      	adds	r0, #1
 801116c:	b284      	uxth	r4, r0
 801116e:	e7f3      	b.n	8011158 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8011170:	d201      	bcs.n	8011176 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8011172:	b281      	uxth	r1, r0
 8011174:	e7f0      	b.n	8011158 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8011176:	442a      	add	r2, r5
 8011178:	8850      	ldrh	r0, [r2, #2]
 801117a:	bd70      	pop	{r4, r5, r6, pc}
 801117c:	2000      	movs	r0, #0
 801117e:	e7fc      	b.n	801117a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08011180 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8011180:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011184:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8011186:	886f      	ldrh	r7, [r5, #2]
 8011188:	4604      	mov	r4, r0
 801118a:	087f      	lsrs	r7, r7, #1
 801118c:	260b      	movs	r6, #11
 801118e:	3e01      	subs	r6, #1
 8011190:	d01b      	beq.n	80111ca <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 8011192:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8011194:	b92b      	cbnz	r3, 80111a2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 8011196:	4b0e      	ldr	r3, [pc, #56]	; (80111d0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 8011198:	4a0e      	ldr	r2, [pc, #56]	; (80111d4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 801119a:	480f      	ldr	r0, [pc, #60]	; (80111d8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 801119c:	21c0      	movs	r1, #192	; 0xc0
 801119e:	f00c fc45 	bl	801da2c <__assert_func>
 80111a2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80111a4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80111a8:	462a      	mov	r2, r5
 80111aa:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80111ae:	4639      	mov	r1, r7
 80111b0:	4643      	mov	r3, r8
 80111b2:	4620      	mov	r0, r4
 80111b4:	f7ff ffc6 	bl	8011144 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80111b8:	b138      	cbz	r0, 80111ca <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 80111ba:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80111be:	4642      	mov	r2, r8
 80111c0:	4620      	mov	r0, r4
 80111c2:	f7ff ff8b 	bl	80110dc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80111c6:	2800      	cmp	r0, #0
 80111c8:	d1e1      	bne.n	801118e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80111ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80111ce:	bf00      	nop
 80111d0:	080210b4 	.word	0x080210b4
 80111d4:	08021326 	.word	0x08021326
 80111d8:	080210bd 	.word	0x080210bd

080111dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80111dc:	b570      	push	{r4, r5, r6, lr}
 80111de:	694a      	ldr	r2, [r1, #20]
 80111e0:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80111e2:	684b      	ldr	r3, [r1, #4]
 80111e4:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80111e6:	1b54      	subs	r4, r2, r5
 80111e8:	f000 8106 	beq.w	80113f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80111ec:	1b9b      	subs	r3, r3, r6
 80111ee:	d003      	beq.n	80111f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80111f0:	4363      	muls	r3, r4
 80111f2:	2210      	movs	r2, #16
 80111f4:	fb93 f3f2 	sdiv	r3, r3, r2
 80111f8:	680c      	ldr	r4, [r1, #0]
 80111fa:	698a      	ldr	r2, [r1, #24]
 80111fc:	1b65      	subs	r5, r4, r5
 80111fe:	f000 80fd 	beq.w	80113fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8011202:	1b92      	subs	r2, r2, r6
 8011204:	d003      	beq.n	801120e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8011206:	436a      	muls	r2, r5
 8011208:	2410      	movs	r4, #16
 801120a:	fb92 f2f4 	sdiv	r2, r2, r4
 801120e:	1a9b      	subs	r3, r3, r2
 8011210:	ee07 3a90 	vmov	s15, r3
 8011214:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8011438 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8011218:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801121c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011220:	ee67 7a84 	vmul.f32	s15, s15, s8
 8011224:	460a      	mov	r2, r1
 8011226:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801122a:	4603      	mov	r3, r0
 801122c:	f100 040c 	add.w	r4, r0, #12
 8011230:	eeb1 6a43 	vneg.f32	s12, s6
 8011234:	edd2 7a02 	vldr	s15, [r2, #8]
 8011238:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801123c:	3214      	adds	r2, #20
 801123e:	ece3 6a01 	vstmia	r3!, {s13}
 8011242:	ed52 7a02 	vldr	s15, [r2, #-8]
 8011246:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801124a:	429c      	cmp	r4, r3
 801124c:	edc3 7a02 	vstr	s15, [r3, #8]
 8011250:	ed52 7a01 	vldr	s15, [r2, #-4]
 8011254:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8011258:	edc3 7a05 	vstr	s15, [r3, #20]
 801125c:	d1ea      	bne.n	8011234 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801125e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8011260:	698b      	ldr	r3, [r1, #24]
 8011262:	edd0 4a02 	vldr	s9, [r0, #8]
 8011266:	edd0 3a00 	vldr	s7, [r0]
 801126a:	edd0 6a01 	vldr	s13, [r0, #4]
 801126e:	ed90 5a05 	vldr	s10, [r0, #20]
 8011272:	ed90 2a03 	vldr	s4, [r0, #12]
 8011276:	edd0 5a04 	vldr	s11, [r0, #16]
 801127a:	ed90 1a07 	vldr	s2, [r0, #28]
 801127e:	edd0 2a06 	vldr	s5, [r0, #24]
 8011282:	1a9b      	subs	r3, r3, r2
 8011284:	ee07 3a90 	vmov	s15, r3
 8011288:	684b      	ldr	r3, [r1, #4]
 801128a:	1a9b      	subs	r3, r3, r2
 801128c:	ee07 3a10 	vmov	s14, r3
 8011290:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011294:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8011298:	ee67 7a84 	vmul.f32	s15, s15, s8
 801129c:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80112a0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80112a4:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80112a8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80112ac:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80112b0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80112b4:	ee32 5a45 	vsub.f32	s10, s4, s10
 80112b8:	ee67 7a83 	vmul.f32	s15, s15, s6
 80112bc:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80112c0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80112c2:	694a      	ldr	r2, [r1, #20]
 80112c4:	1b13      	subs	r3, r2, r4
 80112c6:	ee07 3a10 	vmov	s14, r3
 80112ca:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80112ce:	680b      	ldr	r3, [r1, #0]
 80112d0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80112d4:	1b1b      	subs	r3, r3, r4
 80112d6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80112da:	ee07 3a10 	vmov	s14, r3
 80112de:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80112e2:	ee27 7a04 	vmul.f32	s14, s14, s8
 80112e6:	eee6 4a87 	vfma.f32	s9, s13, s14
 80112ea:	ee64 4a86 	vmul.f32	s9, s9, s12
 80112ee:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 80112f2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80112f4:	698b      	ldr	r3, [r1, #24]
 80112f6:	1a9b      	subs	r3, r3, r2
 80112f8:	ee06 3a90 	vmov	s13, r3
 80112fc:	684b      	ldr	r3, [r1, #4]
 80112fe:	1a9b      	subs	r3, r3, r2
 8011300:	ee07 3a10 	vmov	s14, r3
 8011304:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8011308:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801130c:	ee66 6a84 	vmul.f32	s13, s13, s8
 8011310:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011314:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8011318:	eee5 6a87 	vfma.f32	s13, s11, s14
 801131c:	ee66 6a83 	vmul.f32	s13, s13, s6
 8011320:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8011324:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8011326:	694a      	ldr	r2, [r1, #20]
 8011328:	1b13      	subs	r3, r2, r4
 801132a:	ee07 3a10 	vmov	s14, r3
 801132e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011332:	680b      	ldr	r3, [r1, #0]
 8011334:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011338:	1b1b      	subs	r3, r3, r4
 801133a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801133e:	ee07 3a10 	vmov	s14, r3
 8011342:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011346:	ee27 7a04 	vmul.f32	s14, s14, s8
 801134a:	eea5 5a87 	vfma.f32	s10, s11, s14
 801134e:	edd0 5a08 	vldr	s11, [r0, #32]
 8011352:	ee25 5a06 	vmul.f32	s10, s10, s12
 8011356:	ee31 1a65 	vsub.f32	s2, s2, s11
 801135a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801135e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8011360:	698b      	ldr	r3, [r1, #24]
 8011362:	1a9b      	subs	r3, r3, r2
 8011364:	ee07 3a10 	vmov	s14, r3
 8011368:	684b      	ldr	r3, [r1, #4]
 801136a:	1a9b      	subs	r3, r3, r2
 801136c:	ee01 3a90 	vmov	s3, r3
 8011370:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011374:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8011378:	ee27 7a04 	vmul.f32	s14, s14, s8
 801137c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8011380:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8011384:	ee61 1a84 	vmul.f32	s3, s3, s8
 8011388:	eea1 7a21 	vfma.f32	s14, s2, s3
 801138c:	ee27 7a03 	vmul.f32	s14, s14, s6
 8011390:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8011394:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8011396:	694a      	ldr	r2, [r1, #20]
 8011398:	1b13      	subs	r3, r2, r4
 801139a:	ee03 3a10 	vmov	s6, r3
 801139e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80113a2:	680b      	ldr	r3, [r1, #0]
 80113a4:	ee23 3a04 	vmul.f32	s6, s6, s8
 80113a8:	1b1b      	subs	r3, r3, r4
 80113aa:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80113ae:	ee03 3a10 	vmov	s6, r3
 80113b2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80113b6:	ee23 4a04 	vmul.f32	s8, s6, s8
 80113ba:	eee1 5a04 	vfma.f32	s11, s2, s8
 80113be:	ee25 6a86 	vmul.f32	s12, s11, s12
 80113c2:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80113c6:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80113ca:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80113ce:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80113d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80113d6:	dd13      	ble.n	8011400 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80113d8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80113dc:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80113e0:	63c3      	str	r3, [r0, #60]	; 0x3c
 80113e2:	eee3 7a87 	vfma.f32	s15, s7, s14
 80113e6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80113ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80113ee:	dd15      	ble.n	801141c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80113f0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80113f4:	6403      	str	r3, [r0, #64]	; 0x40
 80113f6:	bd70      	pop	{r4, r5, r6, pc}
 80113f8:	4623      	mov	r3, r4
 80113fa:	e6fd      	b.n	80111f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80113fc:	462a      	mov	r2, r5
 80113fe:	e706      	b.n	801120e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8011400:	d502      	bpl.n	8011408 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8011402:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8011406:	e7e9      	b.n	80113dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8011408:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801140c:	eea3 2a85 	vfma.f32	s4, s7, s10
 8011410:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8011414:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011418:	dade      	bge.n	80113d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801141a:	e7f2      	b.n	8011402 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801141c:	d502      	bpl.n	8011424 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801141e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8011422:	e7e7      	b.n	80113f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8011424:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8011428:	eee3 4a86 	vfma.f32	s9, s7, s12
 801142c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8011430:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011434:	dadc      	bge.n	80113f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8011436:	e7f2      	b.n	801141e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8011438:	3d800000 	.word	0x3d800000

0801143c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801143c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011440:	2714      	movs	r7, #20
 8011442:	435f      	muls	r7, r3
 8011444:	eb02 0c07 	add.w	ip, r2, r7
 8011448:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801144c:	f115 0e0f 	adds.w	lr, r5, #15
 8011450:	d432      	bmi.n	80114b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x7c>
 8011452:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8011456:	9c08      	ldr	r4, [sp, #32]
 8011458:	f8c0 e014 	str.w	lr, [r0, #20]
 801145c:	2614      	movs	r6, #20
 801145e:	4366      	muls	r6, r4
 8011460:	eb02 0806 	add.w	r8, r2, r6
 8011464:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8011468:	f115 040f 	adds.w	r4, r5, #15
 801146c:	d430      	bmi.n	80114d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801146e:	1124      	asrs	r4, r4, #4
 8011470:	eba4 040e 	sub.w	r4, r4, lr
 8011474:	6184      	str	r4, [r0, #24]
 8011476:	2c00      	cmp	r4, #0
 8011478:	f000 80a9 	beq.w	80115ce <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x192>
 801147c:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8011480:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8011484:	5995      	ldr	r5, [r2, r6]
 8011486:	eba4 0809 	sub.w	r8, r4, r9
 801148a:	59d4      	ldr	r4, [r2, r7]
 801148c:	eba5 0a04 	sub.w	sl, r5, r4
 8011490:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8011494:	fb0e fe05 	mul.w	lr, lr, r5
 8011498:	fb0a ee19 	mls	lr, sl, r9, lr
 801149c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80114a0:	fb08 e404 	mla	r4, r8, r4, lr
 80114a4:	3c01      	subs	r4, #1
 80114a6:	2e00      	cmp	r6, #0
 80114a8:	4434      	add	r4, r6
 80114aa:	dc1d      	bgt.n	80114e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xac>
 80114ac:	4b5a      	ldr	r3, [pc, #360]	; (8011618 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1dc>)
 80114ae:	4a5b      	ldr	r2, [pc, #364]	; (801161c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e0>)
 80114b0:	485b      	ldr	r0, [pc, #364]	; (8011620 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e4>)
 80114b2:	21f7      	movs	r1, #247	; 0xf7
 80114b4:	f00c faba 	bl	801da2c <__assert_func>
 80114b8:	f1c5 0501 	rsb	r5, r5, #1
 80114bc:	f015 050f 	ands.w	r5, r5, #15
 80114c0:	bf18      	it	ne
 80114c2:	2501      	movne	r5, #1
 80114c4:	2410      	movs	r4, #16
 80114c6:	fb9e fef4 	sdiv	lr, lr, r4
 80114ca:	ebae 0e05 	sub.w	lr, lr, r5
 80114ce:	e7c2      	b.n	8011456 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1a>
 80114d0:	f1c5 0501 	rsb	r5, r5, #1
 80114d4:	f015 050f 	ands.w	r5, r5, #15
 80114d8:	bf18      	it	ne
 80114da:	2501      	movne	r5, #1
 80114dc:	f04f 0910 	mov.w	r9, #16
 80114e0:	fb94 f4f9 	sdiv	r4, r4, r9
 80114e4:	1b64      	subs	r4, r4, r5
 80114e6:	e7c3      	b.n	8011470 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x34>
 80114e8:	2c00      	cmp	r4, #0
 80114ea:	db72      	blt.n	80115d2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x196>
 80114ec:	fb94 fef6 	sdiv	lr, r4, r6
 80114f0:	f8c0 e000 	str.w	lr, [r0]
 80114f4:	fb06 441e 	mls	r4, r6, lr, r4
 80114f8:	6104      	str	r4, [r0, #16]
 80114fa:	2d00      	cmp	r5, #0
 80114fc:	db7b      	blt.n	80115f6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1ba>
 80114fe:	fb95 f4f6 	sdiv	r4, r5, r6
 8011502:	6044      	str	r4, [r0, #4]
 8011504:	fb06 5514 	mls	r5, r6, r4, r5
 8011508:	6085      	str	r5, [r0, #8]
 801150a:	60c6      	str	r6, [r0, #12]
 801150c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8011510:	6945      	ldr	r5, [r0, #20]
 8011512:	59d2      	ldr	r2, [r2, r7]
 8011514:	eddf 6a43 	vldr	s13, [pc, #268]	; 8011624 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e8>
 8011518:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801151c:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8011520:	ee07 4a10 	vmov	s14, r4
 8011524:	6804      	ldr	r4, [r0, #0]
 8011526:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801152a:	ee07 2a90 	vmov	s15, r2
 801152e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011532:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011536:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801153a:	ee27 7a26 	vmul.f32	s14, s14, s13
 801153e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8011542:	edd3 6a00 	vldr	s13, [r3]
 8011546:	eee6 6a07 	vfma.f32	s13, s12, s14
 801154a:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801154e:	eee6 6a27 	vfma.f32	s13, s12, s15
 8011552:	edc0 6a07 	vstr	s13, [r0, #28]
 8011556:	edd0 6a01 	vldr	s13, [r0, #4]
 801155a:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801155e:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8011562:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8011566:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801156a:	ed80 6a08 	vstr	s12, [r0, #32]
 801156e:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8011570:	6242      	str	r2, [r0, #36]	; 0x24
 8011572:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8011576:	ed93 6a03 	vldr	s12, [r3, #12]
 801157a:	eea5 6a87 	vfma.f32	s12, s11, s14
 801157e:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8011582:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8011586:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 801158a:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801158e:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8011592:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8011596:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 801159a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801159c:	6302      	str	r2, [r0, #48]	; 0x30
 801159e:	ed93 6a06 	vldr	s12, [r3, #24]
 80115a2:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 80115a6:	eea5 6a87 	vfma.f32	s12, s11, s14
 80115aa:	eeb0 7a46 	vmov.f32	s14, s12
 80115ae:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 80115b2:	eea6 7a27 	vfma.f32	s14, s12, s15
 80115b6:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80115ba:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80115be:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 80115c2:	eee6 7a87 	vfma.f32	s15, s13, s14
 80115c6:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 80115ca:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80115cc:	63c3      	str	r3, [r0, #60]	; 0x3c
 80115ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80115d2:	4264      	negs	r4, r4
 80115d4:	fb94 fef6 	sdiv	lr, r4, r6
 80115d8:	f1ce 0800 	rsb	r8, lr, #0
 80115dc:	fb06 441e 	mls	r4, r6, lr, r4
 80115e0:	f8c0 8000 	str.w	r8, [r0]
 80115e4:	6104      	str	r4, [r0, #16]
 80115e6:	2c00      	cmp	r4, #0
 80115e8:	d087      	beq.n	80114fa <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xbe>
 80115ea:	ea6f 0e0e 	mvn.w	lr, lr
 80115ee:	f8c0 e000 	str.w	lr, [r0]
 80115f2:	1b34      	subs	r4, r6, r4
 80115f4:	e780      	b.n	80114f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xbc>
 80115f6:	426d      	negs	r5, r5
 80115f8:	fb95 f4f6 	sdiv	r4, r5, r6
 80115fc:	f1c4 0e00 	rsb	lr, r4, #0
 8011600:	fb06 5514 	mls	r5, r6, r4, r5
 8011604:	f8c0 e004 	str.w	lr, [r0, #4]
 8011608:	6085      	str	r5, [r0, #8]
 801160a:	2d00      	cmp	r5, #0
 801160c:	f43f af7d 	beq.w	801150a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xce>
 8011610:	43e4      	mvns	r4, r4
 8011612:	6044      	str	r4, [r0, #4]
 8011614:	1b75      	subs	r5, r6, r5
 8011616:	e777      	b.n	8011508 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xcc>
 8011618:	08021680 	.word	0x08021680
 801161c:	080216bf 	.word	0x080216bf
 8011620:	08021690 	.word	0x08021690
 8011624:	3d800000 	.word	0x3d800000

08011628 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8011628:	4b01      	ldr	r3, [pc, #4]	; (8011630 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801162a:	6018      	str	r0, [r3, #0]
 801162c:	4770      	bx	lr
 801162e:	bf00      	nop
 8011630:	20026f60 	.word	0x20026f60

08011634 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8011634:	4b06      	ldr	r3, [pc, #24]	; (8011650 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8011636:	881a      	ldrh	r2, [r3, #0]
 8011638:	4282      	cmp	r2, r0
 801163a:	d807      	bhi.n	801164c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801163c:	4b05      	ldr	r3, [pc, #20]	; (8011654 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801163e:	881b      	ldrh	r3, [r3, #0]
 8011640:	4413      	add	r3, r2
 8011642:	4298      	cmp	r0, r3
 8011644:	bfac      	ite	ge
 8011646:	2000      	movge	r0, #0
 8011648:	2001      	movlt	r0, #1
 801164a:	4770      	bx	lr
 801164c:	2000      	movs	r0, #0
 801164e:	4770      	bx	lr
 8011650:	20026f80 	.word	0x20026f80
 8011654:	20026f84 	.word	0x20026f84

08011658 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8011658:	b508      	push	{r3, lr}
 801165a:	4601      	mov	r1, r0
 801165c:	f7ff ffea 	bl	8011634 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8011660:	b118      	cbz	r0, 801166a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8011662:	4b02      	ldr	r3, [pc, #8]	; (801166c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8011664:	681b      	ldr	r3, [r3, #0]
 8011666:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801166a:	bd08      	pop	{r3, pc}
 801166c:	20026f64 	.word	0x20026f64

08011670 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8011670:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011672:	4c24      	ldr	r4, [pc, #144]	; (8011704 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8011674:	6823      	ldr	r3, [r4, #0]
 8011676:	2b00      	cmp	r3, #0
 8011678:	d042      	beq.n	8011700 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801167a:	4a23      	ldr	r2, [pc, #140]	; (8011708 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801167c:	4d23      	ldr	r5, [pc, #140]	; (801170c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801167e:	8811      	ldrh	r1, [r2, #0]
 8011680:	f8b5 c000 	ldrh.w	ip, [r5]
 8011684:	4822      	ldr	r0, [pc, #136]	; (8011710 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8011686:	4461      	add	r1, ip
 8011688:	1c4a      	adds	r2, r1, #1
 801168a:	f022 0201 	bic.w	r2, r2, #1
 801168e:	008f      	lsls	r7, r1, #2
 8011690:	0412      	lsls	r2, r2, #16
 8011692:	19de      	adds	r6, r3, r7
 8011694:	0c12      	lsrs	r2, r2, #16
 8011696:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801169a:	6006      	str	r6, [r0, #0]
 801169c:	4e1d      	ldr	r6, [pc, #116]	; (8011714 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801169e:	19da      	adds	r2, r3, r7
 80116a0:	6032      	str	r2, [r6, #0]
 80116a2:	220e      	movs	r2, #14
 80116a4:	fb02 f20c 	mul.w	r2, r2, ip
 80116a8:	3203      	adds	r2, #3
 80116aa:	f022 0203 	bic.w	r2, r2, #3
 80116ae:	443a      	add	r2, r7
 80116b0:	4f19      	ldr	r7, [pc, #100]	; (8011718 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80116b2:	4413      	add	r3, r2
 80116b4:	603b      	str	r3, [r7, #0]
 80116b6:	4f19      	ldr	r7, [pc, #100]	; (801171c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80116b8:	2300      	movs	r3, #0
 80116ba:	803b      	strh	r3, [r7, #0]
 80116bc:	4f18      	ldr	r7, [pc, #96]	; (8011720 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80116be:	683f      	ldr	r7, [r7, #0]
 80116c0:	1aba      	subs	r2, r7, r2
 80116c2:	4f18      	ldr	r7, [pc, #96]	; (8011724 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80116c4:	603a      	str	r2, [r7, #0]
 80116c6:	4a18      	ldr	r2, [pc, #96]	; (8011728 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80116c8:	469c      	mov	ip, r3
 80116ca:	8013      	strh	r3, [r2, #0]
 80116cc:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80116d0:	428b      	cmp	r3, r1
 80116d2:	d10d      	bne.n	80116f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 80116d4:	882d      	ldrh	r5, [r5, #0]
 80116d6:	6830      	ldr	r0, [r6, #0]
 80116d8:	2300      	movs	r3, #0
 80116da:	240e      	movs	r4, #14
 80116dc:	429d      	cmp	r5, r3
 80116de:	d90f      	bls.n	8011700 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80116e0:	fb04 0203 	mla	r2, r4, r3, r0
 80116e4:	3301      	adds	r3, #1
 80116e6:	7b11      	ldrb	r1, [r2, #12]
 80116e8:	f36f 1145 	bfc	r1, #5, #1
 80116ec:	7311      	strb	r1, [r2, #12]
 80116ee:	e7f5      	b.n	80116dc <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80116f0:	6822      	ldr	r2, [r4, #0]
 80116f2:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80116f6:	6802      	ldr	r2, [r0, #0]
 80116f8:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80116fc:	3301      	adds	r3, #1
 80116fe:	e7e7      	b.n	80116d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8011700:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011702:	bf00      	nop
 8011704:	20026f64 	.word	0x20026f64
 8011708:	20026f80 	.word	0x20026f80
 801170c:	20026f84 	.word	0x20026f84
 8011710:	20026f78 	.word	0x20026f78
 8011714:	20026f68 	.word	0x20026f68
 8011718:	20026f70 	.word	0x20026f70
 801171c:	20026f82 	.word	0x20026f82
 8011720:	20026f6c 	.word	0x20026f6c
 8011724:	20026f7c 	.word	0x20026f7c
 8011728:	20026f74 	.word	0x20026f74

0801172c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801172c:	b510      	push	{r4, lr}
 801172e:	4b10      	ldr	r3, [pc, #64]	; (8011770 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 8011730:	681b      	ldr	r3, [r3, #0]
 8011732:	b9db      	cbnz	r3, 801176c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 8011734:	b1d1      	cbz	r1, 801176c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 8011736:	4b0f      	ldr	r3, [pc, #60]	; (8011774 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 8011738:	801a      	strh	r2, [r3, #0]
 801173a:	4b0f      	ldr	r3, [pc, #60]	; (8011778 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 801173c:	881b      	ldrh	r3, [r3, #0]
 801173e:	b292      	uxth	r2, r2
 8011740:	240e      	movs	r4, #14
 8011742:	4413      	add	r3, r2
 8011744:	4362      	muls	r2, r4
 8011746:	2406      	movs	r4, #6
 8011748:	fb04 2203 	mla	r2, r4, r3, r2
 801174c:	428a      	cmp	r2, r1
 801174e:	d305      	bcc.n	801175c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 8011750:	4b0a      	ldr	r3, [pc, #40]	; (801177c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 8011752:	4a0b      	ldr	r2, [pc, #44]	; (8011780 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 8011754:	480b      	ldr	r0, [pc, #44]	; (8011784 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 8011756:	2134      	movs	r1, #52	; 0x34
 8011758:	f00c f968 	bl	801da2c <__assert_func>
 801175c:	4b0a      	ldr	r3, [pc, #40]	; (8011788 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 801175e:	6019      	str	r1, [r3, #0]
 8011760:	4b0a      	ldr	r3, [pc, #40]	; (801178c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 8011762:	6018      	str	r0, [r3, #0]
 8011764:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011768:	f7ff bf82 	b.w	8011670 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801176c:	bd10      	pop	{r4, pc}
 801176e:	bf00      	nop
 8011770:	20026f70 	.word	0x20026f70
 8011774:	20026f84 	.word	0x20026f84
 8011778:	20026f80 	.word	0x20026f80
 801177c:	0802175d 	.word	0x0802175d
 8011780:	080217b6 	.word	0x080217b6
 8011784:	08021738 	.word	0x08021738
 8011788:	20026f6c 	.word	0x20026f6c
 801178c:	20026f64 	.word	0x20026f64

08011790 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8011790:	b470      	push	{r4, r5, r6}
 8011792:	4c07      	ldr	r4, [pc, #28]	; (80117b0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8011794:	6826      	ldr	r6, [r4, #0]
 8011796:	4605      	mov	r5, r0
 8011798:	4610      	mov	r0, r2
 801179a:	9a03      	ldr	r2, [sp, #12]
 801179c:	b936      	cbnz	r6, 80117ac <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801179e:	6025      	str	r5, [r4, #0]
 80117a0:	4c04      	ldr	r4, [pc, #16]	; (80117b4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80117a2:	8021      	strh	r1, [r4, #0]
 80117a4:	bc70      	pop	{r4, r5, r6}
 80117a6:	4619      	mov	r1, r3
 80117a8:	f7ff bfc0 	b.w	801172c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80117ac:	bc70      	pop	{r4, r5, r6}
 80117ae:	4770      	bx	lr
 80117b0:	20026f88 	.word	0x20026f88
 80117b4:	20026f80 	.word	0x20026f80

080117b8 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80117b8:	b508      	push	{r3, lr}
 80117ba:	4b17      	ldr	r3, [pc, #92]	; (8011818 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80117bc:	6819      	ldr	r1, [r3, #0]
 80117be:	b931      	cbnz	r1, 80117ce <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 80117c0:	4b16      	ldr	r3, [pc, #88]	; (801181c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80117c2:	4a17      	ldr	r2, [pc, #92]	; (8011820 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 80117c4:	4817      	ldr	r0, [pc, #92]	; (8011824 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 80117c6:	f240 4184 	movw	r1, #1156	; 0x484
 80117ca:	f00c f92f 	bl	801da2c <__assert_func>
 80117ce:	4a16      	ldr	r2, [pc, #88]	; (8011828 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 80117d0:	8803      	ldrh	r3, [r0, #0]
 80117d2:	8812      	ldrh	r2, [r2, #0]
 80117d4:	4293      	cmp	r3, r2
 80117d6:	d204      	bcs.n	80117e2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 80117d8:	2214      	movs	r2, #20
 80117da:	fb02 1303 	mla	r3, r2, r3, r1
 80117de:	8918      	ldrh	r0, [r3, #8]
 80117e0:	bd08      	pop	{r3, pc}
 80117e2:	4912      	ldr	r1, [pc, #72]	; (801182c <_ZNK8touchgfx6Bitmap8getWidthEv+0x74>)
 80117e4:	8809      	ldrh	r1, [r1, #0]
 80117e6:	4411      	add	r1, r2
 80117e8:	428b      	cmp	r3, r1
 80117ea:	da06      	bge.n	80117fa <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 80117ec:	1a9b      	subs	r3, r3, r2
 80117ee:	4a10      	ldr	r2, [pc, #64]	; (8011830 <_ZNK8touchgfx6Bitmap8getWidthEv+0x78>)
 80117f0:	6812      	ldr	r2, [r2, #0]
 80117f2:	210e      	movs	r1, #14
 80117f4:	fb01 2303 	mla	r3, r1, r3, r2
 80117f8:	e7f1      	b.n	80117de <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 80117fa:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80117fe:	4293      	cmp	r3, r2
 8011800:	d107      	bne.n	8011812 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5a>
 8011802:	4b0c      	ldr	r3, [pc, #48]	; (8011834 <_ZNK8touchgfx6Bitmap8getWidthEv+0x7c>)
 8011804:	781b      	ldrb	r3, [r3, #0]
 8011806:	b913      	cbnz	r3, 801180e <_ZNK8touchgfx6Bitmap8getWidthEv+0x56>
 8011808:	4b0b      	ldr	r3, [pc, #44]	; (8011838 <_ZNK8touchgfx6Bitmap8getWidthEv+0x80>)
 801180a:	8818      	ldrh	r0, [r3, #0]
 801180c:	e7e8      	b.n	80117e0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 801180e:	4b0b      	ldr	r3, [pc, #44]	; (801183c <_ZNK8touchgfx6Bitmap8getWidthEv+0x84>)
 8011810:	e7fb      	b.n	801180a <_ZNK8touchgfx6Bitmap8getWidthEv+0x52>
 8011812:	2000      	movs	r0, #0
 8011814:	e7e4      	b.n	80117e0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 8011816:	bf00      	nop
 8011818:	20026f88 	.word	0x20026f88
 801181c:	080209ac 	.word	0x080209ac
 8011820:	08021863 	.word	0x08021863
 8011824:	08021738 	.word	0x08021738
 8011828:	20026f80 	.word	0x20026f80
 801182c:	20026f84 	.word	0x20026f84
 8011830:	20026f68 	.word	0x20026f68
 8011834:	20026ef6 	.word	0x20026ef6
 8011838:	20026ef8 	.word	0x20026ef8
 801183c:	20026efa 	.word	0x20026efa

08011840 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8011840:	b508      	push	{r3, lr}
 8011842:	4b17      	ldr	r3, [pc, #92]	; (80118a0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8011844:	6819      	ldr	r1, [r3, #0]
 8011846:	b931      	cbnz	r1, 8011856 <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 8011848:	4b16      	ldr	r3, [pc, #88]	; (80118a4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801184a:	4a17      	ldr	r2, [pc, #92]	; (80118a8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 801184c:	4817      	ldr	r0, [pc, #92]	; (80118ac <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 801184e:	f44f 6193 	mov.w	r1, #1176	; 0x498
 8011852:	f00c f8eb 	bl	801da2c <__assert_func>
 8011856:	4a16      	ldr	r2, [pc, #88]	; (80118b0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 8011858:	8803      	ldrh	r3, [r0, #0]
 801185a:	8812      	ldrh	r2, [r2, #0]
 801185c:	4293      	cmp	r3, r2
 801185e:	d204      	bcs.n	801186a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 8011860:	2214      	movs	r2, #20
 8011862:	fb02 1303 	mla	r3, r2, r3, r1
 8011866:	8958      	ldrh	r0, [r3, #10]
 8011868:	bd08      	pop	{r3, pc}
 801186a:	4912      	ldr	r1, [pc, #72]	; (80118b4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x74>)
 801186c:	8809      	ldrh	r1, [r1, #0]
 801186e:	4411      	add	r1, r2
 8011870:	428b      	cmp	r3, r1
 8011872:	da06      	bge.n	8011882 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 8011874:	1a9b      	subs	r3, r3, r2
 8011876:	4a10      	ldr	r2, [pc, #64]	; (80118b8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x78>)
 8011878:	6812      	ldr	r2, [r2, #0]
 801187a:	210e      	movs	r1, #14
 801187c:	fb01 2303 	mla	r3, r1, r3, r2
 8011880:	e7f1      	b.n	8011866 <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 8011882:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8011886:	4293      	cmp	r3, r2
 8011888:	d107      	bne.n	801189a <_ZNK8touchgfx6Bitmap9getHeightEv+0x5a>
 801188a:	4b0c      	ldr	r3, [pc, #48]	; (80118bc <_ZNK8touchgfx6Bitmap9getHeightEv+0x7c>)
 801188c:	781b      	ldrb	r3, [r3, #0]
 801188e:	b913      	cbnz	r3, 8011896 <_ZNK8touchgfx6Bitmap9getHeightEv+0x56>
 8011890:	4b0b      	ldr	r3, [pc, #44]	; (80118c0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x80>)
 8011892:	8818      	ldrh	r0, [r3, #0]
 8011894:	e7e8      	b.n	8011868 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 8011896:	4b0b      	ldr	r3, [pc, #44]	; (80118c4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x84>)
 8011898:	e7fb      	b.n	8011892 <_ZNK8touchgfx6Bitmap9getHeightEv+0x52>
 801189a:	2000      	movs	r0, #0
 801189c:	e7e4      	b.n	8011868 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 801189e:	bf00      	nop
 80118a0:	20026f88 	.word	0x20026f88
 80118a4:	080209ac 	.word	0x080209ac
 80118a8:	0802188f 	.word	0x0802188f
 80118ac:	08021738 	.word	0x08021738
 80118b0:	20026f80 	.word	0x20026f80
 80118b4:	20026f84 	.word	0x20026f84
 80118b8:	20026f68 	.word	0x20026f68
 80118bc:	20026ef6 	.word	0x20026ef6
 80118c0:	20026efa 	.word	0x20026efa
 80118c4:	20026ef8 	.word	0x20026ef8

080118c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80118c8:	b510      	push	{r4, lr}
 80118ca:	4b23      	ldr	r3, [pc, #140]	; (8011958 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80118cc:	681c      	ldr	r4, [r3, #0]
 80118ce:	b934      	cbnz	r4, 80118de <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 80118d0:	4b22      	ldr	r3, [pc, #136]	; (801195c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80118d2:	4a23      	ldr	r2, [pc, #140]	; (8011960 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 80118d4:	4823      	ldr	r0, [pc, #140]	; (8011964 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 80118d6:	f240 41ac 	movw	r1, #1196	; 0x4ac
 80118da:	f00c f8a7 	bl	801da2c <__assert_func>
 80118de:	4a22      	ldr	r2, [pc, #136]	; (8011968 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 80118e0:	880b      	ldrh	r3, [r1, #0]
 80118e2:	8812      	ldrh	r2, [r2, #0]
 80118e4:	4293      	cmp	r3, r2
 80118e6:	d211      	bcs.n	801190c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 80118e8:	2214      	movs	r2, #20
 80118ea:	fb02 4303 	mla	r3, r2, r3, r4
 80118ee:	8a1a      	ldrh	r2, [r3, #16]
 80118f0:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80118f4:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80118f8:	8a5b      	ldrh	r3, [r3, #18]
 80118fa:	8004      	strh	r4, [r0, #0]
 80118fc:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8011900:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8011904:	8041      	strh	r1, [r0, #2]
 8011906:	8082      	strh	r2, [r0, #4]
 8011908:	80c3      	strh	r3, [r0, #6]
 801190a:	e00e      	b.n	801192a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 801190c:	4917      	ldr	r1, [pc, #92]	; (801196c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 801190e:	8809      	ldrh	r1, [r1, #0]
 8011910:	4411      	add	r1, r2
 8011912:	428b      	cmp	r3, r1
 8011914:	da0a      	bge.n	801192c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 8011916:	1a9b      	subs	r3, r3, r2
 8011918:	4a15      	ldr	r2, [pc, #84]	; (8011970 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 801191a:	6812      	ldr	r2, [r2, #0]
 801191c:	210e      	movs	r1, #14
 801191e:	fb01 2303 	mla	r3, r1, r3, r2
 8011922:	681a      	ldr	r2, [r3, #0]
 8011924:	6002      	str	r2, [r0, #0]
 8011926:	685a      	ldr	r2, [r3, #4]
 8011928:	6042      	str	r2, [r0, #4]
 801192a:	bd10      	pop	{r4, pc}
 801192c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8011930:	4293      	cmp	r3, r2
 8011932:	d10b      	bne.n	801194c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 8011934:	4b0f      	ldr	r3, [pc, #60]	; (8011974 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 8011936:	f9b3 1000 	ldrsh.w	r1, [r3]
 801193a:	4b0f      	ldr	r3, [pc, #60]	; (8011978 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 801193c:	8081      	strh	r1, [r0, #4]
 801193e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011942:	80c2      	strh	r2, [r0, #6]
 8011944:	2300      	movs	r3, #0
 8011946:	8003      	strh	r3, [r0, #0]
 8011948:	8043      	strh	r3, [r0, #2]
 801194a:	e7ee      	b.n	801192a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 801194c:	2300      	movs	r3, #0
 801194e:	8003      	strh	r3, [r0, #0]
 8011950:	8043      	strh	r3, [r0, #2]
 8011952:	8083      	strh	r3, [r0, #4]
 8011954:	e7d8      	b.n	8011908 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 8011956:	bf00      	nop
 8011958:	20026f88 	.word	0x20026f88
 801195c:	080209ac 	.word	0x080209ac
 8011960:	080217fc 	.word	0x080217fc
 8011964:	08021738 	.word	0x08021738
 8011968:	20026f80 	.word	0x20026f80
 801196c:	20026f84 	.word	0x20026f84
 8011970:	20026f68 	.word	0x20026f68
 8011974:	20026ef2 	.word	0x20026ef2
 8011978:	20026ef4 	.word	0x20026ef4

0801197c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801197c:	4b18      	ldr	r3, [pc, #96]	; (80119e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801197e:	681b      	ldr	r3, [r3, #0]
 8011980:	b34b      	cbz	r3, 80119d6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 8011982:	4a18      	ldr	r2, [pc, #96]	; (80119e4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8011984:	8800      	ldrh	r0, [r0, #0]
 8011986:	8812      	ldrh	r2, [r2, #0]
 8011988:	4290      	cmp	r0, r2
 801198a:	d211      	bcs.n	80119b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 801198c:	2214      	movs	r2, #20
 801198e:	fb02 3300 	mla	r3, r2, r0, r3
 8011992:	8a1a      	ldrh	r2, [r3, #16]
 8011994:	8919      	ldrh	r1, [r3, #8]
 8011996:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801199a:	428a      	cmp	r2, r1
 801199c:	db1d      	blt.n	80119da <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 801199e:	8a58      	ldrh	r0, [r3, #18]
 80119a0:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80119a4:	895b      	ldrh	r3, [r3, #10]
 80119a6:	4298      	cmp	r0, r3
 80119a8:	bfac      	ite	ge
 80119aa:	2000      	movge	r0, #0
 80119ac:	2001      	movlt	r0, #1
 80119ae:	4770      	bx	lr
 80119b0:	4b0d      	ldr	r3, [pc, #52]	; (80119e8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80119b2:	881b      	ldrh	r3, [r3, #0]
 80119b4:	4413      	add	r3, r2
 80119b6:	4298      	cmp	r0, r3
 80119b8:	da0d      	bge.n	80119d6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 80119ba:	4b0c      	ldr	r3, [pc, #48]	; (80119ec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 80119bc:	681b      	ldr	r3, [r3, #0]
 80119be:	1a80      	subs	r0, r0, r2
 80119c0:	220e      	movs	r2, #14
 80119c2:	fb02 3300 	mla	r3, r2, r0, r3
 80119c6:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80119ca:	891a      	ldrh	r2, [r3, #8]
 80119cc:	4291      	cmp	r1, r2
 80119ce:	db04      	blt.n	80119da <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 80119d0:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80119d4:	e7e6      	b.n	80119a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 80119d6:	2000      	movs	r0, #0
 80119d8:	4770      	bx	lr
 80119da:	2001      	movs	r0, #1
 80119dc:	4770      	bx	lr
 80119de:	bf00      	nop
 80119e0:	20026f88 	.word	0x20026f88
 80119e4:	20026f80 	.word	0x20026f80
 80119e8:	20026f84 	.word	0x20026f84
 80119ec:	20026f68 	.word	0x20026f68

080119f0 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80119f0:	b508      	push	{r3, lr}
 80119f2:	4b12      	ldr	r3, [pc, #72]	; (8011a3c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80119f4:	6819      	ldr	r1, [r3, #0]
 80119f6:	b931      	cbnz	r1, 8011a06 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80119f8:	4b11      	ldr	r3, [pc, #68]	; (8011a40 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80119fa:	4a12      	ldr	r2, [pc, #72]	; (8011a44 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80119fc:	4812      	ldr	r0, [pc, #72]	; (8011a48 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80119fe:	f44f 619a 	mov.w	r1, #1232	; 0x4d0
 8011a02:	f00c f813 	bl	801da2c <__assert_func>
 8011a06:	8803      	ldrh	r3, [r0, #0]
 8011a08:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8011a0c:	4293      	cmp	r3, r2
 8011a0e:	d012      	beq.n	8011a36 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8011a10:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8011a14:	4293      	cmp	r3, r2
 8011a16:	d103      	bne.n	8011a20 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 8011a18:	4b0c      	ldr	r3, [pc, #48]	; (8011a4c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8011a1a:	681b      	ldr	r3, [r3, #0]
 8011a1c:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8011a1e:	bd08      	pop	{r3, pc}
 8011a20:	4a0b      	ldr	r2, [pc, #44]	; (8011a50 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 8011a22:	6812      	ldr	r2, [r2, #0]
 8011a24:	b11a      	cbz	r2, 8011a2e <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 8011a26:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8011a2a:	2800      	cmp	r0, #0
 8011a2c:	d1f7      	bne.n	8011a1e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8011a2e:	2214      	movs	r2, #20
 8011a30:	4353      	muls	r3, r2
 8011a32:	58c8      	ldr	r0, [r1, r3]
 8011a34:	e7f3      	b.n	8011a1e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8011a36:	2000      	movs	r0, #0
 8011a38:	e7f1      	b.n	8011a1e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8011a3a:	bf00      	nop
 8011a3c:	20026f88 	.word	0x20026f88
 8011a40:	080209ac 	.word	0x080209ac
 8011a44:	08021832 	.word	0x08021832
 8011a48:	08021738 	.word	0x08021738
 8011a4c:	20026f00 	.word	0x20026f00
 8011a50:	20026f64 	.word	0x20026f64

08011a54 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8011a54:	8802      	ldrh	r2, [r0, #0]
 8011a56:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 8011a5a:	429a      	cmp	r2, r3
 8011a5c:	d845      	bhi.n	8011aea <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8011a5e:	4b24      	ldr	r3, [pc, #144]	; (8011af0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8011a60:	8818      	ldrh	r0, [r3, #0]
 8011a62:	4282      	cmp	r2, r0
 8011a64:	d221      	bcs.n	8011aaa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 8011a66:	4b23      	ldr	r3, [pc, #140]	; (8011af4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8011a68:	6819      	ldr	r1, [r3, #0]
 8011a6a:	2314      	movs	r3, #20
 8011a6c:	fb03 1302 	mla	r3, r3, r2, r1
 8011a70:	6858      	ldr	r0, [r3, #4]
 8011a72:	2800      	cmp	r0, #0
 8011a74:	d03a      	beq.n	8011aec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8011a76:	4920      	ldr	r1, [pc, #128]	; (8011af8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8011a78:	6809      	ldr	r1, [r1, #0]
 8011a7a:	2900      	cmp	r1, #0
 8011a7c:	d036      	beq.n	8011aec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8011a7e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8011a82:	2900      	cmp	r1, #0
 8011a84:	d032      	beq.n	8011aec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8011a86:	891a      	ldrh	r2, [r3, #8]
 8011a88:	8958      	ldrh	r0, [r3, #10]
 8011a8a:	4350      	muls	r0, r2
 8011a8c:	7c5a      	ldrb	r2, [r3, #17]
 8011a8e:	7cdb      	ldrb	r3, [r3, #19]
 8011a90:	0952      	lsrs	r2, r2, #5
 8011a92:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8011a96:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8011a9a:	2b0b      	cmp	r3, #11
 8011a9c:	bf18      	it	ne
 8011a9e:	0040      	lslne	r0, r0, #1
 8011aa0:	3003      	adds	r0, #3
 8011aa2:	f020 0003 	bic.w	r0, r0, #3
 8011aa6:	4408      	add	r0, r1
 8011aa8:	4770      	bx	lr
 8011aaa:	4b14      	ldr	r3, [pc, #80]	; (8011afc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 8011aac:	881b      	ldrh	r3, [r3, #0]
 8011aae:	4403      	add	r3, r0
 8011ab0:	429a      	cmp	r2, r3
 8011ab2:	da1a      	bge.n	8011aea <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8011ab4:	4b12      	ldr	r3, [pc, #72]	; (8011b00 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 8011ab6:	681b      	ldr	r3, [r3, #0]
 8011ab8:	1a10      	subs	r0, r2, r0
 8011aba:	210e      	movs	r1, #14
 8011abc:	fb01 3000 	mla	r0, r1, r0, r3
 8011ac0:	7b03      	ldrb	r3, [r0, #12]
 8011ac2:	f003 031f 	and.w	r3, r3, #31
 8011ac6:	2b0b      	cmp	r3, #11
 8011ac8:	d10b      	bne.n	8011ae2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8011aca:	8903      	ldrh	r3, [r0, #8]
 8011acc:	8940      	ldrh	r0, [r0, #10]
 8011ace:	4358      	muls	r0, r3
 8011ad0:	4b09      	ldr	r3, [pc, #36]	; (8011af8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8011ad2:	6819      	ldr	r1, [r3, #0]
 8011ad4:	3003      	adds	r0, #3
 8011ad6:	f020 0303 	bic.w	r3, r0, #3
 8011ada:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8011ade:	4418      	add	r0, r3
 8011ae0:	4770      	bx	lr
 8011ae2:	2b0d      	cmp	r3, #13
 8011ae4:	d101      	bne.n	8011aea <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8011ae6:	300d      	adds	r0, #13
 8011ae8:	4770      	bx	lr
 8011aea:	2000      	movs	r0, #0
 8011aec:	4770      	bx	lr
 8011aee:	bf00      	nop
 8011af0:	20026f80 	.word	0x20026f80
 8011af4:	20026f88 	.word	0x20026f88
 8011af8:	20026f64 	.word	0x20026f64
 8011afc:	20026f84 	.word	0x20026f84
 8011b00:	20026f68 	.word	0x20026f68

08011b04 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8011b04:	b510      	push	{r4, lr}
 8011b06:	4b17      	ldr	r3, [pc, #92]	; (8011b64 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8011b08:	6819      	ldr	r1, [r3, #0]
 8011b0a:	8803      	ldrh	r3, [r0, #0]
 8011b0c:	b1e9      	cbz	r1, 8011b4a <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 8011b0e:	4a16      	ldr	r2, [pc, #88]	; (8011b68 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8011b10:	8812      	ldrh	r2, [r2, #0]
 8011b12:	429a      	cmp	r2, r3
 8011b14:	d90a      	bls.n	8011b2c <_ZNK8touchgfx6Bitmap9getFormatEv+0x28>
 8011b16:	2214      	movs	r2, #20
 8011b18:	fb02 1303 	mla	r3, r2, r3, r1
 8011b1c:	7c58      	ldrb	r0, [r3, #17]
 8011b1e:	0942      	lsrs	r2, r0, #5
 8011b20:	7cd8      	ldrb	r0, [r3, #19]
 8011b22:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8011b26:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8011b2a:	bd10      	pop	{r4, pc}
 8011b2c:	490f      	ldr	r1, [pc, #60]	; (8011b6c <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8011b2e:	8809      	ldrh	r1, [r1, #0]
 8011b30:	4411      	add	r1, r2
 8011b32:	428b      	cmp	r3, r1
 8011b34:	da09      	bge.n	8011b4a <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 8011b36:	1a9b      	subs	r3, r3, r2
 8011b38:	4a0d      	ldr	r2, [pc, #52]	; (8011b70 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8011b3a:	6812      	ldr	r2, [r2, #0]
 8011b3c:	210e      	movs	r1, #14
 8011b3e:	fb01 2303 	mla	r3, r1, r3, r2
 8011b42:	7b18      	ldrb	r0, [r3, #12]
 8011b44:	f000 001f 	and.w	r0, r0, #31
 8011b48:	e7ef      	b.n	8011b2a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8011b4a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8011b4e:	4293      	cmp	r3, r2
 8011b50:	d106      	bne.n	8011b60 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 8011b52:	f7f6 f88d 	bl	8007c70 <_ZN8touchgfx3HAL3lcdEv>
 8011b56:	6803      	ldr	r3, [r0, #0]
 8011b58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011b5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011b5e:	4718      	bx	r3
 8011b60:	2000      	movs	r0, #0
 8011b62:	e7e2      	b.n	8011b2a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8011b64:	20026f88 	.word	0x20026f88
 8011b68:	20026f80 	.word	0x20026f80
 8011b6c:	20026f84 	.word	0x20026f84
 8011b70:	20026f68 	.word	0x20026f68

08011b74 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8011b74:	2010      	movs	r0, #16
 8011b76:	4770      	bx	lr

08011b78 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8011b78:	2000      	movs	r0, #0
 8011b7a:	4770      	bx	lr

08011b7c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8011b7c:	2bff      	cmp	r3, #255	; 0xff
 8011b7e:	d050      	beq.n	8011c22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8011b80:	2a0b      	cmp	r2, #11
 8011b82:	d04a      	beq.n	8011c1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8011b84:	d80e      	bhi.n	8011ba4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8011b86:	2a03      	cmp	r2, #3
 8011b88:	d03f      	beq.n	8011c0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8011b8a:	d804      	bhi.n	8011b96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8011b8c:	2a01      	cmp	r2, #1
 8011b8e:	d03e      	beq.n	8011c0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8011b90:	d93f      	bls.n	8011c12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8011b92:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8011b94:	4770      	bx	lr
 8011b96:	2a09      	cmp	r2, #9
 8011b98:	d03f      	beq.n	8011c1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8011b9a:	d83c      	bhi.n	8011c16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8011b9c:	2a08      	cmp	r2, #8
 8011b9e:	d03a      	beq.n	8011c16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8011ba0:	2000      	movs	r0, #0
 8011ba2:	4770      	bx	lr
 8011ba4:	2a2f      	cmp	r2, #47	; 0x2f
 8011ba6:	d024      	beq.n	8011bf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8011ba8:	d80d      	bhi.n	8011bc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8011baa:	2a2d      	cmp	r2, #45	; 0x2d
 8011bac:	d014      	beq.n	8011bd8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8011bae:	d826      	bhi.n	8011bfe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8011bb0:	2a2c      	cmp	r2, #44	; 0x2c
 8011bb2:	d1f5      	bne.n	8011ba0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011bb4:	684b      	ldr	r3, [r1, #4]
 8011bb6:	781b      	ldrb	r3, [r3, #0]
 8011bb8:	2b01      	cmp	r3, #1
 8011bba:	d018      	beq.n	8011bee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8011bbc:	d323      	bcc.n	8011c06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8011bbe:	2b02      	cmp	r3, #2
 8011bc0:	d1ee      	bne.n	8011ba0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011bc2:	6880      	ldr	r0, [r0, #8]
 8011bc4:	4770      	bx	lr
 8011bc6:	2a31      	cmp	r2, #49	; 0x31
 8011bc8:	d004      	beq.n	8011bd4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8011bca:	d328      	bcc.n	8011c1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8011bcc:	2a32      	cmp	r2, #50	; 0x32
 8011bce:	d026      	beq.n	8011c1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8011bd0:	2a33      	cmp	r2, #51	; 0x33
 8011bd2:	d1e5      	bne.n	8011ba0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011bd4:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8011bd6:	4770      	bx	lr
 8011bd8:	684b      	ldr	r3, [r1, #4]
 8011bda:	781b      	ldrb	r3, [r3, #0]
 8011bdc:	2b01      	cmp	r3, #1
 8011bde:	d004      	beq.n	8011bea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8011be0:	d30b      	bcc.n	8011bfa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011be2:	2b02      	cmp	r3, #2
 8011be4:	d1dc      	bne.n	8011ba0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011be6:	6900      	ldr	r0, [r0, #16]
 8011be8:	4770      	bx	lr
 8011bea:	6a00      	ldr	r0, [r0, #32]
 8011bec:	4770      	bx	lr
 8011bee:	6980      	ldr	r0, [r0, #24]
 8011bf0:	4770      	bx	lr
 8011bf2:	684b      	ldr	r3, [r1, #4]
 8011bf4:	781b      	ldrb	r3, [r3, #0]
 8011bf6:	2b00      	cmp	r3, #0
 8011bf8:	d1d2      	bne.n	8011ba0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011bfa:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8011bfc:	4770      	bx	lr
 8011bfe:	684b      	ldr	r3, [r1, #4]
 8011c00:	781b      	ldrb	r3, [r3, #0]
 8011c02:	2b00      	cmp	r3, #0
 8011c04:	d1cc      	bne.n	8011ba0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011c06:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8011c08:	4770      	bx	lr
 8011c0a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8011c0c:	4770      	bx	lr
 8011c0e:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8011c10:	4770      	bx	lr
 8011c12:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8011c14:	4770      	bx	lr
 8011c16:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8011c18:	4770      	bx	lr
 8011c1a:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8011c1c:	4770      	bx	lr
 8011c1e:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8011c20:	4770      	bx	lr
 8011c22:	2a0b      	cmp	r2, #11
 8011c24:	d049      	beq.n	8011cba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8011c26:	d80e      	bhi.n	8011c46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8011c28:	2a03      	cmp	r2, #3
 8011c2a:	d040      	beq.n	8011cae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8011c2c:	d804      	bhi.n	8011c38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8011c2e:	2a01      	cmp	r2, #1
 8011c30:	d03f      	beq.n	8011cb2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8011c32:	d940      	bls.n	8011cb6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8011c34:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8011c36:	4770      	bx	lr
 8011c38:	2a09      	cmp	r2, #9
 8011c3a:	d03e      	beq.n	8011cba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8011c3c:	d801      	bhi.n	8011c42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8011c3e:	2a08      	cmp	r2, #8
 8011c40:	d1ae      	bne.n	8011ba0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011c42:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8011c44:	4770      	bx	lr
 8011c46:	2a2f      	cmp	r2, #47	; 0x2f
 8011c48:	d024      	beq.n	8011c94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8011c4a:	d80d      	bhi.n	8011c68 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8011c4c:	2a2d      	cmp	r2, #45	; 0x2d
 8011c4e:	d014      	beq.n	8011c7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8011c50:	d826      	bhi.n	8011ca0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8011c52:	2a2c      	cmp	r2, #44	; 0x2c
 8011c54:	d1a4      	bne.n	8011ba0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011c56:	684b      	ldr	r3, [r1, #4]
 8011c58:	781b      	ldrb	r3, [r3, #0]
 8011c5a:	2b01      	cmp	r3, #1
 8011c5c:	d018      	beq.n	8011c90 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8011c5e:	d324      	bcc.n	8011caa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8011c60:	2b02      	cmp	r3, #2
 8011c62:	d19d      	bne.n	8011ba0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011c64:	68c0      	ldr	r0, [r0, #12]
 8011c66:	4770      	bx	lr
 8011c68:	2a31      	cmp	r2, #49	; 0x31
 8011c6a:	d004      	beq.n	8011c76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8011c6c:	d327      	bcc.n	8011cbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8011c6e:	2a32      	cmp	r2, #50	; 0x32
 8011c70:	d025      	beq.n	8011cbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8011c72:	2a33      	cmp	r2, #51	; 0x33
 8011c74:	d194      	bne.n	8011ba0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011c76:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8011c78:	4770      	bx	lr
 8011c7a:	684b      	ldr	r3, [r1, #4]
 8011c7c:	781b      	ldrb	r3, [r3, #0]
 8011c7e:	2b01      	cmp	r3, #1
 8011c80:	d004      	beq.n	8011c8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8011c82:	d30b      	bcc.n	8011c9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8011c84:	2b02      	cmp	r3, #2
 8011c86:	d18b      	bne.n	8011ba0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011c88:	6940      	ldr	r0, [r0, #20]
 8011c8a:	4770      	bx	lr
 8011c8c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8011c8e:	4770      	bx	lr
 8011c90:	69c0      	ldr	r0, [r0, #28]
 8011c92:	4770      	bx	lr
 8011c94:	684b      	ldr	r3, [r1, #4]
 8011c96:	781b      	ldrb	r3, [r3, #0]
 8011c98:	2b00      	cmp	r3, #0
 8011c9a:	d181      	bne.n	8011ba0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011c9c:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8011c9e:	4770      	bx	lr
 8011ca0:	684b      	ldr	r3, [r1, #4]
 8011ca2:	781b      	ldrb	r3, [r3, #0]
 8011ca4:	2b00      	cmp	r3, #0
 8011ca6:	f47f af7b 	bne.w	8011ba0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011caa:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8011cac:	4770      	bx	lr
 8011cae:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8011cb0:	4770      	bx	lr
 8011cb2:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8011cb4:	4770      	bx	lr
 8011cb6:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8011cb8:	4770      	bx	lr
 8011cba:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8011cbc:	4770      	bx	lr
 8011cbe:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8011cc0:	4770      	bx	lr

08011cc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011cc2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011cc6:	b087      	sub	sp, #28
 8011cc8:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011cca:	9205      	str	r2, [sp, #20]
 8011ccc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011cd0:	9202      	str	r2, [sp, #8]
 8011cd2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011cd6:	9101      	str	r1, [sp, #4]
 8011cd8:	6841      	ldr	r1, [r0, #4]
 8011cda:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8011cde:	fb01 2404 	mla	r4, r1, r4, r2
 8011ce2:	6802      	ldr	r2, [r0, #0]
 8011ce4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011ce8:	f8de 2000 	ldr.w	r2, [lr]
 8011cec:	9203      	str	r2, [sp, #12]
 8011cee:	f8de 2004 	ldr.w	r2, [lr, #4]
 8011cf2:	3204      	adds	r2, #4
 8011cf4:	9204      	str	r2, [sp, #16]
 8011cf6:	9a02      	ldr	r2, [sp, #8]
 8011cf8:	43d6      	mvns	r6, r2
 8011cfa:	b2f6      	uxtb	r6, r6
 8011cfc:	9a01      	ldr	r2, [sp, #4]
 8011cfe:	2a00      	cmp	r2, #0
 8011d00:	dc03      	bgt.n	8011d0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8011d02:	9a05      	ldr	r2, [sp, #20]
 8011d04:	2a00      	cmp	r2, #0
 8011d06:	f340 8129 	ble.w	8011f5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8011d0a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011d0c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8011d10:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8011d14:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011d18:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011d1a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011d1e:	2b00      	cmp	r3, #0
 8011d20:	dd0e      	ble.n	8011d40 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011d22:	1408      	asrs	r0, r1, #16
 8011d24:	d405      	bmi.n	8011d32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011d26:	4560      	cmp	r0, ip
 8011d28:	da03      	bge.n	8011d32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011d2a:	1410      	asrs	r0, r2, #16
 8011d2c:	d401      	bmi.n	8011d32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011d2e:	42b8      	cmp	r0, r7
 8011d30:	db07      	blt.n	8011d42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8011d32:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011d34:	4401      	add	r1, r0
 8011d36:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011d38:	3b01      	subs	r3, #1
 8011d3a:	4402      	add	r2, r0
 8011d3c:	3402      	adds	r4, #2
 8011d3e:	e7ee      	b.n	8011d1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8011d40:	d071      	beq.n	8011e26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011d42:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011d44:	1e58      	subs	r0, r3, #1
 8011d46:	fb05 1500 	mla	r5, r5, r0, r1
 8011d4a:	142d      	asrs	r5, r5, #16
 8011d4c:	d45f      	bmi.n	8011e0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8011d4e:	4565      	cmp	r5, ip
 8011d50:	da5d      	bge.n	8011e0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8011d52:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011d54:	fb05 2000 	mla	r0, r5, r0, r2
 8011d58:	1400      	asrs	r0, r0, #16
 8011d5a:	d458      	bmi.n	8011e0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8011d5c:	42b8      	cmp	r0, r7
 8011d5e:	da56      	bge.n	8011e0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8011d60:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8011d64:	4699      	mov	r9, r3
 8011d66:	46a2      	mov	sl, r4
 8011d68:	f1b9 0f00 	cmp.w	r9, #0
 8011d6c:	dd57      	ble.n	8011e1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8011d6e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8011d72:	9803      	ldr	r0, [sp, #12]
 8011d74:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8011d78:	140d      	asrs	r5, r1, #16
 8011d7a:	fb07 000c 	mla	r0, r7, ip, r0
 8011d7e:	f109 39ff 	add.w	r9, r9, #4294967295
 8011d82:	5d40      	ldrb	r0, [r0, r5]
 8011d84:	9d04      	ldr	r5, [sp, #16]
 8011d86:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8011d8a:	f8ba 5000 	ldrh.w	r5, [sl]
 8011d8e:	122f      	asrs	r7, r5, #8
 8011d90:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011d94:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011d98:	fb17 f706 	smulbb	r7, r7, r6
 8011d9c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8011da0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011da4:	00ed      	lsls	r5, r5, #3
 8011da6:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8011daa:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8011dae:	10c7      	asrs	r7, r0, #3
 8011db0:	b2ed      	uxtb	r5, r5
 8011db2:	00c0      	lsls	r0, r0, #3
 8011db4:	fb18 f806 	smulbb	r8, r8, r6
 8011db8:	fb15 f506 	smulbb	r5, r5, r6
 8011dbc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011dc0:	b2c0      	uxtb	r0, r0
 8011dc2:	fa1f fc8c 	uxth.w	ip, ip
 8011dc6:	fb07 870b 	mla	r7, r7, fp, r8
 8011dca:	fb00 500b 	mla	r0, r0, fp, r5
 8011dce:	b280      	uxth	r0, r0
 8011dd0:	b2bf      	uxth	r7, r7
 8011dd2:	f10c 0501 	add.w	r5, ip, #1
 8011dd6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011dda:	f107 0801 	add.w	r8, r7, #1
 8011dde:	1c45      	adds	r5, r0, #1
 8011de0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011de4:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8011de8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011dea:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011dee:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011df2:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8011df6:	ea45 0c0c 	orr.w	ip, r5, ip
 8011dfa:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8011dfe:	4401      	add	r1, r0
 8011e00:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011e02:	ea4c 0c08 	orr.w	ip, ip, r8
 8011e06:	f82a cb02 	strh.w	ip, [sl], #2
 8011e0a:	4402      	add	r2, r0
 8011e0c:	e7ac      	b.n	8011d68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8011e0e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8011e12:	f04f 0800 	mov.w	r8, #0
 8011e16:	eb03 0008 	add.w	r0, r3, r8
 8011e1a:	2800      	cmp	r0, #0
 8011e1c:	dc41      	bgt.n	8011ea2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8011e1e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011e22:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011e26:	9b01      	ldr	r3, [sp, #4]
 8011e28:	2b00      	cmp	r3, #0
 8011e2a:	f340 8097 	ble.w	8011f5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8011e2e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011e32:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011e36:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8011e3a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011e3c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011e40:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011e44:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011e48:	eef0 6a62 	vmov.f32	s13, s5
 8011e4c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011e50:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011e54:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011e58:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8011e5c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011e60:	eef0 6a43 	vmov.f32	s13, s6
 8011e64:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011e68:	ee12 2a90 	vmov	r2, s5
 8011e6c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011e70:	fb92 f3f3 	sdiv	r3, r2, r3
 8011e74:	ee13 2a10 	vmov	r2, s6
 8011e78:	9313      	str	r3, [sp, #76]	; 0x4c
 8011e7a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011e7c:	fb92 f3f3 	sdiv	r3, r2, r3
 8011e80:	9314      	str	r3, [sp, #80]	; 0x50
 8011e82:	9b01      	ldr	r3, [sp, #4]
 8011e84:	9a05      	ldr	r2, [sp, #20]
 8011e86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011e8a:	3b01      	subs	r3, #1
 8011e8c:	9301      	str	r3, [sp, #4]
 8011e8e:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8011e92:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011e94:	eeb0 3a67 	vmov.f32	s6, s15
 8011e98:	bf08      	it	eq
 8011e9a:	4613      	moveq	r3, r2
 8011e9c:	eef0 2a47 	vmov.f32	s5, s14
 8011ea0:	e72c      	b.n	8011cfc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8011ea2:	140f      	asrs	r7, r1, #16
 8011ea4:	d453      	bmi.n	8011f4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8011ea6:	f8de 5008 	ldr.w	r5, [lr, #8]
 8011eaa:	42bd      	cmp	r5, r7
 8011eac:	dd4f      	ble.n	8011f4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8011eae:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011eb2:	d44c      	bmi.n	8011f4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8011eb4:	f8de 000c 	ldr.w	r0, [lr, #12]
 8011eb8:	4560      	cmp	r0, ip
 8011eba:	dd48      	ble.n	8011f4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8011ebc:	9803      	ldr	r0, [sp, #12]
 8011ebe:	b22d      	sxth	r5, r5
 8011ec0:	fb0c 0505 	mla	r5, ip, r5, r0
 8011ec4:	5de8      	ldrb	r0, [r5, r7]
 8011ec6:	9d04      	ldr	r5, [sp, #16]
 8011ec8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8011ecc:	f06f 0501 	mvn.w	r5, #1
 8011ed0:	fb05 fb08 	mul.w	fp, r5, r8
 8011ed4:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011ed8:	f834 500b 	ldrh.w	r5, [r4, fp]
 8011edc:	122f      	asrs	r7, r5, #8
 8011ede:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011ee2:	fb17 f706 	smulbb	r7, r7, r6
 8011ee6:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8011eea:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011eee:	00ed      	lsls	r5, r5, #3
 8011ef0:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8011ef4:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011ef8:	10c7      	asrs	r7, r0, #3
 8011efa:	b2ed      	uxtb	r5, r5
 8011efc:	00c0      	lsls	r0, r0, #3
 8011efe:	fb19 f906 	smulbb	r9, r9, r6
 8011f02:	fb15 f506 	smulbb	r5, r5, r6
 8011f06:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011f0a:	b2c0      	uxtb	r0, r0
 8011f0c:	fa1f fc8c 	uxth.w	ip, ip
 8011f10:	fb07 970a 	mla	r7, r7, sl, r9
 8011f14:	fb00 500a 	mla	r0, r0, sl, r5
 8011f18:	b2bf      	uxth	r7, r7
 8011f1a:	b280      	uxth	r0, r0
 8011f1c:	f10c 0501 	add.w	r5, ip, #1
 8011f20:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011f24:	f107 0901 	add.w	r9, r7, #1
 8011f28:	1c45      	adds	r5, r0, #1
 8011f2a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011f2e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8011f32:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011f36:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011f3a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8011f3e:	ea45 0c0c 	orr.w	ip, r5, ip
 8011f42:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8011f46:	ea4c 0c09 	orr.w	ip, ip, r9
 8011f4a:	f824 c00b 	strh.w	ip, [r4, fp]
 8011f4e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011f50:	4401      	add	r1, r0
 8011f52:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011f54:	f108 38ff 	add.w	r8, r8, #4294967295
 8011f58:	4402      	add	r2, r0
 8011f5a:	e75c      	b.n	8011e16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8011f5c:	b007      	add	sp, #28
 8011f5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011f62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011f62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f66:	b085      	sub	sp, #20
 8011f68:	4693      	mov	fp, r2
 8011f6a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8011f6c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8011f6e:	6870      	ldr	r0, [r6, #4]
 8011f70:	9100      	str	r1, [sp, #0]
 8011f72:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011f76:	fb00 2404 	mla	r4, r0, r4, r2
 8011f7a:	6832      	ldr	r2, [r6, #0]
 8011f7c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011f80:	682a      	ldr	r2, [r5, #0]
 8011f82:	9201      	str	r2, [sp, #4]
 8011f84:	686a      	ldr	r2, [r5, #4]
 8011f86:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8011f8a:	3204      	adds	r2, #4
 8011f8c:	9202      	str	r2, [sp, #8]
 8011f8e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011f92:	9a00      	ldr	r2, [sp, #0]
 8011f94:	2a00      	cmp	r2, #0
 8011f96:	dc03      	bgt.n	8011fa0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8011f98:	f1bb 0f00 	cmp.w	fp, #0
 8011f9c:	f340 80a0 	ble.w	80120e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8011fa0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011fa2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8011fa6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8011faa:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011fae:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011fb0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011fb4:	2b00      	cmp	r3, #0
 8011fb6:	dd0c      	ble.n	8011fd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011fb8:	1406      	asrs	r6, r0, #16
 8011fba:	d405      	bmi.n	8011fc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011fbc:	454e      	cmp	r6, r9
 8011fbe:	da03      	bge.n	8011fc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011fc0:	1416      	asrs	r6, r2, #16
 8011fc2:	d401      	bmi.n	8011fc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011fc4:	4546      	cmp	r6, r8
 8011fc6:	db05      	blt.n	8011fd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011fc8:	4470      	add	r0, lr
 8011fca:	4462      	add	r2, ip
 8011fcc:	3b01      	subs	r3, #1
 8011fce:	3402      	adds	r4, #2
 8011fd0:	e7f0      	b.n	8011fb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8011fd2:	d00f      	beq.n	8011ff4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8011fd4:	1e5e      	subs	r6, r3, #1
 8011fd6:	fb0e 0706 	mla	r7, lr, r6, r0
 8011fda:	143f      	asrs	r7, r7, #16
 8011fdc:	d541      	bpl.n	8012062 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8011fde:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8011fe2:	4698      	mov	r8, r3
 8011fe4:	9603      	str	r6, [sp, #12]
 8011fe6:	f1b8 0f00 	cmp.w	r8, #0
 8011fea:	dc59      	bgt.n	80120a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011fec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011ff0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011ff4:	9b00      	ldr	r3, [sp, #0]
 8011ff6:	2b00      	cmp	r3, #0
 8011ff8:	dd72      	ble.n	80120e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8011ffa:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011ffe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012002:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012006:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012008:	ee31 1a05 	vadd.f32	s2, s2, s10
 801200c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012010:	eeb0 6a62 	vmov.f32	s12, s5
 8012014:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012018:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801201c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012020:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8012024:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012028:	eeb0 6a43 	vmov.f32	s12, s6
 801202c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012030:	ee12 2a90 	vmov	r2, s5
 8012034:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012038:	fb92 fef3 	sdiv	lr, r2, r3
 801203c:	ee13 2a10 	vmov	r2, s6
 8012040:	fb92 fcf3 	sdiv	ip, r2, r3
 8012044:	9b00      	ldr	r3, [sp, #0]
 8012046:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801204a:	3b01      	subs	r3, #1
 801204c:	9300      	str	r3, [sp, #0]
 801204e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8012052:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012054:	eeb0 3a67 	vmov.f32	s6, s15
 8012058:	bf08      	it	eq
 801205a:	465b      	moveq	r3, fp
 801205c:	eef0 2a47 	vmov.f32	s5, s14
 8012060:	e797      	b.n	8011f92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8012062:	454f      	cmp	r7, r9
 8012064:	dabb      	bge.n	8011fde <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8012066:	fb0c 2606 	mla	r6, ip, r6, r2
 801206a:	1436      	asrs	r6, r6, #16
 801206c:	d4b7      	bmi.n	8011fde <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801206e:	4546      	cmp	r6, r8
 8012070:	dab5      	bge.n	8011fde <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8012072:	461e      	mov	r6, r3
 8012074:	46a0      	mov	r8, r4
 8012076:	2e00      	cmp	r6, #0
 8012078:	ddb8      	ble.n	8011fec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801207a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801207e:	9901      	ldr	r1, [sp, #4]
 8012080:	1417      	asrs	r7, r2, #16
 8012082:	ea4f 4920 	mov.w	r9, r0, asr #16
 8012086:	fb0a 1707 	mla	r7, sl, r7, r1
 801208a:	9902      	ldr	r1, [sp, #8]
 801208c:	f817 7009 	ldrb.w	r7, [r7, r9]
 8012090:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8012094:	f828 7b02 	strh.w	r7, [r8], #2
 8012098:	4470      	add	r0, lr
 801209a:	4462      	add	r2, ip
 801209c:	3e01      	subs	r6, #1
 801209e:	e7ea      	b.n	8012076 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 80120a0:	ea5f 4920 	movs.w	r9, r0, asr #16
 80120a4:	d417      	bmi.n	80120d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80120a6:	68ae      	ldr	r6, [r5, #8]
 80120a8:	454e      	cmp	r6, r9
 80120aa:	dd14      	ble.n	80120d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80120ac:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80120b0:	d411      	bmi.n	80120d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80120b2:	68ef      	ldr	r7, [r5, #12]
 80120b4:	4557      	cmp	r7, sl
 80120b6:	dd0e      	ble.n	80120d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80120b8:	9f01      	ldr	r7, [sp, #4]
 80120ba:	b236      	sxth	r6, r6
 80120bc:	fb0a 7606 	mla	r6, sl, r6, r7
 80120c0:	9f02      	ldr	r7, [sp, #8]
 80120c2:	f816 6009 	ldrb.w	r6, [r6, r9]
 80120c6:	f06f 0101 	mvn.w	r1, #1
 80120ca:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80120ce:	fb01 f608 	mul.w	r6, r1, r8
 80120d2:	9903      	ldr	r1, [sp, #12]
 80120d4:	538f      	strh	r7, [r1, r6]
 80120d6:	4470      	add	r0, lr
 80120d8:	4462      	add	r2, ip
 80120da:	f108 38ff 	add.w	r8, r8, #4294967295
 80120de:	e782      	b.n	8011fe6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80120e0:	b005      	add	sp, #20
 80120e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080120e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80120e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80120ea:	b087      	sub	sp, #28
 80120ec:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80120ee:	9205      	str	r2, [sp, #20]
 80120f0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80120f4:	9203      	str	r2, [sp, #12]
 80120f6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80120fa:	9102      	str	r1, [sp, #8]
 80120fc:	6861      	ldr	r1, [r4, #4]
 80120fe:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8012102:	fb01 2000 	mla	r0, r1, r0, r2
 8012106:	6822      	ldr	r2, [r4, #0]
 8012108:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801210c:	9200      	str	r2, [sp, #0]
 801210e:	f8dc 2000 	ldr.w	r2, [ip]
 8012112:	9204      	str	r2, [sp, #16]
 8012114:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8012118:	3204      	adds	r2, #4
 801211a:	9201      	str	r2, [sp, #4]
 801211c:	9a03      	ldr	r2, [sp, #12]
 801211e:	43d5      	mvns	r5, r2
 8012120:	b2ed      	uxtb	r5, r5
 8012122:	9a02      	ldr	r2, [sp, #8]
 8012124:	2a00      	cmp	r2, #0
 8012126:	dc03      	bgt.n	8012130 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8012128:	9a05      	ldr	r2, [sp, #20]
 801212a:	2a00      	cmp	r2, #0
 801212c:	f340 812c 	ble.w	8012388 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8012130:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012132:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8012136:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801213a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801213e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012140:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8012144:	2b00      	cmp	r3, #0
 8012146:	dd10      	ble.n	801216a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8012148:	140c      	asrs	r4, r1, #16
 801214a:	d405      	bmi.n	8012158 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801214c:	4574      	cmp	r4, lr
 801214e:	da03      	bge.n	8012158 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012150:	1414      	asrs	r4, r2, #16
 8012152:	d401      	bmi.n	8012158 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012154:	42bc      	cmp	r4, r7
 8012156:	db09      	blt.n	801216c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8012158:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801215a:	9800      	ldr	r0, [sp, #0]
 801215c:	4421      	add	r1, r4
 801215e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8012160:	3002      	adds	r0, #2
 8012162:	4422      	add	r2, r4
 8012164:	3b01      	subs	r3, #1
 8012166:	9000      	str	r0, [sp, #0]
 8012168:	e7ec      	b.n	8012144 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801216a:	d071      	beq.n	8012250 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801216c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801216e:	1e5c      	subs	r4, r3, #1
 8012170:	fb06 1604 	mla	r6, r6, r4, r1
 8012174:	1436      	asrs	r6, r6, #16
 8012176:	d45d      	bmi.n	8012234 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8012178:	4576      	cmp	r6, lr
 801217a:	da5b      	bge.n	8012234 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801217c:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801217e:	fb06 2404 	mla	r4, r6, r4, r2
 8012182:	1424      	asrs	r4, r4, #16
 8012184:	d456      	bmi.n	8012234 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8012186:	42bc      	cmp	r4, r7
 8012188:	da54      	bge.n	8012234 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801218a:	f8dd 9000 	ldr.w	r9, [sp]
 801218e:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8012192:	4698      	mov	r8, r3
 8012194:	f1b8 0f00 	cmp.w	r8, #0
 8012198:	dd54      	ble.n	8012244 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801219a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801219e:	9804      	ldr	r0, [sp, #16]
 80121a0:	1414      	asrs	r4, r2, #16
 80121a2:	fb07 0404 	mla	r4, r7, r4, r0
 80121a6:	140e      	asrs	r6, r1, #16
 80121a8:	9801      	ldr	r0, [sp, #4]
 80121aa:	f814 e006 	ldrb.w	lr, [r4, r6]
 80121ae:	f8b9 4000 	ldrh.w	r4, [r9]
 80121b2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80121b6:	eb00 0b0e 	add.w	fp, r0, lr
 80121ba:	1227      	asrs	r7, r4, #8
 80121bc:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80121c0:	f89b b001 	ldrb.w	fp, [fp, #1]
 80121c4:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80121c8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80121ca:	fb16 f60a 	smulbb	r6, r6, sl
 80121ce:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80121d2:	fb07 6705 	mla	r7, r7, r5, r6
 80121d6:	10e6      	asrs	r6, r4, #3
 80121d8:	00e4      	lsls	r4, r4, #3
 80121da:	b2e4      	uxtb	r4, r4
 80121dc:	fb1b fb0a 	smulbb	fp, fp, sl
 80121e0:	fb14 f405 	smulbb	r4, r4, r5
 80121e4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80121e8:	b2bf      	uxth	r7, r7
 80121ea:	fb06 b605 	mla	r6, r6, r5, fp
 80121ee:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80121f2:	b2b6      	uxth	r6, r6
 80121f4:	fa1f fe8e 	uxth.w	lr, lr
 80121f8:	1c7c      	adds	r4, r7, #1
 80121fa:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80121fe:	f106 0b01 	add.w	fp, r6, #1
 8012202:	f10e 0401 	add.w	r4, lr, #1
 8012206:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801220a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801220e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012212:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8012216:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801221a:	4327      	orrs	r7, r4
 801221c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8012220:	4401      	add	r1, r0
 8012222:	9814      	ldr	r0, [sp, #80]	; 0x50
 8012224:	ea47 070b 	orr.w	r7, r7, fp
 8012228:	f829 7b02 	strh.w	r7, [r9], #2
 801222c:	4402      	add	r2, r0
 801222e:	f108 38ff 	add.w	r8, r8, #4294967295
 8012232:	e7af      	b.n	8012194 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8012234:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8012238:	f04f 0e00 	mov.w	lr, #0
 801223c:	eb03 040e 	add.w	r4, r3, lr
 8012240:	2c00      	cmp	r4, #0
 8012242:	dc43      	bgt.n	80122cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8012244:	9a00      	ldr	r2, [sp, #0]
 8012246:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801224a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801224e:	9300      	str	r3, [sp, #0]
 8012250:	9b02      	ldr	r3, [sp, #8]
 8012252:	2b00      	cmp	r3, #0
 8012254:	f340 8098 	ble.w	8012388 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8012258:	ee30 0a04 	vadd.f32	s0, s0, s8
 801225c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8012260:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8012264:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012266:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801226a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801226e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012272:	eef0 6a62 	vmov.f32	s13, s5
 8012276:	ee61 7a27 	vmul.f32	s15, s2, s15
 801227a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801227e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012282:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8012286:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801228a:	eef0 6a43 	vmov.f32	s13, s6
 801228e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012292:	ee12 2a90 	vmov	r2, s5
 8012296:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801229a:	fb92 f3f3 	sdiv	r3, r2, r3
 801229e:	ee13 2a10 	vmov	r2, s6
 80122a2:	9313      	str	r3, [sp, #76]	; 0x4c
 80122a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80122a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80122aa:	9314      	str	r3, [sp, #80]	; 0x50
 80122ac:	9b02      	ldr	r3, [sp, #8]
 80122ae:	9a05      	ldr	r2, [sp, #20]
 80122b0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80122b4:	3b01      	subs	r3, #1
 80122b6:	9302      	str	r3, [sp, #8]
 80122b8:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80122bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80122be:	eeb0 3a67 	vmov.f32	s6, s15
 80122c2:	bf08      	it	eq
 80122c4:	4613      	moveq	r3, r2
 80122c6:	eef0 2a47 	vmov.f32	s5, s14
 80122ca:	e72a      	b.n	8012122 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80122cc:	140f      	asrs	r7, r1, #16
 80122ce:	d454      	bmi.n	801237a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80122d0:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80122d4:	42be      	cmp	r6, r7
 80122d6:	dd50      	ble.n	801237a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80122d8:	ea5f 4822 	movs.w	r8, r2, asr #16
 80122dc:	d44d      	bmi.n	801237a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80122de:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80122e2:	4544      	cmp	r4, r8
 80122e4:	dd49      	ble.n	801237a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80122e6:	9c04      	ldr	r4, [sp, #16]
 80122e8:	b236      	sxth	r6, r6
 80122ea:	fb08 4606 	mla	r6, r8, r6, r4
 80122ee:	f06f 0001 	mvn.w	r0, #1
 80122f2:	f816 8007 	ldrb.w	r8, [r6, r7]
 80122f6:	9c01      	ldr	r4, [sp, #4]
 80122f8:	fb00 fa0e 	mul.w	sl, r0, lr
 80122fc:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8012300:	9800      	ldr	r0, [sp, #0]
 8012302:	eb04 0b08 	add.w	fp, r4, r8
 8012306:	f830 400a 	ldrh.w	r4, [r0, sl]
 801230a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801230e:	9801      	ldr	r0, [sp, #4]
 8012310:	f89b b001 	ldrb.w	fp, [fp, #1]
 8012314:	f810 8008 	ldrb.w	r8, [r0, r8]
 8012318:	9800      	ldr	r0, [sp, #0]
 801231a:	1227      	asrs	r7, r4, #8
 801231c:	fb16 f609 	smulbb	r6, r6, r9
 8012320:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012324:	fb07 6705 	mla	r7, r7, r5, r6
 8012328:	10e6      	asrs	r6, r4, #3
 801232a:	00e4      	lsls	r4, r4, #3
 801232c:	b2e4      	uxtb	r4, r4
 801232e:	fb1b fb09 	smulbb	fp, fp, r9
 8012332:	fb14 f405 	smulbb	r4, r4, r5
 8012336:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801233a:	b2bf      	uxth	r7, r7
 801233c:	fb06 b605 	mla	r6, r6, r5, fp
 8012340:	fb08 4809 	mla	r8, r8, r9, r4
 8012344:	b2b6      	uxth	r6, r6
 8012346:	fa1f f888 	uxth.w	r8, r8
 801234a:	1c7c      	adds	r4, r7, #1
 801234c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8012350:	f106 0b01 	add.w	fp, r6, #1
 8012354:	f108 0401 	add.w	r4, r8, #1
 8012358:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801235c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8012360:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012364:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8012368:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801236c:	4327      	orrs	r7, r4
 801236e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8012372:	ea47 070b 	orr.w	r7, r7, fp
 8012376:	f820 700a 	strh.w	r7, [r0, sl]
 801237a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801237c:	4401      	add	r1, r0
 801237e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8012380:	f10e 3eff 	add.w	lr, lr, #4294967295
 8012384:	4402      	add	r2, r0
 8012386:	e759      	b.n	801223c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8012388:	b007      	add	sp, #28
 801238a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08012390 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012390:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012394:	b085      	sub	sp, #20
 8012396:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801239a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801239c:	9203      	str	r2, [sp, #12]
 801239e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80123a2:	6870      	ldr	r0, [r6, #4]
 80123a4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80123a6:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 80123aa:	686f      	ldr	r7, [r5, #4]
 80123ac:	9101      	str	r1, [sp, #4]
 80123ae:	fb00 2404 	mla	r4, r0, r4, r2
 80123b2:	6832      	ldr	r2, [r6, #0]
 80123b4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80123b8:	682a      	ldr	r2, [r5, #0]
 80123ba:	9202      	str	r2, [sp, #8]
 80123bc:	3704      	adds	r7, #4
 80123be:	9a01      	ldr	r2, [sp, #4]
 80123c0:	2a00      	cmp	r2, #0
 80123c2:	dc03      	bgt.n	80123cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80123c4:	9a03      	ldr	r2, [sp, #12]
 80123c6:	2a00      	cmp	r2, #0
 80123c8:	f340 80cc 	ble.w	8012564 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80123cc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80123ce:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80123d2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80123d6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80123da:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80123dc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80123e0:	2b00      	cmp	r3, #0
 80123e2:	dd0d      	ble.n	8012400 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80123e4:	1406      	asrs	r6, r0, #16
 80123e6:	d405      	bmi.n	80123f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80123e8:	454e      	cmp	r6, r9
 80123ea:	da03      	bge.n	80123f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80123ec:	1416      	asrs	r6, r2, #16
 80123ee:	d401      	bmi.n	80123f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80123f0:	4546      	cmp	r6, r8
 80123f2:	db06      	blt.n	8012402 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80123f4:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80123f6:	4460      	add	r0, ip
 80123f8:	4432      	add	r2, r6
 80123fa:	3b01      	subs	r3, #1
 80123fc:	3402      	adds	r4, #2
 80123fe:	e7ef      	b.n	80123e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8012400:	d00f      	beq.n	8012422 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8012402:	1e5e      	subs	r6, r3, #1
 8012404:	fb0c 0e06 	mla	lr, ip, r6, r0
 8012408:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801240c:	d543      	bpl.n	8012496 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801240e:	4698      	mov	r8, r3
 8012410:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8012414:	f1b8 0f00 	cmp.w	r8, #0
 8012418:	dc71      	bgt.n	80124fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801241a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801241e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012422:	9b01      	ldr	r3, [sp, #4]
 8012424:	2b00      	cmp	r3, #0
 8012426:	f340 809d 	ble.w	8012564 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801242a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801242e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012432:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012436:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012438:	ee31 1a05 	vadd.f32	s2, s2, s10
 801243c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012440:	eeb0 6a62 	vmov.f32	s12, s5
 8012444:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012448:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801244c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012450:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8012454:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012458:	eeb0 6a43 	vmov.f32	s12, s6
 801245c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012460:	ee12 2a90 	vmov	r2, s5
 8012464:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012468:	fb92 fcf3 	sdiv	ip, r2, r3
 801246c:	ee13 2a10 	vmov	r2, s6
 8012470:	fb92 f3f3 	sdiv	r3, r2, r3
 8012474:	9312      	str	r3, [sp, #72]	; 0x48
 8012476:	9b01      	ldr	r3, [sp, #4]
 8012478:	9a03      	ldr	r2, [sp, #12]
 801247a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801247e:	3b01      	subs	r3, #1
 8012480:	9301      	str	r3, [sp, #4]
 8012482:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8012486:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012488:	eeb0 3a67 	vmov.f32	s6, s15
 801248c:	bf08      	it	eq
 801248e:	4613      	moveq	r3, r2
 8012490:	eef0 2a47 	vmov.f32	s5, s14
 8012494:	e793      	b.n	80123be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8012496:	45ce      	cmp	lr, r9
 8012498:	dab9      	bge.n	801240e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801249a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801249c:	fb01 2606 	mla	r6, r1, r6, r2
 80124a0:	1436      	asrs	r6, r6, #16
 80124a2:	d4b4      	bmi.n	801240e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80124a4:	4546      	cmp	r6, r8
 80124a6:	dab2      	bge.n	801240e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80124a8:	4698      	mov	r8, r3
 80124aa:	46a2      	mov	sl, r4
 80124ac:	f1b8 0f00 	cmp.w	r8, #0
 80124b0:	ddb3      	ble.n	801241a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80124b2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80124b6:	9902      	ldr	r1, [sp, #8]
 80124b8:	1416      	asrs	r6, r2, #16
 80124ba:	fb09 1606 	mla	r6, r9, r6, r1
 80124be:	ea4f 4e20 	mov.w	lr, r0, asr #16
 80124c2:	492a      	ldr	r1, [pc, #168]	; (801256c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 80124c4:	f816 e00e 	ldrb.w	lr, [r6, lr]
 80124c8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80124cc:	eb07 0b0e 	add.w	fp, r7, lr
 80124d0:	4460      	add	r0, ip
 80124d2:	f89b 6001 	ldrb.w	r6, [fp, #1]
 80124d6:	f89b 9002 	ldrb.w	r9, [fp, #2]
 80124da:	00f6      	lsls	r6, r6, #3
 80124dc:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 80124e0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80124e4:	ea49 0606 	orr.w	r6, r9, r6
 80124e8:	f817 900e 	ldrb.w	r9, [r7, lr]
 80124ec:	9912      	ldr	r1, [sp, #72]	; 0x48
 80124ee:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80124f2:	f82a 6b02 	strh.w	r6, [sl], #2
 80124f6:	440a      	add	r2, r1
 80124f8:	f108 38ff 	add.w	r8, r8, #4294967295
 80124fc:	e7d6      	b.n	80124ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80124fe:	ea5f 4920 	movs.w	r9, r0, asr #16
 8012502:	d429      	bmi.n	8012558 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8012504:	68ae      	ldr	r6, [r5, #8]
 8012506:	454e      	cmp	r6, r9
 8012508:	dd26      	ble.n	8012558 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801250a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801250e:	d423      	bmi.n	8012558 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8012510:	68e9      	ldr	r1, [r5, #12]
 8012512:	4559      	cmp	r1, fp
 8012514:	dd20      	ble.n	8012558 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8012516:	9902      	ldr	r1, [sp, #8]
 8012518:	fa0f fe86 	sxth.w	lr, r6
 801251c:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8012520:	f06f 0101 	mvn.w	r1, #1
 8012524:	f81e e009 	ldrb.w	lr, [lr, r9]
 8012528:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801252c:	eb07 060e 	add.w	r6, r7, lr
 8012530:	fb01 f908 	mul.w	r9, r1, r8
 8012534:	f896 b002 	ldrb.w	fp, [r6, #2]
 8012538:	7876      	ldrb	r6, [r6, #1]
 801253a:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801253e:	00f6      	lsls	r6, r6, #3
 8012540:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8012544:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012548:	ea4b 0606 	orr.w	r6, fp, r6
 801254c:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8012550:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8012554:	f82a 6009 	strh.w	r6, [sl, r9]
 8012558:	9912      	ldr	r1, [sp, #72]	; 0x48
 801255a:	4460      	add	r0, ip
 801255c:	440a      	add	r2, r1
 801255e:	f108 38ff 	add.w	r8, r8, #4294967295
 8012562:	e757      	b.n	8012414 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8012564:	b005      	add	sp, #20
 8012566:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801256a:	bf00      	nop
 801256c:	fffff800 	.word	0xfffff800

08012570 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012570:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012574:	b087      	sub	sp, #28
 8012576:	468b      	mov	fp, r1
 8012578:	9815      	ldr	r0, [sp, #84]	; 0x54
 801257a:	9204      	str	r2, [sp, #16]
 801257c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8012580:	9205      	str	r2, [sp, #20]
 8012582:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8012586:	6841      	ldr	r1, [r0, #4]
 8012588:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801258c:	fb01 2404 	mla	r4, r1, r4, r2
 8012590:	6802      	ldr	r2, [r0, #0]
 8012592:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012596:	f8dc 2000 	ldr.w	r2, [ip]
 801259a:	9201      	str	r2, [sp, #4]
 801259c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80125a0:	3204      	adds	r2, #4
 80125a2:	9202      	str	r2, [sp, #8]
 80125a4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80125a8:	f1bb 0f00 	cmp.w	fp, #0
 80125ac:	dc03      	bgt.n	80125b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80125ae:	9a04      	ldr	r2, [sp, #16]
 80125b0:	2a00      	cmp	r2, #0
 80125b2:	f340 8138 	ble.w	8012826 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80125b6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80125b8:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80125bc:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 80125c0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80125c4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80125c6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80125ca:	2b00      	cmp	r3, #0
 80125cc:	dd0e      	ble.n	80125ec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80125ce:	1402      	asrs	r2, r0, #16
 80125d0:	d405      	bmi.n	80125de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80125d2:	42ba      	cmp	r2, r7
 80125d4:	da03      	bge.n	80125de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80125d6:	140a      	asrs	r2, r1, #16
 80125d8:	d401      	bmi.n	80125de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80125da:	42b2      	cmp	r2, r6
 80125dc:	db07      	blt.n	80125ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80125de:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80125e0:	4410      	add	r0, r2
 80125e2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80125e4:	3b01      	subs	r3, #1
 80125e6:	4411      	add	r1, r2
 80125e8:	3402      	adds	r4, #2
 80125ea:	e7ee      	b.n	80125ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80125ec:	d019      	beq.n	8012622 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80125ee:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80125f0:	1e5a      	subs	r2, r3, #1
 80125f2:	fb05 0502 	mla	r5, r5, r2, r0
 80125f6:	142d      	asrs	r5, r5, #16
 80125f8:	d409      	bmi.n	801260e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80125fa:	42bd      	cmp	r5, r7
 80125fc:	da07      	bge.n	801260e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80125fe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8012600:	fb05 1202 	mla	r2, r5, r2, r1
 8012604:	1412      	asrs	r2, r2, #16
 8012606:	d402      	bmi.n	801260e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012608:	42b2      	cmp	r2, r6
 801260a:	f2c0 80ac 	blt.w	8012766 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801260e:	f04f 0e00 	mov.w	lr, #0
 8012612:	eb03 020e 	add.w	r2, r3, lr
 8012616:	2a00      	cmp	r2, #0
 8012618:	dc3e      	bgt.n	8012698 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801261a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801261e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012622:	f1bb 0f00 	cmp.w	fp, #0
 8012626:	f340 80fe 	ble.w	8012826 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801262a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801262e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012632:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012636:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012638:	f1bb 0b01 	subs.w	fp, fp, #1
 801263c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012640:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012644:	eeb0 6a62 	vmov.f32	s12, s5
 8012648:	ee61 7a27 	vmul.f32	s15, s2, s15
 801264c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012650:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012654:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8012658:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801265c:	eeb0 6a43 	vmov.f32	s12, s6
 8012660:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012664:	ee12 2a90 	vmov	r2, s5
 8012668:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801266c:	fb92 f3f3 	sdiv	r3, r2, r3
 8012670:	ee13 2a10 	vmov	r2, s6
 8012674:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012678:	9313      	str	r3, [sp, #76]	; 0x4c
 801267a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801267c:	fb92 f3f3 	sdiv	r3, r2, r3
 8012680:	9a04      	ldr	r2, [sp, #16]
 8012682:	9314      	str	r3, [sp, #80]	; 0x50
 8012684:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8012688:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801268a:	eeb0 3a67 	vmov.f32	s6, s15
 801268e:	bf08      	it	eq
 8012690:	4613      	moveq	r3, r2
 8012692:	eef0 2a47 	vmov.f32	s5, s14
 8012696:	e787      	b.n	80125a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8012698:	1406      	asrs	r6, r0, #16
 801269a:	d45d      	bmi.n	8012758 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801269c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 80126a0:	42b5      	cmp	r5, r6
 80126a2:	dd59      	ble.n	8012758 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80126a4:	140f      	asrs	r7, r1, #16
 80126a6:	d457      	bmi.n	8012758 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80126a8:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80126ac:	42ba      	cmp	r2, r7
 80126ae:	dd53      	ble.n	8012758 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80126b0:	9a01      	ldr	r2, [sp, #4]
 80126b2:	b22d      	sxth	r5, r5
 80126b4:	fb07 2505 	mla	r5, r7, r5, r2
 80126b8:	5daa      	ldrb	r2, [r5, r6]
 80126ba:	9d02      	ldr	r5, [sp, #8]
 80126bc:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80126c0:	0e2e      	lsrs	r6, r5, #24
 80126c2:	d049      	beq.n	8012758 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80126c4:	f06f 0201 	mvn.w	r2, #1
 80126c8:	fb02 f20e 	mul.w	r2, r2, lr
 80126cc:	9203      	str	r2, [sp, #12]
 80126ce:	f834 8002 	ldrh.w	r8, [r4, r2]
 80126d2:	9a05      	ldr	r2, [sp, #20]
 80126d4:	4356      	muls	r6, r2
 80126d6:	1c72      	adds	r2, r6, #1
 80126d8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80126dc:	1212      	asrs	r2, r2, #8
 80126de:	fa1f f982 	uxth.w	r9, r2
 80126e2:	ea4f 2728 	mov.w	r7, r8, asr #8
 80126e6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80126ea:	43d2      	mvns	r2, r2
 80126ec:	b2d2      	uxtb	r2, r2
 80126ee:	fb16 f609 	smulbb	r6, r6, r9
 80126f2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80126f6:	fb07 6702 	mla	r7, r7, r2, r6
 80126fa:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80126fe:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8012702:	b2ed      	uxtb	r5, r5
 8012704:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8012708:	fa5f f888 	uxtb.w	r8, r8
 801270c:	fb15 f509 	smulbb	r5, r5, r9
 8012710:	fb08 5502 	mla	r5, r8, r2, r5
 8012714:	b2bf      	uxth	r7, r7
 8012716:	fb1a fa09 	smulbb	sl, sl, r9
 801271a:	b2ad      	uxth	r5, r5
 801271c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012720:	fb06 a602 	mla	r6, r6, r2, sl
 8012724:	1c7a      	adds	r2, r7, #1
 8012726:	f105 0a01 	add.w	sl, r5, #1
 801272a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801272e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012732:	b2b6      	uxth	r6, r6
 8012734:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012738:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801273c:	ea4a 0707 	orr.w	r7, sl, r7
 8012740:	f106 0a01 	add.w	sl, r6, #1
 8012744:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012748:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801274c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012750:	9a03      	ldr	r2, [sp, #12]
 8012752:	ea47 070a 	orr.w	r7, r7, sl
 8012756:	52a7      	strh	r7, [r4, r2]
 8012758:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801275a:	4410      	add	r0, r2
 801275c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801275e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8012762:	4411      	add	r1, r2
 8012764:	e755      	b.n	8012612 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8012766:	f04f 0800 	mov.w	r8, #0
 801276a:	eba3 0208 	sub.w	r2, r3, r8
 801276e:	2a00      	cmp	r2, #0
 8012770:	f77f af53 	ble.w	801261a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8012774:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8012778:	9f01      	ldr	r7, [sp, #4]
 801277a:	140a      	asrs	r2, r1, #16
 801277c:	1405      	asrs	r5, r0, #16
 801277e:	fb06 7202 	mla	r2, r6, r2, r7
 8012782:	5d52      	ldrb	r2, [r2, r5]
 8012784:	9d02      	ldr	r5, [sp, #8]
 8012786:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801278a:	0e2e      	lsrs	r6, r5, #24
 801278c:	d044      	beq.n	8012818 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801278e:	9a05      	ldr	r2, [sp, #20]
 8012790:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8012794:	4356      	muls	r6, r2
 8012796:	1c72      	adds	r2, r6, #1
 8012798:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801279c:	1212      	asrs	r2, r2, #8
 801279e:	fa1f f982 	uxth.w	r9, r2
 80127a2:	ea4f 272e 	mov.w	r7, lr, asr #8
 80127a6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80127aa:	43d2      	mvns	r2, r2
 80127ac:	b2d2      	uxtb	r2, r2
 80127ae:	fb16 f609 	smulbb	r6, r6, r9
 80127b2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80127b6:	fb07 6702 	mla	r7, r7, r2, r6
 80127ba:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80127be:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80127c2:	b2ed      	uxtb	r5, r5
 80127c4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80127c8:	fa5f fe8e 	uxtb.w	lr, lr
 80127cc:	fb15 f509 	smulbb	r5, r5, r9
 80127d0:	fb0e 5502 	mla	r5, lr, r2, r5
 80127d4:	b2bf      	uxth	r7, r7
 80127d6:	fb1a fa09 	smulbb	sl, sl, r9
 80127da:	b2ad      	uxth	r5, r5
 80127dc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80127e0:	fb06 a602 	mla	r6, r6, r2, sl
 80127e4:	1c7a      	adds	r2, r7, #1
 80127e6:	f105 0a01 	add.w	sl, r5, #1
 80127ea:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80127ee:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80127f2:	b2b6      	uxth	r6, r6
 80127f4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80127f8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80127fc:	ea4a 0707 	orr.w	r7, sl, r7
 8012800:	f106 0a01 	add.w	sl, r6, #1
 8012804:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012808:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801280c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012810:	ea47 070a 	orr.w	r7, r7, sl
 8012814:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8012818:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801281a:	4410      	add	r0, r2
 801281c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801281e:	f108 0801 	add.w	r8, r8, #1
 8012822:	4411      	add	r1, r2
 8012824:	e7a1      	b.n	801276a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8012826:	b007      	add	sp, #28
 8012828:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801282c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801282c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012830:	b085      	sub	sp, #20
 8012832:	468b      	mov	fp, r1
 8012834:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8012836:	9203      	str	r2, [sp, #12]
 8012838:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801283c:	6841      	ldr	r1, [r0, #4]
 801283e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8012842:	fb01 2404 	mla	r4, r1, r4, r2
 8012846:	6802      	ldr	r2, [r0, #0]
 8012848:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801284c:	f8de 2000 	ldr.w	r2, [lr]
 8012850:	9200      	str	r2, [sp, #0]
 8012852:	f8de 2004 	ldr.w	r2, [lr, #4]
 8012856:	3204      	adds	r2, #4
 8012858:	9201      	str	r2, [sp, #4]
 801285a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801285e:	f1bb 0f00 	cmp.w	fp, #0
 8012862:	dc03      	bgt.n	801286c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8012864:	9a03      	ldr	r2, [sp, #12]
 8012866:	2a00      	cmp	r2, #0
 8012868:	f340 8153 	ble.w	8012b12 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801286c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801286e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8012872:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8012876:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801287a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801287c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8012880:	2b00      	cmp	r3, #0
 8012882:	dd0e      	ble.n	80128a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012884:	1408      	asrs	r0, r1, #16
 8012886:	d405      	bmi.n	8012894 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8012888:	42b8      	cmp	r0, r7
 801288a:	da03      	bge.n	8012894 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801288c:	1410      	asrs	r0, r2, #16
 801288e:	d401      	bmi.n	8012894 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8012890:	42b0      	cmp	r0, r6
 8012892:	db07      	blt.n	80128a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8012894:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012896:	4401      	add	r1, r0
 8012898:	9812      	ldr	r0, [sp, #72]	; 0x48
 801289a:	3b01      	subs	r3, #1
 801289c:	4402      	add	r2, r0
 801289e:	3402      	adds	r4, #2
 80128a0:	e7ee      	b.n	8012880 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80128a2:	d017      	beq.n	80128d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80128a4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80128a6:	1e58      	subs	r0, r3, #1
 80128a8:	fb05 1500 	mla	r5, r5, r0, r1
 80128ac:	142d      	asrs	r5, r5, #16
 80128ae:	d409      	bmi.n	80128c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80128b0:	42bd      	cmp	r5, r7
 80128b2:	da07      	bge.n	80128c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80128b4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80128b6:	fb05 2000 	mla	r0, r5, r0, r2
 80128ba:	1400      	asrs	r0, r0, #16
 80128bc:	d402      	bmi.n	80128c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80128be:	42b0      	cmp	r0, r6
 80128c0:	f2c0 80bc 	blt.w	8012a3c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80128c4:	2600      	movs	r6, #0
 80128c6:	1998      	adds	r0, r3, r6
 80128c8:	2800      	cmp	r0, #0
 80128ca:	dc3e      	bgt.n	801294a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 80128cc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80128d0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80128d4:	f1bb 0f00 	cmp.w	fp, #0
 80128d8:	f340 811b 	ble.w	8012b12 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80128dc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80128e0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80128e4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80128e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80128ea:	f1bb 0b01 	subs.w	fp, fp, #1
 80128ee:	ee31 1a05 	vadd.f32	s2, s2, s10
 80128f2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80128f6:	eeb0 6a62 	vmov.f32	s12, s5
 80128fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80128fe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012902:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012906:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801290a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801290e:	eeb0 6a43 	vmov.f32	s12, s6
 8012912:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012916:	ee12 2a90 	vmov	r2, s5
 801291a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801291e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012922:	ee13 2a10 	vmov	r2, s6
 8012926:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801292a:	9311      	str	r3, [sp, #68]	; 0x44
 801292c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801292e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012932:	9a03      	ldr	r2, [sp, #12]
 8012934:	9312      	str	r3, [sp, #72]	; 0x48
 8012936:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801293a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801293c:	eeb0 3a67 	vmov.f32	s6, s15
 8012940:	bf08      	it	eq
 8012942:	4613      	moveq	r3, r2
 8012944:	eef0 2a47 	vmov.f32	s5, s14
 8012948:	e789      	b.n	801285e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801294a:	140f      	asrs	r7, r1, #16
 801294c:	d426      	bmi.n	801299c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801294e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8012952:	42bd      	cmp	r5, r7
 8012954:	dd22      	ble.n	801299c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8012956:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801295a:	d41f      	bmi.n	801299c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801295c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8012960:	4560      	cmp	r0, ip
 8012962:	dd1b      	ble.n	801299c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8012964:	9800      	ldr	r0, [sp, #0]
 8012966:	b22d      	sxth	r5, r5
 8012968:	fb0c 0505 	mla	r5, ip, r5, r0
 801296c:	5de8      	ldrb	r0, [r5, r7]
 801296e:	9d01      	ldr	r5, [sp, #4]
 8012970:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8012974:	0e07      	lsrs	r7, r0, #24
 8012976:	2fff      	cmp	r7, #255	; 0xff
 8012978:	d116      	bne.n	80129a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801297a:	f06f 0501 	mvn.w	r5, #1
 801297e:	fb05 f706 	mul.w	r7, r5, r6
 8012982:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8012986:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801298a:	0945      	lsrs	r5, r0, #5
 801298c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012990:	ea4c 0505 	orr.w	r5, ip, r5
 8012994:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8012998:	4305      	orrs	r5, r0
 801299a:	53e5      	strh	r5, [r4, r7]
 801299c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801299e:	4401      	add	r1, r0
 80129a0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80129a2:	3e01      	subs	r6, #1
 80129a4:	4402      	add	r2, r0
 80129a6:	e78e      	b.n	80128c6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80129a8:	b2fd      	uxtb	r5, r7
 80129aa:	2f00      	cmp	r7, #0
 80129ac:	d0f6      	beq.n	801299c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80129ae:	f06f 0701 	mvn.w	r7, #1
 80129b2:	4377      	muls	r7, r6
 80129b4:	fa1f f985 	uxth.w	r9, r5
 80129b8:	f834 8007 	ldrh.w	r8, [r4, r7]
 80129bc:	9702      	str	r7, [sp, #8]
 80129be:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80129c2:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80129c6:	43ed      	mvns	r5, r5
 80129c8:	b2ed      	uxtb	r5, r5
 80129ca:	fb17 f709 	smulbb	r7, r7, r9
 80129ce:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80129d2:	fb0c 7c05 	mla	ip, ip, r5, r7
 80129d6:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80129da:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80129de:	b2c0      	uxtb	r0, r0
 80129e0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80129e4:	fa5f f888 	uxtb.w	r8, r8
 80129e8:	fb10 f009 	smulbb	r0, r0, r9
 80129ec:	fb08 0005 	mla	r0, r8, r5, r0
 80129f0:	b280      	uxth	r0, r0
 80129f2:	fa1f fc8c 	uxth.w	ip, ip
 80129f6:	fb1a fa09 	smulbb	sl, sl, r9
 80129fa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80129fe:	fb07 a705 	mla	r7, r7, r5, sl
 8012a02:	f100 0a01 	add.w	sl, r0, #1
 8012a06:	f10c 0501 	add.w	r5, ip, #1
 8012a0a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8012a0e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8012a12:	b2bf      	uxth	r7, r7
 8012a14:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012a18:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012a1c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8012a20:	f107 0a01 	add.w	sl, r7, #1
 8012a24:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8012a28:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012a2c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012a30:	9802      	ldr	r0, [sp, #8]
 8012a32:	ea4c 0c0a 	orr.w	ip, ip, sl
 8012a36:	f824 c000 	strh.w	ip, [r4, r0]
 8012a3a:	e7af      	b.n	801299c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8012a3c:	f04f 0800 	mov.w	r8, #0
 8012a40:	eba3 0008 	sub.w	r0, r3, r8
 8012a44:	2800      	cmp	r0, #0
 8012a46:	f77f af41 	ble.w	80128cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012a4a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8012a4e:	9f00      	ldr	r7, [sp, #0]
 8012a50:	1410      	asrs	r0, r2, #16
 8012a52:	140d      	asrs	r5, r1, #16
 8012a54:	fb06 7000 	mla	r0, r6, r0, r7
 8012a58:	5d40      	ldrb	r0, [r0, r5]
 8012a5a:	9d01      	ldr	r5, [sp, #4]
 8012a5c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8012a60:	0e2e      	lsrs	r6, r5, #24
 8012a62:	2eff      	cmp	r6, #255	; 0xff
 8012a64:	d112      	bne.n	8012a8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8012a66:	482c      	ldr	r0, [pc, #176]	; (8012b18 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8012a68:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8012a6c:	0968      	lsrs	r0, r5, #5
 8012a6e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8012a72:	4330      	orrs	r0, r6
 8012a74:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8012a78:	4328      	orrs	r0, r5
 8012a7a:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8012a7e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012a80:	4401      	add	r1, r0
 8012a82:	9812      	ldr	r0, [sp, #72]	; 0x48
 8012a84:	f108 0801 	add.w	r8, r8, #1
 8012a88:	4402      	add	r2, r0
 8012a8a:	e7d9      	b.n	8012a40 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8012a8c:	b2f0      	uxtb	r0, r6
 8012a8e:	2e00      	cmp	r6, #0
 8012a90:	d0f5      	beq.n	8012a7e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8012a92:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8012a96:	fa1f f980 	uxth.w	r9, r0
 8012a9a:	ea4f 272c 	mov.w	r7, ip, asr #8
 8012a9e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8012aa2:	43c0      	mvns	r0, r0
 8012aa4:	b2c0      	uxtb	r0, r0
 8012aa6:	fb16 f609 	smulbb	r6, r6, r9
 8012aaa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012aae:	fb07 6700 	mla	r7, r7, r0, r6
 8012ab2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8012ab6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8012aba:	b2ed      	uxtb	r5, r5
 8012abc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012ac0:	fa5f fc8c 	uxtb.w	ip, ip
 8012ac4:	fb15 f509 	smulbb	r5, r5, r9
 8012ac8:	fb0c 5500 	mla	r5, ip, r0, r5
 8012acc:	b2bf      	uxth	r7, r7
 8012ace:	fb1a fa09 	smulbb	sl, sl, r9
 8012ad2:	b2ad      	uxth	r5, r5
 8012ad4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012ad8:	fb06 a600 	mla	r6, r6, r0, sl
 8012adc:	1c78      	adds	r0, r7, #1
 8012ade:	f105 0a01 	add.w	sl, r5, #1
 8012ae2:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8012ae6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012aea:	b2b6      	uxth	r6, r6
 8012aec:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012af0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012af4:	ea4a 0707 	orr.w	r7, sl, r7
 8012af8:	f106 0a01 	add.w	sl, r6, #1
 8012afc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012b00:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012b04:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012b08:	ea47 070a 	orr.w	r7, r7, sl
 8012b0c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8012b10:	e7b5      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8012b12:	b005      	add	sp, #20
 8012b14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b18:	fffff800 	.word	0xfffff800

08012b1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012b1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b20:	b087      	sub	sp, #28
 8012b22:	468b      	mov	fp, r1
 8012b24:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8012b26:	9204      	str	r2, [sp, #16]
 8012b28:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8012b2c:	9205      	str	r2, [sp, #20]
 8012b2e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8012b32:	6861      	ldr	r1, [r4, #4]
 8012b34:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8012b38:	fb01 2000 	mla	r0, r1, r0, r2
 8012b3c:	6822      	ldr	r2, [r4, #0]
 8012b3e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8012b42:	f8de 2000 	ldr.w	r2, [lr]
 8012b46:	9201      	str	r2, [sp, #4]
 8012b48:	f8de 2004 	ldr.w	r2, [lr, #4]
 8012b4c:	9202      	str	r2, [sp, #8]
 8012b4e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012b52:	f1bb 0f00 	cmp.w	fp, #0
 8012b56:	dc03      	bgt.n	8012b60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8012b58:	9a04      	ldr	r2, [sp, #16]
 8012b5a:	2a00      	cmp	r2, #0
 8012b5c:	f340 8142 	ble.w	8012de4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8012b60:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012b62:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8012b66:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8012b6a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012b6e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012b70:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8012b74:	2b00      	cmp	r3, #0
 8012b76:	dd0e      	ble.n	8012b96 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8012b78:	140c      	asrs	r4, r1, #16
 8012b7a:	d405      	bmi.n	8012b88 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8012b7c:	42bc      	cmp	r4, r7
 8012b7e:	da03      	bge.n	8012b88 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8012b80:	1414      	asrs	r4, r2, #16
 8012b82:	d401      	bmi.n	8012b88 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8012b84:	42b4      	cmp	r4, r6
 8012b86:	db07      	blt.n	8012b98 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8012b88:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8012b8a:	4421      	add	r1, r4
 8012b8c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8012b8e:	3b01      	subs	r3, #1
 8012b90:	4422      	add	r2, r4
 8012b92:	3002      	adds	r0, #2
 8012b94:	e7ee      	b.n	8012b74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8012b96:	d019      	beq.n	8012bcc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8012b98:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8012b9a:	1e5c      	subs	r4, r3, #1
 8012b9c:	fb05 1504 	mla	r5, r5, r4, r1
 8012ba0:	142d      	asrs	r5, r5, #16
 8012ba2:	d409      	bmi.n	8012bb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8012ba4:	42bd      	cmp	r5, r7
 8012ba6:	da07      	bge.n	8012bb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8012ba8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8012baa:	fb05 2404 	mla	r4, r5, r4, r2
 8012bae:	1424      	asrs	r4, r4, #16
 8012bb0:	d402      	bmi.n	8012bb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8012bb2:	42b4      	cmp	r4, r6
 8012bb4:	f2c0 80b1 	blt.w	8012d1a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8012bb8:	f04f 0800 	mov.w	r8, #0
 8012bbc:	eb03 0408 	add.w	r4, r3, r8
 8012bc0:	2c00      	cmp	r4, #0
 8012bc2:	dc3e      	bgt.n	8012c42 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8012bc4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012bc8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012bcc:	f1bb 0f00 	cmp.w	fp, #0
 8012bd0:	f340 8108 	ble.w	8012de4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8012bd4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012bd8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012bdc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012be0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012be2:	f1bb 0b01 	subs.w	fp, fp, #1
 8012be6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012bea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012bee:	eeb0 6a62 	vmov.f32	s12, s5
 8012bf2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012bf6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012bfa:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012bfe:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8012c02:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012c06:	eeb0 6a43 	vmov.f32	s12, s6
 8012c0a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012c0e:	ee12 2a90 	vmov	r2, s5
 8012c12:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012c16:	fb92 f3f3 	sdiv	r3, r2, r3
 8012c1a:	ee13 2a10 	vmov	r2, s6
 8012c1e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012c22:	9313      	str	r3, [sp, #76]	; 0x4c
 8012c24:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012c26:	fb92 f3f3 	sdiv	r3, r2, r3
 8012c2a:	9a04      	ldr	r2, [sp, #16]
 8012c2c:	9314      	str	r3, [sp, #80]	; 0x50
 8012c2e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8012c32:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012c34:	eeb0 3a67 	vmov.f32	s6, s15
 8012c38:	bf08      	it	eq
 8012c3a:	4613      	moveq	r3, r2
 8012c3c:	eef0 2a47 	vmov.f32	s5, s14
 8012c40:	e787      	b.n	8012b52 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8012c42:	140e      	asrs	r6, r1, #16
 8012c44:	d462      	bmi.n	8012d0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012c46:	f8de 5008 	ldr.w	r5, [lr, #8]
 8012c4a:	42b5      	cmp	r5, r6
 8012c4c:	dd5e      	ble.n	8012d0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012c4e:	1417      	asrs	r7, r2, #16
 8012c50:	d45c      	bmi.n	8012d0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012c52:	f8de 400c 	ldr.w	r4, [lr, #12]
 8012c56:	42bc      	cmp	r4, r7
 8012c58:	dd58      	ble.n	8012d0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012c5a:	b22d      	sxth	r5, r5
 8012c5c:	fb07 6505 	mla	r5, r7, r5, r6
 8012c60:	9c02      	ldr	r4, [sp, #8]
 8012c62:	5d66      	ldrb	r6, [r4, r5]
 8012c64:	2e00      	cmp	r6, #0
 8012c66:	d051      	beq.n	8012d0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012c68:	9c01      	ldr	r4, [sp, #4]
 8012c6a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8012c6e:	f06f 0401 	mvn.w	r4, #1
 8012c72:	fb04 f408 	mul.w	r4, r4, r8
 8012c76:	9403      	str	r4, [sp, #12]
 8012c78:	5b05      	ldrh	r5, [r0, r4]
 8012c7a:	9c05      	ldr	r4, [sp, #20]
 8012c7c:	4366      	muls	r6, r4
 8012c7e:	1c74      	adds	r4, r6, #1
 8012c80:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8012c84:	1224      	asrs	r4, r4, #8
 8012c86:	b2a7      	uxth	r7, r4
 8012c88:	122e      	asrs	r6, r5, #8
 8012c8a:	43e4      	mvns	r4, r4
 8012c8c:	b2e4      	uxtb	r4, r4
 8012c8e:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8012c92:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012c96:	fb16 f604 	smulbb	r6, r6, r4
 8012c9a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8012c9e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012ca2:	00ed      	lsls	r5, r5, #3
 8012ca4:	fb0c 6c07 	mla	ip, ip, r7, r6
 8012ca8:	b2ed      	uxtb	r5, r5
 8012caa:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8012cae:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8012cb2:	fb15 f504 	smulbb	r5, r5, r4
 8012cb6:	fa5f f989 	uxtb.w	r9, r9
 8012cba:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8012cbe:	fb09 5507 	mla	r5, r9, r7, r5
 8012cc2:	fb1a fa04 	smulbb	sl, sl, r4
 8012cc6:	fa1f fc8c 	uxth.w	ip, ip
 8012cca:	b2ad      	uxth	r5, r5
 8012ccc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012cd0:	fb06 a607 	mla	r6, r6, r7, sl
 8012cd4:	f10c 0401 	add.w	r4, ip, #1
 8012cd8:	f105 0a01 	add.w	sl, r5, #1
 8012cdc:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8012ce0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012ce4:	b2b6      	uxth	r6, r6
 8012ce6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012cea:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012cee:	ea4a 0c0c 	orr.w	ip, sl, ip
 8012cf2:	f106 0a01 	add.w	sl, r6, #1
 8012cf6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012cfa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012cfe:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012d02:	9c03      	ldr	r4, [sp, #12]
 8012d04:	ea4c 0c0a 	orr.w	ip, ip, sl
 8012d08:	f820 c004 	strh.w	ip, [r0, r4]
 8012d0c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8012d0e:	4421      	add	r1, r4
 8012d10:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8012d12:	f108 38ff 	add.w	r8, r8, #4294967295
 8012d16:	4422      	add	r2, r4
 8012d18:	e750      	b.n	8012bbc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012d1a:	f04f 0900 	mov.w	r9, #0
 8012d1e:	eba3 0409 	sub.w	r4, r3, r9
 8012d22:	2c00      	cmp	r4, #0
 8012d24:	f77f af4e 	ble.w	8012bc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8012d28:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8012d2c:	140d      	asrs	r5, r1, #16
 8012d2e:	1414      	asrs	r4, r2, #16
 8012d30:	fb06 5404 	mla	r4, r6, r4, r5
 8012d34:	9d02      	ldr	r5, [sp, #8]
 8012d36:	5d2e      	ldrb	r6, [r5, r4]
 8012d38:	2e00      	cmp	r6, #0
 8012d3a:	d04c      	beq.n	8012dd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8012d3c:	9d01      	ldr	r5, [sp, #4]
 8012d3e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8012d42:	9c05      	ldr	r4, [sp, #20]
 8012d44:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8012d48:	4366      	muls	r6, r4
 8012d4a:	1c74      	adds	r4, r6, #1
 8012d4c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8012d50:	1224      	asrs	r4, r4, #8
 8012d52:	b2a7      	uxth	r7, r4
 8012d54:	122e      	asrs	r6, r5, #8
 8012d56:	43e4      	mvns	r4, r4
 8012d58:	b2e4      	uxtb	r4, r4
 8012d5a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8012d5e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012d62:	fb16 f604 	smulbb	r6, r6, r4
 8012d66:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8012d6a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012d6e:	00ed      	lsls	r5, r5, #3
 8012d70:	fb0c 6c07 	mla	ip, ip, r7, r6
 8012d74:	b2ed      	uxtb	r5, r5
 8012d76:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8012d7a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8012d7e:	fb15 f504 	smulbb	r5, r5, r4
 8012d82:	fa5f f888 	uxtb.w	r8, r8
 8012d86:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8012d8a:	fb08 5507 	mla	r5, r8, r7, r5
 8012d8e:	fb1a fa04 	smulbb	sl, sl, r4
 8012d92:	fa1f fc8c 	uxth.w	ip, ip
 8012d96:	b2ad      	uxth	r5, r5
 8012d98:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012d9c:	fb06 a607 	mla	r6, r6, r7, sl
 8012da0:	f10c 0401 	add.w	r4, ip, #1
 8012da4:	f105 0a01 	add.w	sl, r5, #1
 8012da8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8012dac:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012db0:	b2b6      	uxth	r6, r6
 8012db2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012db6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012dba:	ea4a 0c0c 	orr.w	ip, sl, ip
 8012dbe:	f106 0a01 	add.w	sl, r6, #1
 8012dc2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012dc6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012dca:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012dce:	ea4c 0c0a 	orr.w	ip, ip, sl
 8012dd2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8012dd6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8012dd8:	4421      	add	r1, r4
 8012dda:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8012ddc:	f109 0901 	add.w	r9, r9, #1
 8012de0:	4422      	add	r2, r4
 8012de2:	e79c      	b.n	8012d1e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8012de4:	b007      	add	sp, #28
 8012de6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012dea <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012dea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012dee:	b085      	sub	sp, #20
 8012df0:	468b      	mov	fp, r1
 8012df2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8012df4:	9203      	str	r2, [sp, #12]
 8012df6:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8012dfa:	6861      	ldr	r1, [r4, #4]
 8012dfc:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8012e00:	fb01 2000 	mla	r0, r1, r0, r2
 8012e04:	6822      	ldr	r2, [r4, #0]
 8012e06:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8012e0a:	f8d8 2000 	ldr.w	r2, [r8]
 8012e0e:	9200      	str	r2, [sp, #0]
 8012e10:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8012e14:	9201      	str	r2, [sp, #4]
 8012e16:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012e1a:	f1bb 0f00 	cmp.w	fp, #0
 8012e1e:	dc03      	bgt.n	8012e28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8012e20:	9a03      	ldr	r2, [sp, #12]
 8012e22:	2a00      	cmp	r2, #0
 8012e24:	f340 8146 	ble.w	80130b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8012e28:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8012e2a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8012e2e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8012e32:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012e36:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012e38:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8012e3c:	2b00      	cmp	r3, #0
 8012e3e:	dd0e      	ble.n	8012e5e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8012e40:	140c      	asrs	r4, r1, #16
 8012e42:	d405      	bmi.n	8012e50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012e44:	42bc      	cmp	r4, r7
 8012e46:	da03      	bge.n	8012e50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012e48:	1414      	asrs	r4, r2, #16
 8012e4a:	d401      	bmi.n	8012e50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012e4c:	42b4      	cmp	r4, r6
 8012e4e:	db07      	blt.n	8012e60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012e50:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8012e52:	4421      	add	r1, r4
 8012e54:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012e56:	3b01      	subs	r3, #1
 8012e58:	4422      	add	r2, r4
 8012e5a:	3002      	adds	r0, #2
 8012e5c:	e7ee      	b.n	8012e3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8012e5e:	d017      	beq.n	8012e90 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8012e60:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8012e62:	1e5c      	subs	r4, r3, #1
 8012e64:	fb05 1504 	mla	r5, r5, r4, r1
 8012e68:	142d      	asrs	r5, r5, #16
 8012e6a:	d409      	bmi.n	8012e80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012e6c:	42bd      	cmp	r5, r7
 8012e6e:	da07      	bge.n	8012e80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012e70:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8012e72:	fb05 2404 	mla	r4, r5, r4, r2
 8012e76:	1424      	asrs	r4, r4, #16
 8012e78:	d402      	bmi.n	8012e80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012e7a:	42b4      	cmp	r4, r6
 8012e7c:	f2c0 80b3 	blt.w	8012fe6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8012e80:	2600      	movs	r6, #0
 8012e82:	199c      	adds	r4, r3, r6
 8012e84:	2c00      	cmp	r4, #0
 8012e86:	dc3e      	bgt.n	8012f06 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8012e88:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012e8c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012e90:	f1bb 0f00 	cmp.w	fp, #0
 8012e94:	f340 810e 	ble.w	80130b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8012e98:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012e9c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012ea0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012ea4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012ea6:	f1bb 0b01 	subs.w	fp, fp, #1
 8012eaa:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012eae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012eb2:	eeb0 6a62 	vmov.f32	s12, s5
 8012eb6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012eba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012ebe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012ec2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8012ec6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012eca:	eeb0 6a43 	vmov.f32	s12, s6
 8012ece:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012ed2:	ee12 2a90 	vmov	r2, s5
 8012ed6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012eda:	fb92 f3f3 	sdiv	r3, r2, r3
 8012ede:	ee13 2a10 	vmov	r2, s6
 8012ee2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012ee6:	9311      	str	r3, [sp, #68]	; 0x44
 8012ee8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012eea:	fb92 f3f3 	sdiv	r3, r2, r3
 8012eee:	9a03      	ldr	r2, [sp, #12]
 8012ef0:	9312      	str	r3, [sp, #72]	; 0x48
 8012ef2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8012ef6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012ef8:	eeb0 3a67 	vmov.f32	s6, s15
 8012efc:	bf08      	it	eq
 8012efe:	4613      	moveq	r3, r2
 8012f00:	eef0 2a47 	vmov.f32	s5, s14
 8012f04:	e789      	b.n	8012e1a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8012f06:	140f      	asrs	r7, r1, #16
 8012f08:	d418      	bmi.n	8012f3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012f0a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8012f0e:	42bd      	cmp	r5, r7
 8012f10:	dd14      	ble.n	8012f3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012f12:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8012f16:	d411      	bmi.n	8012f3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012f18:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8012f1c:	4564      	cmp	r4, ip
 8012f1e:	dd0d      	ble.n	8012f3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012f20:	b22d      	sxth	r5, r5
 8012f22:	fb0c 7505 	mla	r5, ip, r5, r7
 8012f26:	9c01      	ldr	r4, [sp, #4]
 8012f28:	5d64      	ldrb	r4, [r4, r5]
 8012f2a:	2cff      	cmp	r4, #255	; 0xff
 8012f2c:	d10c      	bne.n	8012f48 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8012f2e:	9c00      	ldr	r4, [sp, #0]
 8012f30:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8012f34:	f06f 0401 	mvn.w	r4, #1
 8012f38:	4374      	muls	r4, r6
 8012f3a:	5305      	strh	r5, [r0, r4]
 8012f3c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8012f3e:	4421      	add	r1, r4
 8012f40:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012f42:	3e01      	subs	r6, #1
 8012f44:	4422      	add	r2, r4
 8012f46:	e79c      	b.n	8012e82 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012f48:	2c00      	cmp	r4, #0
 8012f4a:	d0f7      	beq.n	8012f3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012f4c:	9f00      	ldr	r7, [sp, #0]
 8012f4e:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8012f52:	f06f 0501 	mvn.w	r5, #1
 8012f56:	4375      	muls	r5, r6
 8012f58:	9502      	str	r5, [sp, #8]
 8012f5a:	5b45      	ldrh	r5, [r0, r5]
 8012f5c:	fa1f fc84 	uxth.w	ip, r4
 8012f60:	122f      	asrs	r7, r5, #8
 8012f62:	43e4      	mvns	r4, r4
 8012f64:	b2e4      	uxtb	r4, r4
 8012f66:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8012f6a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012f6e:	fb17 f704 	smulbb	r7, r7, r4
 8012f72:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8012f76:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8012f7a:	00ed      	lsls	r5, r5, #3
 8012f7c:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8012f80:	b2ed      	uxtb	r5, r5
 8012f82:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8012f86:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8012f8a:	fb15 f504 	smulbb	r5, r5, r4
 8012f8e:	fa5f f989 	uxtb.w	r9, r9
 8012f92:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8012f96:	fb09 550c 	mla	r5, r9, ip, r5
 8012f9a:	fb1a fa04 	smulbb	sl, sl, r4
 8012f9e:	fa1f fe8e 	uxth.w	lr, lr
 8012fa2:	b2ad      	uxth	r5, r5
 8012fa4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8012fa8:	fb07 a70c 	mla	r7, r7, ip, sl
 8012fac:	f10e 0401 	add.w	r4, lr, #1
 8012fb0:	f105 0a01 	add.w	sl, r5, #1
 8012fb4:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8012fb8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012fbc:	b2bf      	uxth	r7, r7
 8012fbe:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012fc2:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8012fc6:	ea4a 0e0e 	orr.w	lr, sl, lr
 8012fca:	f107 0a01 	add.w	sl, r7, #1
 8012fce:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8012fd2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012fd6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012fda:	9c02      	ldr	r4, [sp, #8]
 8012fdc:	ea4e 0e0a 	orr.w	lr, lr, sl
 8012fe0:	f820 e004 	strh.w	lr, [r0, r4]
 8012fe4:	e7aa      	b.n	8012f3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012fe6:	f04f 0900 	mov.w	r9, #0
 8012fea:	eba3 0409 	sub.w	r4, r3, r9
 8012fee:	2c00      	cmp	r4, #0
 8012ff0:	f77f af4a 	ble.w	8012e88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012ff4:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8012ff8:	1414      	asrs	r4, r2, #16
 8012ffa:	140d      	asrs	r5, r1, #16
 8012ffc:	fb06 5504 	mla	r5, r6, r4, r5
 8013000:	9c01      	ldr	r4, [sp, #4]
 8013002:	5d64      	ldrb	r4, [r4, r5]
 8013004:	2cff      	cmp	r4, #255	; 0xff
 8013006:	d10b      	bne.n	8013020 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8013008:	9c00      	ldr	r4, [sp, #0]
 801300a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801300e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8013012:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8013014:	4421      	add	r1, r4
 8013016:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8013018:	f109 0901 	add.w	r9, r9, #1
 801301c:	4422      	add	r2, r4
 801301e:	e7e4      	b.n	8012fea <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8013020:	2c00      	cmp	r4, #0
 8013022:	d0f6      	beq.n	8013012 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8013024:	9e00      	ldr	r6, [sp, #0]
 8013026:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801302a:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801302e:	b2a7      	uxth	r7, r4
 8013030:	122e      	asrs	r6, r5, #8
 8013032:	43e4      	mvns	r4, r4
 8013034:	b2e4      	uxtb	r4, r4
 8013036:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801303a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801303e:	fb16 f604 	smulbb	r6, r6, r4
 8013042:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8013046:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801304a:	00ed      	lsls	r5, r5, #3
 801304c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8013050:	b2ed      	uxtb	r5, r5
 8013052:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013056:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801305a:	fb15 f504 	smulbb	r5, r5, r4
 801305e:	fa5f fe8e 	uxtb.w	lr, lr
 8013062:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8013066:	fb0e 5507 	mla	r5, lr, r7, r5
 801306a:	fb1a fa04 	smulbb	sl, sl, r4
 801306e:	fa1f fc8c 	uxth.w	ip, ip
 8013072:	b2ad      	uxth	r5, r5
 8013074:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013078:	fb06 a607 	mla	r6, r6, r7, sl
 801307c:	f10c 0401 	add.w	r4, ip, #1
 8013080:	f105 0a01 	add.w	sl, r5, #1
 8013084:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8013088:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801308c:	b2b6      	uxth	r6, r6
 801308e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013092:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013096:	ea4a 0c0c 	orr.w	ip, sl, ip
 801309a:	f106 0a01 	add.w	sl, r6, #1
 801309e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80130a2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80130a6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80130aa:	ea4c 0c0a 	orr.w	ip, ip, sl
 80130ae:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80130b2:	e7ae      	b.n	8013012 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80130b4:	b005      	add	sp, #20
 80130b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080130ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80130ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80130be:	b085      	sub	sp, #20
 80130c0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80130c2:	9203      	str	r2, [sp, #12]
 80130c4:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 80130c8:	9201      	str	r2, [sp, #4]
 80130ca:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80130ce:	9100      	str	r1, [sp, #0]
 80130d0:	6841      	ldr	r1, [r0, #4]
 80130d2:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80130d6:	fb01 2404 	mla	r4, r1, r4, r2
 80130da:	6802      	ldr	r2, [r0, #0]
 80130dc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80130e0:	f8de 2000 	ldr.w	r2, [lr]
 80130e4:	9202      	str	r2, [sp, #8]
 80130e6:	9a01      	ldr	r2, [sp, #4]
 80130e8:	43d6      	mvns	r6, r2
 80130ea:	b2f6      	uxtb	r6, r6
 80130ec:	9a00      	ldr	r2, [sp, #0]
 80130ee:	2a00      	cmp	r2, #0
 80130f0:	dc03      	bgt.n	80130fa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80130f2:	9a03      	ldr	r2, [sp, #12]
 80130f4:	2a00      	cmp	r2, #0
 80130f6:	f340 8124 	ble.w	8013342 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80130fa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80130fc:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8013100:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8013104:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013108:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801310a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801310e:	2b00      	cmp	r3, #0
 8013110:	dd0e      	ble.n	8013130 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013112:	1408      	asrs	r0, r1, #16
 8013114:	d405      	bmi.n	8013122 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013116:	4560      	cmp	r0, ip
 8013118:	da03      	bge.n	8013122 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801311a:	1410      	asrs	r0, r2, #16
 801311c:	d401      	bmi.n	8013122 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801311e:	42b8      	cmp	r0, r7
 8013120:	db07      	blt.n	8013132 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8013122:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013124:	4401      	add	r1, r0
 8013126:	9812      	ldr	r0, [sp, #72]	; 0x48
 8013128:	3b01      	subs	r3, #1
 801312a:	4402      	add	r2, r0
 801312c:	3402      	adds	r4, #2
 801312e:	e7ee      	b.n	801310e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8013130:	d06e      	beq.n	8013210 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8013132:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8013134:	1e58      	subs	r0, r3, #1
 8013136:	fb05 1500 	mla	r5, r5, r0, r1
 801313a:	142d      	asrs	r5, r5, #16
 801313c:	d45c      	bmi.n	80131f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801313e:	4565      	cmp	r5, ip
 8013140:	da5a      	bge.n	80131f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013142:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8013144:	fb05 2000 	mla	r0, r5, r0, r2
 8013148:	1400      	asrs	r0, r0, #16
 801314a:	d455      	bmi.n	80131f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801314c:	42b8      	cmp	r0, r7
 801314e:	da53      	bge.n	80131f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013150:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8013154:	4699      	mov	r9, r3
 8013156:	46a2      	mov	sl, r4
 8013158:	f1b9 0f00 	cmp.w	r9, #0
 801315c:	dd54      	ble.n	8013208 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801315e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013162:	140d      	asrs	r5, r1, #16
 8013164:	1410      	asrs	r0, r2, #16
 8013166:	fb07 5000 	mla	r0, r7, r0, r5
 801316a:	9d02      	ldr	r5, [sp, #8]
 801316c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8013170:	f8ba 5000 	ldrh.w	r5, [sl]
 8013174:	122f      	asrs	r7, r5, #8
 8013176:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801317a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801317e:	fb17 f706 	smulbb	r7, r7, r6
 8013182:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8013186:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801318a:	00ed      	lsls	r5, r5, #3
 801318c:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8013190:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8013194:	10c7      	asrs	r7, r0, #3
 8013196:	b2ed      	uxtb	r5, r5
 8013198:	00c0      	lsls	r0, r0, #3
 801319a:	fb18 f806 	smulbb	r8, r8, r6
 801319e:	fb15 f506 	smulbb	r5, r5, r6
 80131a2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80131a6:	b2c0      	uxtb	r0, r0
 80131a8:	fa1f fc8c 	uxth.w	ip, ip
 80131ac:	fb07 870b 	mla	r7, r7, fp, r8
 80131b0:	fb00 500b 	mla	r0, r0, fp, r5
 80131b4:	b280      	uxth	r0, r0
 80131b6:	b2bf      	uxth	r7, r7
 80131b8:	f10c 0501 	add.w	r5, ip, #1
 80131bc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80131c0:	f107 0801 	add.w	r8, r7, #1
 80131c4:	1c45      	adds	r5, r0, #1
 80131c6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80131ca:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80131ce:	9811      	ldr	r0, [sp, #68]	; 0x44
 80131d0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80131d4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80131d8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80131dc:	ea45 0c0c 	orr.w	ip, r5, ip
 80131e0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80131e4:	4401      	add	r1, r0
 80131e6:	9812      	ldr	r0, [sp, #72]	; 0x48
 80131e8:	ea4c 0c08 	orr.w	ip, ip, r8
 80131ec:	f82a cb02 	strh.w	ip, [sl], #2
 80131f0:	4402      	add	r2, r0
 80131f2:	f109 39ff 	add.w	r9, r9, #4294967295
 80131f6:	e7af      	b.n	8013158 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80131f8:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80131fc:	f04f 0800 	mov.w	r8, #0
 8013200:	eb03 0008 	add.w	r0, r3, r8
 8013204:	2800      	cmp	r0, #0
 8013206:	dc41      	bgt.n	801328c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8013208:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801320c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013210:	9b00      	ldr	r3, [sp, #0]
 8013212:	2b00      	cmp	r3, #0
 8013214:	f340 8095 	ble.w	8013342 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8013218:	ee30 0a04 	vadd.f32	s0, s0, s8
 801321c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013220:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8013224:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013226:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801322a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801322e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013232:	eef0 6a62 	vmov.f32	s13, s5
 8013236:	ee61 7a27 	vmul.f32	s15, s2, s15
 801323a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801323e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013242:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8013246:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801324a:	eef0 6a43 	vmov.f32	s13, s6
 801324e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013252:	ee12 2a90 	vmov	r2, s5
 8013256:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801325a:	fb92 f3f3 	sdiv	r3, r2, r3
 801325e:	ee13 2a10 	vmov	r2, s6
 8013262:	9311      	str	r3, [sp, #68]	; 0x44
 8013264:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013266:	fb92 f3f3 	sdiv	r3, r2, r3
 801326a:	9312      	str	r3, [sp, #72]	; 0x48
 801326c:	9b00      	ldr	r3, [sp, #0]
 801326e:	9a03      	ldr	r2, [sp, #12]
 8013270:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013274:	3b01      	subs	r3, #1
 8013276:	9300      	str	r3, [sp, #0]
 8013278:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801327c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801327e:	eeb0 3a67 	vmov.f32	s6, s15
 8013282:	bf08      	it	eq
 8013284:	4613      	moveq	r3, r2
 8013286:	eef0 2a47 	vmov.f32	s5, s14
 801328a:	e72f      	b.n	80130ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801328c:	140f      	asrs	r7, r1, #16
 801328e:	d451      	bmi.n	8013334 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8013290:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013294:	42bd      	cmp	r5, r7
 8013296:	dd4d      	ble.n	8013334 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8013298:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801329c:	d44a      	bmi.n	8013334 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801329e:	f8de 000c 	ldr.w	r0, [lr, #12]
 80132a2:	4560      	cmp	r0, ip
 80132a4:	dd46      	ble.n	8013334 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80132a6:	b22d      	sxth	r5, r5
 80132a8:	fb0c 7505 	mla	r5, ip, r5, r7
 80132ac:	9802      	ldr	r0, [sp, #8]
 80132ae:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 80132b2:	f06f 0501 	mvn.w	r5, #1
 80132b6:	fb05 fb08 	mul.w	fp, r5, r8
 80132ba:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80132be:	f834 500b 	ldrh.w	r5, [r4, fp]
 80132c2:	122f      	asrs	r7, r5, #8
 80132c4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80132c8:	fb17 f706 	smulbb	r7, r7, r6
 80132cc:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80132d0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80132d4:	00ed      	lsls	r5, r5, #3
 80132d6:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80132da:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80132de:	10c7      	asrs	r7, r0, #3
 80132e0:	b2ed      	uxtb	r5, r5
 80132e2:	00c0      	lsls	r0, r0, #3
 80132e4:	fb19 f906 	smulbb	r9, r9, r6
 80132e8:	fb15 f506 	smulbb	r5, r5, r6
 80132ec:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80132f0:	b2c0      	uxtb	r0, r0
 80132f2:	fa1f fc8c 	uxth.w	ip, ip
 80132f6:	fb07 970a 	mla	r7, r7, sl, r9
 80132fa:	fb00 500a 	mla	r0, r0, sl, r5
 80132fe:	b2bf      	uxth	r7, r7
 8013300:	b280      	uxth	r0, r0
 8013302:	f10c 0501 	add.w	r5, ip, #1
 8013306:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801330a:	f107 0901 	add.w	r9, r7, #1
 801330e:	1c45      	adds	r5, r0, #1
 8013310:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013314:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8013318:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801331c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013320:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8013324:	ea45 0c0c 	orr.w	ip, r5, ip
 8013328:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801332c:	ea4c 0c09 	orr.w	ip, ip, r9
 8013330:	f824 c00b 	strh.w	ip, [r4, fp]
 8013334:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013336:	4401      	add	r1, r0
 8013338:	9812      	ldr	r0, [sp, #72]	; 0x48
 801333a:	f108 38ff 	add.w	r8, r8, #4294967295
 801333e:	4402      	add	r2, r0
 8013340:	e75e      	b.n	8013200 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8013342:	b005      	add	sp, #20
 8013344:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013348 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013348:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801334c:	b085      	sub	sp, #20
 801334e:	4693      	mov	fp, r2
 8013350:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8013352:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8013354:	6870      	ldr	r0, [r6, #4]
 8013356:	9101      	str	r1, [sp, #4]
 8013358:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801335c:	fb00 2404 	mla	r4, r0, r4, r2
 8013360:	6832      	ldr	r2, [r6, #0]
 8013362:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8013366:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801336a:	682a      	ldr	r2, [r5, #0]
 801336c:	9202      	str	r2, [sp, #8]
 801336e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013372:	9a01      	ldr	r2, [sp, #4]
 8013374:	2a00      	cmp	r2, #0
 8013376:	dc03      	bgt.n	8013380 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8013378:	f1bb 0f00 	cmp.w	fp, #0
 801337c:	f340 809a 	ble.w	80134b4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8013380:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013382:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013386:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801338a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801338e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013390:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013394:	2b00      	cmp	r3, #0
 8013396:	dd0c      	ble.n	80133b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8013398:	1406      	asrs	r6, r0, #16
 801339a:	d405      	bmi.n	80133a8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801339c:	454e      	cmp	r6, r9
 801339e:	da03      	bge.n	80133a8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80133a0:	1416      	asrs	r6, r2, #16
 80133a2:	d401      	bmi.n	80133a8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80133a4:	4546      	cmp	r6, r8
 80133a6:	db05      	blt.n	80133b4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80133a8:	4470      	add	r0, lr
 80133aa:	4462      	add	r2, ip
 80133ac:	3b01      	subs	r3, #1
 80133ae:	3402      	adds	r4, #2
 80133b0:	e7f0      	b.n	8013394 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80133b2:	d00f      	beq.n	80133d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80133b4:	1e5e      	subs	r6, r3, #1
 80133b6:	fb0e 0706 	mla	r7, lr, r6, r0
 80133ba:	143f      	asrs	r7, r7, #16
 80133bc:	d541      	bpl.n	8013442 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80133be:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80133c2:	4698      	mov	r8, r3
 80133c4:	9603      	str	r6, [sp, #12]
 80133c6:	f1b8 0f00 	cmp.w	r8, #0
 80133ca:	dc56      	bgt.n	801347a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80133cc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80133d0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80133d4:	9b01      	ldr	r3, [sp, #4]
 80133d6:	2b00      	cmp	r3, #0
 80133d8:	dd6c      	ble.n	80134b4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80133da:	ee30 0a04 	vadd.f32	s0, s0, s8
 80133de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80133e2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80133e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80133e8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80133ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80133f0:	eeb0 6a62 	vmov.f32	s12, s5
 80133f4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80133f8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80133fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013400:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8013404:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013408:	eeb0 6a43 	vmov.f32	s12, s6
 801340c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013410:	ee12 2a90 	vmov	r2, s5
 8013414:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013418:	fb92 fef3 	sdiv	lr, r2, r3
 801341c:	ee13 2a10 	vmov	r2, s6
 8013420:	fb92 fcf3 	sdiv	ip, r2, r3
 8013424:	9b01      	ldr	r3, [sp, #4]
 8013426:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801342a:	3b01      	subs	r3, #1
 801342c:	9301      	str	r3, [sp, #4]
 801342e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8013432:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013434:	eeb0 3a67 	vmov.f32	s6, s15
 8013438:	bf08      	it	eq
 801343a:	465b      	moveq	r3, fp
 801343c:	eef0 2a47 	vmov.f32	s5, s14
 8013440:	e797      	b.n	8013372 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8013442:	454f      	cmp	r7, r9
 8013444:	dabb      	bge.n	80133be <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013446:	fb0c 2606 	mla	r6, ip, r6, r2
 801344a:	1436      	asrs	r6, r6, #16
 801344c:	d4b7      	bmi.n	80133be <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801344e:	4546      	cmp	r6, r8
 8013450:	dab5      	bge.n	80133be <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013452:	461e      	mov	r6, r3
 8013454:	46a0      	mov	r8, r4
 8013456:	2e00      	cmp	r6, #0
 8013458:	ddb8      	ble.n	80133cc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801345a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801345e:	9902      	ldr	r1, [sp, #8]
 8013460:	1417      	asrs	r7, r2, #16
 8013462:	ea4f 4920 	mov.w	r9, r0, asr #16
 8013466:	fb0a 9707 	mla	r7, sl, r7, r9
 801346a:	4470      	add	r0, lr
 801346c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8013470:	f828 7b02 	strh.w	r7, [r8], #2
 8013474:	4462      	add	r2, ip
 8013476:	3e01      	subs	r6, #1
 8013478:	e7ed      	b.n	8013456 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801347a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801347e:	d414      	bmi.n	80134aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8013480:	68ae      	ldr	r6, [r5, #8]
 8013482:	454e      	cmp	r6, r9
 8013484:	dd11      	ble.n	80134aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8013486:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801348a:	d40e      	bmi.n	80134aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801348c:	68ef      	ldr	r7, [r5, #12]
 801348e:	4557      	cmp	r7, sl
 8013490:	dd0b      	ble.n	80134aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8013492:	b236      	sxth	r6, r6
 8013494:	fb0a 9606 	mla	r6, sl, r6, r9
 8013498:	9f02      	ldr	r7, [sp, #8]
 801349a:	f06f 0101 	mvn.w	r1, #1
 801349e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80134a2:	fb01 f608 	mul.w	r6, r1, r8
 80134a6:	9903      	ldr	r1, [sp, #12]
 80134a8:	538f      	strh	r7, [r1, r6]
 80134aa:	4470      	add	r0, lr
 80134ac:	4462      	add	r2, ip
 80134ae:	f108 38ff 	add.w	r8, r8, #4294967295
 80134b2:	e788      	b.n	80133c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80134b4:	b005      	add	sp, #20
 80134b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080134ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80134ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80134be:	b087      	sub	sp, #28
 80134c0:	468b      	mov	fp, r1
 80134c2:	9815      	ldr	r0, [sp, #84]	; 0x54
 80134c4:	9203      	str	r2, [sp, #12]
 80134c6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80134ca:	9204      	str	r2, [sp, #16]
 80134cc:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 80134d0:	6841      	ldr	r1, [r0, #4]
 80134d2:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 80134d6:	fb01 2505 	mla	r5, r1, r5, r2
 80134da:	6802      	ldr	r2, [r0, #0]
 80134dc:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80134e0:	f8d9 2000 	ldr.w	r2, [r9]
 80134e4:	9201      	str	r2, [sp, #4]
 80134e6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80134ea:	f1bb 0f00 	cmp.w	fp, #0
 80134ee:	dc03      	bgt.n	80134f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80134f0:	9a03      	ldr	r2, [sp, #12]
 80134f2:	2a00      	cmp	r2, #0
 80134f4:	f340 8159 	ble.w	80137aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80134f8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80134fa:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80134fe:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8013502:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013506:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013508:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801350c:	2b00      	cmp	r3, #0
 801350e:	dd0e      	ble.n	801352e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8013510:	1402      	asrs	r2, r0, #16
 8013512:	d405      	bmi.n	8013520 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013514:	42ba      	cmp	r2, r7
 8013516:	da03      	bge.n	8013520 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013518:	140a      	asrs	r2, r1, #16
 801351a:	d401      	bmi.n	8013520 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801351c:	42b2      	cmp	r2, r6
 801351e:	db07      	blt.n	8013530 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013520:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013522:	4410      	add	r0, r2
 8013524:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013526:	3b01      	subs	r3, #1
 8013528:	4411      	add	r1, r2
 801352a:	3502      	adds	r5, #2
 801352c:	e7ee      	b.n	801350c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801352e:	d017      	beq.n	8013560 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8013530:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8013532:	1e5a      	subs	r2, r3, #1
 8013534:	fb04 0402 	mla	r4, r4, r2, r0
 8013538:	1424      	asrs	r4, r4, #16
 801353a:	d409      	bmi.n	8013550 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801353c:	42bc      	cmp	r4, r7
 801353e:	da07      	bge.n	8013550 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8013540:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8013542:	fb04 1202 	mla	r2, r4, r2, r1
 8013546:	1412      	asrs	r2, r2, #16
 8013548:	d402      	bmi.n	8013550 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801354a:	42b2      	cmp	r2, r6
 801354c:	f2c0 80bf 	blt.w	80136ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8013550:	2700      	movs	r7, #0
 8013552:	19da      	adds	r2, r3, r7
 8013554:	2a00      	cmp	r2, #0
 8013556:	dc3e      	bgt.n	80135d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8013558:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801355c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8013560:	f1bb 0f00 	cmp.w	fp, #0
 8013564:	f340 8121 	ble.w	80137aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8013568:	ee30 0a04 	vadd.f32	s0, s0, s8
 801356c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013570:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013574:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013576:	f1bb 0b01 	subs.w	fp, fp, #1
 801357a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801357e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013582:	eeb0 6a62 	vmov.f32	s12, s5
 8013586:	ee61 7a27 	vmul.f32	s15, s2, s15
 801358a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801358e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013592:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8013596:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801359a:	eeb0 6a43 	vmov.f32	s12, s6
 801359e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80135a2:	ee12 2a90 	vmov	r2, s5
 80135a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80135aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80135ae:	ee13 2a10 	vmov	r2, s6
 80135b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80135b6:	9313      	str	r3, [sp, #76]	; 0x4c
 80135b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80135ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80135be:	9a03      	ldr	r2, [sp, #12]
 80135c0:	9314      	str	r3, [sp, #80]	; 0x50
 80135c2:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80135c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80135c8:	eeb0 3a67 	vmov.f32	s6, s15
 80135cc:	bf08      	it	eq
 80135ce:	4613      	moveq	r3, r2
 80135d0:	eef0 2a47 	vmov.f32	s5, s14
 80135d4:	e789      	b.n	80134ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80135d6:	1406      	asrs	r6, r0, #16
 80135d8:	d42d      	bmi.n	8013636 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80135da:	f8d9 4008 	ldr.w	r4, [r9, #8]
 80135de:	42b4      	cmp	r4, r6
 80135e0:	dd29      	ble.n	8013636 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80135e2:	ea5f 4c21 	movs.w	ip, r1, asr #16
 80135e6:	d426      	bmi.n	8013636 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80135e8:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80135ec:	4562      	cmp	r2, ip
 80135ee:	dd22      	ble.n	8013636 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80135f0:	b224      	sxth	r4, r4
 80135f2:	9a01      	ldr	r2, [sp, #4]
 80135f4:	fb0c 6404 	mla	r4, ip, r4, r6
 80135f8:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 80135fc:	0e22      	lsrs	r2, r4, #24
 80135fe:	d01a      	beq.n	8013636 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8013600:	9e04      	ldr	r6, [sp, #16]
 8013602:	4372      	muls	r2, r6
 8013604:	1c56      	adds	r6, r2, #1
 8013606:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801360a:	1212      	asrs	r2, r2, #8
 801360c:	0a26      	lsrs	r6, r4, #8
 801360e:	2aff      	cmp	r2, #255	; 0xff
 8013610:	9605      	str	r6, [sp, #20]
 8013612:	d116      	bne.n	8013642 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8013614:	f06f 0201 	mvn.w	r2, #1
 8013618:	fb02 fc07 	mul.w	ip, r2, r7
 801361c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8013620:	0962      	lsrs	r2, r4, #5
 8013622:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013626:	f026 0607 	bic.w	r6, r6, #7
 801362a:	4316      	orrs	r6, r2
 801362c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8013630:	4326      	orrs	r6, r4
 8013632:	f825 600c 	strh.w	r6, [r5, ip]
 8013636:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013638:	4410      	add	r0, r2
 801363a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801363c:	3f01      	subs	r7, #1
 801363e:	4411      	add	r1, r2
 8013640:	e787      	b.n	8013552 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013642:	f06f 0601 	mvn.w	r6, #1
 8013646:	437e      	muls	r6, r7
 8013648:	fa1f fa82 	uxth.w	sl, r2
 801364c:	f835 8006 	ldrh.w	r8, [r5, r6]
 8013650:	9602      	str	r6, [sp, #8]
 8013652:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8013656:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801365a:	43d2      	mvns	r2, r2
 801365c:	b2d2      	uxtb	r2, r2
 801365e:	fb1c fc0a 	smulbb	ip, ip, sl
 8013662:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8013666:	fb0e ce02 	mla	lr, lr, r2, ip
 801366a:	b2e4      	uxtb	r4, r4
 801366c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8013670:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013674:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8013678:	fa5f f888 	uxtb.w	r8, r8
 801367c:	fb14 f40a 	smulbb	r4, r4, sl
 8013680:	fb08 4402 	mla	r4, r8, r2, r4
 8013684:	fa1f fe8e 	uxth.w	lr, lr
 8013688:	fb16 f60a 	smulbb	r6, r6, sl
 801368c:	b2a4      	uxth	r4, r4
 801368e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8013692:	fb0c 6c02 	mla	ip, ip, r2, r6
 8013696:	f10e 0201 	add.w	r2, lr, #1
 801369a:	1c66      	adds	r6, r4, #1
 801369c:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80136a0:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80136a4:	fa1f fc8c 	uxth.w	ip, ip
 80136a8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80136ac:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80136b0:	ea46 0e0e 	orr.w	lr, r6, lr
 80136b4:	f10c 0601 	add.w	r6, ip, #1
 80136b8:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80136bc:	0976      	lsrs	r6, r6, #5
 80136be:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80136c2:	9a02      	ldr	r2, [sp, #8]
 80136c4:	ea4e 0e06 	orr.w	lr, lr, r6
 80136c8:	f825 e002 	strh.w	lr, [r5, r2]
 80136cc:	e7b3      	b.n	8013636 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80136ce:	f04f 0800 	mov.w	r8, #0
 80136d2:	eba3 0208 	sub.w	r2, r3, r8
 80136d6:	2a00      	cmp	r2, #0
 80136d8:	f77f af3e 	ble.w	8013558 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80136dc:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80136e0:	1404      	asrs	r4, r0, #16
 80136e2:	140a      	asrs	r2, r1, #16
 80136e4:	fb06 4202 	mla	r2, r6, r2, r4
 80136e8:	9c01      	ldr	r4, [sp, #4]
 80136ea:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 80136ee:	0e22      	lsrs	r2, r4, #24
 80136f0:	d016      	beq.n	8013720 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80136f2:	9e04      	ldr	r6, [sp, #16]
 80136f4:	4372      	muls	r2, r6
 80136f6:	1c56      	adds	r6, r2, #1
 80136f8:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80136fc:	1212      	asrs	r2, r2, #8
 80136fe:	2aff      	cmp	r2, #255	; 0xff
 8013700:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8013704:	d113      	bne.n	801372e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8013706:	0962      	lsrs	r2, r4, #5
 8013708:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801370c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013710:	f026 0607 	bic.w	r6, r6, #7
 8013714:	4316      	orrs	r6, r2
 8013716:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801371a:	4326      	orrs	r6, r4
 801371c:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8013720:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013722:	4410      	add	r0, r2
 8013724:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013726:	f108 0801 	add.w	r8, r8, #1
 801372a:	4411      	add	r1, r2
 801372c:	e7d1      	b.n	80136d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801372e:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8013732:	fa1f fa82 	uxth.w	sl, r2
 8013736:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801373a:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801373e:	43d2      	mvns	r2, r2
 8013740:	b2d2      	uxtb	r2, r2
 8013742:	fb17 f70a 	smulbb	r7, r7, sl
 8013746:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801374a:	fb0c 7c02 	mla	ip, ip, r2, r7
 801374e:	b2e4      	uxtb	r4, r4
 8013750:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8013754:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013758:	fa5f fe8e 	uxtb.w	lr, lr
 801375c:	fb14 f40a 	smulbb	r4, r4, sl
 8013760:	fb0e 4402 	mla	r4, lr, r2, r4
 8013764:	b2f6      	uxtb	r6, r6
 8013766:	fa1f fc8c 	uxth.w	ip, ip
 801376a:	fb16 f60a 	smulbb	r6, r6, sl
 801376e:	b2a4      	uxth	r4, r4
 8013770:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013774:	fb07 6702 	mla	r7, r7, r2, r6
 8013778:	f10c 0201 	add.w	r2, ip, #1
 801377c:	1c66      	adds	r6, r4, #1
 801377e:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8013782:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8013786:	b2bf      	uxth	r7, r7
 8013788:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801378c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013790:	ea46 0c0c 	orr.w	ip, r6, ip
 8013794:	1c7e      	adds	r6, r7, #1
 8013796:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801379a:	0976      	lsrs	r6, r6, #5
 801379c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80137a0:	ea4c 0c06 	orr.w	ip, ip, r6
 80137a4:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 80137a8:	e7ba      	b.n	8013720 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80137aa:	b007      	add	sp, #28
 80137ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080137b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80137b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80137b4:	b085      	sub	sp, #20
 80137b6:	468b      	mov	fp, r1
 80137b8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80137ba:	9203      	str	r2, [sp, #12]
 80137bc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80137c0:	6841      	ldr	r1, [r0, #4]
 80137c2:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80137c6:	fb01 2404 	mla	r4, r1, r4, r2
 80137ca:	6802      	ldr	r2, [r0, #0]
 80137cc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80137d0:	f8d8 2000 	ldr.w	r2, [r8]
 80137d4:	9201      	str	r2, [sp, #4]
 80137d6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80137da:	f1bb 0f00 	cmp.w	fp, #0
 80137de:	dc03      	bgt.n	80137e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80137e0:	9a03      	ldr	r2, [sp, #12]
 80137e2:	2a00      	cmp	r2, #0
 80137e4:	f340 814f 	ble.w	8013a86 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80137e8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80137ea:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80137ee:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80137f2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80137f6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80137f8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80137fc:	2b00      	cmp	r3, #0
 80137fe:	dd0e      	ble.n	801381e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013800:	1408      	asrs	r0, r1, #16
 8013802:	d405      	bmi.n	8013810 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013804:	42b8      	cmp	r0, r7
 8013806:	da03      	bge.n	8013810 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013808:	1410      	asrs	r0, r2, #16
 801380a:	d401      	bmi.n	8013810 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801380c:	42b0      	cmp	r0, r6
 801380e:	db07      	blt.n	8013820 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013810:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013812:	4401      	add	r1, r0
 8013814:	9812      	ldr	r0, [sp, #72]	; 0x48
 8013816:	3b01      	subs	r3, #1
 8013818:	4402      	add	r2, r0
 801381a:	3402      	adds	r4, #2
 801381c:	e7ee      	b.n	80137fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801381e:	d017      	beq.n	8013850 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013820:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8013822:	1e58      	subs	r0, r3, #1
 8013824:	fb05 1500 	mla	r5, r5, r0, r1
 8013828:	142d      	asrs	r5, r5, #16
 801382a:	d409      	bmi.n	8013840 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801382c:	42bd      	cmp	r5, r7
 801382e:	da07      	bge.n	8013840 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8013830:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8013832:	fb05 2000 	mla	r0, r5, r0, r2
 8013836:	1400      	asrs	r0, r0, #16
 8013838:	d402      	bmi.n	8013840 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801383a:	42b0      	cmp	r0, r6
 801383c:	f2c0 80ba 	blt.w	80139b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8013840:	2600      	movs	r6, #0
 8013842:	1998      	adds	r0, r3, r6
 8013844:	2800      	cmp	r0, #0
 8013846:	dc3e      	bgt.n	80138c6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8013848:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801384c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013850:	f1bb 0f00 	cmp.w	fp, #0
 8013854:	f340 8117 	ble.w	8013a86 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8013858:	ee30 0a04 	vadd.f32	s0, s0, s8
 801385c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013860:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013864:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013866:	f1bb 0b01 	subs.w	fp, fp, #1
 801386a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801386e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013872:	eeb0 6a62 	vmov.f32	s12, s5
 8013876:	ee61 7a27 	vmul.f32	s15, s2, s15
 801387a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801387e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013882:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8013886:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801388a:	eeb0 6a43 	vmov.f32	s12, s6
 801388e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013892:	ee12 2a90 	vmov	r2, s5
 8013896:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801389a:	fb92 f3f3 	sdiv	r3, r2, r3
 801389e:	ee13 2a10 	vmov	r2, s6
 80138a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80138a6:	9311      	str	r3, [sp, #68]	; 0x44
 80138a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80138aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80138ae:	9a03      	ldr	r2, [sp, #12]
 80138b0:	9312      	str	r3, [sp, #72]	; 0x48
 80138b2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80138b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80138b8:	eeb0 3a67 	vmov.f32	s6, s15
 80138bc:	bf08      	it	eq
 80138be:	4613      	moveq	r3, r2
 80138c0:	eef0 2a47 	vmov.f32	s5, s14
 80138c4:	e789      	b.n	80137da <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80138c6:	140f      	asrs	r7, r1, #16
 80138c8:	d424      	bmi.n	8013914 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80138ca:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80138ce:	42bd      	cmp	r5, r7
 80138d0:	dd20      	ble.n	8013914 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80138d2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80138d6:	d41d      	bmi.n	8013914 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80138d8:	f8d8 000c 	ldr.w	r0, [r8, #12]
 80138dc:	4560      	cmp	r0, ip
 80138de:	dd19      	ble.n	8013914 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80138e0:	b22d      	sxth	r5, r5
 80138e2:	fb0c 7505 	mla	r5, ip, r5, r7
 80138e6:	9801      	ldr	r0, [sp, #4]
 80138e8:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 80138ec:	0e07      	lsrs	r7, r0, #24
 80138ee:	2fff      	cmp	r7, #255	; 0xff
 80138f0:	d116      	bne.n	8013920 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80138f2:	f06f 0501 	mvn.w	r5, #1
 80138f6:	fb05 f706 	mul.w	r7, r5, r6
 80138fa:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80138fe:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8013902:	0945      	lsrs	r5, r0, #5
 8013904:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013908:	ea4c 0505 	orr.w	r5, ip, r5
 801390c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8013910:	4305      	orrs	r5, r0
 8013912:	53e5      	strh	r5, [r4, r7]
 8013914:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013916:	4401      	add	r1, r0
 8013918:	9812      	ldr	r0, [sp, #72]	; 0x48
 801391a:	3e01      	subs	r6, #1
 801391c:	4402      	add	r2, r0
 801391e:	e790      	b.n	8013842 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013920:	b2fd      	uxtb	r5, r7
 8013922:	2f00      	cmp	r7, #0
 8013924:	d0f6      	beq.n	8013914 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8013926:	f06f 0701 	mvn.w	r7, #1
 801392a:	4377      	muls	r7, r6
 801392c:	fa1f f985 	uxth.w	r9, r5
 8013930:	f834 e007 	ldrh.w	lr, [r4, r7]
 8013934:	9702      	str	r7, [sp, #8]
 8013936:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801393a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801393e:	43ed      	mvns	r5, r5
 8013940:	b2ed      	uxtb	r5, r5
 8013942:	fb17 f709 	smulbb	r7, r7, r9
 8013946:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801394a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801394e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8013952:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8013956:	b2c0      	uxtb	r0, r0
 8013958:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801395c:	fa5f fe8e 	uxtb.w	lr, lr
 8013960:	fb10 f009 	smulbb	r0, r0, r9
 8013964:	fb0e 0005 	mla	r0, lr, r5, r0
 8013968:	b280      	uxth	r0, r0
 801396a:	fa1f fc8c 	uxth.w	ip, ip
 801396e:	fb1a fa09 	smulbb	sl, sl, r9
 8013972:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013976:	fb07 a705 	mla	r7, r7, r5, sl
 801397a:	f100 0a01 	add.w	sl, r0, #1
 801397e:	f10c 0501 	add.w	r5, ip, #1
 8013982:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8013986:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801398a:	b2bf      	uxth	r7, r7
 801398c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013990:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013994:	ea4a 0c0c 	orr.w	ip, sl, ip
 8013998:	f107 0a01 	add.w	sl, r7, #1
 801399c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80139a0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80139a4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80139a8:	9802      	ldr	r0, [sp, #8]
 80139aa:	ea4c 0c0a 	orr.w	ip, ip, sl
 80139ae:	f824 c000 	strh.w	ip, [r4, r0]
 80139b2:	e7af      	b.n	8013914 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80139b4:	f04f 0e00 	mov.w	lr, #0
 80139b8:	eba3 000e 	sub.w	r0, r3, lr
 80139bc:	2800      	cmp	r0, #0
 80139be:	f77f af43 	ble.w	8013848 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80139c2:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80139c6:	140d      	asrs	r5, r1, #16
 80139c8:	1410      	asrs	r0, r2, #16
 80139ca:	fb06 5000 	mla	r0, r6, r0, r5
 80139ce:	9d01      	ldr	r5, [sp, #4]
 80139d0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80139d4:	0e2e      	lsrs	r6, r5, #24
 80139d6:	2eff      	cmp	r6, #255	; 0xff
 80139d8:	d112      	bne.n	8013a00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80139da:	482c      	ldr	r0, [pc, #176]	; (8013a8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 80139dc:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80139e0:	0968      	lsrs	r0, r5, #5
 80139e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80139e6:	4330      	orrs	r0, r6
 80139e8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80139ec:	4328      	orrs	r0, r5
 80139ee:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 80139f2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80139f4:	4401      	add	r1, r0
 80139f6:	9812      	ldr	r0, [sp, #72]	; 0x48
 80139f8:	f10e 0e01 	add.w	lr, lr, #1
 80139fc:	4402      	add	r2, r0
 80139fe:	e7db      	b.n	80139b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8013a00:	b2f0      	uxtb	r0, r6
 8013a02:	2e00      	cmp	r6, #0
 8013a04:	d0f5      	beq.n	80139f2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8013a06:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8013a0a:	fa1f f980 	uxth.w	r9, r0
 8013a0e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013a12:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013a16:	43c0      	mvns	r0, r0
 8013a18:	b2c0      	uxtb	r0, r0
 8013a1a:	fb16 f609 	smulbb	r6, r6, r9
 8013a1e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013a22:	fb07 6700 	mla	r7, r7, r0, r6
 8013a26:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013a2a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8013a2e:	b2ed      	uxtb	r5, r5
 8013a30:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013a34:	fa5f fc8c 	uxtb.w	ip, ip
 8013a38:	fb15 f509 	smulbb	r5, r5, r9
 8013a3c:	fb0c 5500 	mla	r5, ip, r0, r5
 8013a40:	b2bf      	uxth	r7, r7
 8013a42:	fb1a fa09 	smulbb	sl, sl, r9
 8013a46:	b2ad      	uxth	r5, r5
 8013a48:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013a4c:	fb06 a600 	mla	r6, r6, r0, sl
 8013a50:	1c78      	adds	r0, r7, #1
 8013a52:	f105 0a01 	add.w	sl, r5, #1
 8013a56:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8013a5a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013a5e:	b2b6      	uxth	r6, r6
 8013a60:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013a64:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013a68:	ea4a 0707 	orr.w	r7, sl, r7
 8013a6c:	f106 0a01 	add.w	sl, r6, #1
 8013a70:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013a74:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013a78:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013a7c:	ea47 070a 	orr.w	r7, r7, sl
 8013a80:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8013a84:	e7b5      	b.n	80139f2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8013a86:	b005      	add	sp, #20
 8013a88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013a8c:	fffff800 	.word	0xfffff800

08013a90 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013a90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013a94:	b087      	sub	sp, #28
 8013a96:	468b      	mov	fp, r1
 8013a98:	9815      	ldr	r0, [sp, #84]	; 0x54
 8013a9a:	9203      	str	r2, [sp, #12]
 8013a9c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013aa0:	9204      	str	r2, [sp, #16]
 8013aa2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8013aa6:	6841      	ldr	r1, [r0, #4]
 8013aa8:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8013aac:	fb01 2404 	mla	r4, r1, r4, r2
 8013ab0:	6802      	ldr	r2, [r0, #0]
 8013ab2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013ab6:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8013aba:	3201      	adds	r2, #1
 8013abc:	f022 0201 	bic.w	r2, r2, #1
 8013ac0:	9200      	str	r2, [sp, #0]
 8013ac2:	f8d9 2000 	ldr.w	r2, [r9]
 8013ac6:	9201      	str	r2, [sp, #4]
 8013ac8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013acc:	f1bb 0f00 	cmp.w	fp, #0
 8013ad0:	dc03      	bgt.n	8013ada <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8013ad2:	9a03      	ldr	r2, [sp, #12]
 8013ad4:	2a00      	cmp	r2, #0
 8013ad6:	f340 8169 	ble.w	8013dac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8013ada:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013adc:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8013ae0:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8013ae4:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013ae8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013aea:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013aee:	2b00      	cmp	r3, #0
 8013af0:	dd0e      	ble.n	8013b10 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8013af2:	1402      	asrs	r2, r0, #16
 8013af4:	d405      	bmi.n	8013b02 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013af6:	42ba      	cmp	r2, r7
 8013af8:	da03      	bge.n	8013b02 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013afa:	140a      	asrs	r2, r1, #16
 8013afc:	d401      	bmi.n	8013b02 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013afe:	42b2      	cmp	r2, r6
 8013b00:	db07      	blt.n	8013b12 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8013b02:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013b04:	4410      	add	r0, r2
 8013b06:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013b08:	3b01      	subs	r3, #1
 8013b0a:	4411      	add	r1, r2
 8013b0c:	3402      	adds	r4, #2
 8013b0e:	e7ee      	b.n	8013aee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8013b10:	d017      	beq.n	8013b42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8013b12:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013b14:	1e5a      	subs	r2, r3, #1
 8013b16:	fb05 0502 	mla	r5, r5, r2, r0
 8013b1a:	142d      	asrs	r5, r5, #16
 8013b1c:	d409      	bmi.n	8013b32 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013b1e:	42bd      	cmp	r5, r7
 8013b20:	da07      	bge.n	8013b32 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013b22:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8013b24:	fb05 1202 	mla	r2, r5, r2, r1
 8013b28:	1412      	asrs	r2, r2, #16
 8013b2a:	d402      	bmi.n	8013b32 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013b2c:	42b2      	cmp	r2, r6
 8013b2e:	f2c0 80c7 	blt.w	8013cc0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8013b32:	2700      	movs	r7, #0
 8013b34:	19da      	adds	r2, r3, r7
 8013b36:	2a00      	cmp	r2, #0
 8013b38:	dc3e      	bgt.n	8013bb8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8013b3a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013b3e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013b42:	f1bb 0f00 	cmp.w	fp, #0
 8013b46:	f340 8131 	ble.w	8013dac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8013b4a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013b4e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013b52:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013b56:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013b58:	f1bb 0b01 	subs.w	fp, fp, #1
 8013b5c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013b60:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013b64:	eeb0 6a62 	vmov.f32	s12, s5
 8013b68:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013b6c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013b70:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013b74:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8013b78:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013b7c:	eeb0 6a43 	vmov.f32	s12, s6
 8013b80:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013b84:	ee12 2a90 	vmov	r2, s5
 8013b88:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013b8c:	fb92 f3f3 	sdiv	r3, r2, r3
 8013b90:	ee13 2a10 	vmov	r2, s6
 8013b94:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013b98:	9313      	str	r3, [sp, #76]	; 0x4c
 8013b9a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013b9c:	fb92 f3f3 	sdiv	r3, r2, r3
 8013ba0:	9a03      	ldr	r2, [sp, #12]
 8013ba2:	9314      	str	r3, [sp, #80]	; 0x50
 8013ba4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8013ba8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013baa:	eeb0 3a67 	vmov.f32	s6, s15
 8013bae:	bf08      	it	eq
 8013bb0:	4613      	moveq	r3, r2
 8013bb2:	eef0 2a47 	vmov.f32	s5, s14
 8013bb6:	e789      	b.n	8013acc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013bb8:	1405      	asrs	r5, r0, #16
 8013bba:	d435      	bmi.n	8013c28 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8013bbc:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8013bc0:	42aa      	cmp	r2, r5
 8013bc2:	dd31      	ble.n	8013c28 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8013bc4:	140e      	asrs	r6, r1, #16
 8013bc6:	d42f      	bmi.n	8013c28 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8013bc8:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8013bcc:	42b2      	cmp	r2, r6
 8013bce:	dd2b      	ble.n	8013c28 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8013bd0:	9a00      	ldr	r2, [sp, #0]
 8013bd2:	fb06 5502 	mla	r5, r6, r2, r5
 8013bd6:	086a      	lsrs	r2, r5, #1
 8013bd8:	9e01      	ldr	r6, [sp, #4]
 8013bda:	5cb2      	ldrb	r2, [r6, r2]
 8013bdc:	07ee      	lsls	r6, r5, #31
 8013bde:	bf54      	ite	pl
 8013be0:	f002 020f 	andpl.w	r2, r2, #15
 8013be4:	1112      	asrmi	r2, r2, #4
 8013be6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8013bea:	b2d2      	uxtb	r2, r2
 8013bec:	b1e2      	cbz	r2, 8013c28 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8013bee:	9d04      	ldr	r5, [sp, #16]
 8013bf0:	436a      	muls	r2, r5
 8013bf2:	1c55      	adds	r5, r2, #1
 8013bf4:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8013bf8:	4d6e      	ldr	r5, [pc, #440]	; (8013db4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8013bfa:	682d      	ldr	r5, [r5, #0]
 8013bfc:	1212      	asrs	r2, r2, #8
 8013bfe:	0a2e      	lsrs	r6, r5, #8
 8013c00:	2aff      	cmp	r2, #255	; 0xff
 8013c02:	9605      	str	r6, [sp, #20]
 8013c04:	d116      	bne.n	8013c34 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8013c06:	f06f 0201 	mvn.w	r2, #1
 8013c0a:	fb02 fc07 	mul.w	ip, r2, r7
 8013c0e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8013c12:	096a      	lsrs	r2, r5, #5
 8013c14:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013c18:	f026 0607 	bic.w	r6, r6, #7
 8013c1c:	4316      	orrs	r6, r2
 8013c1e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8013c22:	432e      	orrs	r6, r5
 8013c24:	f824 600c 	strh.w	r6, [r4, ip]
 8013c28:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013c2a:	4410      	add	r0, r2
 8013c2c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013c2e:	3f01      	subs	r7, #1
 8013c30:	4411      	add	r1, r2
 8013c32:	e77f      	b.n	8013b34 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8013c34:	f06f 0601 	mvn.w	r6, #1
 8013c38:	437e      	muls	r6, r7
 8013c3a:	fa1f fa82 	uxth.w	sl, r2
 8013c3e:	f834 8006 	ldrh.w	r8, [r4, r6]
 8013c42:	9602      	str	r6, [sp, #8]
 8013c44:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8013c48:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8013c4c:	43d2      	mvns	r2, r2
 8013c4e:	b2d2      	uxtb	r2, r2
 8013c50:	fb1c fc0a 	smulbb	ip, ip, sl
 8013c54:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8013c58:	fb0e ce02 	mla	lr, lr, r2, ip
 8013c5c:	b2ed      	uxtb	r5, r5
 8013c5e:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8013c62:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013c66:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8013c6a:	fa5f f888 	uxtb.w	r8, r8
 8013c6e:	fb15 f50a 	smulbb	r5, r5, sl
 8013c72:	fb08 5502 	mla	r5, r8, r2, r5
 8013c76:	fa1f fe8e 	uxth.w	lr, lr
 8013c7a:	fb16 f60a 	smulbb	r6, r6, sl
 8013c7e:	b2ad      	uxth	r5, r5
 8013c80:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8013c84:	fb0c 6c02 	mla	ip, ip, r2, r6
 8013c88:	f10e 0201 	add.w	r2, lr, #1
 8013c8c:	1c6e      	adds	r6, r5, #1
 8013c8e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8013c92:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8013c96:	fa1f fc8c 	uxth.w	ip, ip
 8013c9a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8013c9e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8013ca2:	ea46 0e0e 	orr.w	lr, r6, lr
 8013ca6:	f10c 0601 	add.w	r6, ip, #1
 8013caa:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8013cae:	0976      	lsrs	r6, r6, #5
 8013cb0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013cb4:	9a02      	ldr	r2, [sp, #8]
 8013cb6:	ea4e 0e06 	orr.w	lr, lr, r6
 8013cba:	f824 e002 	strh.w	lr, [r4, r2]
 8013cbe:	e7b3      	b.n	8013c28 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8013cc0:	f04f 0800 	mov.w	r8, #0
 8013cc4:	eba3 0208 	sub.w	r2, r3, r8
 8013cc8:	2a00      	cmp	r2, #0
 8013cca:	f77f af36 	ble.w	8013b3a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8013cce:	9e00      	ldr	r6, [sp, #0]
 8013cd0:	1402      	asrs	r2, r0, #16
 8013cd2:	140d      	asrs	r5, r1, #16
 8013cd4:	fb06 2505 	mla	r5, r6, r5, r2
 8013cd8:	086a      	lsrs	r2, r5, #1
 8013cda:	9e01      	ldr	r6, [sp, #4]
 8013cdc:	5cb2      	ldrb	r2, [r6, r2]
 8013cde:	07ed      	lsls	r5, r5, #31
 8013ce0:	bf54      	ite	pl
 8013ce2:	f002 020f 	andpl.w	r2, r2, #15
 8013ce6:	1112      	asrmi	r2, r2, #4
 8013ce8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8013cec:	b2d2      	uxtb	r2, r2
 8013cee:	b1c2      	cbz	r2, 8013d22 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8013cf0:	9d04      	ldr	r5, [sp, #16]
 8013cf2:	436a      	muls	r2, r5
 8013cf4:	1c55      	adds	r5, r2, #1
 8013cf6:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8013cfa:	4d2e      	ldr	r5, [pc, #184]	; (8013db4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8013cfc:	1212      	asrs	r2, r2, #8
 8013cfe:	682e      	ldr	r6, [r5, #0]
 8013d00:	2aff      	cmp	r2, #255	; 0xff
 8013d02:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8013d06:	d113      	bne.n	8013d30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8013d08:	0972      	lsrs	r2, r6, #5
 8013d0a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8013d0e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013d12:	f025 0507 	bic.w	r5, r5, #7
 8013d16:	4315      	orrs	r5, r2
 8013d18:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8013d1c:	4335      	orrs	r5, r6
 8013d1e:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8013d22:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013d24:	4410      	add	r0, r2
 8013d26:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013d28:	f108 0801 	add.w	r8, r8, #1
 8013d2c:	4411      	add	r1, r2
 8013d2e:	e7c9      	b.n	8013cc4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8013d30:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8013d34:	fa1f fa82 	uxth.w	sl, r2
 8013d38:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8013d3c:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8013d40:	43d2      	mvns	r2, r2
 8013d42:	b2d2      	uxtb	r2, r2
 8013d44:	fb17 f70a 	smulbb	r7, r7, sl
 8013d48:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013d4c:	fb0c 7c02 	mla	ip, ip, r2, r7
 8013d50:	b2f6      	uxtb	r6, r6
 8013d52:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8013d56:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013d5a:	fa5f fe8e 	uxtb.w	lr, lr
 8013d5e:	fb16 f60a 	smulbb	r6, r6, sl
 8013d62:	fb0e 6602 	mla	r6, lr, r2, r6
 8013d66:	b2ed      	uxtb	r5, r5
 8013d68:	fa1f fc8c 	uxth.w	ip, ip
 8013d6c:	fb15 f50a 	smulbb	r5, r5, sl
 8013d70:	b2b6      	uxth	r6, r6
 8013d72:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013d76:	fb07 5702 	mla	r7, r7, r2, r5
 8013d7a:	f10c 0201 	add.w	r2, ip, #1
 8013d7e:	1c75      	adds	r5, r6, #1
 8013d80:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8013d84:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8013d88:	b2bf      	uxth	r7, r7
 8013d8a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013d8e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013d92:	ea45 0c0c 	orr.w	ip, r5, ip
 8013d96:	1c7d      	adds	r5, r7, #1
 8013d98:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8013d9c:	096d      	lsrs	r5, r5, #5
 8013d9e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013da2:	ea4c 0c05 	orr.w	ip, ip, r5
 8013da6:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8013daa:	e7ba      	b.n	8013d22 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8013dac:	b007      	add	sp, #28
 8013dae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013db2:	bf00      	nop
 8013db4:	20026f08 	.word	0x20026f08

08013db8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013db8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013dbc:	b087      	sub	sp, #28
 8013dbe:	f8df 830c 	ldr.w	r8, [pc, #780]	; 80140cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8013dc2:	9815      	ldr	r0, [sp, #84]	; 0x54
 8013dc4:	9205      	str	r2, [sp, #20]
 8013dc6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8013dca:	9101      	str	r1, [sp, #4]
 8013dcc:	6841      	ldr	r1, [r0, #4]
 8013dce:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8013dd2:	fb01 2404 	mla	r4, r1, r4, r2
 8013dd6:	6802      	ldr	r2, [r0, #0]
 8013dd8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013ddc:	f8db 2008 	ldr.w	r2, [fp, #8]
 8013de0:	3201      	adds	r2, #1
 8013de2:	f022 0201 	bic.w	r2, r2, #1
 8013de6:	9202      	str	r2, [sp, #8]
 8013de8:	f8db 2000 	ldr.w	r2, [fp]
 8013dec:	9203      	str	r2, [sp, #12]
 8013dee:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013df2:	9a01      	ldr	r2, [sp, #4]
 8013df4:	2a00      	cmp	r2, #0
 8013df6:	dc03      	bgt.n	8013e00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8013df8:	9a05      	ldr	r2, [sp, #20]
 8013dfa:	2a00      	cmp	r2, #0
 8013dfc:	f340 8162 	ble.w	80140c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8013e00:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013e02:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8013e06:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8013e0a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013e0e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013e10:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013e14:	2b00      	cmp	r3, #0
 8013e16:	dd0e      	ble.n	8013e36 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013e18:	1402      	asrs	r2, r0, #16
 8013e1a:	d405      	bmi.n	8013e28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013e1c:	42ba      	cmp	r2, r7
 8013e1e:	da03      	bge.n	8013e28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013e20:	140a      	asrs	r2, r1, #16
 8013e22:	d401      	bmi.n	8013e28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013e24:	42b2      	cmp	r2, r6
 8013e26:	db07      	blt.n	8013e38 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8013e28:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013e2a:	4410      	add	r0, r2
 8013e2c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013e2e:	3b01      	subs	r3, #1
 8013e30:	4411      	add	r1, r2
 8013e32:	3402      	adds	r4, #2
 8013e34:	e7ee      	b.n	8013e14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8013e36:	d017      	beq.n	8013e68 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8013e38:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013e3a:	1e5a      	subs	r2, r3, #1
 8013e3c:	fb05 0502 	mla	r5, r5, r2, r0
 8013e40:	142d      	asrs	r5, r5, #16
 8013e42:	d409      	bmi.n	8013e58 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013e44:	42bd      	cmp	r5, r7
 8013e46:	da07      	bge.n	8013e58 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013e48:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8013e4a:	fb05 1202 	mla	r2, r5, r2, r1
 8013e4e:	1412      	asrs	r2, r2, #16
 8013e50:	d402      	bmi.n	8013e58 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013e52:	42b2      	cmp	r2, r6
 8013e54:	f2c0 80c3 	blt.w	8013fde <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8013e58:	2500      	movs	r5, #0
 8013e5a:	195a      	adds	r2, r3, r5
 8013e5c:	2a00      	cmp	r2, #0
 8013e5e:	dc3f      	bgt.n	8013ee0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8013e60:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013e64:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013e68:	9b01      	ldr	r3, [sp, #4]
 8013e6a:	2b00      	cmp	r3, #0
 8013e6c:	f340 812a 	ble.w	80140c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8013e70:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013e74:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013e78:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013e7c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013e7e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013e82:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013e86:	eeb0 6a62 	vmov.f32	s12, s5
 8013e8a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013e8e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013e92:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013e96:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8013e9a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013e9e:	eeb0 6a43 	vmov.f32	s12, s6
 8013ea2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013ea6:	ee12 2a90 	vmov	r2, s5
 8013eaa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013eae:	fb92 f3f3 	sdiv	r3, r2, r3
 8013eb2:	ee13 2a10 	vmov	r2, s6
 8013eb6:	9313      	str	r3, [sp, #76]	; 0x4c
 8013eb8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013eba:	fb92 f3f3 	sdiv	r3, r2, r3
 8013ebe:	9314      	str	r3, [sp, #80]	; 0x50
 8013ec0:	9b01      	ldr	r3, [sp, #4]
 8013ec2:	9a05      	ldr	r2, [sp, #20]
 8013ec4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013ec8:	3b01      	subs	r3, #1
 8013eca:	9301      	str	r3, [sp, #4]
 8013ecc:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8013ed0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013ed2:	eeb0 3a67 	vmov.f32	s6, s15
 8013ed6:	bf08      	it	eq
 8013ed8:	4613      	moveq	r3, r2
 8013eda:	eef0 2a47 	vmov.f32	s5, s14
 8013ede:	e788      	b.n	8013df2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8013ee0:	1406      	asrs	r6, r0, #16
 8013ee2:	d42c      	bmi.n	8013f3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013ee4:	f8db 2008 	ldr.w	r2, [fp, #8]
 8013ee8:	42b2      	cmp	r2, r6
 8013eea:	dd28      	ble.n	8013f3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013eec:	140f      	asrs	r7, r1, #16
 8013eee:	d426      	bmi.n	8013f3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013ef0:	f8db 200c 	ldr.w	r2, [fp, #12]
 8013ef4:	42ba      	cmp	r2, r7
 8013ef6:	dd22      	ble.n	8013f3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013ef8:	9a02      	ldr	r2, [sp, #8]
 8013efa:	fb07 6602 	mla	r6, r7, r2, r6
 8013efe:	0872      	lsrs	r2, r6, #1
 8013f00:	9f03      	ldr	r7, [sp, #12]
 8013f02:	5cba      	ldrb	r2, [r7, r2]
 8013f04:	07f6      	lsls	r6, r6, #31
 8013f06:	bf54      	ite	pl
 8013f08:	f002 020f 	andpl.w	r2, r2, #15
 8013f0c:	1112      	asrmi	r2, r2, #4
 8013f0e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8013f12:	b2d2      	uxtb	r2, r2
 8013f14:	2aff      	cmp	r2, #255	; 0xff
 8013f16:	d118      	bne.n	8013f4a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8013f18:	f8d8 2000 	ldr.w	r2, [r8]
 8013f1c:	f06f 0601 	mvn.w	r6, #1
 8013f20:	fb06 f705 	mul.w	r7, r6, r5
 8013f24:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 8013f28:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8013f2c:	0956      	lsrs	r6, r2, #5
 8013f2e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013f32:	ea4c 0606 	orr.w	r6, ip, r6
 8013f36:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8013f3a:	4316      	orrs	r6, r2
 8013f3c:	53e6      	strh	r6, [r4, r7]
 8013f3e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013f40:	4410      	add	r0, r2
 8013f42:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013f44:	3d01      	subs	r5, #1
 8013f46:	4411      	add	r1, r2
 8013f48:	e787      	b.n	8013e5a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013f4a:	2a00      	cmp	r2, #0
 8013f4c:	d0f7      	beq.n	8013f3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013f4e:	f06f 0601 	mvn.w	r6, #1
 8013f52:	436e      	muls	r6, r5
 8013f54:	f8d8 c000 	ldr.w	ip, [r8]
 8013f58:	f834 e006 	ldrh.w	lr, [r4, r6]
 8013f5c:	9604      	str	r6, [sp, #16]
 8013f5e:	fa1f f982 	uxth.w	r9, r2
 8013f62:	ea4f 272e 	mov.w	r7, lr, asr #8
 8013f66:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8013f6a:	43d2      	mvns	r2, r2
 8013f6c:	b2d2      	uxtb	r2, r2
 8013f6e:	fb16 f609 	smulbb	r6, r6, r9
 8013f72:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013f76:	fb07 6702 	mla	r7, r7, r2, r6
 8013f7a:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8013f7e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013f82:	fa5f fc8c 	uxtb.w	ip, ip
 8013f86:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013f8a:	fa5f fe8e 	uxtb.w	lr, lr
 8013f8e:	fb1c fc09 	smulbb	ip, ip, r9
 8013f92:	fb0e cc02 	mla	ip, lr, r2, ip
 8013f96:	b2bf      	uxth	r7, r7
 8013f98:	fb1a fa09 	smulbb	sl, sl, r9
 8013f9c:	fa1f fc8c 	uxth.w	ip, ip
 8013fa0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013fa4:	fb06 a602 	mla	r6, r6, r2, sl
 8013fa8:	1c7a      	adds	r2, r7, #1
 8013faa:	f10c 0a01 	add.w	sl, ip, #1
 8013fae:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013fb2:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8013fb6:	b2b6      	uxth	r6, r6
 8013fb8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013fbc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013fc0:	ea4a 0707 	orr.w	r7, sl, r7
 8013fc4:	f106 0a01 	add.w	sl, r6, #1
 8013fc8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013fcc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013fd0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013fd4:	9a04      	ldr	r2, [sp, #16]
 8013fd6:	ea47 070a 	orr.w	r7, r7, sl
 8013fda:	52a7      	strh	r7, [r4, r2]
 8013fdc:	e7af      	b.n	8013f3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013fde:	f04f 0e00 	mov.w	lr, #0
 8013fe2:	eba3 020e 	sub.w	r2, r3, lr
 8013fe6:	2a00      	cmp	r2, #0
 8013fe8:	f77f af3a 	ble.w	8013e60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8013fec:	9e02      	ldr	r6, [sp, #8]
 8013fee:	1402      	asrs	r2, r0, #16
 8013ff0:	140d      	asrs	r5, r1, #16
 8013ff2:	fb06 2505 	mla	r5, r6, r5, r2
 8013ff6:	086a      	lsrs	r2, r5, #1
 8013ff8:	9e03      	ldr	r6, [sp, #12]
 8013ffa:	5cb2      	ldrb	r2, [r6, r2]
 8013ffc:	07ed      	lsls	r5, r5, #31
 8013ffe:	bf54      	ite	pl
 8014000:	f002 020f 	andpl.w	r2, r2, #15
 8014004:	1112      	asrmi	r2, r2, #4
 8014006:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801400a:	b2d2      	uxtb	r2, r2
 801400c:	2aff      	cmp	r2, #255	; 0xff
 801400e:	d115      	bne.n	801403c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8014010:	f8d8 5000 	ldr.w	r5, [r8]
 8014014:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8014018:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801401c:	096a      	lsrs	r2, r5, #5
 801401e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014022:	4332      	orrs	r2, r6
 8014024:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014028:	432a      	orrs	r2, r5
 801402a:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801402e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014030:	4410      	add	r0, r2
 8014032:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014034:	f10e 0e01 	add.w	lr, lr, #1
 8014038:	4411      	add	r1, r2
 801403a:	e7d2      	b.n	8013fe2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801403c:	2a00      	cmp	r2, #0
 801403e:	d0f6      	beq.n	801402e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8014040:	f8d8 7000 	ldr.w	r7, [r8]
 8014044:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8014048:	fa1f f982 	uxth.w	r9, r2
 801404c:	ea4f 262c 	mov.w	r6, ip, asr #8
 8014050:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8014054:	43d2      	mvns	r2, r2
 8014056:	b2d2      	uxtb	r2, r2
 8014058:	fb15 f509 	smulbb	r5, r5, r9
 801405c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014060:	fb06 5602 	mla	r6, r6, r2, r5
 8014064:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8014068:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801406c:	b2ff      	uxtb	r7, r7
 801406e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014072:	fa5f fc8c 	uxtb.w	ip, ip
 8014076:	fb17 f709 	smulbb	r7, r7, r9
 801407a:	fb0c 7702 	mla	r7, ip, r2, r7
 801407e:	b2b6      	uxth	r6, r6
 8014080:	fb1a fa09 	smulbb	sl, sl, r9
 8014084:	b2bf      	uxth	r7, r7
 8014086:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801408a:	fb05 a502 	mla	r5, r5, r2, sl
 801408e:	1c72      	adds	r2, r6, #1
 8014090:	f107 0a01 	add.w	sl, r7, #1
 8014094:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8014098:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801409c:	b2ad      	uxth	r5, r5
 801409e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80140a2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80140a6:	ea4a 0606 	orr.w	r6, sl, r6
 80140aa:	f105 0a01 	add.w	sl, r5, #1
 80140ae:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80140b2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80140b6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80140ba:	ea46 060a 	orr.w	r6, r6, sl
 80140be:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 80140c2:	e7b4      	b.n	801402e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80140c4:	b007      	add	sp, #28
 80140c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80140ca:	bf00      	nop
 80140cc:	20026f08 	.word	0x20026f08

080140d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80140d0:	4770      	bx	lr

080140d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80140d2:	4770      	bx	lr

080140d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80140d4:	4770      	bx	lr

080140d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80140d6:	4770      	bx	lr

080140d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80140d8:	4770      	bx	lr

080140da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80140da:	4770      	bx	lr

080140dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80140dc:	4770      	bx	lr

080140de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80140de:	4770      	bx	lr

080140e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80140e0:	4770      	bx	lr

080140e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80140e2:	4770      	bx	lr

080140e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80140e4:	4770      	bx	lr

080140e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80140e6:	4770      	bx	lr

080140e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80140e8:	4770      	bx	lr

080140ea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80140ea:	4770      	bx	lr

080140ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80140ec:	4770      	bx	lr

080140ee <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 80140ee:	4770      	bx	lr

080140f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80140f0:	4770      	bx	lr

080140f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80140f2:	4770      	bx	lr

080140f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80140f4:	4770      	bx	lr

080140f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80140f6:	4770      	bx	lr

080140f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80140f8:	4770      	bx	lr

080140fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 80140fa:	4770      	bx	lr

080140fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 80140fc:	4770      	bx	lr

080140fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 80140fe:	4770      	bx	lr

08014100 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8014100:	4770      	bx	lr

08014102 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8014102:	4770      	bx	lr

08014104 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8014104:	4770      	bx	lr

08014106 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8014106:	4770      	bx	lr

08014108 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8014108:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801410c:	4692      	mov	sl, r2
 801410e:	4a22      	ldr	r2, [pc, #136]	; (8014198 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x90>)
 8014110:	6812      	ldr	r2, [r2, #0]
 8014112:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8014116:	2a02      	cmp	r2, #2
 8014118:	b088      	sub	sp, #32
 801411a:	4605      	mov	r5, r0
 801411c:	4689      	mov	r9, r1
 801411e:	d106      	bne.n	801412e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8014120:	4b1e      	ldr	r3, [pc, #120]	; (801419c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x94>)
 8014122:	4a1f      	ldr	r2, [pc, #124]	; (80141a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 8014124:	f44f 7158 	mov.w	r1, #864	; 0x360
 8014128:	481e      	ldr	r0, [pc, #120]	; (80141a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x9c>)
 801412a:	f009 fc7f 	bl	801da2c <__assert_func>
 801412e:	ac08      	add	r4, sp, #32
 8014130:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8014134:	4620      	mov	r0, r4
 8014136:	f7fd fce5 	bl	8011b04 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801413a:	682b      	ldr	r3, [r5, #0]
 801413c:	4606      	mov	r6, r0
 801413e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014140:	4628      	mov	r0, r5
 8014142:	4798      	blx	r3
 8014144:	4286      	cmp	r6, r0
 8014146:	d004      	beq.n	8014152 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8014148:	4b17      	ldr	r3, [pc, #92]	; (80141a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa0>)
 801414a:	4a15      	ldr	r2, [pc, #84]	; (80141a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 801414c:	f240 3162 	movw	r1, #866	; 0x362
 8014150:	e7ea      	b.n	8014128 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8014152:	4620      	mov	r0, r4
 8014154:	f7fd fc4c 	bl	80119f0 <_ZNK8touchgfx6Bitmap7getDataEv>
 8014158:	4606      	mov	r6, r0
 801415a:	b920      	cbnz	r0, 8014166 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 801415c:	4b13      	ldr	r3, [pc, #76]	; (80141ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa4>)
 801415e:	4a10      	ldr	r2, [pc, #64]	; (80141a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 8014160:	f44f 7159 	mov.w	r1, #868	; 0x364
 8014164:	e7e0      	b.n	8014128 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8014166:	682b      	ldr	r3, [r5, #0]
 8014168:	4620      	mov	r0, r4
 801416a:	f8d3 8018 	ldr.w	r8, [r3, #24]
 801416e:	f7fd fb23 	bl	80117b8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014172:	4607      	mov	r7, r0
 8014174:	4620      	mov	r0, r4
 8014176:	f7fd fb63 	bl	8011840 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801417a:	b23f      	sxth	r7, r7
 801417c:	b200      	sxth	r0, r0
 801417e:	9002      	str	r0, [sp, #8]
 8014180:	e9cd 6700 	strd	r6, r7, [sp]
 8014184:	a806      	add	r0, sp, #24
 8014186:	4653      	mov	r3, sl
 8014188:	464a      	mov	r2, r9
 801418a:	4629      	mov	r1, r5
 801418c:	47c0      	blx	r8
 801418e:	4630      	mov	r0, r6
 8014190:	b008      	add	sp, #32
 8014192:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014196:	bf00      	nop
 8014198:	20026f00 	.word	0x20026f00
 801419c:	08021a59 	.word	0x08021a59
 80141a0:	08022357 	.word	0x08022357
 80141a4:	08021b0b 	.word	0x08021b0b
 80141a8:	08021b3d 	.word	0x08021b3d
 80141ac:	08021b92 	.word	0x08021b92

080141b0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80141b0:	b508      	push	{r3, lr}
 80141b2:	4b06      	ldr	r3, [pc, #24]	; (80141cc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 80141b4:	8818      	ldrh	r0, [r3, #0]
 80141b6:	b928      	cbnz	r0, 80141c4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 80141b8:	4b05      	ldr	r3, [pc, #20]	; (80141d0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 80141ba:	4a06      	ldr	r2, [pc, #24]	; (80141d4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 80141bc:	4806      	ldr	r0, [pc, #24]	; (80141d8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 80141be:	2153      	movs	r1, #83	; 0x53
 80141c0:	f009 fc34 	bl	801da2c <__assert_func>
 80141c4:	0040      	lsls	r0, r0, #1
 80141c6:	b280      	uxth	r0, r0
 80141c8:	bd08      	pop	{r3, pc}
 80141ca:	bf00      	nop
 80141cc:	20026ef8 	.word	0x20026ef8
 80141d0:	08021c01 	.word	0x08021c01
 80141d4:	08022214 	.word	0x08022214
 80141d8:	08021c43 	.word	0x08021c43

080141dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 80141dc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80141e0:	2300      	movs	r3, #0
 80141e2:	9300      	str	r3, [sp, #0]
 80141e4:	4b3d      	ldr	r3, [pc, #244]	; (80142dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 80141e6:	781b      	ldrb	r3, [r3, #0]
 80141e8:	2b00      	cmp	r3, #0
 80141ea:	d137      	bne.n	801425c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 80141ec:	4a3c      	ldr	r2, [pc, #240]	; (80142e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80141ee:	f9b2 2000 	ldrsh.w	r2, [r2]
 80141f2:	f8ad 2004 	strh.w	r2, [sp, #4]
 80141f6:	2b00      	cmp	r3, #0
 80141f8:	d132      	bne.n	8014260 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 80141fa:	4b3a      	ldr	r3, [pc, #232]	; (80142e4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80141fc:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014200:	6808      	ldr	r0, [r1, #0]
 8014202:	6849      	ldr	r1, [r1, #4]
 8014204:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014208:	ac02      	add	r4, sp, #8
 801420a:	ab02      	add	r3, sp, #8
 801420c:	c303      	stmia	r3!, {r0, r1}
 801420e:	4669      	mov	r1, sp
 8014210:	4620      	mov	r0, r4
 8014212:	f7fa fc85 	bl	800eb20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014216:	4668      	mov	r0, sp
 8014218:	f7fa fc5a 	bl	800ead0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801421c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8014220:	f8bd 2000 	ldrh.w	r2, [sp]
 8014224:	4d30      	ldr	r5, [pc, #192]	; (80142e8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8014226:	4413      	add	r3, r2
 8014228:	f8ad 3008 	strh.w	r3, [sp, #8]
 801422c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8014230:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8014234:	6828      	ldr	r0, [r5, #0]
 8014236:	4413      	add	r3, r2
 8014238:	f8ad 300a 	strh.w	r3, [sp, #10]
 801423c:	6803      	ldr	r3, [r0, #0]
 801423e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014240:	4798      	blx	r3
 8014242:	f010 0f01 	tst.w	r0, #1
 8014246:	462f      	mov	r7, r5
 8014248:	d00c      	beq.n	8014264 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801424a:	6828      	ldr	r0, [r5, #0]
 801424c:	6803      	ldr	r3, [r0, #0]
 801424e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8014252:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8014254:	4798      	blx	r3
 8014256:	b004      	add	sp, #16
 8014258:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801425c:	4a21      	ldr	r2, [pc, #132]	; (80142e4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801425e:	e7c6      	b.n	80141ee <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8014260:	4b1f      	ldr	r3, [pc, #124]	; (80142e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8014262:	e7cb      	b.n	80141fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8014264:	6838      	ldr	r0, [r7, #0]
 8014266:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801426a:	6803      	ldr	r3, [r0, #0]
 801426c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8014270:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014272:	4798      	blx	r3
 8014274:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8014278:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801427c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8014280:	fb16 3602 	smlabb	r6, r6, r2, r3
 8014284:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8014288:	6838      	ldr	r0, [r7, #0]
 801428a:	6803      	ldr	r3, [r0, #0]
 801428c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801428e:	4798      	blx	r3
 8014290:	4a13      	ldr	r2, [pc, #76]	; (80142e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8014292:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8014296:	8813      	ldrh	r3, [r2, #0]
 8014298:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801429c:	fb03 1404 	mla	r4, r3, r4, r1
 80142a0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80142a4:	435d      	muls	r5, r3
 80142a6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80142aa:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80142ae:	4691      	mov	r9, r2
 80142b0:	6838      	ldr	r0, [r7, #0]
 80142b2:	42ac      	cmp	r4, r5
 80142b4:	6803      	ldr	r3, [r0, #0]
 80142b6:	d20e      	bcs.n	80142d6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80142b8:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 80142bc:	4632      	mov	r2, r6
 80142be:	4643      	mov	r3, r8
 80142c0:	4621      	mov	r1, r4
 80142c2:	47d0      	blx	sl
 80142c4:	f8b9 3000 	ldrh.w	r3, [r9]
 80142c8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80142cc:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80142d0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80142d4:	e7ec      	b.n	80142b0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 80142d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80142d8:	4798      	blx	r3
 80142da:	e7bc      	b.n	8014256 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 80142dc:	20026ef6 	.word	0x20026ef6
 80142e0:	20026ef8 	.word	0x20026ef8
 80142e4:	20026efa 	.word	0x20026efa
 80142e8:	20026f00 	.word	0x20026f00

080142ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 80142ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80142f0:	b08b      	sub	sp, #44	; 0x2c
 80142f2:	460f      	mov	r7, r1
 80142f4:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 80142f8:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 80142fc:	4616      	mov	r6, r2
 80142fe:	f1bb 0f00 	cmp.w	fp, #0
 8014302:	d049      	beq.n	8014398 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8014304:	6810      	ldr	r0, [r2, #0]
 8014306:	6851      	ldr	r1, [r2, #4]
 8014308:	ad06      	add	r5, sp, #24
 801430a:	c503      	stmia	r5!, {r0, r1}
 801430c:	6818      	ldr	r0, [r3, #0]
 801430e:	6859      	ldr	r1, [r3, #4]
 8014310:	ad08      	add	r5, sp, #32
 8014312:	c503      	stmia	r5!, {r0, r1}
 8014314:	a806      	add	r0, sp, #24
 8014316:	f7fa fbdb 	bl	800ead0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801431a:	4631      	mov	r1, r6
 801431c:	a808      	add	r0, sp, #32
 801431e:	f7fa fbff 	bl	800eb20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014322:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8014326:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801432a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801432e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8014332:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8014336:	fb16 2103 	smlabb	r1, r6, r3, r2
 801433a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801433e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8014342:	4f5f      	ldr	r7, [pc, #380]	; (80144c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8014344:	440a      	add	r2, r1
 8014346:	f8ad 2020 	strh.w	r2, [sp, #32]
 801434a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801434e:	6838      	ldr	r0, [r7, #0]
 8014350:	4413      	add	r3, r2
 8014352:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8014356:	6803      	ldr	r3, [r0, #0]
 8014358:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801435a:	4798      	blx	r3
 801435c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8014360:	46b9      	mov	r9, r7
 8014362:	d01c      	beq.n	801439e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 8014364:	f010 0f04 	tst.w	r0, #4
 8014368:	d01d      	beq.n	80143a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801436a:	f8d9 0000 	ldr.w	r0, [r9]
 801436e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8014372:	6801      	ldr	r1, [r0, #0]
 8014374:	f8cd b00c 	str.w	fp, [sp, #12]
 8014378:	2700      	movs	r7, #0
 801437a:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801437e:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8014382:	9402      	str	r4, [sp, #8]
 8014384:	b2ad      	uxth	r5, r5
 8014386:	fa1f f488 	uxth.w	r4, r8
 801438a:	9501      	str	r5, [sp, #4]
 801438c:	9400      	str	r4, [sp, #0]
 801438e:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8014390:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8014394:	4631      	mov	r1, r6
 8014396:	47a0      	blx	r4
 8014398:	b00b      	add	sp, #44	; 0x2c
 801439a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801439e:	b914      	cbnz	r4, 80143a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80143a0:	f010 0f01 	tst.w	r0, #1
 80143a4:	e7e0      	b.n	8014368 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 80143a6:	f8d9 0000 	ldr.w	r0, [r9]
 80143aa:	6803      	ldr	r3, [r0, #0]
 80143ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80143ae:	4798      	blx	r3
 80143b0:	4b44      	ldr	r3, [pc, #272]	; (80144c4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 80143b2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 80143b6:	881a      	ldrh	r2, [r3, #0]
 80143b8:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80143bc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80143c0:	fb02 1404 	mla	r4, r2, r4, r1
 80143c4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80143c8:	469a      	mov	sl, r3
 80143ca:	fb05 f502 	mul.w	r5, r5, r2
 80143ce:	ea4f 0748 	mov.w	r7, r8, lsl #1
 80143d2:	d059      	beq.n	8014488 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 80143d4:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 80143d8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80143dc:	fa1f f28b 	uxth.w	r2, fp
 80143e0:	fa1f f989 	uxth.w	r9, r9
 80143e4:	469e      	mov	lr, r3
 80143e6:	42ac      	cmp	r4, r5
 80143e8:	d264      	bcs.n	80144b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80143ea:	eb04 0a07 	add.w	sl, r4, r7
 80143ee:	4554      	cmp	r4, sl
 80143f0:	d23d      	bcs.n	801446e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 80143f2:	8821      	ldrh	r1, [r4, #0]
 80143f4:	f836 3b02 	ldrh.w	r3, [r6], #2
 80143f8:	1208      	asrs	r0, r1, #8
 80143fa:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80143fe:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014402:	fb10 f009 	smulbb	r0, r0, r9
 8014406:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801440a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801440e:	00c9      	lsls	r1, r1, #3
 8014410:	fb0c 0c02 	mla	ip, ip, r2, r0
 8014414:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8014418:	10d8      	asrs	r0, r3, #3
 801441a:	b2c9      	uxtb	r1, r1
 801441c:	00db      	lsls	r3, r3, #3
 801441e:	fa1f fc8c 	uxth.w	ip, ip
 8014422:	fb1b fb09 	smulbb	fp, fp, r9
 8014426:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801442a:	b2db      	uxtb	r3, r3
 801442c:	fb11 f109 	smulbb	r1, r1, r9
 8014430:	fb00 b002 	mla	r0, r0, r2, fp
 8014434:	fb03 1302 	mla	r3, r3, r2, r1
 8014438:	f10c 0b01 	add.w	fp, ip, #1
 801443c:	b29b      	uxth	r3, r3
 801443e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8014442:	b280      	uxth	r0, r0
 8014444:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8014448:	f103 0c01 	add.w	ip, r3, #1
 801444c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8014450:	1c43      	adds	r3, r0, #1
 8014452:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8014456:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801445a:	0940      	lsrs	r0, r0, #5
 801445c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8014460:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8014464:	ea4c 0c00 	orr.w	ip, ip, r0
 8014468:	f824 cb02 	strh.w	ip, [r4], #2
 801446c:	e7bf      	b.n	80143ee <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801446e:	f8be 3000 	ldrh.w	r3, [lr]
 8014472:	eba3 0308 	sub.w	r3, r3, r8
 8014476:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801447a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801447e:	eba3 0308 	sub.w	r3, r3, r8
 8014482:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8014486:	e7ae      	b.n	80143e6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8014488:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801448c:	f8d9 0000 	ldr.w	r0, [r9]
 8014490:	42ac      	cmp	r4, r5
 8014492:	6803      	ldr	r3, [r0, #0]
 8014494:	d20e      	bcs.n	80144b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8014496:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801449a:	4632      	mov	r2, r6
 801449c:	463b      	mov	r3, r7
 801449e:	4621      	mov	r1, r4
 80144a0:	47c0      	blx	r8
 80144a2:	f8ba 3000 	ldrh.w	r3, [sl]
 80144a6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80144aa:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80144ae:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80144b2:	e7eb      	b.n	801448c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80144b4:	4b02      	ldr	r3, [pc, #8]	; (80144c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80144b6:	6818      	ldr	r0, [r3, #0]
 80144b8:	6803      	ldr	r3, [r0, #0]
 80144ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80144bc:	4798      	blx	r3
 80144be:	e76b      	b.n	8014398 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80144c0:	20026f00 	.word	0x20026f00
 80144c4:	20026ef8 	.word	0x20026ef8

080144c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80144c8:	b510      	push	{r4, lr}
 80144ca:	2104      	movs	r1, #4
 80144cc:	4604      	mov	r4, r0
 80144ce:	f009 fa7e 	bl	801d9ce <_ZdlPvj>
 80144d2:	4620      	mov	r0, r4
 80144d4:	bd10      	pop	{r4, pc}

080144d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80144d6:	b510      	push	{r4, lr}
 80144d8:	2104      	movs	r1, #4
 80144da:	4604      	mov	r4, r0
 80144dc:	f009 fa77 	bl	801d9ce <_ZdlPvj>
 80144e0:	4620      	mov	r0, r4
 80144e2:	bd10      	pop	{r4, pc}

080144e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80144e4:	b510      	push	{r4, lr}
 80144e6:	2104      	movs	r1, #4
 80144e8:	4604      	mov	r4, r0
 80144ea:	f009 fa70 	bl	801d9ce <_ZdlPvj>
 80144ee:	4620      	mov	r0, r4
 80144f0:	bd10      	pop	{r4, pc}

080144f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80144f2:	b510      	push	{r4, lr}
 80144f4:	2104      	movs	r1, #4
 80144f6:	4604      	mov	r4, r0
 80144f8:	f009 fa69 	bl	801d9ce <_ZdlPvj>
 80144fc:	4620      	mov	r0, r4
 80144fe:	bd10      	pop	{r4, pc}

08014500 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8014500:	b510      	push	{r4, lr}
 8014502:	2104      	movs	r1, #4
 8014504:	4604      	mov	r4, r0
 8014506:	f009 fa62 	bl	801d9ce <_ZdlPvj>
 801450a:	4620      	mov	r0, r4
 801450c:	bd10      	pop	{r4, pc}

0801450e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801450e:	b510      	push	{r4, lr}
 8014510:	2104      	movs	r1, #4
 8014512:	4604      	mov	r4, r0
 8014514:	f009 fa5b 	bl	801d9ce <_ZdlPvj>
 8014518:	4620      	mov	r0, r4
 801451a:	bd10      	pop	{r4, pc}

0801451c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801451c:	b510      	push	{r4, lr}
 801451e:	2104      	movs	r1, #4
 8014520:	4604      	mov	r4, r0
 8014522:	f009 fa54 	bl	801d9ce <_ZdlPvj>
 8014526:	4620      	mov	r0, r4
 8014528:	bd10      	pop	{r4, pc}

0801452a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801452a:	b510      	push	{r4, lr}
 801452c:	2104      	movs	r1, #4
 801452e:	4604      	mov	r4, r0
 8014530:	f009 fa4d 	bl	801d9ce <_ZdlPvj>
 8014534:	4620      	mov	r0, r4
 8014536:	bd10      	pop	{r4, pc}

08014538 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8014538:	b510      	push	{r4, lr}
 801453a:	2104      	movs	r1, #4
 801453c:	4604      	mov	r4, r0
 801453e:	f009 fa46 	bl	801d9ce <_ZdlPvj>
 8014542:	4620      	mov	r0, r4
 8014544:	bd10      	pop	{r4, pc}

08014546 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8014546:	b510      	push	{r4, lr}
 8014548:	2104      	movs	r1, #4
 801454a:	4604      	mov	r4, r0
 801454c:	f009 fa3f 	bl	801d9ce <_ZdlPvj>
 8014550:	4620      	mov	r0, r4
 8014552:	bd10      	pop	{r4, pc}

08014554 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8014554:	b510      	push	{r4, lr}
 8014556:	2104      	movs	r1, #4
 8014558:	4604      	mov	r4, r0
 801455a:	f009 fa38 	bl	801d9ce <_ZdlPvj>
 801455e:	4620      	mov	r0, r4
 8014560:	bd10      	pop	{r4, pc}

08014562 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8014562:	b510      	push	{r4, lr}
 8014564:	2104      	movs	r1, #4
 8014566:	4604      	mov	r4, r0
 8014568:	f009 fa31 	bl	801d9ce <_ZdlPvj>
 801456c:	4620      	mov	r0, r4
 801456e:	bd10      	pop	{r4, pc}

08014570 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8014570:	b510      	push	{r4, lr}
 8014572:	2104      	movs	r1, #4
 8014574:	4604      	mov	r4, r0
 8014576:	f009 fa2a 	bl	801d9ce <_ZdlPvj>
 801457a:	4620      	mov	r0, r4
 801457c:	bd10      	pop	{r4, pc}

0801457e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801457e:	b510      	push	{r4, lr}
 8014580:	2104      	movs	r1, #4
 8014582:	4604      	mov	r4, r0
 8014584:	f009 fa23 	bl	801d9ce <_ZdlPvj>
 8014588:	4620      	mov	r0, r4
 801458a:	bd10      	pop	{r4, pc}

0801458c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801458c:	b510      	push	{r4, lr}
 801458e:	2104      	movs	r1, #4
 8014590:	4604      	mov	r4, r0
 8014592:	f009 fa1c 	bl	801d9ce <_ZdlPvj>
 8014596:	4620      	mov	r0, r4
 8014598:	bd10      	pop	{r4, pc}

0801459a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801459a:	b510      	push	{r4, lr}
 801459c:	2104      	movs	r1, #4
 801459e:	4604      	mov	r4, r0
 80145a0:	f009 fa15 	bl	801d9ce <_ZdlPvj>
 80145a4:	4620      	mov	r0, r4
 80145a6:	bd10      	pop	{r4, pc}

080145a8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80145a8:	b510      	push	{r4, lr}
 80145aa:	2104      	movs	r1, #4
 80145ac:	4604      	mov	r4, r0
 80145ae:	f009 fa0e 	bl	801d9ce <_ZdlPvj>
 80145b2:	4620      	mov	r0, r4
 80145b4:	bd10      	pop	{r4, pc}

080145b6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80145b6:	b510      	push	{r4, lr}
 80145b8:	2104      	movs	r1, #4
 80145ba:	4604      	mov	r4, r0
 80145bc:	f009 fa07 	bl	801d9ce <_ZdlPvj>
 80145c0:	4620      	mov	r0, r4
 80145c2:	bd10      	pop	{r4, pc}

080145c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80145c4:	b510      	push	{r4, lr}
 80145c6:	2104      	movs	r1, #4
 80145c8:	4604      	mov	r4, r0
 80145ca:	f009 fa00 	bl	801d9ce <_ZdlPvj>
 80145ce:	4620      	mov	r0, r4
 80145d0:	bd10      	pop	{r4, pc}

080145d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 80145d2:	b510      	push	{r4, lr}
 80145d4:	2104      	movs	r1, #4
 80145d6:	4604      	mov	r4, r0
 80145d8:	f009 f9f9 	bl	801d9ce <_ZdlPvj>
 80145dc:	4620      	mov	r0, r4
 80145de:	bd10      	pop	{r4, pc}

080145e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80145e0:	b510      	push	{r4, lr}
 80145e2:	2104      	movs	r1, #4
 80145e4:	4604      	mov	r4, r0
 80145e6:	f009 f9f2 	bl	801d9ce <_ZdlPvj>
 80145ea:	4620      	mov	r0, r4
 80145ec:	bd10      	pop	{r4, pc}

080145ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80145ee:	b510      	push	{r4, lr}
 80145f0:	2104      	movs	r1, #4
 80145f2:	4604      	mov	r4, r0
 80145f4:	f009 f9eb 	bl	801d9ce <_ZdlPvj>
 80145f8:	4620      	mov	r0, r4
 80145fa:	bd10      	pop	{r4, pc}

080145fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80145fc:	b510      	push	{r4, lr}
 80145fe:	2104      	movs	r1, #4
 8014600:	4604      	mov	r4, r0
 8014602:	f009 f9e4 	bl	801d9ce <_ZdlPvj>
 8014606:	4620      	mov	r0, r4
 8014608:	bd10      	pop	{r4, pc}

0801460a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801460a:	b510      	push	{r4, lr}
 801460c:	2104      	movs	r1, #4
 801460e:	4604      	mov	r4, r0
 8014610:	f009 f9dd 	bl	801d9ce <_ZdlPvj>
 8014614:	4620      	mov	r0, r4
 8014616:	bd10      	pop	{r4, pc}

08014618 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8014618:	b510      	push	{r4, lr}
 801461a:	2104      	movs	r1, #4
 801461c:	4604      	mov	r4, r0
 801461e:	f009 f9d6 	bl	801d9ce <_ZdlPvj>
 8014622:	4620      	mov	r0, r4
 8014624:	bd10      	pop	{r4, pc}

08014626 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8014626:	b510      	push	{r4, lr}
 8014628:	2104      	movs	r1, #4
 801462a:	4604      	mov	r4, r0
 801462c:	f009 f9cf 	bl	801d9ce <_ZdlPvj>
 8014630:	4620      	mov	r0, r4
 8014632:	bd10      	pop	{r4, pc}

08014634 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8014634:	b510      	push	{r4, lr}
 8014636:	2104      	movs	r1, #4
 8014638:	4604      	mov	r4, r0
 801463a:	f009 f9c8 	bl	801d9ce <_ZdlPvj>
 801463e:	4620      	mov	r0, r4
 8014640:	bd10      	pop	{r4, pc}

08014642 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8014642:	b510      	push	{r4, lr}
 8014644:	2104      	movs	r1, #4
 8014646:	4604      	mov	r4, r0
 8014648:	f009 f9c1 	bl	801d9ce <_ZdlPvj>
 801464c:	4620      	mov	r0, r4
 801464e:	bd10      	pop	{r4, pc}

08014650 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8014650:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014652:	4606      	mov	r6, r0
 8014654:	b087      	sub	sp, #28
 8014656:	460c      	mov	r4, r1
 8014658:	4617      	mov	r7, r2
 801465a:	461d      	mov	r5, r3
 801465c:	b333      	cbz	r3, 80146ac <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801465e:	4608      	mov	r0, r1
 8014660:	f7f7 fc0d 	bl	800be7e <_ZNK8touchgfx4Rect7isEmptyEv>
 8014664:	bb10      	cbnz	r0, 80146ac <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8014666:	6820      	ldr	r0, [r4, #0]
 8014668:	6861      	ldr	r1, [r4, #4]
 801466a:	4c1c      	ldr	r4, [pc, #112]	; (80146dc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801466c:	ab04      	add	r3, sp, #16
 801466e:	c303      	stmia	r3!, {r0, r1}
 8014670:	a804      	add	r0, sp, #16
 8014672:	f7fa fa2d 	bl	800ead0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014676:	6820      	ldr	r0, [r4, #0]
 8014678:	6803      	ldr	r3, [r0, #0]
 801467a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801467c:	4798      	blx	r3
 801467e:	2dff      	cmp	r5, #255	; 0xff
 8014680:	d016      	beq.n	80146b0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8014682:	f010 0f08 	tst.w	r0, #8
 8014686:	6820      	ldr	r0, [r4, #0]
 8014688:	d015      	beq.n	80146b6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801468a:	2400      	movs	r4, #0
 801468c:	6801      	ldr	r1, [r0, #0]
 801468e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8014692:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8014696:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801469a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801469e:	9401      	str	r4, [sp, #4]
 80146a0:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80146a4:	9400      	str	r4, [sp, #0]
 80146a6:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 80146a8:	4639      	mov	r1, r7
 80146aa:	47a0      	blx	r4
 80146ac:	b007      	add	sp, #28
 80146ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80146b0:	f010 0f02 	tst.w	r0, #2
 80146b4:	e7e7      	b.n	8014686 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80146b6:	6803      	ldr	r3, [r0, #0]
 80146b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80146ba:	4798      	blx	r3
 80146bc:	4b08      	ldr	r3, [pc, #32]	; (80146e0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80146be:	881a      	ldrh	r2, [r3, #0]
 80146c0:	6833      	ldr	r3, [r6, #0]
 80146c2:	e9cd 7500 	strd	r7, r5, [sp]
 80146c6:	4601      	mov	r1, r0
 80146c8:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80146ca:	4630      	mov	r0, r6
 80146cc:	ab04      	add	r3, sp, #16
 80146ce:	47a8      	blx	r5
 80146d0:	6820      	ldr	r0, [r4, #0]
 80146d2:	6803      	ldr	r3, [r0, #0]
 80146d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80146d6:	4798      	blx	r3
 80146d8:	e7e8      	b.n	80146ac <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80146da:	bf00      	nop
 80146dc:	20026f00 	.word	0x20026f00
 80146e0:	20026ef8 	.word	0x20026ef8

080146e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 80146e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80146e8:	4690      	mov	r8, r2
 80146ea:	4a8d      	ldr	r2, [pc, #564]	; (8014920 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>)
 80146ec:	6812      	ldr	r2, [r2, #0]
 80146ee:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 80146f2:	b091      	sub	sp, #68	; 0x44
 80146f4:	2a02      	cmp	r2, #2
 80146f6:	4606      	mov	r6, r0
 80146f8:	460d      	mov	r5, r1
 80146fa:	461c      	mov	r4, r3
 80146fc:	f9bd b06c 	ldrsh.w	fp, [sp, #108]	; 0x6c
 8014700:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8014704:	d106      	bne.n	8014714 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x30>
 8014706:	4b87      	ldr	r3, [pc, #540]	; (8014924 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x240>)
 8014708:	4a87      	ldr	r2, [pc, #540]	; (8014928 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x244>)
 801470a:	f240 316b 	movw	r1, #875	; 0x36b
 801470e:	4887      	ldr	r0, [pc, #540]	; (801492c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x248>)
 8014710:	f009 f98c 	bl	801da2c <__assert_func>
 8014714:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8014716:	b923      	cbnz	r3, 8014722 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3e>
 8014718:	4b85      	ldr	r3, [pc, #532]	; (8014930 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x24c>)
 801471a:	4a83      	ldr	r2, [pc, #524]	; (8014928 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x244>)
 801471c:	f44f 715b 	mov.w	r1, #876	; 0x36c
 8014720:	e7f5      	b.n	801470e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x2a>
 8014722:	f9b4 1000 	ldrsh.w	r1, [r4]
 8014726:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801472a:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 801472e:	f10d 0928 	add.w	r9, sp, #40	; 0x28
 8014732:	4621      	mov	r1, r4
 8014734:	4648      	mov	r0, r9
 8014736:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801473a:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 801473e:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 8014742:	f7f7 fb59 	bl	800bdf8 <_ZN8touchgfx4RectaNERKS0_>
 8014746:	4641      	mov	r1, r8
 8014748:	4648      	mov	r0, r9
 801474a:	f7f7 fb55 	bl	800bdf8 <_ZN8touchgfx4RectaNERKS0_>
 801474e:	4a79      	ldr	r2, [pc, #484]	; (8014934 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x250>)
 8014750:	f8b2 c000 	ldrh.w	ip, [r2]
 8014754:	4a78      	ldr	r2, [pc, #480]	; (8014938 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x254>)
 8014756:	8810      	ldrh	r0, [r2, #0]
 8014758:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801475c:	2a00      	cmp	r2, #0
 801475e:	fa0f f18c 	sxth.w	r1, ip
 8014762:	fa0f fe80 	sxth.w	lr, r0
 8014766:	da07      	bge.n	8014778 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x94>
 8014768:	f8bd 802c 	ldrh.w	r8, [sp, #44]	; 0x2c
 801476c:	4442      	add	r2, r8
 801476e:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8014772:	2200      	movs	r2, #0
 8014774:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8014778:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801477c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8014780:	1a89      	subs	r1, r1, r2
 8014782:	4588      	cmp	r8, r1
 8014784:	bfc4      	itt	gt
 8014786:	ebac 0102 	subgt.w	r1, ip, r2
 801478a:	f8ad 102c 	strhgt.w	r1, [sp, #44]	; 0x2c
 801478e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8014792:	2900      	cmp	r1, #0
 8014794:	da07      	bge.n	80147a6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xc2>
 8014796:	f8bd 802e 	ldrh.w	r8, [sp, #46]	; 0x2e
 801479a:	4441      	add	r1, r8
 801479c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80147a0:	2100      	movs	r1, #0
 80147a2:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 80147a6:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 80147aa:	f9bd 102e 	ldrsh.w	r1, [sp, #46]	; 0x2e
 80147ae:	ebae 0e0a 	sub.w	lr, lr, sl
 80147b2:	4571      	cmp	r1, lr
 80147b4:	bfc4      	itt	gt
 80147b6:	eba0 010a 	subgt.w	r1, r0, sl
 80147ba:	f8ad 102e 	strhgt.w	r1, [sp, #46]	; 0x2e
 80147be:	495f      	ldr	r1, [pc, #380]	; (801493c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x258>)
 80147c0:	7809      	ldrb	r1, [r1, #0]
 80147c2:	b9a9      	cbnz	r1, 80147f0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x10c>
 80147c4:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 80147c8:	45e0      	cmp	r8, ip
 80147ca:	bf14      	ite	ne
 80147cc:	2300      	movne	r3, #0
 80147ce:	2301      	moveq	r3, #1
 80147d0:	4648      	mov	r0, r9
 80147d2:	9202      	str	r2, [sp, #8]
 80147d4:	9305      	str	r3, [sp, #20]
 80147d6:	f7f7 fb52 	bl	800be7e <_ZNK8touchgfx4Rect7isEmptyEv>
 80147da:	9a02      	ldr	r2, [sp, #8]
 80147dc:	b160      	cbz	r0, 80147f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x114>
 80147de:	2300      	movs	r3, #0
 80147e0:	8033      	strh	r3, [r6, #0]
 80147e2:	8073      	strh	r3, [r6, #2]
 80147e4:	80b3      	strh	r3, [r6, #4]
 80147e6:	4630      	mov	r0, r6
 80147e8:	80f3      	strh	r3, [r6, #6]
 80147ea:	b011      	add	sp, #68	; 0x44
 80147ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80147f0:	f9bd 802e 	ldrsh.w	r8, [sp, #46]	; 0x2e
 80147f4:	4580      	cmp	r8, r0
 80147f6:	e7e8      	b.n	80147ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe6>
 80147f8:	8821      	ldrh	r1, [r4, #0]
 80147fa:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80147fe:	9304      	str	r3, [sp, #16]
 8014800:	1a52      	subs	r2, r2, r1
 8014802:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8014806:	9306      	str	r3, [sp, #24]
 8014808:	b213      	sxth	r3, r2
 801480a:	9302      	str	r3, [sp, #8]
 801480c:	8863      	ldrh	r3, [r4, #2]
 801480e:	900e      	str	r0, [sp, #56]	; 0x38
 8014810:	ebaa 0a03 	sub.w	sl, sl, r3
 8014814:	fa0f f38a 	sxth.w	r3, sl
 8014818:	9303      	str	r3, [sp, #12]
 801481a:	9b02      	ldr	r3, [sp, #8]
 801481c:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8014820:	9b03      	ldr	r3, [sp, #12]
 8014822:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014826:	9b04      	ldr	r3, [sp, #16]
 8014828:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801482c:	a90e      	add	r1, sp, #56	; 0x38
 801482e:	9b06      	ldr	r3, [sp, #24]
 8014830:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014834:	a80c      	add	r0, sp, #48	; 0x30
 8014836:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801483a:	f8ad b03c 	strh.w	fp, [sp, #60]	; 0x3c
 801483e:	f7fa f96f 	bl	800eb20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014842:	4648      	mov	r0, r9
 8014844:	f7fa f944 	bl	800ead0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014848:	a80e      	add	r0, sp, #56	; 0x38
 801484a:	f7fa f941 	bl	800ead0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801484e:	4b3c      	ldr	r3, [pc, #240]	; (8014940 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x25c>)
 8014850:	f9bd 703c 	ldrsh.w	r7, [sp, #60]	; 0x3c
 8014854:	881b      	ldrh	r3, [r3, #0]
 8014856:	9307      	str	r3, [sp, #28]
 8014858:	682b      	ldr	r3, [r5, #0]
 801485a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8014920 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>
 801485e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014860:	4628      	mov	r0, r5
 8014862:	4798      	blx	r3
 8014864:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8014868:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801486c:	4682      	mov	sl, r0
 801486e:	fb17 2303 	smlabb	r3, r7, r3, r2
 8014872:	f8d8 0000 	ldr.w	r0, [r8]
 8014876:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8014878:	eb02 0443 	add.w	r4, r2, r3, lsl #1
 801487c:	6803      	ldr	r3, [r0, #0]
 801487e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014880:	4798      	blx	r3
 8014882:	9009      	str	r0, [sp, #36]	; 0x24
 8014884:	f8d8 0000 	ldr.w	r0, [r8]
 8014888:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801488c:	6802      	ldr	r2, [r0, #0]
 801488e:	9308      	str	r3, [sp, #32]
 8014890:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8014892:	f9bd 502a 	ldrsh.w	r5, [sp, #42]	; 0x2a
 8014896:	4790      	blx	r2
 8014898:	f010 0f01 	tst.w	r0, #1
 801489c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801489e:	d011      	beq.n	80148c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e0>
 80148a0:	f8d8 0000 	ldr.w	r0, [r8]
 80148a4:	6803      	ldr	r3, [r0, #0]
 80148a6:	f8cd b000 	str.w	fp, [sp]
 80148aa:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 80148ac:	e899 0006 	ldmia.w	r9, {r1, r2}
 80148b0:	4623      	mov	r3, r4
 80148b2:	47a8      	blx	r5
 80148b4:	9b02      	ldr	r3, [sp, #8]
 80148b6:	8033      	strh	r3, [r6, #0]
 80148b8:	9b03      	ldr	r3, [sp, #12]
 80148ba:	8073      	strh	r3, [r6, #2]
 80148bc:	9b04      	ldr	r3, [sp, #16]
 80148be:	80b3      	strh	r3, [r6, #4]
 80148c0:	9b06      	ldr	r3, [sp, #24]
 80148c2:	e790      	b.n	80147e6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x102>
 80148c4:	9a08      	ldr	r2, [sp, #32]
 80148c6:	fb0a f505 	mul.w	r5, sl, r5
 80148ca:	eb05 0542 	add.w	r5, r5, r2, lsl #1
 80148ce:	9a05      	ldr	r2, [sp, #20]
 80148d0:	441d      	add	r5, r3
 80148d2:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 80148d6:	b162      	cbz	r2, 80148f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x20e>
 80148d8:	9a07      	ldr	r2, [sp, #28]
 80148da:	4297      	cmp	r7, r2
 80148dc:	d109      	bne.n	80148f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x20e>
 80148de:	f8d8 0000 	ldr.w	r0, [r8]
 80148e2:	6802      	ldr	r2, [r0, #0]
 80148e4:	fb03 f30a 	mul.w	r3, r3, sl
 80148e8:	6b57      	ldr	r7, [r2, #52]	; 0x34
 80148ea:	4621      	mov	r1, r4
 80148ec:	462a      	mov	r2, r5
 80148ee:	47b8      	blx	r7
 80148f0:	e7e0      	b.n	80148b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d0>
 80148f2:	437b      	muls	r3, r7
 80148f4:	f8df b028 	ldr.w	fp, [pc, #40]	; 8014920 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>
 80148f8:	eb04 0843 	add.w	r8, r4, r3, lsl #1
 80148fc:	007f      	lsls	r7, r7, #1
 80148fe:	4544      	cmp	r4, r8
 8014900:	d2d8      	bcs.n	80148b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d0>
 8014902:	f8db 0000 	ldr.w	r0, [fp]
 8014906:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801490a:	6802      	ldr	r2, [r0, #0]
 801490c:	4621      	mov	r1, r4
 801490e:	f8d2 9034 	ldr.w	r9, [r2, #52]	; 0x34
 8014912:	005b      	lsls	r3, r3, #1
 8014914:	462a      	mov	r2, r5
 8014916:	47c8      	blx	r9
 8014918:	4455      	add	r5, sl
 801491a:	443c      	add	r4, r7
 801491c:	e7ef      	b.n	80148fe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21a>
 801491e:	bf00      	nop
 8014920:	20026f00 	.word	0x20026f00
 8014924:	08021a59 	.word	0x08021a59
 8014928:	080222c4 	.word	0x080222c4
 801492c:	08021b0b 	.word	0x08021b0b
 8014930:	08021a0b 	.word	0x08021a0b
 8014934:	20026ef2 	.word	0x20026ef2
 8014938:	20026ef4 	.word	0x20026ef4
 801493c:	20026ef6 	.word	0x20026ef6
 8014940:	20026ef8 	.word	0x20026ef8

08014944 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8014944:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014948:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801494c:	9e08      	ldr	r6, [sp, #32]
 801494e:	4688      	mov	r8, r1
 8014950:	4614      	mov	r4, r2
 8014952:	461d      	mov	r5, r3
 8014954:	2f00      	cmp	r7, #0
 8014956:	f000 80b3 	beq.w	8014ac0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801495a:	4618      	mov	r0, r3
 801495c:	f7f7 fa8f 	bl	800be7e <_ZNK8touchgfx4Rect7isEmptyEv>
 8014960:	2800      	cmp	r0, #0
 8014962:	f040 80ad 	bne.w	8014ac0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8014966:	f9b5 1000 	ldrsh.w	r1, [r5]
 801496a:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801496e:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8014972:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8014976:	fb04 1303 	mla	r3, r4, r3, r1
 801497a:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801497e:	4365      	muls	r5, r4
 8014980:	2fff      	cmp	r7, #255	; 0xff
 8014982:	eba4 0200 	sub.w	r2, r4, r0
 8014986:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801498a:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801498e:	d04b      	beq.n	8014a28 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 8014990:	b2bc      	uxth	r4, r7
 8014992:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8014996:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801499a:	fa5f f788 	uxtb.w	r7, r8
 801499e:	b2f3      	uxtb	r3, r6
 80149a0:	0040      	lsls	r0, r0, #1
 80149a2:	fb0e fe04 	mul.w	lr, lr, r4
 80149a6:	4367      	muls	r7, r4
 80149a8:	4363      	muls	r3, r4
 80149aa:	ea4f 0842 	mov.w	r8, r2, lsl #1
 80149ae:	fa1f fc8c 	uxth.w	ip, ip
 80149b2:	42a9      	cmp	r1, r5
 80149b4:	f080 8084 	bcs.w	8014ac0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 80149b8:	eb01 0900 	add.w	r9, r1, r0
 80149bc:	4549      	cmp	r1, r9
 80149be:	d231      	bcs.n	8014a24 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 80149c0:	880a      	ldrh	r2, [r1, #0]
 80149c2:	1214      	asrs	r4, r2, #8
 80149c4:	10d6      	asrs	r6, r2, #3
 80149c6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80149ca:	00d2      	lsls	r2, r2, #3
 80149cc:	b2d2      	uxtb	r2, r2
 80149ce:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80149d2:	fb14 f40c 	smulbb	r4, r4, ip
 80149d6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80149da:	4474      	add	r4, lr
 80149dc:	fb12 f20c 	smulbb	r2, r2, ip
 80149e0:	b2a4      	uxth	r4, r4
 80149e2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80149e6:	441a      	add	r2, r3
 80149e8:	b292      	uxth	r2, r2
 80149ea:	f104 0a01 	add.w	sl, r4, #1
 80149ee:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80149f2:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80149f6:	fb16 f60c 	smulbb	r6, r6, ip
 80149fa:	f102 0a01 	add.w	sl, r2, #1
 80149fe:	443e      	add	r6, r7
 8014a00:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8014a04:	b2b6      	uxth	r6, r6
 8014a06:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8014a0a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014a0e:	4322      	orrs	r2, r4
 8014a10:	1c74      	adds	r4, r6, #1
 8014a12:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8014a16:	0976      	lsrs	r6, r6, #5
 8014a18:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014a1c:	4332      	orrs	r2, r6
 8014a1e:	f821 2b02 	strh.w	r2, [r1], #2
 8014a22:	e7cb      	b.n	80149bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 8014a24:	4441      	add	r1, r8
 8014a26:	e7c4      	b.n	80149b2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8014a28:	4f26      	ldr	r7, [pc, #152]	; (8014ac4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x180>)
 8014a2a:	0973      	lsrs	r3, r6, #5
 8014a2c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014a30:	ea08 0707 	and.w	r7, r8, r7
 8014a34:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8014a38:	433b      	orrs	r3, r7
 8014a3a:	4333      	orrs	r3, r6
 8014a3c:	07e6      	lsls	r6, r4, #31
 8014a3e:	b29b      	uxth	r3, r3
 8014a40:	d50b      	bpl.n	8014a5a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x116>
 8014a42:	0040      	lsls	r0, r0, #1
 8014a44:	0052      	lsls	r2, r2, #1
 8014a46:	42a9      	cmp	r1, r5
 8014a48:	d23a      	bcs.n	8014ac0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8014a4a:	180c      	adds	r4, r1, r0
 8014a4c:	42a1      	cmp	r1, r4
 8014a4e:	d202      	bcs.n	8014a56 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x112>
 8014a50:	f821 3b02 	strh.w	r3, [r1], #2
 8014a54:	e7fa      	b.n	8014a4c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x108>
 8014a56:	4411      	add	r1, r2
 8014a58:	e7f5      	b.n	8014a46 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x102>
 8014a5a:	078f      	lsls	r7, r1, #30
 8014a5c:	d008      	beq.n	8014a70 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>
 8014a5e:	0066      	lsls	r6, r4, #1
 8014a60:	460a      	mov	r2, r1
 8014a62:	42aa      	cmp	r2, r5
 8014a64:	d202      	bcs.n	8014a6c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>
 8014a66:	8013      	strh	r3, [r2, #0]
 8014a68:	4432      	add	r2, r6
 8014a6a:	e7fa      	b.n	8014a62 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11e>
 8014a6c:	3102      	adds	r1, #2
 8014a6e:	3801      	subs	r0, #1
 8014a70:	07c6      	lsls	r6, r0, #31
 8014a72:	d50b      	bpl.n	8014a8c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 8014a74:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8014a78:	3a01      	subs	r2, #1
 8014a7a:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8014a7e:	0066      	lsls	r6, r4, #1
 8014a80:	42aa      	cmp	r2, r5
 8014a82:	d202      	bcs.n	8014a8a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8014a84:	8013      	strh	r3, [r2, #0]
 8014a86:	4432      	add	r2, r6
 8014a88:	e7fa      	b.n	8014a80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13c>
 8014a8a:	3801      	subs	r0, #1
 8014a8c:	b1c0      	cbz	r0, 8014ac0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8014a8e:	1040      	asrs	r0, r0, #1
 8014a90:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8014a94:	0080      	lsls	r0, r0, #2
 8014a96:	0064      	lsls	r4, r4, #1
 8014a98:	42a9      	cmp	r1, r5
 8014a9a:	d211      	bcs.n	8014ac0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8014a9c:	078a      	lsls	r2, r1, #30
 8014a9e:	d006      	beq.n	8014aae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16a>
 8014aa0:	4b09      	ldr	r3, [pc, #36]	; (8014ac8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>)
 8014aa2:	4a0a      	ldr	r2, [pc, #40]	; (8014acc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x188>)
 8014aa4:	480a      	ldr	r0, [pc, #40]	; (8014ad0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>)
 8014aa6:	f240 4137 	movw	r1, #1079	; 0x437
 8014aaa:	f008 ffbf 	bl	801da2c <__assert_func>
 8014aae:	180e      	adds	r6, r1, r0
 8014ab0:	460a      	mov	r2, r1
 8014ab2:	42b2      	cmp	r2, r6
 8014ab4:	d202      	bcs.n	8014abc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x178>
 8014ab6:	f842 3b04 	str.w	r3, [r2], #4
 8014aba:	e7fa      	b.n	8014ab2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16e>
 8014abc:	4421      	add	r1, r4
 8014abe:	e7eb      	b.n	8014a98 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x154>
 8014ac0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014ac4:	00fff800 	.word	0x00fff800
 8014ac8:	080218bc 	.word	0x080218bc
 8014acc:	08021f10 	.word	0x08021f10
 8014ad0:	08021b0b 	.word	0x08021b0b

08014ad4 <_ZN8touchgfx8LCD16bppC1Ev>:
 8014ad4:	2200      	movs	r2, #0
 8014ad6:	4910      	ldr	r1, [pc, #64]	; (8014b18 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8014ad8:	6042      	str	r2, [r0, #4]
 8014ada:	6001      	str	r1, [r0, #0]
 8014adc:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8014ae0:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8014ae4:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8014ae8:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8014aec:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8014af0:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8014af4:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8014af8:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8014afc:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8014b00:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8014b04:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8014b08:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8014b0c:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8014b10:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8014b14:	4770      	bx	lr
 8014b16:	bf00      	nop
 8014b18:	08021ec0 	.word	0x08021ec0

08014b1c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8014b1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b20:	460d      	mov	r5, r1
 8014b22:	b08d      	sub	sp, #52	; 0x34
 8014b24:	4604      	mov	r4, r0
 8014b26:	6808      	ldr	r0, [r1, #0]
 8014b28:	6849      	ldr	r1, [r1, #4]
 8014b2a:	4699      	mov	r9, r3
 8014b2c:	ab08      	add	r3, sp, #32
 8014b2e:	c303      	stmia	r3!, {r0, r1}
 8014b30:	6810      	ldr	r0, [r2, #0]
 8014b32:	6851      	ldr	r1, [r2, #4]
 8014b34:	ab0a      	add	r3, sp, #40	; 0x28
 8014b36:	c303      	stmia	r3!, {r0, r1}
 8014b38:	a808      	add	r0, sp, #32
 8014b3a:	f7f9 ffc9 	bl	800ead0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014b3e:	4629      	mov	r1, r5
 8014b40:	a80a      	add	r0, sp, #40	; 0x28
 8014b42:	f7f9 ffed 	bl	800eb20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014b46:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8014b4a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8014b4e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8014b52:	4d63      	ldr	r5, [pc, #396]	; (8014ce0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8014b54:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8014b58:	6828      	ldr	r0, [r5, #0]
 8014b5a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8014b5e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014b62:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8014b66:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8014b6a:	440a      	add	r2, r1
 8014b6c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8014b70:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8014b74:	4413      	add	r3, r2
 8014b76:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8014b7a:	6803      	ldr	r3, [r0, #0]
 8014b7c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014b7e:	4798      	blx	r3
 8014b80:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8014b84:	d119      	bne.n	8014bba <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8014b86:	f010 0f20 	tst.w	r0, #32
 8014b8a:	6828      	ldr	r0, [r5, #0]
 8014b8c:	d018      	beq.n	8014bc0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8014b8e:	2500      	movs	r5, #0
 8014b90:	6801      	ldr	r1, [r0, #0]
 8014b92:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8014b96:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8014b9a:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8014b9e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8014ba2:	9502      	str	r5, [sp, #8]
 8014ba4:	b2b6      	uxth	r6, r6
 8014ba6:	fa1f f588 	uxth.w	r5, r8
 8014baa:	9601      	str	r6, [sp, #4]
 8014bac:	9500      	str	r5, [sp, #0]
 8014bae:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8014bb0:	4621      	mov	r1, r4
 8014bb2:	47a8      	blx	r5
 8014bb4:	b00d      	add	sp, #52	; 0x34
 8014bb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014bba:	f010 0f40 	tst.w	r0, #64	; 0x40
 8014bbe:	e7e4      	b.n	8014b8a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8014bc0:	6803      	ldr	r3, [r0, #0]
 8014bc2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014bc4:	4798      	blx	r3
 8014bc6:	4947      	ldr	r1, [pc, #284]	; (8014ce4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8014bc8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8014bcc:	880b      	ldrh	r3, [r1, #0]
 8014bce:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8014bd2:	fb03 5202 	mla	r2, r3, r2, r5
 8014bd6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014bda:	4373      	muls	r3, r6
 8014bdc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8014be0:	9307      	str	r3, [sp, #28]
 8014be2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8014be6:	9306      	str	r3, [sp, #24]
 8014be8:	468a      	mov	sl, r1
 8014bea:	9b07      	ldr	r3, [sp, #28]
 8014bec:	4298      	cmp	r0, r3
 8014bee:	d270      	bcs.n	8014cd2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8014bf0:	9b06      	ldr	r3, [sp, #24]
 8014bf2:	4621      	mov	r1, r4
 8014bf4:	eb00 0b03 	add.w	fp, r0, r3
 8014bf8:	4558      	cmp	r0, fp
 8014bfa:	d25d      	bcs.n	8014cb8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8014bfc:	f851 4b04 	ldr.w	r4, [r1], #4
 8014c00:	0e23      	lsrs	r3, r4, #24
 8014c02:	d014      	beq.n	8014c2e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8014c04:	2bff      	cmp	r3, #255	; 0xff
 8014c06:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8014c0a:	d112      	bne.n	8014c32 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8014c0c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8014c10:	d10f      	bne.n	8014c32 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8014c12:	0963      	lsrs	r3, r4, #5
 8014c14:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8014c18:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014c1c:	f02c 0c07 	bic.w	ip, ip, #7
 8014c20:	ea43 0c0c 	orr.w	ip, r3, ip
 8014c24:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8014c28:	ea4c 0404 	orr.w	r4, ip, r4
 8014c2c:	8004      	strh	r4, [r0, #0]
 8014c2e:	3002      	adds	r0, #2
 8014c30:	e7e2      	b.n	8014bf8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8014c32:	fb09 f303 	mul.w	r3, r9, r3
 8014c36:	8807      	ldrh	r7, [r0, #0]
 8014c38:	1c5a      	adds	r2, r3, #1
 8014c3a:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8014c3e:	1212      	asrs	r2, r2, #8
 8014c40:	123e      	asrs	r6, r7, #8
 8014c42:	b293      	uxth	r3, r2
 8014c44:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8014c48:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014c4c:	43d2      	mvns	r2, r2
 8014c4e:	b2d2      	uxtb	r2, r2
 8014c50:	10fd      	asrs	r5, r7, #3
 8014c52:	fb1e fe03 	smulbb	lr, lr, r3
 8014c56:	00ff      	lsls	r7, r7, #3
 8014c58:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8014c5c:	fb06 e602 	mla	r6, r6, r2, lr
 8014c60:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8014c64:	b2ff      	uxtb	r7, r7
 8014c66:	fa5f fc8c 	uxtb.w	ip, ip
 8014c6a:	b2e4      	uxtb	r4, r4
 8014c6c:	b2b6      	uxth	r6, r6
 8014c6e:	fb1c fc03 	smulbb	ip, ip, r3
 8014c72:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8014c76:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8014c7a:	fb14 f403 	smulbb	r4, r4, r3
 8014c7e:	fb05 c502 	mla	r5, r5, r2, ip
 8014c82:	f106 0e01 	add.w	lr, r6, #1
 8014c86:	fb07 4702 	mla	r7, r7, r2, r4
 8014c8a:	b2ad      	uxth	r5, r5
 8014c8c:	b2bf      	uxth	r7, r7
 8014c8e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8014c92:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8014c96:	f105 0c01 	add.w	ip, r5, #1
 8014c9a:	1c7e      	adds	r6, r7, #1
 8014c9c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8014ca0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8014ca4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014ca8:	096d      	lsrs	r5, r5, #5
 8014caa:	ea46 060e 	orr.w	r6, r6, lr
 8014cae:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8014cb2:	432e      	orrs	r6, r5
 8014cb4:	8006      	strh	r6, [r0, #0]
 8014cb6:	e7ba      	b.n	8014c2e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8014cb8:	f8ba 3000 	ldrh.w	r3, [sl]
 8014cbc:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8014cc0:	eba3 0308 	sub.w	r3, r3, r8
 8014cc4:	eba4 0408 	sub.w	r4, r4, r8
 8014cc8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014ccc:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8014cd0:	e78b      	b.n	8014bea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8014cd2:	4b03      	ldr	r3, [pc, #12]	; (8014ce0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8014cd4:	6818      	ldr	r0, [r3, #0]
 8014cd6:	6803      	ldr	r3, [r0, #0]
 8014cd8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014cda:	4798      	blx	r3
 8014cdc:	e76a      	b.n	8014bb4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8014cde:	bf00      	nop
 8014ce0:	20026f00 	.word	0x20026f00
 8014ce4:	20026ef8 	.word	0x20026ef8

08014ce8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8014ce8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014cec:	460c      	mov	r4, r1
 8014cee:	b085      	sub	sp, #20
 8014cf0:	6810      	ldr	r0, [r2, #0]
 8014cf2:	6851      	ldr	r1, [r2, #4]
 8014cf4:	466d      	mov	r5, sp
 8014cf6:	c503      	stmia	r5!, {r0, r1}
 8014cf8:	6818      	ldr	r0, [r3, #0]
 8014cfa:	6859      	ldr	r1, [r3, #4]
 8014cfc:	4616      	mov	r6, r2
 8014cfe:	c503      	stmia	r5!, {r0, r1}
 8014d00:	4668      	mov	r0, sp
 8014d02:	f7f9 fee5 	bl	800ead0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014d06:	4631      	mov	r1, r6
 8014d08:	a802      	add	r0, sp, #8
 8014d0a:	f7f9 ff09 	bl	800eb20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014d0e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8014d12:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8014d16:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8014d1a:	4d28      	ldr	r5, [pc, #160]	; (8014dbc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8014d1c:	4e28      	ldr	r6, [pc, #160]	; (8014dc0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8014d1e:	6828      	ldr	r0, [r5, #0]
 8014d20:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8014d24:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8014d28:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014d2c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8014d30:	f8bd 1000 	ldrh.w	r1, [sp]
 8014d34:	440a      	add	r2, r1
 8014d36:	f8ad 2008 	strh.w	r2, [sp, #8]
 8014d3a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8014d3e:	4413      	add	r3, r2
 8014d40:	f8ad 300a 	strh.w	r3, [sp, #10]
 8014d44:	6803      	ldr	r3, [r0, #0]
 8014d46:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014d48:	4798      	blx	r3
 8014d4a:	8833      	ldrh	r3, [r6, #0]
 8014d4c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8014d50:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8014d54:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8014dc4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8014d58:	fb03 1202 	mla	r2, r3, r2, r1
 8014d5c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014d60:	fb08 f303 	mul.w	r3, r8, r3
 8014d64:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8014d68:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8014d6c:	4298      	cmp	r0, r3
 8014d6e:	d21d      	bcs.n	8014dac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8014d70:	eb00 080c 	add.w	r8, r0, ip
 8014d74:	4540      	cmp	r0, r8
 8014d76:	d20f      	bcs.n	8014d98 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8014d78:	f854 1b04 	ldr.w	r1, [r4], #4
 8014d7c:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8014d80:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8014d84:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014d88:	ea42 0209 	orr.w	r2, r2, r9
 8014d8c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8014d90:	430a      	orrs	r2, r1
 8014d92:	f820 2b02 	strh.w	r2, [r0], #2
 8014d96:	e7ed      	b.n	8014d74 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8014d98:	8832      	ldrh	r2, [r6, #0]
 8014d9a:	1bd2      	subs	r2, r2, r7
 8014d9c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014da0:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8014da4:	1bd2      	subs	r2, r2, r7
 8014da6:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8014daa:	e7df      	b.n	8014d6c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8014dac:	6828      	ldr	r0, [r5, #0]
 8014dae:	6803      	ldr	r3, [r0, #0]
 8014db0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014db2:	4798      	blx	r3
 8014db4:	b005      	add	sp, #20
 8014db6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014dba:	bf00      	nop
 8014dbc:	20026f00 	.word	0x20026f00
 8014dc0:	20026ef8 	.word	0x20026ef8
 8014dc4:	fffff800 	.word	0xfffff800

08014dc8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8014dc8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014dcc:	460e      	mov	r6, r1
 8014dce:	b08e      	sub	sp, #56	; 0x38
 8014dd0:	4604      	mov	r4, r0
 8014dd2:	6808      	ldr	r0, [r1, #0]
 8014dd4:	6849      	ldr	r1, [r1, #4]
 8014dd6:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8014fb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8014dda:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8014fb4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8014dde:	461d      	mov	r5, r3
 8014de0:	ab0a      	add	r3, sp, #40	; 0x28
 8014de2:	c303      	stmia	r3!, {r0, r1}
 8014de4:	6810      	ldr	r0, [r2, #0]
 8014de6:	6851      	ldr	r1, [r2, #4]
 8014de8:	ab0c      	add	r3, sp, #48	; 0x30
 8014dea:	c303      	stmia	r3!, {r0, r1}
 8014dec:	a80a      	add	r0, sp, #40	; 0x28
 8014dee:	f7f9 fe6f 	bl	800ead0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014df2:	4631      	mov	r1, r6
 8014df4:	a80c      	add	r0, sp, #48	; 0x30
 8014df6:	f7f9 fe93 	bl	800eb20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014dfa:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8014dfe:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014e02:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8014e06:	f8d8 0000 	ldr.w	r0, [r8]
 8014e0a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8014e0e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8014e12:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014e16:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8014e1a:	440c      	add	r4, r1
 8014e1c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8014e20:	440a      	add	r2, r1
 8014e22:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8014e26:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8014e2a:	4413      	add	r3, r2
 8014e2c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014e30:	6803      	ldr	r3, [r0, #0]
 8014e32:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014e34:	4798      	blx	r3
 8014e36:	2dff      	cmp	r5, #255	; 0xff
 8014e38:	d124      	bne.n	8014e84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8014e3a:	f010 0f01 	tst.w	r0, #1
 8014e3e:	f8d8 0000 	ldr.w	r0, [r8]
 8014e42:	d022      	beq.n	8014e8a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8014e44:	2100      	movs	r1, #0
 8014e46:	f8d0 c000 	ldr.w	ip, [r0]
 8014e4a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014e4e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8014e52:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8014e56:	f04f 0e01 	mov.w	lr, #1
 8014e5a:	f8cd e018 	str.w	lr, [sp, #24]
 8014e5e:	f8b9 e000 	ldrh.w	lr, [r9]
 8014e62:	9503      	str	r5, [sp, #12]
 8014e64:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8014e68:	b2b6      	uxth	r6, r6
 8014e6a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8014e6e:	9102      	str	r1, [sp, #8]
 8014e70:	b2bf      	uxth	r7, r7
 8014e72:	9601      	str	r6, [sp, #4]
 8014e74:	9700      	str	r7, [sp, #0]
 8014e76:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8014e7a:	4621      	mov	r1, r4
 8014e7c:	47a8      	blx	r5
 8014e7e:	b00e      	add	sp, #56	; 0x38
 8014e80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014e84:	f010 0f04 	tst.w	r0, #4
 8014e88:	e7d9      	b.n	8014e3e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8014e8a:	6803      	ldr	r3, [r0, #0]
 8014e8c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014e8e:	4798      	blx	r3
 8014e90:	f8b9 3000 	ldrh.w	r3, [r9]
 8014e94:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8014e98:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8014e9c:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8014ea0:	fb03 1202 	mla	r2, r3, r2, r1
 8014ea4:	ebac 0c07 	sub.w	ip, ip, r7
 8014ea8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014eac:	435e      	muls	r6, r3
 8014eae:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8014eb2:	2dff      	cmp	r5, #255	; 0xff
 8014eb4:	eba3 0707 	sub.w	r7, r3, r7
 8014eb8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8014ebc:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8014ec0:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8014ec4:	d049      	beq.n	8014f5a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8014ec6:	43eb      	mvns	r3, r5
 8014ec8:	fa1f f985 	uxth.w	r9, r5
 8014ecc:	b2db      	uxtb	r3, r3
 8014ece:	42b0      	cmp	r0, r6
 8014ed0:	d266      	bcs.n	8014fa0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8014ed2:	eb00 0a0e 	add.w	sl, r0, lr
 8014ed6:	4550      	cmp	r0, sl
 8014ed8:	4621      	mov	r1, r4
 8014eda:	f104 0403 	add.w	r4, r4, #3
 8014ede:	d25b      	bcs.n	8014f98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8014ee0:	8802      	ldrh	r2, [r0, #0]
 8014ee2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8014ee6:	ea4f 2822 	mov.w	r8, r2, asr #8
 8014eea:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8014eee:	fb11 f109 	smulbb	r1, r1, r9
 8014ef2:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8014ef6:	10d5      	asrs	r5, r2, #3
 8014ef8:	fb08 1803 	mla	r8, r8, r3, r1
 8014efc:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8014f00:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8014f04:	fb11 f109 	smulbb	r1, r1, r9
 8014f08:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8014f0c:	fb05 1503 	mla	r5, r5, r3, r1
 8014f10:	00d2      	lsls	r2, r2, #3
 8014f12:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8014f16:	b2d2      	uxtb	r2, r2
 8014f18:	fb11 f109 	smulbb	r1, r1, r9
 8014f1c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8014f20:	fa1f f888 	uxth.w	r8, r8
 8014f24:	fb02 1203 	mla	r2, r2, r3, r1
 8014f28:	b292      	uxth	r2, r2
 8014f2a:	f108 0101 	add.w	r1, r8, #1
 8014f2e:	b2ad      	uxth	r5, r5
 8014f30:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8014f34:	1c51      	adds	r1, r2, #1
 8014f36:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8014f3a:	1c69      	adds	r1, r5, #1
 8014f3c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8014f40:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8014f44:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014f48:	096d      	lsrs	r5, r5, #5
 8014f4a:	ea42 0208 	orr.w	r2, r2, r8
 8014f4e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8014f52:	432a      	orrs	r2, r5
 8014f54:	f820 2b02 	strh.w	r2, [r0], #2
 8014f58:	e7bd      	b.n	8014ed6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8014f5a:	4a14      	ldr	r2, [pc, #80]	; (8014fac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8014f5c:	42b0      	cmp	r0, r6
 8014f5e:	d21f      	bcs.n	8014fa0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8014f60:	eb00 050e 	add.w	r5, r0, lr
 8014f64:	42a8      	cmp	r0, r5
 8014f66:	4621      	mov	r1, r4
 8014f68:	f104 0403 	add.w	r4, r4, #3
 8014f6c:	d210      	bcs.n	8014f90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8014f6e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8014f72:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8014f76:	00db      	lsls	r3, r3, #3
 8014f78:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8014f7c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014f80:	430b      	orrs	r3, r1
 8014f82:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8014f86:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8014f8a:	f820 3b02 	strh.w	r3, [r0], #2
 8014f8e:	e7e9      	b.n	8014f64 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8014f90:	4438      	add	r0, r7
 8014f92:	eb01 040c 	add.w	r4, r1, ip
 8014f96:	e7e1      	b.n	8014f5c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8014f98:	4438      	add	r0, r7
 8014f9a:	eb01 040c 	add.w	r4, r1, ip
 8014f9e:	e796      	b.n	8014ece <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8014fa0:	4b03      	ldr	r3, [pc, #12]	; (8014fb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8014fa2:	6818      	ldr	r0, [r3, #0]
 8014fa4:	6803      	ldr	r3, [r0, #0]
 8014fa6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014fa8:	4798      	blx	r3
 8014faa:	e768      	b.n	8014e7e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8014fac:	fffff800 	.word	0xfffff800
 8014fb0:	20026f00 	.word	0x20026f00
 8014fb4:	20026ef8 	.word	0x20026ef8

08014fb8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8014fb8:	b570      	push	{r4, r5, r6, lr}
 8014fba:	9c04      	ldr	r4, [sp, #16]
 8014fbc:	f89d 6018 	ldrb.w	r6, [sp, #24]
 8014fc0:	4605      	mov	r5, r0
 8014fc2:	4608      	mov	r0, r1
 8014fc4:	4619      	mov	r1, r3
 8014fc6:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8014fca:	2a0d      	cmp	r2, #13
 8014fcc:	d825      	bhi.n	801501a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x62>
 8014fce:	e8df f002 	tbb	[pc, r2]
 8014fd2:	1807      	.short	0x1807
 8014fd4:	1d1d1d13 	.word	0x1d1d1d13
 8014fd8:	1d1d1d1d 	.word	0x1d1d1d1d
 8014fdc:	1d1d1d1d 	.word	0x1d1d1d1d
 8014fe0:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8014fe4:	682a      	ldr	r2, [r5, #0]
 8014fe6:	68d6      	ldr	r6, [r2, #12]
 8014fe8:	4623      	mov	r3, r4
 8014fea:	460a      	mov	r2, r1
 8014fec:	46b4      	mov	ip, r6
 8014fee:	4601      	mov	r1, r0
 8014ff0:	4628      	mov	r0, r5
 8014ff2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014ff6:	4760      	bx	ip
 8014ff8:	4622      	mov	r2, r4
 8014ffa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014ffe:	f7ff bd8d 	b.w	8014b1c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8015002:	4622      	mov	r2, r4
 8015004:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015008:	f7ff bede 	b.w	8014dc8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801500c:	4b03      	ldr	r3, [pc, #12]	; (801501c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x64>)
 801500e:	4a04      	ldr	r2, [pc, #16]	; (8015020 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x68>)
 8015010:	4804      	ldr	r0, [pc, #16]	; (8015024 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x6c>)
 8015012:	f240 3159 	movw	r1, #857	; 0x359
 8015016:	f008 fd09 	bl	801da2c <__assert_func>
 801501a:	bd70      	pop	{r4, r5, r6, pc}
 801501c:	08021bd0 	.word	0x08021bd0
 8015020:	080223dd 	.word	0x080223dd
 8015024:	08021b0b 	.word	0x08021b0b

08015028 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8015028:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801502c:	b093      	sub	sp, #76	; 0x4c
 801502e:	880e      	ldrh	r6, [r1, #0]
 8015030:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8015034:	4681      	mov	r9, r0
 8015036:	4688      	mov	r8, r1
 8015038:	4615      	mov	r5, r2
 801503a:	b136      	cbz	r6, 801504a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x22>
 801503c:	4b70      	ldr	r3, [pc, #448]	; (8015200 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 801503e:	4a71      	ldr	r2, [pc, #452]	; (8015204 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8015040:	4871      	ldr	r0, [pc, #452]	; (8015208 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8015042:	f44f 71c3 	mov.w	r1, #390	; 0x186
 8015046:	f008 fcf1 	bl	801da2c <__assert_func>
 801504a:	6810      	ldr	r0, [r2, #0]
 801504c:	6851      	ldr	r1, [r2, #4]
 801504e:	4f6f      	ldr	r7, [pc, #444]	; (801520c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8015050:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 8015210 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>
 8015054:	ac0e      	add	r4, sp, #56	; 0x38
 8015056:	c403      	stmia	r4!, {r0, r1}
 8015058:	6818      	ldr	r0, [r3, #0]
 801505a:	6859      	ldr	r1, [r3, #4]
 801505c:	ac10      	add	r4, sp, #64	; 0x40
 801505e:	c403      	stmia	r4!, {r0, r1}
 8015060:	a80e      	add	r0, sp, #56	; 0x38
 8015062:	f7f9 fd35 	bl	800ead0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015066:	4629      	mov	r1, r5
 8015068:	a810      	add	r0, sp, #64	; 0x40
 801506a:	f7f9 fd59 	bl	800eb20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801506e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8015072:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8015076:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801507a:	6838      	ldr	r0, [r7, #0]
 801507c:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8015080:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8015084:	fb11 2103 	smlabb	r1, r1, r3, r2
 8015088:	4489      	add	r9, r1
 801508a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801508e:	440a      	add	r2, r1
 8015090:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8015094:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8015098:	4413      	add	r3, r2
 801509a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801509e:	6803      	ldr	r3, [r0, #0]
 80150a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80150a2:	4798      	blx	r3
 80150a4:	f010 0f80 	tst.w	r0, #128	; 0x80
 80150a8:	6838      	ldr	r0, [r7, #0]
 80150aa:	d01d      	beq.n	80150e8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xc0>
 80150ac:	6802      	ldr	r2, [r0, #0]
 80150ae:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80150b2:	e9cd 6608 	strd	r6, r6, [sp, #32]
 80150b6:	210b      	movs	r1, #11
 80150b8:	9107      	str	r1, [sp, #28]
 80150ba:	f8bb 1000 	ldrh.w	r1, [fp]
 80150be:	9106      	str	r1, [sp, #24]
 80150c0:	2101      	movs	r1, #1
 80150c2:	e9cd a104 	strd	sl, r1, [sp, #16]
 80150c6:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80150ca:	9103      	str	r1, [sp, #12]
 80150cc:	b2a4      	uxth	r4, r4
 80150ce:	f8bd 1042 	ldrh.w	r1, [sp, #66]	; 0x42
 80150d2:	9100      	str	r1, [sp, #0]
 80150d4:	b2ad      	uxth	r5, r5
 80150d6:	9502      	str	r5, [sp, #8]
 80150d8:	9401      	str	r4, [sp, #4]
 80150da:	6bd4      	ldr	r4, [r2, #60]	; 0x3c
 80150dc:	4649      	mov	r1, r9
 80150de:	4642      	mov	r2, r8
 80150e0:	47a0      	blx	r4
 80150e2:	b013      	add	sp, #76	; 0x4c
 80150e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80150e8:	6803      	ldr	r3, [r0, #0]
 80150ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80150ec:	4798      	blx	r3
 80150ee:	f8bb 3000 	ldrh.w	r3, [fp]
 80150f2:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 80150f6:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 80150fa:	fb03 1202 	mla	r2, r3, r2, r1
 80150fe:	435d      	muls	r5, r3
 8015100:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015104:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8015108:	920c      	str	r2, [sp, #48]	; 0x30
 801510a:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801510e:	1b12      	subs	r2, r2, r4
 8015110:	920d      	str	r2, [sp, #52]	; 0x34
 8015112:	0062      	lsls	r2, r4, #1
 8015114:	1b1c      	subs	r4, r3, r4
 8015116:	0063      	lsls	r3, r4, #1
 8015118:	920a      	str	r2, [sp, #40]	; 0x28
 801511a:	930b      	str	r3, [sp, #44]	; 0x2c
 801511c:	f04f 0e04 	mov.w	lr, #4
 8015120:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015122:	4298      	cmp	r0, r3
 8015124:	d266      	bcs.n	80151f4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1cc>
 8015126:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015128:	eb00 0b03 	add.w	fp, r0, r3
 801512c:	4558      	cmp	r0, fp
 801512e:	d25c      	bcs.n	80151ea <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c2>
 8015130:	f819 3b01 	ldrb.w	r3, [r9], #1
 8015134:	fb1e e303 	smlabb	r3, lr, r3, lr
 8015138:	f858 2003 	ldr.w	r2, [r8, r3]
 801513c:	0e11      	lsrs	r1, r2, #24
 801513e:	d012      	beq.n	8015166 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 8015140:	29ff      	cmp	r1, #255	; 0xff
 8015142:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8015146:	d110      	bne.n	801516a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 8015148:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801514c:	d10d      	bne.n	801516a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 801514e:	0953      	lsrs	r3, r2, #5
 8015150:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8015154:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015158:	f027 0707 	bic.w	r7, r7, #7
 801515c:	431f      	orrs	r7, r3
 801515e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8015162:	433a      	orrs	r2, r7
 8015164:	8002      	strh	r2, [r0, #0]
 8015166:	3002      	adds	r0, #2
 8015168:	e7e0      	b.n	801512c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x104>
 801516a:	fb0a f101 	mul.w	r1, sl, r1
 801516e:	8806      	ldrh	r6, [r0, #0]
 8015170:	1c4b      	adds	r3, r1, #1
 8015172:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8015176:	1235      	asrs	r5, r6, #8
 8015178:	10f4      	asrs	r4, r6, #3
 801517a:	121b      	asrs	r3, r3, #8
 801517c:	00f6      	lsls	r6, r6, #3
 801517e:	b299      	uxth	r1, r3
 8015180:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8015184:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8015188:	b2f6      	uxtb	r6, r6
 801518a:	43db      	mvns	r3, r3
 801518c:	b2d2      	uxtb	r2, r2
 801518e:	b2db      	uxtb	r3, r3
 8015190:	fb1c fc01 	smulbb	ip, ip, r1
 8015194:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8015198:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801519c:	fb12 f201 	smulbb	r2, r2, r1
 80151a0:	fb05 c503 	mla	r5, r5, r3, ip
 80151a4:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80151a8:	b2ff      	uxtb	r7, r7
 80151aa:	fb06 2203 	mla	r2, r6, r3, r2
 80151ae:	b2ad      	uxth	r5, r5
 80151b0:	fb17 f701 	smulbb	r7, r7, r1
 80151b4:	b292      	uxth	r2, r2
 80151b6:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 80151ba:	fb04 7403 	mla	r4, r4, r3, r7
 80151be:	f105 0c01 	add.w	ip, r5, #1
 80151c2:	1c57      	adds	r7, r2, #1
 80151c4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80151c8:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80151cc:	b2a4      	uxth	r4, r4
 80151ce:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80151d2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80151d6:	433d      	orrs	r5, r7
 80151d8:	1c67      	adds	r7, r4, #1
 80151da:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 80151de:	0964      	lsrs	r4, r4, #5
 80151e0:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80151e4:	4325      	orrs	r5, r4
 80151e6:	8005      	strh	r5, [r0, #0]
 80151e8:	e7bd      	b.n	8015166 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 80151ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80151ec:	4418      	add	r0, r3
 80151ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80151f0:	4499      	add	r9, r3
 80151f2:	e795      	b.n	8015120 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xf8>
 80151f4:	4b05      	ldr	r3, [pc, #20]	; (801520c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 80151f6:	6818      	ldr	r0, [r3, #0]
 80151f8:	6803      	ldr	r3, [r0, #0]
 80151fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80151fc:	4798      	blx	r3
 80151fe:	e770      	b.n	80150e2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xba>
 8015200:	080219bb 	.word	0x080219bb
 8015204:	0802211b 	.word	0x0802211b
 8015208:	08021b0b 	.word	0x08021b0b
 801520c:	20026f00 	.word	0x20026f00
 8015210:	20026ef8 	.word	0x20026ef8

08015214 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8015214:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015218:	4614      	mov	r4, r2
 801521a:	880a      	ldrh	r2, [r1, #0]
 801521c:	b087      	sub	sp, #28
 801521e:	2a02      	cmp	r2, #2
 8015220:	4680      	mov	r8, r0
 8015222:	460d      	mov	r5, r1
 8015224:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8015228:	d006      	beq.n	8015238 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 801522a:	4b63      	ldr	r3, [pc, #396]	; (80153b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a4>)
 801522c:	4a63      	ldr	r2, [pc, #396]	; (80153bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a8>)
 801522e:	4864      	ldr	r0, [pc, #400]	; (80153c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ac>)
 8015230:	f240 11dd 	movw	r1, #477	; 0x1dd
 8015234:	f008 fbfa 	bl	801da2c <__assert_func>
 8015238:	2e00      	cmp	r6, #0
 801523a:	f000 80b9 	beq.w	80153b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19c>
 801523e:	6820      	ldr	r0, [r4, #0]
 8015240:	6861      	ldr	r1, [r4, #4]
 8015242:	af02      	add	r7, sp, #8
 8015244:	c703      	stmia	r7!, {r0, r1}
 8015246:	6818      	ldr	r0, [r3, #0]
 8015248:	6859      	ldr	r1, [r3, #4]
 801524a:	af04      	add	r7, sp, #16
 801524c:	c703      	stmia	r7!, {r0, r1}
 801524e:	a802      	add	r0, sp, #8
 8015250:	f7f9 fc3e 	bl	800ead0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015254:	4621      	mov	r1, r4
 8015256:	a804      	add	r0, sp, #16
 8015258:	f7f9 fc62 	bl	800eb20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801525c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8015260:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8015264:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8015268:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801526c:	fb14 2103 	smlabb	r1, r4, r3, r2
 8015270:	eb08 0401 	add.w	r4, r8, r1
 8015274:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8015278:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801527c:	440a      	add	r2, r1
 801527e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8015282:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8015286:	4413      	add	r3, r2
 8015288:	f8ad 3012 	strh.w	r3, [sp, #18]
 801528c:	4b4d      	ldr	r3, [pc, #308]	; (80153c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 801528e:	6818      	ldr	r0, [r3, #0]
 8015290:	6803      	ldr	r3, [r0, #0]
 8015292:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015294:	4798      	blx	r3
 8015296:	4b4c      	ldr	r3, [pc, #304]	; (80153c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b4>)
 8015298:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801529c:	881a      	ldrh	r2, [r3, #0]
 801529e:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 80152a2:	2eff      	cmp	r6, #255	; 0xff
 80152a4:	fb02 c101 	mla	r1, r2, r1, ip
 80152a8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80152ac:	fb02 f207 	mul.w	r2, r2, r7
 80152b0:	f105 0104 	add.w	r1, r5, #4
 80152b4:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 80152b8:	461d      	mov	r5, r3
 80152ba:	d05a      	beq.n	8015372 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x15e>
 80152bc:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 80152c0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80152c4:	b2b6      	uxth	r6, r6
 80152c6:	fa1f fe8e 	uxth.w	lr, lr
 80152ca:	9301      	str	r3, [sp, #4]
 80152cc:	4282      	cmp	r2, r0
 80152ce:	d96a      	bls.n	80153a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 80152d0:	eb00 0b0a 	add.w	fp, r0, sl
 80152d4:	4583      	cmp	fp, r0
 80152d6:	d940      	bls.n	801535a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x146>
 80152d8:	f814 3b01 	ldrb.w	r3, [r4], #1
 80152dc:	8805      	ldrh	r5, [r0, #0]
 80152de:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80152e2:	122f      	asrs	r7, r5, #8
 80152e4:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80152e8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80152ec:	fb17 f70e 	smulbb	r7, r7, lr
 80152f0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80152f4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80152f8:	00ed      	lsls	r5, r5, #3
 80152fa:	fb0c 7c06 	mla	ip, ip, r6, r7
 80152fe:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8015302:	10df      	asrs	r7, r3, #3
 8015304:	b2ed      	uxtb	r5, r5
 8015306:	00db      	lsls	r3, r3, #3
 8015308:	fa1f fc8c 	uxth.w	ip, ip
 801530c:	fb19 f90e 	smulbb	r9, r9, lr
 8015310:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015314:	b2db      	uxtb	r3, r3
 8015316:	fb15 f50e 	smulbb	r5, r5, lr
 801531a:	fb07 9706 	mla	r7, r7, r6, r9
 801531e:	fb03 5306 	mla	r3, r3, r6, r5
 8015322:	f10c 0901 	add.w	r9, ip, #1
 8015326:	b29b      	uxth	r3, r3
 8015328:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801532c:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8015330:	f103 0c01 	add.w	ip, r3, #1
 8015334:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8015338:	b2bf      	uxth	r7, r7
 801533a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801533e:	ea4c 0c09 	orr.w	ip, ip, r9
 8015342:	f107 0901 	add.w	r9, r7, #1
 8015346:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801534a:	097f      	lsrs	r7, r7, #5
 801534c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8015350:	ea4c 0c07 	orr.w	ip, ip, r7
 8015354:	f820 cb02 	strh.w	ip, [r0], #2
 8015358:	e7bc      	b.n	80152d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 801535a:	9b01      	ldr	r3, [sp, #4]
 801535c:	881b      	ldrh	r3, [r3, #0]
 801535e:	eba3 0308 	sub.w	r3, r3, r8
 8015362:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015366:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801536a:	eba3 0308 	sub.w	r3, r3, r8
 801536e:	441c      	add	r4, r3
 8015370:	e7ac      	b.n	80152cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xb8>
 8015372:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8015376:	4282      	cmp	r2, r0
 8015378:	d915      	bls.n	80153a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 801537a:	eb00 060a 	add.w	r6, r0, sl
 801537e:	4286      	cmp	r6, r0
 8015380:	d906      	bls.n	8015390 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17c>
 8015382:	f814 3b01 	ldrb.w	r3, [r4], #1
 8015386:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801538a:	f820 3b02 	strh.w	r3, [r0], #2
 801538e:	e7f6      	b.n	801537e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x16a>
 8015390:	882b      	ldrh	r3, [r5, #0]
 8015392:	eba3 0308 	sub.w	r3, r3, r8
 8015396:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801539a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801539e:	eba3 0308 	sub.w	r3, r3, r8
 80153a2:	441c      	add	r4, r3
 80153a4:	e7e7      	b.n	8015376 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x162>
 80153a6:	4b07      	ldr	r3, [pc, #28]	; (80153c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 80153a8:	6818      	ldr	r0, [r3, #0]
 80153aa:	6803      	ldr	r3, [r0, #0]
 80153ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80153ae:	4798      	blx	r3
 80153b0:	b007      	add	sp, #28
 80153b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80153b6:	bf00      	nop
 80153b8:	080218eb 	.word	0x080218eb
 80153bc:	08021f85 	.word	0x08021f85
 80153c0:	08021b0b 	.word	0x08021b0b
 80153c4:	20026f00 	.word	0x20026f00
 80153c8:	20026ef8 	.word	0x20026ef8

080153cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80153cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80153d0:	f8b1 9000 	ldrh.w	r9, [r1]
 80153d4:	b091      	sub	sp, #68	; 0x44
 80153d6:	f1b9 0f01 	cmp.w	r9, #1
 80153da:	4604      	mov	r4, r0
 80153dc:	460f      	mov	r7, r1
 80153de:	4690      	mov	r8, r2
 80153e0:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 80153e4:	d006      	beq.n	80153f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x28>
 80153e6:	4b84      	ldr	r3, [pc, #528]	; (80155f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x22c>)
 80153e8:	4a84      	ldr	r2, [pc, #528]	; (80155fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x230>)
 80153ea:	4885      	ldr	r0, [pc, #532]	; (8015600 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x234>)
 80153ec:	f240 212b 	movw	r1, #555	; 0x22b
 80153f0:	f008 fb1c 	bl	801da2c <__assert_func>
 80153f4:	2d00      	cmp	r5, #0
 80153f6:	d04f      	beq.n	8015498 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 80153f8:	6810      	ldr	r0, [r2, #0]
 80153fa:	6851      	ldr	r1, [r2, #4]
 80153fc:	f8df b208 	ldr.w	fp, [pc, #520]	; 8015608 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>
 8015400:	ae0c      	add	r6, sp, #48	; 0x30
 8015402:	c603      	stmia	r6!, {r0, r1}
 8015404:	6818      	ldr	r0, [r3, #0]
 8015406:	6859      	ldr	r1, [r3, #4]
 8015408:	ae0e      	add	r6, sp, #56	; 0x38
 801540a:	c603      	stmia	r6!, {r0, r1}
 801540c:	a80c      	add	r0, sp, #48	; 0x30
 801540e:	f7f9 fb5f 	bl	800ead0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015412:	4641      	mov	r1, r8
 8015414:	a80e      	add	r0, sp, #56	; 0x38
 8015416:	f7f9 fb83 	bl	800eb20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801541a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801541e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8015422:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8015426:	f8db 0000 	ldr.w	r0, [fp]
 801542a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801542e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8015432:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801560c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x240>
 8015436:	fb11 2103 	smlabb	r1, r1, r3, r2
 801543a:	440c      	add	r4, r1
 801543c:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8015440:	440a      	add	r2, r1
 8015442:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8015446:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801544a:	4413      	add	r3, r2
 801544c:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8015450:	6803      	ldr	r3, [r0, #0]
 8015452:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015454:	4798      	blx	r3
 8015456:	f010 0f80 	tst.w	r0, #128	; 0x80
 801545a:	f8db 0000 	ldr.w	r0, [fp]
 801545e:	d01e      	beq.n	801549e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xd2>
 8015460:	2200      	movs	r2, #0
 8015462:	6801      	ldr	r1, [r0, #0]
 8015464:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8015468:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801546c:	220b      	movs	r2, #11
 801546e:	9207      	str	r2, [sp, #28]
 8015470:	f8b8 2000 	ldrh.w	r2, [r8]
 8015474:	9504      	str	r5, [sp, #16]
 8015476:	e9cd 9205 	strd	r9, r2, [sp, #20]
 801547a:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801547e:	9203      	str	r2, [sp, #12]
 8015480:	fa1f f28a 	uxth.w	r2, sl
 8015484:	9202      	str	r2, [sp, #8]
 8015486:	b2b6      	uxth	r6, r6
 8015488:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801548c:	9200      	str	r2, [sp, #0]
 801548e:	9601      	str	r6, [sp, #4]
 8015490:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8015492:	463a      	mov	r2, r7
 8015494:	4621      	mov	r1, r4
 8015496:	47a8      	blx	r5
 8015498:	b011      	add	sp, #68	; 0x44
 801549a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801549e:	6803      	ldr	r3, [r0, #0]
 80154a0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80154a2:	4798      	blx	r3
 80154a4:	f8b8 2000 	ldrh.w	r2, [r8]
 80154a8:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80154ac:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 80154b0:	2dff      	cmp	r5, #255	; 0xff
 80154b2:	fb02 1303 	mla	r3, r2, r3, r1
 80154b6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80154ba:	ea4f 0946 	mov.w	r9, r6, lsl #1
 80154be:	fb0a fa02 	mul.w	sl, sl, r2
 80154c2:	d062      	beq.n	801558a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1be>
 80154c4:	ea6f 0c05 	mvn.w	ip, r5
 80154c8:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 80154cc:	930a      	str	r3, [sp, #40]	; 0x28
 80154ce:	b2ad      	uxth	r5, r5
 80154d0:	fa5f fc8c 	uxtb.w	ip, ip
 80154d4:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 80154d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80154da:	4298      	cmp	r0, r3
 80154dc:	f080 8085 	bcs.w	80155ea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 80154e0:	eb00 0b09 	add.w	fp, r0, r9
 80154e4:	4558      	cmp	r0, fp
 80154e6:	d246      	bcs.n	8015576 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 80154e8:	f814 eb01 	ldrb.w	lr, [r4], #1
 80154ec:	2303      	movs	r3, #3
 80154ee:	2204      	movs	r2, #4
 80154f0:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 80154f4:	eb07 0a0e 	add.w	sl, r7, lr
 80154f8:	8803      	ldrh	r3, [r0, #0]
 80154fa:	f89a 8002 	ldrb.w	r8, [sl, #2]
 80154fe:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8015502:	1219      	asrs	r1, r3, #8
 8015504:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8015508:	fb18 f805 	smulbb	r8, r8, r5
 801550c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8015510:	10da      	asrs	r2, r3, #3
 8015512:	fb01 810c 	mla	r1, r1, ip, r8
 8015516:	00db      	lsls	r3, r3, #3
 8015518:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801551c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8015520:	b2db      	uxtb	r3, r3
 8015522:	fb18 f805 	smulbb	r8, r8, r5
 8015526:	fb1e fe05 	smulbb	lr, lr, r5
 801552a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801552e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8015532:	b289      	uxth	r1, r1
 8015534:	fb02 820c 	mla	r2, r2, ip, r8
 8015538:	fb03 e30c 	mla	r3, r3, ip, lr
 801553c:	b292      	uxth	r2, r2
 801553e:	b29b      	uxth	r3, r3
 8015540:	f101 0801 	add.w	r8, r1, #1
 8015544:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8015548:	f103 0e01 	add.w	lr, r3, #1
 801554c:	f102 0801 	add.w	r8, r2, #1
 8015550:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8015554:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8015558:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801555c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8015560:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8015564:	ea4e 0101 	orr.w	r1, lr, r1
 8015568:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801556c:	ea41 0108 	orr.w	r1, r1, r8
 8015570:	f820 1b02 	strh.w	r1, [r0], #2
 8015574:	e7b6      	b.n	80154e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x118>
 8015576:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015578:	881b      	ldrh	r3, [r3, #0]
 801557a:	1b9b      	subs	r3, r3, r6
 801557c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015580:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8015584:	1b9b      	subs	r3, r3, r6
 8015586:	441c      	add	r4, r3
 8015588:	e7a6      	b.n	80154d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x10c>
 801558a:	491e      	ldr	r1, [pc, #120]	; (8015604 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x238>)
 801558c:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8015590:	2203      	movs	r2, #3
 8015592:	2504      	movs	r5, #4
 8015594:	4550      	cmp	r0, sl
 8015596:	d228      	bcs.n	80155ea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 8015598:	eb00 0c09 	add.w	ip, r0, r9
 801559c:	4560      	cmp	r0, ip
 801559e:	4623      	mov	r3, r4
 80155a0:	d219      	bcs.n	80155d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80155a2:	f893 e000 	ldrb.w	lr, [r3]
 80155a6:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80155aa:	eb07 0b0e 	add.w	fp, r7, lr
 80155ae:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80155b2:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80155b6:	f89b b001 	ldrb.w	fp, [fp, #1]
 80155ba:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80155be:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80155c2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80155c6:	ea43 030b 	orr.w	r3, r3, fp
 80155ca:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80155ce:	3401      	adds	r4, #1
 80155d0:	f820 3b02 	strh.w	r3, [r0], #2
 80155d4:	e7e2      	b.n	801559c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>
 80155d6:	f8b8 3000 	ldrh.w	r3, [r8]
 80155da:	1b9b      	subs	r3, r3, r6
 80155dc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80155e0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80155e4:	1b9b      	subs	r3, r3, r6
 80155e6:	441c      	add	r4, r3
 80155e8:	e7d4      	b.n	8015594 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>
 80155ea:	4b07      	ldr	r3, [pc, #28]	; (8015608 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>)
 80155ec:	6818      	ldr	r0, [r3, #0]
 80155ee:	6803      	ldr	r3, [r0, #0]
 80155f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80155f2:	4798      	blx	r3
 80155f4:	e750      	b.n	8015498 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 80155f6:	bf00      	nop
 80155f8:	08021939 	.word	0x08021939
 80155fc:	0802200e 	.word	0x0802200e
 8015600:	08021b0b 	.word	0x08021b0b
 8015604:	fffff800 	.word	0xfffff800
 8015608:	20026f00 	.word	0x20026f00
 801560c:	20026ef8 	.word	0x20026ef8

08015610 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8015610:	b430      	push	{r4, r5}
 8015612:	780d      	ldrb	r5, [r1, #0]
 8015614:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8015618:	2d01      	cmp	r5, #1
 801561a:	d00a      	beq.n	8015632 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 801561c:	d305      	bcc.n	801562a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801561e:	2d02      	cmp	r5, #2
 8015620:	d10b      	bne.n	801563a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8015622:	9402      	str	r4, [sp, #8]
 8015624:	bc30      	pop	{r4, r5}
 8015626:	f7ff bdf5 	b.w	8015214 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801562a:	9402      	str	r4, [sp, #8]
 801562c:	bc30      	pop	{r4, r5}
 801562e:	f7ff bcfb 	b.w	8015028 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8015632:	9402      	str	r4, [sp, #8]
 8015634:	bc30      	pop	{r4, r5}
 8015636:	f7ff bec9 	b.w	80153cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801563a:	bc30      	pop	{r4, r5}
 801563c:	4770      	bx	lr
	...

08015640 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8015640:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015644:	4604      	mov	r4, r0
 8015646:	b087      	sub	sp, #28
 8015648:	6810      	ldr	r0, [r2, #0]
 801564a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801564e:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8015888 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8015652:	460e      	mov	r6, r1
 8015654:	6851      	ldr	r1, [r2, #4]
 8015656:	ad02      	add	r5, sp, #8
 8015658:	c503      	stmia	r5!, {r0, r1}
 801565a:	6818      	ldr	r0, [r3, #0]
 801565c:	6859      	ldr	r1, [r3, #4]
 801565e:	ad04      	add	r5, sp, #16
 8015660:	4617      	mov	r7, r2
 8015662:	c503      	stmia	r5!, {r0, r1}
 8015664:	a802      	add	r0, sp, #8
 8015666:	f7f9 fa33 	bl	800ead0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801566a:	4639      	mov	r1, r7
 801566c:	a804      	add	r0, sp, #16
 801566e:	f7f9 fa57 	bl	800eb20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015672:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8015676:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801567a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801567e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8015682:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8015686:	fb11 2103 	smlabb	r1, r1, r3, r2
 801568a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801568e:	440e      	add	r6, r1
 8015690:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8015694:	440a      	add	r2, r1
 8015696:	f8ad 2010 	strh.w	r2, [sp, #16]
 801569a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801569e:	4413      	add	r3, r2
 80156a0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80156a4:	4b77      	ldr	r3, [pc, #476]	; (8015884 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80156a6:	6818      	ldr	r0, [r3, #0]
 80156a8:	6803      	ldr	r3, [r0, #0]
 80156aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80156ac:	4798      	blx	r3
 80156ae:	f8b9 b000 	ldrh.w	fp, [r9]
 80156b2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80156b6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80156ba:	fb0b 2303 	mla	r3, fp, r3, r2
 80156be:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80156c2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80156c6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80156ca:	fb05 f50b 	mul.w	r5, r5, fp
 80156ce:	9300      	str	r3, [sp, #0]
 80156d0:	d069      	beq.n	80157a6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 80156d2:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80156d6:	4558      	cmp	r0, fp
 80156d8:	f080 80cc 	bcs.w	8015874 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80156dc:	9b00      	ldr	r3, [sp, #0]
 80156de:	18c3      	adds	r3, r0, r3
 80156e0:	9301      	str	r3, [sp, #4]
 80156e2:	4631      	mov	r1, r6
 80156e4:	9b01      	ldr	r3, [sp, #4]
 80156e6:	4298      	cmp	r0, r3
 80156e8:	d24f      	bcs.n	801578a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 80156ea:	f811 2b01 	ldrb.w	r2, [r1], #1
 80156ee:	2a00      	cmp	r2, #0
 80156f0:	d048      	beq.n	8015784 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80156f2:	fb0a f202 	mul.w	r2, sl, r2
 80156f6:	1c53      	adds	r3, r2, #1
 80156f8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80156fc:	121b      	asrs	r3, r3, #8
 80156fe:	d041      	beq.n	8015784 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8015700:	8802      	ldrh	r2, [r0, #0]
 8015702:	f8b4 c000 	ldrh.w	ip, [r4]
 8015706:	b29e      	uxth	r6, r3
 8015708:	1215      	asrs	r5, r2, #8
 801570a:	43db      	mvns	r3, r3
 801570c:	b2db      	uxtb	r3, r3
 801570e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8015712:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8015716:	fb15 f503 	smulbb	r5, r5, r3
 801571a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801571e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015722:	00d2      	lsls	r2, r2, #3
 8015724:	fb07 5706 	mla	r7, r7, r6, r5
 8015728:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801572c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8015730:	b2d2      	uxtb	r2, r2
 8015732:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015736:	b2bf      	uxth	r7, r7
 8015738:	fb1e fe03 	smulbb	lr, lr, r3
 801573c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8015740:	fa5f fc8c 	uxtb.w	ip, ip
 8015744:	fb12 f203 	smulbb	r2, r2, r3
 8015748:	fb05 e506 	mla	r5, r5, r6, lr
 801574c:	fb0c 2c06 	mla	ip, ip, r6, r2
 8015750:	f107 0e01 	add.w	lr, r7, #1
 8015754:	fa1f fc8c 	uxth.w	ip, ip
 8015758:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801575c:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8015760:	f10c 0701 	add.w	r7, ip, #1
 8015764:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8015768:	b2ad      	uxth	r5, r5
 801576a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801576e:	ea47 070e 	orr.w	r7, r7, lr
 8015772:	f105 0e01 	add.w	lr, r5, #1
 8015776:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801577a:	096d      	lsrs	r5, r5, #5
 801577c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015780:	432f      	orrs	r7, r5
 8015782:	8007      	strh	r7, [r0, #0]
 8015784:	3002      	adds	r0, #2
 8015786:	3402      	adds	r4, #2
 8015788:	e7ac      	b.n	80156e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801578a:	f8b9 3000 	ldrh.w	r3, [r9]
 801578e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8015792:	eba3 0308 	sub.w	r3, r3, r8
 8015796:	eba6 0608 	sub.w	r6, r6, r8
 801579a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801579e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80157a2:	440e      	add	r6, r1
 80157a4:	e797      	b.n	80156d6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 80157a6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80157aa:	42a8      	cmp	r0, r5
 80157ac:	d262      	bcs.n	8015874 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80157ae:	9b00      	ldr	r3, [sp, #0]
 80157b0:	4631      	mov	r1, r6
 80157b2:	eb00 0b03 	add.w	fp, r0, r3
 80157b6:	4558      	cmp	r0, fp
 80157b8:	d24e      	bcs.n	8015858 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80157ba:	f811 3b01 	ldrb.w	r3, [r1], #1
 80157be:	b12b      	cbz	r3, 80157cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80157c0:	2bff      	cmp	r3, #255	; 0xff
 80157c2:	f8b4 e000 	ldrh.w	lr, [r4]
 80157c6:	d104      	bne.n	80157d2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80157c8:	f8a0 e000 	strh.w	lr, [r0]
 80157cc:	3002      	adds	r0, #2
 80157ce:	3402      	adds	r4, #2
 80157d0:	e7f1      	b.n	80157b6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 80157d2:	8802      	ldrh	r2, [r0, #0]
 80157d4:	b29f      	uxth	r7, r3
 80157d6:	1216      	asrs	r6, r2, #8
 80157d8:	43db      	mvns	r3, r3
 80157da:	b2db      	uxtb	r3, r3
 80157dc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80157e0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80157e4:	fb16 f603 	smulbb	r6, r6, r3
 80157e8:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80157ec:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80157f0:	00d2      	lsls	r2, r2, #3
 80157f2:	fb0c 6c07 	mla	ip, ip, r7, r6
 80157f6:	b2d2      	uxtb	r2, r2
 80157f8:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80157fc:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015800:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015804:	fb1a fa03 	smulbb	sl, sl, r3
 8015808:	fa1f fc8c 	uxth.w	ip, ip
 801580c:	fb12 f303 	smulbb	r3, r2, r3
 8015810:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015814:	fa5f fe8e 	uxtb.w	lr, lr
 8015818:	fb06 a607 	mla	r6, r6, r7, sl
 801581c:	f10c 0201 	add.w	r2, ip, #1
 8015820:	fb0e 3307 	mla	r3, lr, r7, r3
 8015824:	b2b6      	uxth	r6, r6
 8015826:	b29b      	uxth	r3, r3
 8015828:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801582c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8015830:	f106 0a01 	add.w	sl, r6, #1
 8015834:	f103 0c01 	add.w	ip, r3, #1
 8015838:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801583c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8015840:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015844:	0976      	lsrs	r6, r6, #5
 8015846:	ea4c 0c02 	orr.w	ip, ip, r2
 801584a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801584e:	ea4c 0c06 	orr.w	ip, ip, r6
 8015852:	f8a0 c000 	strh.w	ip, [r0]
 8015856:	e7b9      	b.n	80157cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8015858:	f8b9 3000 	ldrh.w	r3, [r9]
 801585c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8015860:	eba3 0308 	sub.w	r3, r3, r8
 8015864:	eba6 0608 	sub.w	r6, r6, r8
 8015868:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801586c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015870:	440e      	add	r6, r1
 8015872:	e79a      	b.n	80157aa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8015874:	4b03      	ldr	r3, [pc, #12]	; (8015884 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8015876:	6818      	ldr	r0, [r3, #0]
 8015878:	6803      	ldr	r3, [r0, #0]
 801587a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801587c:	4798      	blx	r3
 801587e:	b007      	add	sp, #28
 8015880:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015884:	20026f00 	.word	0x20026f00
 8015888:	20026ef8 	.word	0x20026ef8

0801588c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801588c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015890:	b089      	sub	sp, #36	; 0x24
 8015892:	4682      	mov	sl, r0
 8015894:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8015898:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801589a:	460f      	mov	r7, r1
 801589c:	4691      	mov	r9, r2
 801589e:	4698      	mov	r8, r3
 80158a0:	2e00      	cmp	r6, #0
 80158a2:	d03d      	beq.n	8015920 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80158a4:	4608      	mov	r0, r1
 80158a6:	f7fb ff87 	bl	80117b8 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80158aa:	4605      	mov	r5, r0
 80158ac:	4638      	mov	r0, r7
 80158ae:	f7fb ffc7 	bl	8011840 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80158b2:	f8ad 000e 	strh.w	r0, [sp, #14]
 80158b6:	4638      	mov	r0, r7
 80158b8:	f8ad 9008 	strh.w	r9, [sp, #8]
 80158bc:	f8ad 500c 	strh.w	r5, [sp, #12]
 80158c0:	f8ad 800a 	strh.w	r8, [sp, #10]
 80158c4:	f7fc f894 	bl	80119f0 <_ZNK8touchgfx6Bitmap7getDataEv>
 80158c8:	4605      	mov	r5, r0
 80158ca:	4638      	mov	r0, r7
 80158cc:	f7fc f8c2 	bl	8011a54 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80158d0:	4681      	mov	r9, r0
 80158d2:	4638      	mov	r0, r7
 80158d4:	f7fc f916 	bl	8011b04 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80158d8:	280b      	cmp	r0, #11
 80158da:	f200 816f 	bhi.w	8015bbc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x330>
 80158de:	e8df f010 	tbh	[pc, r0, lsl #1]
 80158e2:	00c3      	.short	0x00c3
 80158e4:	000c00b4 	.word	0x000c00b4
 80158e8:	016d016d 	.word	0x016d016d
 80158ec:	016d016d 	.word	0x016d016d
 80158f0:	016d016d 	.word	0x016d016d
 80158f4:	016d016d 	.word	0x016d016d
 80158f8:	00bb      	.short	0x00bb
 80158fa:	4bb3      	ldr	r3, [pc, #716]	; (8015bc8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x33c>)
 80158fc:	6818      	ldr	r0, [r3, #0]
 80158fe:	6803      	ldr	r3, [r0, #0]
 8015900:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015902:	4798      	blx	r3
 8015904:	2eff      	cmp	r6, #255	; 0xff
 8015906:	d121      	bne.n	801594c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8015908:	0683      	lsls	r3, r0, #26
 801590a:	d41f      	bmi.n	801594c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 801590c:	4638      	mov	r0, r7
 801590e:	f7fc f835 	bl	801197c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8015912:	b940      	cbnz	r0, 8015926 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8015914:	4623      	mov	r3, r4
 8015916:	aa02      	add	r2, sp, #8
 8015918:	4629      	mov	r1, r5
 801591a:	4650      	mov	r0, sl
 801591c:	f7ff f9e4 	bl	8014ce8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8015920:	b009      	add	sp, #36	; 0x24
 8015922:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015926:	f10d 0818 	add.w	r8, sp, #24
 801592a:	4639      	mov	r1, r7
 801592c:	4640      	mov	r0, r8
 801592e:	f7fb ffcb 	bl	80118c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8015932:	e898 0003 	ldmia.w	r8, {r0, r1}
 8015936:	af04      	add	r7, sp, #16
 8015938:	e887 0003 	stmia.w	r7, {r0, r1}
 801593c:	4638      	mov	r0, r7
 801593e:	4621      	mov	r1, r4
 8015940:	f7f6 fa5a 	bl	800bdf8 <_ZN8touchgfx4RectaNERKS0_>
 8015944:	4638      	mov	r0, r7
 8015946:	f7f6 fa9a 	bl	800be7e <_ZNK8touchgfx4Rect7isEmptyEv>
 801594a:	b130      	cbz	r0, 801595a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xce>
 801594c:	4633      	mov	r3, r6
 801594e:	4622      	mov	r2, r4
 8015950:	a902      	add	r1, sp, #8
 8015952:	4628      	mov	r0, r5
 8015954:	f7ff f8e2 	bl	8014b1c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8015958:	e7e2      	b.n	8015920 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801595a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801595e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8015962:	4293      	cmp	r3, r2
 8015964:	dd12      	ble.n	801598c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x100>
 8015966:	1a9b      	subs	r3, r3, r2
 8015968:	f9b4 0000 	ldrsh.w	r0, [r4]
 801596c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8015970:	f8ad 0018 	strh.w	r0, [sp, #24]
 8015974:	f8ad 201a 	strh.w	r2, [sp, #26]
 8015978:	f8ad 101c 	strh.w	r1, [sp, #28]
 801597c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8015980:	4642      	mov	r2, r8
 8015982:	4633      	mov	r3, r6
 8015984:	a902      	add	r1, sp, #8
 8015986:	4628      	mov	r0, r5
 8015988:	f7ff f8c8 	bl	8014b1c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801598c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8015990:	f9b4 2000 	ldrsh.w	r2, [r4]
 8015994:	4293      	cmp	r3, r2
 8015996:	dd12      	ble.n	80159be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x132>
 8015998:	1a9b      	subs	r3, r3, r2
 801599a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801599e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80159a2:	f8ad 2018 	strh.w	r2, [sp, #24]
 80159a6:	f8ad 001a 	strh.w	r0, [sp, #26]
 80159aa:	f8ad 301c 	strh.w	r3, [sp, #28]
 80159ae:	f8ad 101e 	strh.w	r1, [sp, #30]
 80159b2:	23ff      	movs	r3, #255	; 0xff
 80159b4:	4642      	mov	r2, r8
 80159b6:	a902      	add	r1, sp, #8
 80159b8:	4628      	mov	r0, r5
 80159ba:	f7ff f8af 	bl	8014b1c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80159be:	463b      	mov	r3, r7
 80159c0:	aa02      	add	r2, sp, #8
 80159c2:	4629      	mov	r1, r5
 80159c4:	4650      	mov	r0, sl
 80159c6:	f7ff f98f 	bl	8014ce8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80159ca:	88a2      	ldrh	r2, [r4, #4]
 80159cc:	8823      	ldrh	r3, [r4, #0]
 80159ce:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80159d2:	4413      	add	r3, r2
 80159d4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80159d8:	440a      	add	r2, r1
 80159da:	b29b      	uxth	r3, r3
 80159dc:	b292      	uxth	r2, r2
 80159de:	b211      	sxth	r1, r2
 80159e0:	b218      	sxth	r0, r3
 80159e2:	4288      	cmp	r0, r1
 80159e4:	dd12      	ble.n	8015a0c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x180>
 80159e6:	1a9b      	subs	r3, r3, r2
 80159e8:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80159ec:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 80159f0:	f8ad 1018 	strh.w	r1, [sp, #24]
 80159f4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80159f8:	f8ad 001e 	strh.w	r0, [sp, #30]
 80159fc:	23ff      	movs	r3, #255	; 0xff
 80159fe:	4642      	mov	r2, r8
 8015a00:	a902      	add	r1, sp, #8
 8015a02:	4628      	mov	r0, r5
 8015a04:	f8ad 601a 	strh.w	r6, [sp, #26]
 8015a08:	f7ff f888 	bl	8014b1c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8015a0c:	88e2      	ldrh	r2, [r4, #6]
 8015a0e:	8863      	ldrh	r3, [r4, #2]
 8015a10:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8015a14:	4413      	add	r3, r2
 8015a16:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8015a1a:	440a      	add	r2, r1
 8015a1c:	b29b      	uxth	r3, r3
 8015a1e:	b292      	uxth	r2, r2
 8015a20:	b211      	sxth	r1, r2
 8015a22:	b218      	sxth	r0, r3
 8015a24:	4288      	cmp	r0, r1
 8015a26:	f77f af7b 	ble.w	8015920 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8015a2a:	1a9b      	subs	r3, r3, r2
 8015a2c:	f9b4 6000 	ldrsh.w	r6, [r4]
 8015a30:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8015a34:	f8ad 301e 	strh.w	r3, [sp, #30]
 8015a38:	f8ad 6018 	strh.w	r6, [sp, #24]
 8015a3c:	f8ad 101a 	strh.w	r1, [sp, #26]
 8015a40:	f8ad 001c 	strh.w	r0, [sp, #28]
 8015a44:	23ff      	movs	r3, #255	; 0xff
 8015a46:	4642      	mov	r2, r8
 8015a48:	e782      	b.n	8015950 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc4>
 8015a4a:	4633      	mov	r3, r6
 8015a4c:	4622      	mov	r2, r4
 8015a4e:	a902      	add	r1, sp, #8
 8015a50:	4628      	mov	r0, r5
 8015a52:	f7ff f9b9 	bl	8014dc8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8015a56:	e763      	b.n	8015920 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8015a58:	9600      	str	r6, [sp, #0]
 8015a5a:	4623      	mov	r3, r4
 8015a5c:	aa02      	add	r2, sp, #8
 8015a5e:	4649      	mov	r1, r9
 8015a60:	4628      	mov	r0, r5
 8015a62:	f7ff fdd5 	bl	8015610 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8015a66:	e75b      	b.n	8015920 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8015a68:	4638      	mov	r0, r7
 8015a6a:	f7fb ff87 	bl	801197c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8015a6e:	b950      	cbnz	r0, 8015a86 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fa>
 8015a70:	e9cd 6000 	strd	r6, r0, [sp]
 8015a74:	f8da 3000 	ldr.w	r3, [sl]
 8015a78:	aa02      	add	r2, sp, #8
 8015a7a:	68de      	ldr	r6, [r3, #12]
 8015a7c:	4629      	mov	r1, r5
 8015a7e:	4623      	mov	r3, r4
 8015a80:	4650      	mov	r0, sl
 8015a82:	47b0      	blx	r6
 8015a84:	e74c      	b.n	8015920 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8015a86:	f10d 0818 	add.w	r8, sp, #24
 8015a8a:	4639      	mov	r1, r7
 8015a8c:	4640      	mov	r0, r8
 8015a8e:	f7fb ff1b 	bl	80118c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8015a92:	e898 0003 	ldmia.w	r8, {r0, r1}
 8015a96:	af04      	add	r7, sp, #16
 8015a98:	e887 0003 	stmia.w	r7, {r0, r1}
 8015a9c:	4638      	mov	r0, r7
 8015a9e:	4621      	mov	r1, r4
 8015aa0:	f7f6 f9aa 	bl	800bdf8 <_ZN8touchgfx4RectaNERKS0_>
 8015aa4:	4638      	mov	r0, r7
 8015aa6:	f7f6 f9ea 	bl	800be7e <_ZNK8touchgfx4Rect7isEmptyEv>
 8015aaa:	b138      	cbz	r0, 8015abc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 8015aac:	9600      	str	r6, [sp, #0]
 8015aae:	4623      	mov	r3, r4
 8015ab0:	aa02      	add	r2, sp, #8
 8015ab2:	4649      	mov	r1, r9
 8015ab4:	4628      	mov	r0, r5
 8015ab6:	f7ff fdc3 	bl	8015640 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8015aba:	e731      	b.n	8015920 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8015abc:	e9cd 6000 	strd	r6, r0, [sp]
 8015ac0:	f8da 3000 	ldr.w	r3, [sl]
 8015ac4:	aa02      	add	r2, sp, #8
 8015ac6:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8015aca:	4629      	mov	r1, r5
 8015acc:	463b      	mov	r3, r7
 8015ace:	4650      	mov	r0, sl
 8015ad0:	47d8      	blx	fp
 8015ad2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8015ad6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8015ada:	4293      	cmp	r3, r2
 8015adc:	dd13      	ble.n	8015b06 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x27a>
 8015ade:	f9b4 0000 	ldrsh.w	r0, [r4]
 8015ae2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8015ae6:	f8ad 0018 	strh.w	r0, [sp, #24]
 8015aea:	1a9b      	subs	r3, r3, r2
 8015aec:	f8ad 201a 	strh.w	r2, [sp, #26]
 8015af0:	f8ad 101c 	strh.w	r1, [sp, #28]
 8015af4:	f8ad 301e 	strh.w	r3, [sp, #30]
 8015af8:	9600      	str	r6, [sp, #0]
 8015afa:	4643      	mov	r3, r8
 8015afc:	aa02      	add	r2, sp, #8
 8015afe:	4649      	mov	r1, r9
 8015b00:	4628      	mov	r0, r5
 8015b02:	f7ff fd9d 	bl	8015640 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8015b06:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8015b0a:	f9b4 2000 	ldrsh.w	r2, [r4]
 8015b0e:	4293      	cmp	r3, r2
 8015b10:	dd13      	ble.n	8015b3a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2ae>
 8015b12:	1a9b      	subs	r3, r3, r2
 8015b14:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8015b18:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8015b1c:	f8ad 2018 	strh.w	r2, [sp, #24]
 8015b20:	f8ad 001a 	strh.w	r0, [sp, #26]
 8015b24:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015b28:	f8ad 101e 	strh.w	r1, [sp, #30]
 8015b2c:	9600      	str	r6, [sp, #0]
 8015b2e:	4643      	mov	r3, r8
 8015b30:	aa02      	add	r2, sp, #8
 8015b32:	4649      	mov	r1, r9
 8015b34:	4628      	mov	r0, r5
 8015b36:	f7ff fd83 	bl	8015640 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8015b3a:	88a2      	ldrh	r2, [r4, #4]
 8015b3c:	8823      	ldrh	r3, [r4, #0]
 8015b3e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8015b42:	4413      	add	r3, r2
 8015b44:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8015b48:	440a      	add	r2, r1
 8015b4a:	b29b      	uxth	r3, r3
 8015b4c:	b292      	uxth	r2, r2
 8015b4e:	b211      	sxth	r1, r2
 8015b50:	b218      	sxth	r0, r3
 8015b52:	4288      	cmp	r0, r1
 8015b54:	dd13      	ble.n	8015b7e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2f2>
 8015b56:	1a9b      	subs	r3, r3, r2
 8015b58:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8015b5c:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8015b60:	f8ad 1018 	strh.w	r1, [sp, #24]
 8015b64:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015b68:	f8ad 001e 	strh.w	r0, [sp, #30]
 8015b6c:	9600      	str	r6, [sp, #0]
 8015b6e:	4643      	mov	r3, r8
 8015b70:	aa02      	add	r2, sp, #8
 8015b72:	4649      	mov	r1, r9
 8015b74:	4628      	mov	r0, r5
 8015b76:	f8ad 701a 	strh.w	r7, [sp, #26]
 8015b7a:	f7ff fd61 	bl	8015640 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8015b7e:	88e2      	ldrh	r2, [r4, #6]
 8015b80:	8863      	ldrh	r3, [r4, #2]
 8015b82:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8015b86:	4413      	add	r3, r2
 8015b88:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8015b8c:	440a      	add	r2, r1
 8015b8e:	b29b      	uxth	r3, r3
 8015b90:	b292      	uxth	r2, r2
 8015b92:	b211      	sxth	r1, r2
 8015b94:	b218      	sxth	r0, r3
 8015b96:	4288      	cmp	r0, r1
 8015b98:	f77f aec2 	ble.w	8015920 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8015b9c:	f9b4 7000 	ldrsh.w	r7, [r4]
 8015ba0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8015ba4:	f8ad 7018 	strh.w	r7, [sp, #24]
 8015ba8:	1a9b      	subs	r3, r3, r2
 8015baa:	f8ad 301e 	strh.w	r3, [sp, #30]
 8015bae:	f8ad 101a 	strh.w	r1, [sp, #26]
 8015bb2:	f8ad 001c 	strh.w	r0, [sp, #28]
 8015bb6:	9600      	str	r6, [sp, #0]
 8015bb8:	4643      	mov	r3, r8
 8015bba:	e779      	b.n	8015ab0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8015bbc:	4b03      	ldr	r3, [pc, #12]	; (8015bcc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x340>)
 8015bbe:	4a04      	ldr	r2, [pc, #16]	; (8015bd0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x344>)
 8015bc0:	4804      	ldr	r0, [pc, #16]	; (8015bd4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x348>)
 8015bc2:	21b0      	movs	r1, #176	; 0xb0
 8015bc4:	f007 ff32 	bl	801da2c <__assert_func>
 8015bc8:	20026f00 	.word	0x20026f00
 8015bcc:	08021987 	.word	0x08021987
 8015bd0:	08022097 	.word	0x08022097
 8015bd4:	08021b0b 	.word	0x08021b0b

08015bd8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8015bd8:	b508      	push	{r3, lr}
 8015bda:	b180      	cbz	r0, 8015bfe <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8015bdc:	2902      	cmp	r1, #2
 8015bde:	d014      	beq.n	8015c0a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8015be0:	2903      	cmp	r1, #3
 8015be2:	d01d      	beq.n	8015c20 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8015be4:	2901      	cmp	r1, #1
 8015be6:	d101      	bne.n	8015bec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8015be8:	2001      	movs	r0, #1
 8015bea:	bd08      	pop	{r3, pc}
 8015bec:	4b0e      	ldr	r3, [pc, #56]	; (8015c28 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8015bee:	8818      	ldrh	r0, [r3, #0]
 8015bf0:	b990      	cbnz	r0, 8015c18 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8015bf2:	4b0e      	ldr	r3, [pc, #56]	; (8015c2c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8015bf4:	4a0e      	ldr	r2, [pc, #56]	; (8015c30 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8015bf6:	480f      	ldr	r0, [pc, #60]	; (8015c34 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8015bf8:	2153      	movs	r1, #83	; 0x53
 8015bfa:	f007 ff17 	bl	801da2c <__assert_func>
 8015bfe:	2902      	cmp	r1, #2
 8015c00:	d00e      	beq.n	8015c20 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8015c02:	2903      	cmp	r1, #3
 8015c04:	d0f2      	beq.n	8015bec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8015c06:	2901      	cmp	r1, #1
 8015c08:	d1ee      	bne.n	8015be8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8015c0a:	4b07      	ldr	r3, [pc, #28]	; (8015c28 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8015c0c:	8818      	ldrh	r0, [r3, #0]
 8015c0e:	2800      	cmp	r0, #0
 8015c10:	d0ef      	beq.n	8015bf2 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8015c12:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8015c16:	e7e8      	b.n	8015bea <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8015c18:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8015c1c:	4240      	negs	r0, r0
 8015c1e:	e7e4      	b.n	8015bea <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8015c20:	f04f 30ff 	mov.w	r0, #4294967295
 8015c24:	e7e1      	b.n	8015bea <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8015c26:	bf00      	nop
 8015c28:	20026ef8 	.word	0x20026ef8
 8015c2c:	08021c01 	.word	0x08021c01
 8015c30:	08022214 	.word	0x08022214
 8015c34:	08021c43 	.word	0x08021c43

08015c38 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8015c38:	b508      	push	{r3, lr}
 8015c3a:	b180      	cbz	r0, 8015c5e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8015c3c:	2902      	cmp	r1, #2
 8015c3e:	d014      	beq.n	8015c6a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8015c40:	2903      	cmp	r1, #3
 8015c42:	d018      	beq.n	8015c76 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8015c44:	2901      	cmp	r1, #1
 8015c46:	d001      	beq.n	8015c4c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8015c48:	2001      	movs	r0, #1
 8015c4a:	e013      	b.n	8015c74 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8015c4c:	4b0e      	ldr	r3, [pc, #56]	; (8015c88 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8015c4e:	8818      	ldrh	r0, [r3, #0]
 8015c50:	b970      	cbnz	r0, 8015c70 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8015c52:	4b0e      	ldr	r3, [pc, #56]	; (8015c8c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8015c54:	4a0e      	ldr	r2, [pc, #56]	; (8015c90 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8015c56:	480f      	ldr	r0, [pc, #60]	; (8015c94 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8015c58:	2153      	movs	r1, #83	; 0x53
 8015c5a:	f007 fee7 	bl	801da2c <__assert_func>
 8015c5e:	2902      	cmp	r1, #2
 8015c60:	d009      	beq.n	8015c76 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8015c62:	2903      	cmp	r1, #3
 8015c64:	d0f0      	beq.n	8015c48 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8015c66:	2901      	cmp	r1, #1
 8015c68:	d1f0      	bne.n	8015c4c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8015c6a:	f04f 30ff 	mov.w	r0, #4294967295
 8015c6e:	e001      	b.n	8015c74 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8015c70:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8015c74:	bd08      	pop	{r3, pc}
 8015c76:	4b04      	ldr	r3, [pc, #16]	; (8015c88 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8015c78:	8818      	ldrh	r0, [r3, #0]
 8015c7a:	2800      	cmp	r0, #0
 8015c7c:	d0e9      	beq.n	8015c52 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8015c7e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8015c82:	4240      	negs	r0, r0
 8015c84:	e7f6      	b.n	8015c74 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8015c86:	bf00      	nop
 8015c88:	20026ef8 	.word	0x20026ef8
 8015c8c:	08021c01 	.word	0x08021c01
 8015c90:	08022214 	.word	0x08022214
 8015c94:	08021c43 	.word	0x08021c43

08015c98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8015c98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c9c:	b099      	sub	sp, #100	; 0x64
 8015c9e:	910b      	str	r1, [sp, #44]	; 0x2c
 8015ca0:	a914      	add	r1, sp, #80	; 0x50
 8015ca2:	e881 000c 	stmia.w	r1, {r2, r3}
 8015ca6:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8015caa:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8015cae:	930a      	str	r3, [sp, #40]	; 0x28
 8015cb0:	f891 900d 	ldrb.w	r9, [r1, #13]
 8015cb4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8015cb8:	9311      	str	r3, [sp, #68]	; 0x44
 8015cba:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8015cbe:	930c      	str	r3, [sp, #48]	; 0x30
 8015cc0:	7988      	ldrb	r0, [r1, #6]
 8015cc2:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
 8015cc6:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
 8015cca:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
 8015cce:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8015cd2:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8015cd6:	ea4f 1349 	mov.w	r3, r9, lsl #5
 8015cda:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015cde:	4303      	orrs	r3, r0
 8015ce0:	9309      	str	r3, [sp, #36]	; 0x24
 8015ce2:	f000 81a1 	beq.w	8016028 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8015ce6:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8015cea:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8015cee:	f891 9007 	ldrb.w	r9, [r1, #7]
 8015cf2:	ea59 0903 	orrs.w	r9, r9, r3
 8015cf6:	f000 8197 	beq.w	8016028 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8015cfa:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8015cfe:	b29b      	uxth	r3, r3
 8015d00:	2e00      	cmp	r6, #0
 8015d02:	f000 813a 	beq.w	8015f7a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 8015d06:	1af6      	subs	r6, r6, r3
 8015d08:	b2b6      	uxth	r6, r6
 8015d0a:	0433      	lsls	r3, r6, #16
 8015d0c:	d502      	bpl.n	8015d14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8015d0e:	1bad      	subs	r5, r5, r6
 8015d10:	b22d      	sxth	r5, r5
 8015d12:	2600      	movs	r6, #0
 8015d14:	f9b2 1000 	ldrsh.w	r1, [r2]
 8015d18:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8015d1c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8015d20:	428d      	cmp	r5, r1
 8015d22:	b28b      	uxth	r3, r1
 8015d24:	bfbf      	itttt	lt
 8015d26:	18f6      	addlt	r6, r6, r3
 8015d28:	1b75      	sublt	r5, r6, r5
 8015d2a:	b2ae      	uxthlt	r6, r5
 8015d2c:	460d      	movlt	r5, r1
 8015d2e:	8891      	ldrh	r1, [r2, #4]
 8015d30:	440b      	add	r3, r1
 8015d32:	b21b      	sxth	r3, r3
 8015d34:	9310      	str	r3, [sp, #64]	; 0x40
 8015d36:	88d3      	ldrh	r3, [r2, #6]
 8015d38:	8852      	ldrh	r2, [r2, #2]
 8015d3a:	4413      	add	r3, r2
 8015d3c:	b21b      	sxth	r3, r3
 8015d3e:	930f      	str	r3, [sp, #60]	; 0x3c
 8015d40:	4bbc      	ldr	r3, [pc, #752]	; (8016034 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8015d42:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015d44:	f893 b000 	ldrb.w	fp, [r3]
 8015d48:	f10b 3cff 	add.w	ip, fp, #4294967295
 8015d4c:	f1dc 0300 	rsbs	r3, ip, #0
 8015d50:	eb43 030c 	adc.w	r3, r3, ip
 8015d54:	930e      	str	r3, [sp, #56]	; 0x38
 8015d56:	4629      	mov	r1, r5
 8015d58:	4653      	mov	r3, sl
 8015d5a:	a814      	add	r0, sp, #80	; 0x50
 8015d5c:	f7f8 fd3c 	bl	800e7d8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8015d60:	4629      	mov	r1, r5
 8015d62:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8015d66:	4653      	mov	r3, sl
 8015d68:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015d6a:	a814      	add	r0, sp, #80	; 0x50
 8015d6c:	f7f8 fd4c 	bl	800e808 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8015d70:	a918      	add	r1, sp, #96	; 0x60
 8015d72:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8015d76:	a817      	add	r0, sp, #92	; 0x5c
 8015d78:	f7f8 fe68 	bl	800ea4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8015d7c:	f1ba 0f00 	cmp.w	sl, #0
 8015d80:	f040 80fe 	bne.w	8015f80 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>
 8015d84:	f1bb 0f01 	cmp.w	fp, #1
 8015d88:	f040 8102 	bne.w	8015f90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f8>
 8015d8c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015d8e:	b153      	cbz	r3, 8015da6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 8015d90:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015d92:	2408      	movs	r4, #8
 8015d94:	fb94 f3f8 	sdiv	r3, r4, r8
 8015d98:	1e5c      	subs	r4, r3, #1
 8015d9a:	4414      	add	r4, r2
 8015d9c:	fb94 f4f3 	sdiv	r4, r4, r3
 8015da0:	fb14 f403 	smulbb	r4, r4, r3
 8015da4:	b2a4      	uxth	r4, r4
 8015da6:	b906      	cbnz	r6, 8015daa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 8015da8:	b16f      	cbz	r7, 8015dc6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12e>
 8015daa:	fb07 6304 	mla	r3, r7, r4, r6
 8015dae:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8015db0:	fb08 f303 	mul.w	r3, r8, r3
 8015db4:	463a      	mov	r2, r7
 8015db6:	f003 0707 	and.w	r7, r3, #7
 8015dba:	eb01 03d3 	add.w	r3, r1, r3, lsr #3
 8015dbe:	9328      	str	r3, [sp, #160]	; 0xa0
 8015dc0:	eba9 0302 	sub.w	r3, r9, r2
 8015dc4:	930d      	str	r3, [sp, #52]	; 0x34
 8015dc6:	4651      	mov	r1, sl
 8015dc8:	980e      	ldr	r0, [sp, #56]	; 0x38
 8015dca:	f7ff ff05 	bl	8015bd8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8015dce:	4651      	mov	r1, sl
 8015dd0:	4681      	mov	r9, r0
 8015dd2:	980e      	ldr	r0, [sp, #56]	; 0x38
 8015dd4:	f7ff ff30 	bl	8015c38 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8015dd8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015dda:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015ddc:	eba3 0a02 	sub.w	sl, r3, r2
 8015de0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015de2:	459a      	cmp	sl, r3
 8015de4:	bfa8      	it	ge
 8015de6:	469a      	movge	sl, r3
 8015de8:	f1ba 0f00 	cmp.w	sl, #0
 8015dec:	4683      	mov	fp, r0
 8015dee:	f340 811b 	ble.w	8016028 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8015df2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015df4:	1bad      	subs	r5, r5, r6
 8015df6:	1b5d      	subs	r5, r3, r5
 8015df8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015dfa:	429d      	cmp	r5, r3
 8015dfc:	bfd4      	ite	le
 8015dfe:	ebc6 0605 	rsble	r6, r6, r5
 8015e02:	ebc6 0603 	rsbgt	r6, r6, r3
 8015e06:	2e00      	cmp	r6, #0
 8015e08:	f340 810e 	ble.w	8016028 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8015e0c:	1ba4      	subs	r4, r4, r6
 8015e0e:	fb08 f304 	mul.w	r3, r8, r4
 8015e12:	930f      	str	r3, [sp, #60]	; 0x3c
 8015e14:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015e16:	2b00      	cmp	r3, #0
 8015e18:	f040 8114 	bne.w	8016044 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8015e1c:	4b86      	ldr	r3, [pc, #536]	; (8016038 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8015e1e:	6818      	ldr	r0, [r3, #0]
 8015e20:	6803      	ldr	r3, [r0, #0]
 8015e22:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015e24:	4798      	blx	r3
 8015e26:	2301      	movs	r3, #1
 8015e28:	fa03 f308 	lsl.w	r3, r3, r8
 8015e2c:	4a83      	ldr	r2, [pc, #524]	; (801603c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8015e2e:	3b01      	subs	r3, #1
 8015e30:	b2db      	uxtb	r3, r3
 8015e32:	8811      	ldrh	r1, [r2, #0]
 8015e34:	930e      	str	r3, [sp, #56]	; 0x38
 8015e36:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8015e3a:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8015e3e:	fb01 2303 	mla	r3, r1, r3, r2
 8015e42:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015e46:	930a      	str	r3, [sp, #40]	; 0x28
 8015e48:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015e4a:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8015e4e:	9313      	str	r3, [sp, #76]	; 0x4c
 8015e50:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015e52:	0a19      	lsrs	r1, r3, #8
 8015e54:	b2cb      	uxtb	r3, r1
 8015e56:	9312      	str	r3, [sp, #72]	; 0x48
 8015e58:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015e5a:	b2db      	uxtb	r3, r3
 8015e5c:	9311      	str	r3, [sp, #68]	; 0x44
 8015e5e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015e60:	095a      	lsrs	r2, r3, #5
 8015e62:	4b77      	ldr	r3, [pc, #476]	; (8016040 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8015e64:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015e68:	400b      	ands	r3, r1
 8015e6a:	4313      	orrs	r3, r2
 8015e6c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8015e6e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8015e72:	4313      	orrs	r3, r2
 8015e74:	b29b      	uxth	r3, r3
 8015e76:	9310      	str	r3, [sp, #64]	; 0x40
 8015e78:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015e7a:	781a      	ldrb	r2, [r3, #0]
 8015e7c:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8015e80:	413a      	asrs	r2, r7
 8015e82:	fb06 b919 	mls	r9, r6, r9, fp
 8015e86:	fb03 fb06 	mul.w	fp, r3, r6
 8015e8a:	b2d2      	uxtb	r2, r2
 8015e8c:	930d      	str	r3, [sp, #52]	; 0x34
 8015e8e:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8015e92:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8015e96:	f0c0 80ea 	bcc.w	801606e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d6>
 8015e9a:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8015e9e:	46b6      	mov	lr, r6
 8015ea0:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8015ea4:	f0c0 80d2 	bcc.w	801604c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8015ea8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015eaa:	4013      	ands	r3, r2
 8015eac:	d055      	beq.n	8015f5a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c2>
 8015eae:	20ff      	movs	r0, #255	; 0xff
 8015eb0:	990e      	ldr	r1, [sp, #56]	; 0x38
 8015eb2:	fb90 f1f1 	sdiv	r1, r0, r1
 8015eb6:	434b      	muls	r3, r1
 8015eb8:	2bfe      	cmp	r3, #254	; 0xfe
 8015eba:	dd03      	ble.n	8015ec4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x22c>
 8015ebc:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015ebe:	4281      	cmp	r1, r0
 8015ec0:	f000 80c2 	beq.w	8016048 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8015ec4:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015ec6:	f8bc 4000 	ldrh.w	r4, [ip]
 8015eca:	fb11 f303 	smulbb	r3, r1, r3
 8015ece:	b29b      	uxth	r3, r3
 8015ed0:	1c59      	adds	r1, r3, #1
 8015ed2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8015ed6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015eda:	b29d      	uxth	r5, r3
 8015edc:	43db      	mvns	r3, r3
 8015ede:	b2db      	uxtb	r3, r3
 8015ee0:	9309      	str	r3, [sp, #36]	; 0x24
 8015ee2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015ee4:	1220      	asrs	r0, r4, #8
 8015ee6:	fb13 f905 	smulbb	r9, r3, r5
 8015eea:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015eee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015ef0:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8015ef4:	fb00 9003 	mla	r0, r0, r3, r9
 8015ef8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015efa:	10e1      	asrs	r1, r4, #3
 8015efc:	fb13 f905 	smulbb	r9, r3, r5
 8015f00:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8015f04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015f06:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8015f0a:	fb01 9103 	mla	r1, r1, r3, r9
 8015f0e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015f10:	00e4      	lsls	r4, r4, #3
 8015f12:	fb13 f505 	smulbb	r5, r3, r5
 8015f16:	b2e4      	uxtb	r4, r4
 8015f18:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015f1a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8015f1e:	fb04 5403 	mla	r4, r4, r3, r5
 8015f22:	b280      	uxth	r0, r0
 8015f24:	b2a4      	uxth	r4, r4
 8015f26:	1c43      	adds	r3, r0, #1
 8015f28:	f104 0901 	add.w	r9, r4, #1
 8015f2c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8015f30:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8015f34:	b289      	uxth	r1, r1
 8015f36:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8015f3a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8015f3e:	ea49 0000 	orr.w	r0, r9, r0
 8015f42:	f101 0901 	add.w	r9, r1, #1
 8015f46:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8015f4a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8015f4e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015f52:	ea40 0009 	orr.w	r0, r0, r9
 8015f56:	f8ac 0000 	strh.w	r0, [ip]
 8015f5a:	4447      	add	r7, r8
 8015f5c:	b2bf      	uxth	r7, r7
 8015f5e:	2f07      	cmp	r7, #7
 8015f60:	bf81      	itttt	hi
 8015f62:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8015f64:	785a      	ldrbhi	r2, [r3, #1]
 8015f66:	3301      	addhi	r3, #1
 8015f68:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8015f6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015f6c:	bf9a      	itte	ls
 8015f6e:	fa42 f208 	asrls.w	r2, r2, r8
 8015f72:	b2d2      	uxtbls	r2, r2
 8015f74:	2700      	movhi	r7, #0
 8015f76:	449c      	add	ip, r3
 8015f78:	e792      	b.n	8015ea0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 8015f7a:	441d      	add	r5, r3
 8015f7c:	b22d      	sxth	r5, r5
 8015f7e:	e6c9      	b.n	8015d14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8015f80:	f1ba 0f01 	cmp.w	sl, #1
 8015f84:	f47f af02 	bne.w	8015d8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8015f88:	f1bb 0f01 	cmp.w	fp, #1
 8015f8c:	f47f aefe 	bne.w	8015d8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8015f90:	f8df b0a4 	ldr.w	fp, [pc, #164]	; 8016038 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8015f94:	f8db 0000 	ldr.w	r0, [fp]
 8015f98:	6803      	ldr	r3, [r0, #0]
 8015f9a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015f9c:	4798      	blx	r3
 8015f9e:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8015fa2:	465a      	mov	r2, fp
 8015fa4:	d006      	beq.n	8015fb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 8015fa6:	f1b8 0f04 	cmp.w	r8, #4
 8015faa:	d140      	bne.n	801602e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8015fac:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015fae:	3300      	adds	r3, #0
 8015fb0:	bf18      	it	ne
 8015fb2:	2301      	movne	r3, #1
 8015fb4:	0580      	lsls	r0, r0, #22
 8015fb6:	d563      	bpl.n	8016080 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 8015fb8:	f1b8 0f08 	cmp.w	r8, #8
 8015fbc:	d160      	bne.n	8016080 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 8015fbe:	2b00      	cmp	r3, #0
 8015fc0:	bf0c      	ite	eq
 8015fc2:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8015fc6:	f44f 7180 	movne.w	r1, #256	; 0x100
 8015fca:	2e00      	cmp	r6, #0
 8015fcc:	f47f aede 	bne.w	8015d8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8015fd0:	2f00      	cmp	r7, #0
 8015fd2:	f47f aedb 	bne.w	8015d8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8015fd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015fd8:	9810      	ldr	r0, [sp, #64]	; 0x40
 8015fda:	18eb      	adds	r3, r5, r3
 8015fdc:	4283      	cmp	r3, r0
 8015fde:	f73f aed5 	bgt.w	8015d8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8015fe2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015fe4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015fe6:	444b      	add	r3, r9
 8015fe8:	4283      	cmp	r3, r0
 8015fea:	f73f aecf 	bgt.w	8015d8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8015fee:	6810      	ldr	r0, [r2, #0]
 8015ff0:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8015ff4:	6805      	ldr	r5, [r0, #0]
 8015ff6:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8015ffa:	f1b8 0f08 	cmp.w	r8, #8
 8015ffe:	f04f 0600 	mov.w	r6, #0
 8016002:	bf18      	it	ne
 8016004:	3401      	addne	r4, #1
 8016006:	e9cd 1605 	strd	r1, r6, [sp, #20]
 801600a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801600c:	9104      	str	r1, [sp, #16]
 801600e:	bf18      	it	ne
 8016010:	f024 0401 	bicne.w	r4, r4, #1
 8016014:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8016016:	bf18      	it	ne
 8016018:	b2a4      	uxthne	r4, r4
 801601a:	e9cd 4102 	strd	r4, r1, [sp, #8]
 801601e:	e9cd 4900 	strd	r4, r9, [sp]
 8016022:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8016024:	6d6c      	ldr	r4, [r5, #84]	; 0x54
 8016026:	47a0      	blx	r4
 8016028:	b019      	add	sp, #100	; 0x64
 801602a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801602e:	2300      	movs	r3, #0
 8016030:	e7c0      	b.n	8015fb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 8016032:	bf00      	nop
 8016034:	20026ef6 	.word	0x20026ef6
 8016038:	20026f00 	.word	0x20026f00
 801603c:	20026ef8 	.word	0x20026ef8
 8016040:	00fff800 	.word	0x00fff800
 8016044:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8016046:	e6ee      	b.n	8015e26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x18e>
 8016048:	9810      	ldr	r0, [sp, #64]	; 0x40
 801604a:	e784      	b.n	8015f56 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2be>
 801604c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801604e:	b153      	cbz	r3, 8016066 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ce>
 8016050:	441f      	add	r7, r3
 8016052:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016054:	b2bf      	uxth	r7, r7
 8016056:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 801605a:	f007 0707 	and.w	r7, r7, #7
 801605e:	781a      	ldrb	r2, [r3, #0]
 8016060:	9328      	str	r3, [sp, #160]	; 0xa0
 8016062:	413a      	asrs	r2, r7
 8016064:	b2d2      	uxtb	r2, r2
 8016066:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016068:	445b      	add	r3, fp
 801606a:	930a      	str	r3, [sp, #40]	; 0x28
 801606c:	e711      	b.n	8015e92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1fa>
 801606e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016070:	2b00      	cmp	r3, #0
 8016072:	d1d9      	bne.n	8016028 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8016074:	4b05      	ldr	r3, [pc, #20]	; (801608c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f4>)
 8016076:	6818      	ldr	r0, [r3, #0]
 8016078:	6803      	ldr	r3, [r0, #0]
 801607a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801607c:	4798      	blx	r3
 801607e:	e7d3      	b.n	8016028 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8016080:	2b00      	cmp	r3, #0
 8016082:	f43f ae83 	beq.w	8015d8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8016086:	f44f 7180 	mov.w	r1, #256	; 0x100
 801608a:	e79e      	b.n	8015fca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x332>
 801608c:	20026f00 	.word	0x20026f00

08016090 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8016090:	b538      	push	{r3, r4, r5, lr}
 8016092:	4c15      	ldr	r4, [pc, #84]	; (80160e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8016094:	7823      	ldrb	r3, [r4, #0]
 8016096:	f3bf 8f5b 	dmb	ish
 801609a:	07da      	lsls	r2, r3, #31
 801609c:	4605      	mov	r5, r0
 801609e:	d40b      	bmi.n	80160b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80160a0:	4620      	mov	r0, r4
 80160a2:	f007 fc96 	bl	801d9d2 <__cxa_guard_acquire>
 80160a6:	b138      	cbz	r0, 80160b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80160a8:	4620      	mov	r0, r4
 80160aa:	f007 fc9e 	bl	801d9ea <__cxa_guard_release>
 80160ae:	4a0f      	ldr	r2, [pc, #60]	; (80160ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80160b0:	490f      	ldr	r1, [pc, #60]	; (80160f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 80160b2:	4810      	ldr	r0, [pc, #64]	; (80160f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80160b4:	f007 fc86 	bl	801d9c4 <__aeabi_atexit>
 80160b8:	4c0f      	ldr	r4, [pc, #60]	; (80160f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80160ba:	7823      	ldrb	r3, [r4, #0]
 80160bc:	f3bf 8f5b 	dmb	ish
 80160c0:	07db      	lsls	r3, r3, #31
 80160c2:	d40b      	bmi.n	80160dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80160c4:	4620      	mov	r0, r4
 80160c6:	f007 fc84 	bl	801d9d2 <__cxa_guard_acquire>
 80160ca:	b138      	cbz	r0, 80160dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80160cc:	4620      	mov	r0, r4
 80160ce:	f007 fc8c 	bl	801d9ea <__cxa_guard_release>
 80160d2:	4a06      	ldr	r2, [pc, #24]	; (80160ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80160d4:	4909      	ldr	r1, [pc, #36]	; (80160fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80160d6:	480a      	ldr	r0, [pc, #40]	; (8016100 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80160d8:	f007 fc74 	bl	801d9c4 <__aeabi_atexit>
 80160dc:	4b05      	ldr	r3, [pc, #20]	; (80160f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80160de:	612b      	str	r3, [r5, #16]
 80160e0:	4b07      	ldr	r3, [pc, #28]	; (8016100 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80160e2:	616b      	str	r3, [r5, #20]
 80160e4:	bd38      	pop	{r3, r4, r5, pc}
 80160e6:	bf00      	nop
 80160e8:	20026fcc 	.word	0x20026fcc
 80160ec:	20000000 	.word	0x20000000
 80160f0:	08014103 	.word	0x08014103
 80160f4:	200000c0 	.word	0x200000c0
 80160f8:	20026fd0 	.word	0x20026fd0
 80160fc:	08014101 	.word	0x08014101
 8016100:	200000c4 	.word	0x200000c4

08016104 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8016104:	b538      	push	{r3, r4, r5, lr}
 8016106:	4c15      	ldr	r4, [pc, #84]	; (801615c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8016108:	7823      	ldrb	r3, [r4, #0]
 801610a:	f3bf 8f5b 	dmb	ish
 801610e:	07da      	lsls	r2, r3, #31
 8016110:	4605      	mov	r5, r0
 8016112:	d40b      	bmi.n	801612c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8016114:	4620      	mov	r0, r4
 8016116:	f007 fc5c 	bl	801d9d2 <__cxa_guard_acquire>
 801611a:	b138      	cbz	r0, 801612c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801611c:	4620      	mov	r0, r4
 801611e:	f007 fc64 	bl	801d9ea <__cxa_guard_release>
 8016122:	4a0f      	ldr	r2, [pc, #60]	; (8016160 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8016124:	490f      	ldr	r1, [pc, #60]	; (8016164 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8016126:	4810      	ldr	r0, [pc, #64]	; (8016168 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8016128:	f007 fc4c 	bl	801d9c4 <__aeabi_atexit>
 801612c:	4c0f      	ldr	r4, [pc, #60]	; (801616c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801612e:	7823      	ldrb	r3, [r4, #0]
 8016130:	f3bf 8f5b 	dmb	ish
 8016134:	07db      	lsls	r3, r3, #31
 8016136:	d40b      	bmi.n	8016150 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8016138:	4620      	mov	r0, r4
 801613a:	f007 fc4a 	bl	801d9d2 <__cxa_guard_acquire>
 801613e:	b138      	cbz	r0, 8016150 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8016140:	4620      	mov	r0, r4
 8016142:	f007 fc52 	bl	801d9ea <__cxa_guard_release>
 8016146:	4a06      	ldr	r2, [pc, #24]	; (8016160 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8016148:	4909      	ldr	r1, [pc, #36]	; (8016170 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801614a:	480a      	ldr	r0, [pc, #40]	; (8016174 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801614c:	f007 fc3a 	bl	801d9c4 <__aeabi_atexit>
 8016150:	4b05      	ldr	r3, [pc, #20]	; (8016168 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8016152:	60ab      	str	r3, [r5, #8]
 8016154:	4b07      	ldr	r3, [pc, #28]	; (8016174 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8016156:	60eb      	str	r3, [r5, #12]
 8016158:	bd38      	pop	{r3, r4, r5, pc}
 801615a:	bf00      	nop
 801615c:	20026fa4 	.word	0x20026fa4
 8016160:	20000000 	.word	0x20000000
 8016164:	08014107 	.word	0x08014107
 8016168:	20000098 	.word	0x20000098
 801616c:	20026fa8 	.word	0x20026fa8
 8016170:	08014105 	.word	0x08014105
 8016174:	2000009c 	.word	0x2000009c

08016178 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8016178:	b510      	push	{r4, lr}
 801617a:	4604      	mov	r4, r0
 801617c:	f7ff ff88 	bl	8016090 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8016180:	4620      	mov	r0, r4
 8016182:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016186:	f7ff bfbd 	b.w	8016104 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801618c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801618c:	b538      	push	{r3, r4, r5, lr}
 801618e:	4c15      	ldr	r4, [pc, #84]	; (80161e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8016190:	7823      	ldrb	r3, [r4, #0]
 8016192:	f3bf 8f5b 	dmb	ish
 8016196:	07da      	lsls	r2, r3, #31
 8016198:	4605      	mov	r5, r0
 801619a:	d40b      	bmi.n	80161b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801619c:	4620      	mov	r0, r4
 801619e:	f007 fc18 	bl	801d9d2 <__cxa_guard_acquire>
 80161a2:	b138      	cbz	r0, 80161b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80161a4:	4620      	mov	r0, r4
 80161a6:	f007 fc20 	bl	801d9ea <__cxa_guard_release>
 80161aa:	4a0f      	ldr	r2, [pc, #60]	; (80161e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80161ac:	490f      	ldr	r1, [pc, #60]	; (80161ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 80161ae:	4810      	ldr	r0, [pc, #64]	; (80161f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80161b0:	f007 fc08 	bl	801d9c4 <__aeabi_atexit>
 80161b4:	4c0f      	ldr	r4, [pc, #60]	; (80161f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 80161b6:	7823      	ldrb	r3, [r4, #0]
 80161b8:	f3bf 8f5b 	dmb	ish
 80161bc:	07db      	lsls	r3, r3, #31
 80161be:	d40b      	bmi.n	80161d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80161c0:	4620      	mov	r0, r4
 80161c2:	f007 fc06 	bl	801d9d2 <__cxa_guard_acquire>
 80161c6:	b138      	cbz	r0, 80161d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80161c8:	4620      	mov	r0, r4
 80161ca:	f007 fc0e 	bl	801d9ea <__cxa_guard_release>
 80161ce:	4a06      	ldr	r2, [pc, #24]	; (80161e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80161d0:	4909      	ldr	r1, [pc, #36]	; (80161f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80161d2:	480a      	ldr	r0, [pc, #40]	; (80161fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80161d4:	f007 fbf6 	bl	801d9c4 <__aeabi_atexit>
 80161d8:	4b05      	ldr	r3, [pc, #20]	; (80161f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80161da:	622b      	str	r3, [r5, #32]
 80161dc:	4b07      	ldr	r3, [pc, #28]	; (80161fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80161de:	626b      	str	r3, [r5, #36]	; 0x24
 80161e0:	bd38      	pop	{r3, r4, r5, pc}
 80161e2:	bf00      	nop
 80161e4:	20026fd4 	.word	0x20026fd4
 80161e8:	20000000 	.word	0x20000000
 80161ec:	080140fb 	.word	0x080140fb
 80161f0:	200000c8 	.word	0x200000c8
 80161f4:	20026fd8 	.word	0x20026fd8
 80161f8:	080140f9 	.word	0x080140f9
 80161fc:	200000cc 	.word	0x200000cc

08016200 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8016200:	b538      	push	{r3, r4, r5, lr}
 8016202:	4c15      	ldr	r4, [pc, #84]	; (8016258 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8016204:	7823      	ldrb	r3, [r4, #0]
 8016206:	f3bf 8f5b 	dmb	ish
 801620a:	07da      	lsls	r2, r3, #31
 801620c:	4605      	mov	r5, r0
 801620e:	d40b      	bmi.n	8016228 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8016210:	4620      	mov	r0, r4
 8016212:	f007 fbde 	bl	801d9d2 <__cxa_guard_acquire>
 8016216:	b138      	cbz	r0, 8016228 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8016218:	4620      	mov	r0, r4
 801621a:	f007 fbe6 	bl	801d9ea <__cxa_guard_release>
 801621e:	4a0f      	ldr	r2, [pc, #60]	; (801625c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8016220:	490f      	ldr	r1, [pc, #60]	; (8016260 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8016222:	4810      	ldr	r0, [pc, #64]	; (8016264 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8016224:	f007 fbce 	bl	801d9c4 <__aeabi_atexit>
 8016228:	4c0f      	ldr	r4, [pc, #60]	; (8016268 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801622a:	7823      	ldrb	r3, [r4, #0]
 801622c:	f3bf 8f5b 	dmb	ish
 8016230:	07db      	lsls	r3, r3, #31
 8016232:	d40b      	bmi.n	801624c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8016234:	4620      	mov	r0, r4
 8016236:	f007 fbcc 	bl	801d9d2 <__cxa_guard_acquire>
 801623a:	b138      	cbz	r0, 801624c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801623c:	4620      	mov	r0, r4
 801623e:	f007 fbd4 	bl	801d9ea <__cxa_guard_release>
 8016242:	4a06      	ldr	r2, [pc, #24]	; (801625c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8016244:	4909      	ldr	r1, [pc, #36]	; (801626c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8016246:	480a      	ldr	r0, [pc, #40]	; (8016270 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8016248:	f007 fbbc 	bl	801d9c4 <__aeabi_atexit>
 801624c:	4b05      	ldr	r3, [pc, #20]	; (8016264 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801624e:	61ab      	str	r3, [r5, #24]
 8016250:	4b07      	ldr	r3, [pc, #28]	; (8016270 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8016252:	61eb      	str	r3, [r5, #28]
 8016254:	bd38      	pop	{r3, r4, r5, pc}
 8016256:	bf00      	nop
 8016258:	20026fac 	.word	0x20026fac
 801625c:	20000000 	.word	0x20000000
 8016260:	080140ff 	.word	0x080140ff
 8016264:	200000a0 	.word	0x200000a0
 8016268:	20026fb0 	.word	0x20026fb0
 801626c:	080140fd 	.word	0x080140fd
 8016270:	200000a4 	.word	0x200000a4

08016274 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8016274:	b510      	push	{r4, lr}
 8016276:	4604      	mov	r4, r0
 8016278:	f7ff ff88 	bl	801618c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801627c:	4620      	mov	r0, r4
 801627e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016282:	f7ff bfbd 	b.w	8016200 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08016288 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8016288:	b538      	push	{r3, r4, r5, lr}
 801628a:	4c15      	ldr	r4, [pc, #84]	; (80162e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801628c:	7823      	ldrb	r3, [r4, #0]
 801628e:	f3bf 8f5b 	dmb	ish
 8016292:	07da      	lsls	r2, r3, #31
 8016294:	4605      	mov	r5, r0
 8016296:	d40b      	bmi.n	80162b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8016298:	4620      	mov	r0, r4
 801629a:	f007 fb9a 	bl	801d9d2 <__cxa_guard_acquire>
 801629e:	b138      	cbz	r0, 80162b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80162a0:	4620      	mov	r0, r4
 80162a2:	f007 fba2 	bl	801d9ea <__cxa_guard_release>
 80162a6:	4a0f      	ldr	r2, [pc, #60]	; (80162e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80162a8:	490f      	ldr	r1, [pc, #60]	; (80162e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 80162aa:	4810      	ldr	r0, [pc, #64]	; (80162ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80162ac:	f007 fb8a 	bl	801d9c4 <__aeabi_atexit>
 80162b0:	4c0f      	ldr	r4, [pc, #60]	; (80162f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 80162b2:	7823      	ldrb	r3, [r4, #0]
 80162b4:	f3bf 8f5b 	dmb	ish
 80162b8:	07db      	lsls	r3, r3, #31
 80162ba:	d40b      	bmi.n	80162d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80162bc:	4620      	mov	r0, r4
 80162be:	f007 fb88 	bl	801d9d2 <__cxa_guard_acquire>
 80162c2:	b138      	cbz	r0, 80162d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80162c4:	4620      	mov	r0, r4
 80162c6:	f007 fb90 	bl	801d9ea <__cxa_guard_release>
 80162ca:	4a06      	ldr	r2, [pc, #24]	; (80162e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80162cc:	4909      	ldr	r1, [pc, #36]	; (80162f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80162ce:	480a      	ldr	r0, [pc, #40]	; (80162f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80162d0:	f007 fb78 	bl	801d9c4 <__aeabi_atexit>
 80162d4:	4b05      	ldr	r3, [pc, #20]	; (80162ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80162d6:	632b      	str	r3, [r5, #48]	; 0x30
 80162d8:	4b07      	ldr	r3, [pc, #28]	; (80162f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80162da:	636b      	str	r3, [r5, #52]	; 0x34
 80162dc:	bd38      	pop	{r3, r4, r5, pc}
 80162de:	bf00      	nop
 80162e0:	20026fe4 	.word	0x20026fe4
 80162e4:	20000000 	.word	0x20000000
 80162e8:	080140f3 	.word	0x080140f3
 80162ec:	200000d8 	.word	0x200000d8
 80162f0:	20026fe8 	.word	0x20026fe8
 80162f4:	080140f1 	.word	0x080140f1
 80162f8:	200000dc 	.word	0x200000dc

080162fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80162fc:	b538      	push	{r3, r4, r5, lr}
 80162fe:	4c15      	ldr	r4, [pc, #84]	; (8016354 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8016300:	7823      	ldrb	r3, [r4, #0]
 8016302:	f3bf 8f5b 	dmb	ish
 8016306:	07da      	lsls	r2, r3, #31
 8016308:	4605      	mov	r5, r0
 801630a:	d40b      	bmi.n	8016324 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801630c:	4620      	mov	r0, r4
 801630e:	f007 fb60 	bl	801d9d2 <__cxa_guard_acquire>
 8016312:	b138      	cbz	r0, 8016324 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8016314:	4620      	mov	r0, r4
 8016316:	f007 fb68 	bl	801d9ea <__cxa_guard_release>
 801631a:	4a0f      	ldr	r2, [pc, #60]	; (8016358 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801631c:	490f      	ldr	r1, [pc, #60]	; (801635c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801631e:	4810      	ldr	r0, [pc, #64]	; (8016360 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8016320:	f007 fb50 	bl	801d9c4 <__aeabi_atexit>
 8016324:	4c0f      	ldr	r4, [pc, #60]	; (8016364 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8016326:	7823      	ldrb	r3, [r4, #0]
 8016328:	f3bf 8f5b 	dmb	ish
 801632c:	07db      	lsls	r3, r3, #31
 801632e:	d40b      	bmi.n	8016348 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8016330:	4620      	mov	r0, r4
 8016332:	f007 fb4e 	bl	801d9d2 <__cxa_guard_acquire>
 8016336:	b138      	cbz	r0, 8016348 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8016338:	4620      	mov	r0, r4
 801633a:	f007 fb56 	bl	801d9ea <__cxa_guard_release>
 801633e:	4a06      	ldr	r2, [pc, #24]	; (8016358 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8016340:	4909      	ldr	r1, [pc, #36]	; (8016368 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8016342:	480a      	ldr	r0, [pc, #40]	; (801636c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8016344:	f007 fb3e 	bl	801d9c4 <__aeabi_atexit>
 8016348:	4b05      	ldr	r3, [pc, #20]	; (8016360 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801634a:	62ab      	str	r3, [r5, #40]	; 0x28
 801634c:	4b07      	ldr	r3, [pc, #28]	; (801636c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801634e:	62eb      	str	r3, [r5, #44]	; 0x2c
 8016350:	bd38      	pop	{r3, r4, r5, pc}
 8016352:	bf00      	nop
 8016354:	20026fb4 	.word	0x20026fb4
 8016358:	20000000 	.word	0x20000000
 801635c:	080140f7 	.word	0x080140f7
 8016360:	200000a8 	.word	0x200000a8
 8016364:	20026fb8 	.word	0x20026fb8
 8016368:	080140f5 	.word	0x080140f5
 801636c:	200000ac 	.word	0x200000ac

08016370 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8016370:	b510      	push	{r4, lr}
 8016372:	4604      	mov	r4, r0
 8016374:	f7ff ff88 	bl	8016288 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8016378:	4620      	mov	r0, r4
 801637a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801637e:	f7ff bfbd 	b.w	80162fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08016384 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8016384:	b538      	push	{r3, r4, r5, lr}
 8016386:	4c15      	ldr	r4, [pc, #84]	; (80163dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8016388:	7823      	ldrb	r3, [r4, #0]
 801638a:	f3bf 8f5b 	dmb	ish
 801638e:	07da      	lsls	r2, r3, #31
 8016390:	4605      	mov	r5, r0
 8016392:	d40b      	bmi.n	80163ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8016394:	4620      	mov	r0, r4
 8016396:	f007 fb1c 	bl	801d9d2 <__cxa_guard_acquire>
 801639a:	b138      	cbz	r0, 80163ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801639c:	4620      	mov	r0, r4
 801639e:	f007 fb24 	bl	801d9ea <__cxa_guard_release>
 80163a2:	4a0f      	ldr	r2, [pc, #60]	; (80163e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80163a4:	490f      	ldr	r1, [pc, #60]	; (80163e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80163a6:	4810      	ldr	r0, [pc, #64]	; (80163e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80163a8:	f007 fb0c 	bl	801d9c4 <__aeabi_atexit>
 80163ac:	4c0f      	ldr	r4, [pc, #60]	; (80163ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 80163ae:	7823      	ldrb	r3, [r4, #0]
 80163b0:	f3bf 8f5b 	dmb	ish
 80163b4:	07db      	lsls	r3, r3, #31
 80163b6:	d40b      	bmi.n	80163d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80163b8:	4620      	mov	r0, r4
 80163ba:	f007 fb0a 	bl	801d9d2 <__cxa_guard_acquire>
 80163be:	b138      	cbz	r0, 80163d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80163c0:	4620      	mov	r0, r4
 80163c2:	f007 fb12 	bl	801d9ea <__cxa_guard_release>
 80163c6:	4a06      	ldr	r2, [pc, #24]	; (80163e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80163c8:	4909      	ldr	r1, [pc, #36]	; (80163f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80163ca:	480a      	ldr	r0, [pc, #40]	; (80163f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80163cc:	f007 fafa 	bl	801d9c4 <__aeabi_atexit>
 80163d0:	4b05      	ldr	r3, [pc, #20]	; (80163e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80163d2:	652b      	str	r3, [r5, #80]	; 0x50
 80163d4:	4b07      	ldr	r3, [pc, #28]	; (80163f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80163d6:	656b      	str	r3, [r5, #84]	; 0x54
 80163d8:	bd38      	pop	{r3, r4, r5, pc}
 80163da:	bf00      	nop
 80163dc:	20026fec 	.word	0x20026fec
 80163e0:	20000000 	.word	0x20000000
 80163e4:	080140e3 	.word	0x080140e3
 80163e8:	200000e0 	.word	0x200000e0
 80163ec:	20026ff0 	.word	0x20026ff0
 80163f0:	080140e1 	.word	0x080140e1
 80163f4:	200000e4 	.word	0x200000e4

080163f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80163f8:	b538      	push	{r3, r4, r5, lr}
 80163fa:	4c15      	ldr	r4, [pc, #84]	; (8016450 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80163fc:	7823      	ldrb	r3, [r4, #0]
 80163fe:	f3bf 8f5b 	dmb	ish
 8016402:	07da      	lsls	r2, r3, #31
 8016404:	4605      	mov	r5, r0
 8016406:	d40b      	bmi.n	8016420 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8016408:	4620      	mov	r0, r4
 801640a:	f007 fae2 	bl	801d9d2 <__cxa_guard_acquire>
 801640e:	b138      	cbz	r0, 8016420 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8016410:	4620      	mov	r0, r4
 8016412:	f007 faea 	bl	801d9ea <__cxa_guard_release>
 8016416:	4a0f      	ldr	r2, [pc, #60]	; (8016454 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8016418:	490f      	ldr	r1, [pc, #60]	; (8016458 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801641a:	4810      	ldr	r0, [pc, #64]	; (801645c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801641c:	f007 fad2 	bl	801d9c4 <__aeabi_atexit>
 8016420:	4c0f      	ldr	r4, [pc, #60]	; (8016460 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8016422:	7823      	ldrb	r3, [r4, #0]
 8016424:	f3bf 8f5b 	dmb	ish
 8016428:	07db      	lsls	r3, r3, #31
 801642a:	d40b      	bmi.n	8016444 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801642c:	4620      	mov	r0, r4
 801642e:	f007 fad0 	bl	801d9d2 <__cxa_guard_acquire>
 8016432:	b138      	cbz	r0, 8016444 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8016434:	4620      	mov	r0, r4
 8016436:	f007 fad8 	bl	801d9ea <__cxa_guard_release>
 801643a:	4a06      	ldr	r2, [pc, #24]	; (8016454 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801643c:	4909      	ldr	r1, [pc, #36]	; (8016464 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801643e:	480a      	ldr	r0, [pc, #40]	; (8016468 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8016440:	f007 fac0 	bl	801d9c4 <__aeabi_atexit>
 8016444:	4b05      	ldr	r3, [pc, #20]	; (801645c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8016446:	64ab      	str	r3, [r5, #72]	; 0x48
 8016448:	4b07      	ldr	r3, [pc, #28]	; (8016468 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801644a:	64eb      	str	r3, [r5, #76]	; 0x4c
 801644c:	bd38      	pop	{r3, r4, r5, pc}
 801644e:	bf00      	nop
 8016450:	20026ff4 	.word	0x20026ff4
 8016454:	20000000 	.word	0x20000000
 8016458:	080140e7 	.word	0x080140e7
 801645c:	200000e8 	.word	0x200000e8
 8016460:	20026ff8 	.word	0x20026ff8
 8016464:	080140e5 	.word	0x080140e5
 8016468:	200000ec 	.word	0x200000ec

0801646c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801646c:	b538      	push	{r3, r4, r5, lr}
 801646e:	4c15      	ldr	r4, [pc, #84]	; (80164c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8016470:	7823      	ldrb	r3, [r4, #0]
 8016472:	f3bf 8f5b 	dmb	ish
 8016476:	07da      	lsls	r2, r3, #31
 8016478:	4605      	mov	r5, r0
 801647a:	d40b      	bmi.n	8016494 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801647c:	4620      	mov	r0, r4
 801647e:	f007 faa8 	bl	801d9d2 <__cxa_guard_acquire>
 8016482:	b138      	cbz	r0, 8016494 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8016484:	4620      	mov	r0, r4
 8016486:	f007 fab0 	bl	801d9ea <__cxa_guard_release>
 801648a:	4a0f      	ldr	r2, [pc, #60]	; (80164c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801648c:	490f      	ldr	r1, [pc, #60]	; (80164cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801648e:	4810      	ldr	r0, [pc, #64]	; (80164d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8016490:	f007 fa98 	bl	801d9c4 <__aeabi_atexit>
 8016494:	4c0f      	ldr	r4, [pc, #60]	; (80164d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8016496:	7823      	ldrb	r3, [r4, #0]
 8016498:	f3bf 8f5b 	dmb	ish
 801649c:	07db      	lsls	r3, r3, #31
 801649e:	d40b      	bmi.n	80164b8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80164a0:	4620      	mov	r0, r4
 80164a2:	f007 fa96 	bl	801d9d2 <__cxa_guard_acquire>
 80164a6:	b138      	cbz	r0, 80164b8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80164a8:	4620      	mov	r0, r4
 80164aa:	f007 fa9e 	bl	801d9ea <__cxa_guard_release>
 80164ae:	4a06      	ldr	r2, [pc, #24]	; (80164c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80164b0:	4909      	ldr	r1, [pc, #36]	; (80164d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 80164b2:	480a      	ldr	r0, [pc, #40]	; (80164dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80164b4:	f007 fa86 	bl	801d9c4 <__aeabi_atexit>
 80164b8:	4b05      	ldr	r3, [pc, #20]	; (80164d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80164ba:	642b      	str	r3, [r5, #64]	; 0x40
 80164bc:	4b07      	ldr	r3, [pc, #28]	; (80164dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80164be:	646b      	str	r3, [r5, #68]	; 0x44
 80164c0:	bd38      	pop	{r3, r4, r5, pc}
 80164c2:	bf00      	nop
 80164c4:	20026fbc 	.word	0x20026fbc
 80164c8:	20000000 	.word	0x20000000
 80164cc:	080140eb 	.word	0x080140eb
 80164d0:	200000b0 	.word	0x200000b0
 80164d4:	20026fc0 	.word	0x20026fc0
 80164d8:	080140e9 	.word	0x080140e9
 80164dc:	200000b4 	.word	0x200000b4

080164e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80164e0:	b538      	push	{r3, r4, r5, lr}
 80164e2:	4c15      	ldr	r4, [pc, #84]	; (8016538 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80164e4:	7823      	ldrb	r3, [r4, #0]
 80164e6:	f3bf 8f5b 	dmb	ish
 80164ea:	07da      	lsls	r2, r3, #31
 80164ec:	4605      	mov	r5, r0
 80164ee:	d40b      	bmi.n	8016508 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80164f0:	4620      	mov	r0, r4
 80164f2:	f007 fa6e 	bl	801d9d2 <__cxa_guard_acquire>
 80164f6:	b138      	cbz	r0, 8016508 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80164f8:	4620      	mov	r0, r4
 80164fa:	f007 fa76 	bl	801d9ea <__cxa_guard_release>
 80164fe:	4a0f      	ldr	r2, [pc, #60]	; (801653c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8016500:	490f      	ldr	r1, [pc, #60]	; (8016540 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8016502:	4810      	ldr	r0, [pc, #64]	; (8016544 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8016504:	f007 fa5e 	bl	801d9c4 <__aeabi_atexit>
 8016508:	4c0f      	ldr	r4, [pc, #60]	; (8016548 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801650a:	7823      	ldrb	r3, [r4, #0]
 801650c:	f3bf 8f5b 	dmb	ish
 8016510:	07db      	lsls	r3, r3, #31
 8016512:	d40b      	bmi.n	801652c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8016514:	4620      	mov	r0, r4
 8016516:	f007 fa5c 	bl	801d9d2 <__cxa_guard_acquire>
 801651a:	b138      	cbz	r0, 801652c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801651c:	4620      	mov	r0, r4
 801651e:	f007 fa64 	bl	801d9ea <__cxa_guard_release>
 8016522:	4a06      	ldr	r2, [pc, #24]	; (801653c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8016524:	4909      	ldr	r1, [pc, #36]	; (801654c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8016526:	480a      	ldr	r0, [pc, #40]	; (8016550 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8016528:	f007 fa4c 	bl	801d9c4 <__aeabi_atexit>
 801652c:	4b05      	ldr	r3, [pc, #20]	; (8016544 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801652e:	63ab      	str	r3, [r5, #56]	; 0x38
 8016530:	4b07      	ldr	r3, [pc, #28]	; (8016550 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8016532:	63eb      	str	r3, [r5, #60]	; 0x3c
 8016534:	bd38      	pop	{r3, r4, r5, pc}
 8016536:	bf00      	nop
 8016538:	20026fdc 	.word	0x20026fdc
 801653c:	20000000 	.word	0x20000000
 8016540:	080140ef 	.word	0x080140ef
 8016544:	200000d0 	.word	0x200000d0
 8016548:	20026fe0 	.word	0x20026fe0
 801654c:	080140ed 	.word	0x080140ed
 8016550:	200000d4 	.word	0x200000d4

08016554 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8016554:	b510      	push	{r4, lr}
 8016556:	4604      	mov	r4, r0
 8016558:	f7ff ff14 	bl	8016384 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801655c:	4620      	mov	r0, r4
 801655e:	f7ff ff85 	bl	801646c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8016562:	4620      	mov	r0, r4
 8016564:	f7ff ff48 	bl	80163f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8016568:	4620      	mov	r0, r4
 801656a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801656e:	f7ff bfb7 	b.w	80164e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08016574 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8016574:	b538      	push	{r3, r4, r5, lr}
 8016576:	4c15      	ldr	r4, [pc, #84]	; (80165cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8016578:	7823      	ldrb	r3, [r4, #0]
 801657a:	f3bf 8f5b 	dmb	ish
 801657e:	07da      	lsls	r2, r3, #31
 8016580:	4605      	mov	r5, r0
 8016582:	d40b      	bmi.n	801659c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8016584:	4620      	mov	r0, r4
 8016586:	f007 fa24 	bl	801d9d2 <__cxa_guard_acquire>
 801658a:	b138      	cbz	r0, 801659c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801658c:	4620      	mov	r0, r4
 801658e:	f007 fa2c 	bl	801d9ea <__cxa_guard_release>
 8016592:	4a0f      	ldr	r2, [pc, #60]	; (80165d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8016594:	490f      	ldr	r1, [pc, #60]	; (80165d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8016596:	4810      	ldr	r0, [pc, #64]	; (80165d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8016598:	f007 fa14 	bl	801d9c4 <__aeabi_atexit>
 801659c:	4c0f      	ldr	r4, [pc, #60]	; (80165dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801659e:	7823      	ldrb	r3, [r4, #0]
 80165a0:	f3bf 8f5b 	dmb	ish
 80165a4:	07db      	lsls	r3, r3, #31
 80165a6:	d40b      	bmi.n	80165c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80165a8:	4620      	mov	r0, r4
 80165aa:	f007 fa12 	bl	801d9d2 <__cxa_guard_acquire>
 80165ae:	b138      	cbz	r0, 80165c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80165b0:	4620      	mov	r0, r4
 80165b2:	f007 fa1a 	bl	801d9ea <__cxa_guard_release>
 80165b6:	4a06      	ldr	r2, [pc, #24]	; (80165d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80165b8:	4909      	ldr	r1, [pc, #36]	; (80165e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80165ba:	480a      	ldr	r0, [pc, #40]	; (80165e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80165bc:	f007 fa02 	bl	801d9c4 <__aeabi_atexit>
 80165c0:	4b05      	ldr	r3, [pc, #20]	; (80165d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80165c2:	662b      	str	r3, [r5, #96]	; 0x60
 80165c4:	4b07      	ldr	r3, [pc, #28]	; (80165e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80165c6:	666b      	str	r3, [r5, #100]	; 0x64
 80165c8:	bd38      	pop	{r3, r4, r5, pc}
 80165ca:	bf00      	nop
 80165cc:	20026fc4 	.word	0x20026fc4
 80165d0:	20000000 	.word	0x20000000
 80165d4:	080140db 	.word	0x080140db
 80165d8:	200000b8 	.word	0x200000b8
 80165dc:	20026fc8 	.word	0x20026fc8
 80165e0:	080140d9 	.word	0x080140d9
 80165e4:	200000bc 	.word	0x200000bc

080165e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80165e8:	b538      	push	{r3, r4, r5, lr}
 80165ea:	4c15      	ldr	r4, [pc, #84]	; (8016640 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80165ec:	7823      	ldrb	r3, [r4, #0]
 80165ee:	f3bf 8f5b 	dmb	ish
 80165f2:	07da      	lsls	r2, r3, #31
 80165f4:	4605      	mov	r5, r0
 80165f6:	d40b      	bmi.n	8016610 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80165f8:	4620      	mov	r0, r4
 80165fa:	f007 f9ea 	bl	801d9d2 <__cxa_guard_acquire>
 80165fe:	b138      	cbz	r0, 8016610 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8016600:	4620      	mov	r0, r4
 8016602:	f007 f9f2 	bl	801d9ea <__cxa_guard_release>
 8016606:	4a0f      	ldr	r2, [pc, #60]	; (8016644 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8016608:	490f      	ldr	r1, [pc, #60]	; (8016648 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801660a:	4810      	ldr	r0, [pc, #64]	; (801664c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801660c:	f007 f9da 	bl	801d9c4 <__aeabi_atexit>
 8016610:	4c0f      	ldr	r4, [pc, #60]	; (8016650 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8016612:	7823      	ldrb	r3, [r4, #0]
 8016614:	f3bf 8f5b 	dmb	ish
 8016618:	07db      	lsls	r3, r3, #31
 801661a:	d40b      	bmi.n	8016634 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801661c:	4620      	mov	r0, r4
 801661e:	f007 f9d8 	bl	801d9d2 <__cxa_guard_acquire>
 8016622:	b138      	cbz	r0, 8016634 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8016624:	4620      	mov	r0, r4
 8016626:	f007 f9e0 	bl	801d9ea <__cxa_guard_release>
 801662a:	4a06      	ldr	r2, [pc, #24]	; (8016644 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801662c:	4909      	ldr	r1, [pc, #36]	; (8016654 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801662e:	480a      	ldr	r0, [pc, #40]	; (8016658 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8016630:	f007 f9c8 	bl	801d9c4 <__aeabi_atexit>
 8016634:	4b05      	ldr	r3, [pc, #20]	; (801664c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8016636:	65ab      	str	r3, [r5, #88]	; 0x58
 8016638:	4b07      	ldr	r3, [pc, #28]	; (8016658 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801663a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801663c:	bd38      	pop	{r3, r4, r5, pc}
 801663e:	bf00      	nop
 8016640:	20026f9c 	.word	0x20026f9c
 8016644:	20000000 	.word	0x20000000
 8016648:	080140df 	.word	0x080140df
 801664c:	20000090 	.word	0x20000090
 8016650:	20026fa0 	.word	0x20026fa0
 8016654:	080140dd 	.word	0x080140dd
 8016658:	20000094 	.word	0x20000094

0801665c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801665c:	b510      	push	{r4, lr}
 801665e:	4604      	mov	r4, r0
 8016660:	f7ff ff88 	bl	8016574 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8016664:	4620      	mov	r0, r4
 8016666:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801666a:	f7ff bfbd 	b.w	80165e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08016670 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8016670:	b538      	push	{r3, r4, r5, lr}
 8016672:	4c15      	ldr	r4, [pc, #84]	; (80166c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8016674:	7823      	ldrb	r3, [r4, #0]
 8016676:	f3bf 8f5b 	dmb	ish
 801667a:	07da      	lsls	r2, r3, #31
 801667c:	4605      	mov	r5, r0
 801667e:	d40b      	bmi.n	8016698 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8016680:	4620      	mov	r0, r4
 8016682:	f007 f9a6 	bl	801d9d2 <__cxa_guard_acquire>
 8016686:	b138      	cbz	r0, 8016698 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8016688:	4620      	mov	r0, r4
 801668a:	f007 f9ae 	bl	801d9ea <__cxa_guard_release>
 801668e:	4a0f      	ldr	r2, [pc, #60]	; (80166cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8016690:	490f      	ldr	r1, [pc, #60]	; (80166d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8016692:	4810      	ldr	r0, [pc, #64]	; (80166d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8016694:	f007 f996 	bl	801d9c4 <__aeabi_atexit>
 8016698:	4c0f      	ldr	r4, [pc, #60]	; (80166d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801669a:	7823      	ldrb	r3, [r4, #0]
 801669c:	f3bf 8f5b 	dmb	ish
 80166a0:	07db      	lsls	r3, r3, #31
 80166a2:	d40b      	bmi.n	80166bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80166a4:	4620      	mov	r0, r4
 80166a6:	f007 f994 	bl	801d9d2 <__cxa_guard_acquire>
 80166aa:	b138      	cbz	r0, 80166bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80166ac:	4620      	mov	r0, r4
 80166ae:	f007 f99c 	bl	801d9ea <__cxa_guard_release>
 80166b2:	4a06      	ldr	r2, [pc, #24]	; (80166cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80166b4:	4909      	ldr	r1, [pc, #36]	; (80166dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80166b6:	480a      	ldr	r0, [pc, #40]	; (80166e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80166b8:	f007 f984 	bl	801d9c4 <__aeabi_atexit>
 80166bc:	4b05      	ldr	r3, [pc, #20]	; (80166d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80166be:	672b      	str	r3, [r5, #112]	; 0x70
 80166c0:	4b07      	ldr	r3, [pc, #28]	; (80166e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80166c2:	676b      	str	r3, [r5, #116]	; 0x74
 80166c4:	bd38      	pop	{r3, r4, r5, pc}
 80166c6:	bf00      	nop
 80166c8:	20026f94 	.word	0x20026f94
 80166cc:	20000000 	.word	0x20000000
 80166d0:	080140d3 	.word	0x080140d3
 80166d4:	20000088 	.word	0x20000088
 80166d8:	20026f98 	.word	0x20026f98
 80166dc:	080140d1 	.word	0x080140d1
 80166e0:	2000008c 	.word	0x2000008c

080166e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80166e4:	b538      	push	{r3, r4, r5, lr}
 80166e6:	4c15      	ldr	r4, [pc, #84]	; (801673c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80166e8:	7823      	ldrb	r3, [r4, #0]
 80166ea:	f3bf 8f5b 	dmb	ish
 80166ee:	07da      	lsls	r2, r3, #31
 80166f0:	4605      	mov	r5, r0
 80166f2:	d40b      	bmi.n	801670c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80166f4:	4620      	mov	r0, r4
 80166f6:	f007 f96c 	bl	801d9d2 <__cxa_guard_acquire>
 80166fa:	b138      	cbz	r0, 801670c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80166fc:	4620      	mov	r0, r4
 80166fe:	f007 f974 	bl	801d9ea <__cxa_guard_release>
 8016702:	4a0f      	ldr	r2, [pc, #60]	; (8016740 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8016704:	490f      	ldr	r1, [pc, #60]	; (8016744 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8016706:	4810      	ldr	r0, [pc, #64]	; (8016748 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8016708:	f007 f95c 	bl	801d9c4 <__aeabi_atexit>
 801670c:	4c0f      	ldr	r4, [pc, #60]	; (801674c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801670e:	7823      	ldrb	r3, [r4, #0]
 8016710:	f3bf 8f5b 	dmb	ish
 8016714:	07db      	lsls	r3, r3, #31
 8016716:	d40b      	bmi.n	8016730 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8016718:	4620      	mov	r0, r4
 801671a:	f007 f95a 	bl	801d9d2 <__cxa_guard_acquire>
 801671e:	b138      	cbz	r0, 8016730 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8016720:	4620      	mov	r0, r4
 8016722:	f007 f962 	bl	801d9ea <__cxa_guard_release>
 8016726:	4a06      	ldr	r2, [pc, #24]	; (8016740 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8016728:	4909      	ldr	r1, [pc, #36]	; (8016750 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801672a:	480a      	ldr	r0, [pc, #40]	; (8016754 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801672c:	f007 f94a 	bl	801d9c4 <__aeabi_atexit>
 8016730:	4b05      	ldr	r3, [pc, #20]	; (8016748 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8016732:	66ab      	str	r3, [r5, #104]	; 0x68
 8016734:	4b07      	ldr	r3, [pc, #28]	; (8016754 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8016736:	66eb      	str	r3, [r5, #108]	; 0x6c
 8016738:	bd38      	pop	{r3, r4, r5, pc}
 801673a:	bf00      	nop
 801673c:	20026f8c 	.word	0x20026f8c
 8016740:	20000000 	.word	0x20000000
 8016744:	080140d7 	.word	0x080140d7
 8016748:	20000080 	.word	0x20000080
 801674c:	20026f90 	.word	0x20026f90
 8016750:	080140d5 	.word	0x080140d5
 8016754:	20000084 	.word	0x20000084

08016758 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8016758:	b510      	push	{r4, lr}
 801675a:	4604      	mov	r4, r0
 801675c:	f7ff ff88 	bl	8016670 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8016760:	4620      	mov	r0, r4
 8016762:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016766:	f7ff bfbd 	b.w	80166e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801676a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801676a:	b510      	push	{r4, lr}
 801676c:	4604      	mov	r4, r0
 801676e:	f7ff fff3 	bl	8016758 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8016772:	4620      	mov	r0, r4
 8016774:	f7ff ff72 	bl	801665c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8016778:	4620      	mov	r0, r4
 801677a:	f7ff fdf9 	bl	8016370 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801677e:	4620      	mov	r0, r4
 8016780:	f7ff fcfa 	bl	8016178 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8016784:	4620      	mov	r0, r4
 8016786:	f7ff fd75 	bl	8016274 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801678a:	4620      	mov	r0, r4
 801678c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016790:	f7ff bee0 	b.w	8016554 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08016794 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8016794:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016798:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 801679c:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 80167a0:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80167a4:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80167a8:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 80167ac:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80167b0:	8808      	ldrh	r0, [r1, #0]
 80167b2:	fb0e 4708 	mla	r7, lr, r8, r4
 80167b6:	f1be 0f00 	cmp.w	lr, #0
 80167ba:	eb02 0a07 	add.w	sl, r2, r7
 80167be:	db37      	blt.n	8016830 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80167c0:	45f3      	cmp	fp, lr
 80167c2:	dd35      	ble.n	8016830 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80167c4:	2c00      	cmp	r4, #0
 80167c6:	db31      	blt.n	801682c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80167c8:	45a0      	cmp	r8, r4
 80167ca:	dd2f      	ble.n	801682c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80167cc:	5dd2      	ldrb	r2, [r2, r7]
 80167ce:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 80167d2:	1c62      	adds	r2, r4, #1
 80167d4:	d42f      	bmi.n	8016836 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80167d6:	4590      	cmp	r8, r2
 80167d8:	dd2d      	ble.n	8016836 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80167da:	b366      	cbz	r6, 8016836 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80167dc:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80167e0:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80167e4:	f11e 0e01 	adds.w	lr, lr, #1
 80167e8:	d429      	bmi.n	801683e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80167ea:	45f3      	cmp	fp, lr
 80167ec:	dd27      	ble.n	801683e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80167ee:	f1bc 0f00 	cmp.w	ip, #0
 80167f2:	f000 80a1 	beq.w	8016938 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a4>
 80167f6:	2c00      	cmp	r4, #0
 80167f8:	db1f      	blt.n	801683a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80167fa:	45a0      	cmp	r8, r4
 80167fc:	dd1d      	ble.n	801683a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80167fe:	f81a 2008 	ldrb.w	r2, [sl, r8]
 8016802:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 8016806:	3401      	adds	r4, #1
 8016808:	d41c      	bmi.n	8016844 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 801680a:	45a0      	cmp	r8, r4
 801680c:	dd1a      	ble.n	8016844 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 801680e:	b1de      	cbz	r6, 8016848 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 8016810:	44d0      	add	r8, sl
 8016812:	f898 2001 	ldrb.w	r2, [r8, #1]
 8016816:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801681a:	2e0f      	cmp	r6, #15
 801681c:	d915      	bls.n	801684a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 801681e:	4b49      	ldr	r3, [pc, #292]	; (8016944 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8016820:	4a49      	ldr	r2, [pc, #292]	; (8016948 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 8016822:	484a      	ldr	r0, [pc, #296]	; (801694c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 8016824:	f240 11db 	movw	r1, #475	; 0x1db
 8016828:	f007 f900 	bl	801da2c <__assert_func>
 801682c:	4681      	mov	r9, r0
 801682e:	e7d0      	b.n	80167d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8016830:	4607      	mov	r7, r0
 8016832:	4681      	mov	r9, r0
 8016834:	e7d6      	b.n	80167e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8016836:	4607      	mov	r7, r0
 8016838:	e7d4      	b.n	80167e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 801683a:	4686      	mov	lr, r0
 801683c:	e7e3      	b.n	8016806 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 801683e:	4603      	mov	r3, r0
 8016840:	4686      	mov	lr, r0
 8016842:	e7ea      	b.n	801681a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8016844:	4603      	mov	r3, r0
 8016846:	e7e8      	b.n	801681a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8016848:	4603      	mov	r3, r0
 801684a:	f1bc 0f0f 	cmp.w	ip, #15
 801684e:	d8e6      	bhi.n	801681e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8016850:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8016854:	fb16 f80c 	smulbb	r8, r6, ip
 8016858:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801685c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8016860:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016864:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8016868:	ea44 0909 	orr.w	r9, r4, r9
 801686c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016870:	f1cc 0410 	rsb	r4, ip, #16
 8016874:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8016878:	1ba4      	subs	r4, r4, r6
 801687a:	041a      	lsls	r2, r3, #16
 801687c:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8016880:	ea4a 0707 	orr.w	r7, sl, r7
 8016884:	4377      	muls	r7, r6
 8016886:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801688a:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801688e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016892:	fb04 7409 	mla	r4, r4, r9, r7
 8016896:	4313      	orrs	r3, r2
 8016898:	ea4f 420e 	mov.w	r2, lr, lsl #16
 801689c:	fb08 4303 	mla	r3, r8, r3, r4
 80168a0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80168a4:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 80168a8:	4322      	orrs	r2, r4
 80168aa:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 80168ae:	fb0c 3202 	mla	r2, ip, r2, r3
 80168b2:	0d53      	lsrs	r3, r2, #21
 80168b4:	0952      	lsrs	r2, r2, #5
 80168b6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80168ba:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80168be:	431a      	orrs	r2, r3
 80168c0:	b293      	uxth	r3, r2
 80168c2:	b2af      	uxth	r7, r5
 80168c4:	1202      	asrs	r2, r0, #8
 80168c6:	43ed      	mvns	r5, r5
 80168c8:	b2ed      	uxtb	r5, r5
 80168ca:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80168ce:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80168d2:	fb12 f205 	smulbb	r2, r2, r5
 80168d6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80168da:	fb0c 2c07 	mla	ip, ip, r7, r2
 80168de:	00dc      	lsls	r4, r3, #3
 80168e0:	10da      	asrs	r2, r3, #3
 80168e2:	10c6      	asrs	r6, r0, #3
 80168e4:	00c3      	lsls	r3, r0, #3
 80168e6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80168ea:	b2db      	uxtb	r3, r3
 80168ec:	fb16 f605 	smulbb	r6, r6, r5
 80168f0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80168f4:	b2e4      	uxtb	r4, r4
 80168f6:	fb13 f305 	smulbb	r3, r3, r5
 80168fa:	fa1f fc8c 	uxth.w	ip, ip
 80168fe:	fb02 6207 	mla	r2, r2, r7, r6
 8016902:	fb04 3307 	mla	r3, r4, r7, r3
 8016906:	b296      	uxth	r6, r2
 8016908:	b29a      	uxth	r2, r3
 801690a:	f10c 0301 	add.w	r3, ip, #1
 801690e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8016912:	1c53      	adds	r3, r2, #1
 8016914:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8016918:	1c72      	adds	r2, r6, #1
 801691a:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 801691e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016922:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8016926:	0952      	lsrs	r2, r2, #5
 8016928:	ea43 030c 	orr.w	r3, r3, ip
 801692c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016930:	4313      	orrs	r3, r2
 8016932:	800b      	strh	r3, [r1, #0]
 8016934:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016938:	2e0f      	cmp	r6, #15
 801693a:	f63f af70 	bhi.w	801681e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 801693e:	4603      	mov	r3, r0
 8016940:	4686      	mov	lr, r0
 8016942:	e785      	b.n	8016850 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 8016944:	08021c76 	.word	0x08021c76
 8016948:	0802224f 	.word	0x0802224f
 801694c:	08021c43 	.word	0x08021c43

08016950 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016950:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016954:	ed2d 8b08 	vpush	{d8-d11}
 8016958:	b099      	sub	sp, #100	; 0x64
 801695a:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 801695e:	9215      	str	r2, [sp, #84]	; 0x54
 8016960:	9309      	str	r3, [sp, #36]	; 0x24
 8016962:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8016964:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8016968:	930d      	str	r3, [sp, #52]	; 0x34
 801696a:	910c      	str	r1, [sp, #48]	; 0x30
 801696c:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8016970:	9016      	str	r0, [sp, #88]	; 0x58
 8016972:	6850      	ldr	r0, [r2, #4]
 8016974:	6812      	ldr	r2, [r2, #0]
 8016976:	fb00 1303 	mla	r3, r0, r3, r1
 801697a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801697e:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8016980:	681b      	ldr	r3, [r3, #0]
 8016982:	930b      	str	r3, [sp, #44]	; 0x2c
 8016984:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8016986:	685e      	ldr	r6, [r3, #4]
 8016988:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801698a:	43db      	mvns	r3, r3
 801698c:	b2db      	uxtb	r3, r3
 801698e:	eeb0 aa40 	vmov.f32	s20, s0
 8016992:	eef0 9a60 	vmov.f32	s19, s1
 8016996:	eeb0 9a41 	vmov.f32	s18, s2
 801699a:	eeb0 8a62 	vmov.f32	s16, s5
 801699e:	eef0 8a43 	vmov.f32	s17, s6
 80169a2:	eef0 ba44 	vmov.f32	s23, s8
 80169a6:	eeb0 ba64 	vmov.f32	s22, s9
 80169aa:	eef0 aa45 	vmov.f32	s21, s10
 80169ae:	3604      	adds	r6, #4
 80169b0:	930a      	str	r3, [sp, #40]	; 0x28
 80169b2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80169b4:	2b00      	cmp	r3, #0
 80169b6:	dc03      	bgt.n	80169c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80169b8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80169ba:	2b00      	cmp	r3, #0
 80169bc:	f340 8225 	ble.w	8016e0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 80169c0:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80169c2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80169c6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80169ca:	1e48      	subs	r0, r1, #1
 80169cc:	1e57      	subs	r7, r2, #1
 80169ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80169d0:	2b00      	cmp	r3, #0
 80169d2:	f340 80e3 	ble.w	8016b9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 80169d6:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80169da:	ea4f 4325 	mov.w	r3, r5, asr #16
 80169de:	d406      	bmi.n	80169ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80169e0:	4584      	cmp	ip, r0
 80169e2:	da04      	bge.n	80169ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80169e4:	2b00      	cmp	r3, #0
 80169e6:	db02      	blt.n	80169ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80169e8:	42bb      	cmp	r3, r7
 80169ea:	f2c0 80d8 	blt.w	8016b9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 80169ee:	f11c 0c01 	adds.w	ip, ip, #1
 80169f2:	f100 80c9 	bmi.w	8016b88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80169f6:	4561      	cmp	r1, ip
 80169f8:	f2c0 80c6 	blt.w	8016b88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80169fc:	3301      	adds	r3, #1
 80169fe:	f100 80c3 	bmi.w	8016b88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8016a02:	429a      	cmp	r2, r3
 8016a04:	f2c0 80c0 	blt.w	8016b88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8016a08:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8016a0c:	4647      	mov	r7, r8
 8016a0e:	f1bb 0f00 	cmp.w	fp, #0
 8016a12:	f340 80e3 	ble.w	8016bdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8016a16:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8016a18:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8016a1a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8016a1e:	689b      	ldr	r3, [r3, #8]
 8016a20:	ea5f 422a 	movs.w	r2, sl, asr #16
 8016a24:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8016a28:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8016a2c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8016a30:	f100 8121 	bmi.w	8016c76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8016a34:	f103 39ff 	add.w	r9, r3, #4294967295
 8016a38:	454a      	cmp	r2, r9
 8016a3a:	f280 811c 	bge.w	8016c76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8016a3e:	f1bc 0f00 	cmp.w	ip, #0
 8016a42:	f2c0 8118 	blt.w	8016c76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8016a46:	f10e 39ff 	add.w	r9, lr, #4294967295
 8016a4a:	45cc      	cmp	ip, r9
 8016a4c:	f280 8113 	bge.w	8016c76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8016a50:	b21b      	sxth	r3, r3
 8016a52:	fb0c 2203 	mla	r2, ip, r3, r2
 8016a56:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016a58:	eb04 0902 	add.w	r9, r4, r2
 8016a5c:	5ca2      	ldrb	r2, [r4, r2]
 8016a5e:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8016a62:	2800      	cmp	r0, #0
 8016a64:	f000 80fe 	beq.w	8016c64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8016a68:	f899 2001 	ldrb.w	r2, [r9, #1]
 8016a6c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8016a70:	9211      	str	r2, [sp, #68]	; 0x44
 8016a72:	b151      	cbz	r1, 8016a8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8016a74:	eb09 0203 	add.w	r2, r9, r3
 8016a78:	f819 3003 	ldrb.w	r3, [r9, r3]
 8016a7c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016a80:	930f      	str	r3, [sp, #60]	; 0x3c
 8016a82:	7853      	ldrb	r3, [r2, #1]
 8016a84:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016a88:	9312      	str	r3, [sp, #72]	; 0x48
 8016a8a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016a8c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016a8e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016a92:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016a96:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016a9a:	ea4c 0c03 	orr.w	ip, ip, r3
 8016a9e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016aa0:	041b      	lsls	r3, r3, #16
 8016aa2:	fb10 f201 	smulbb	r2, r0, r1
 8016aa6:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8016aaa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8016aae:	10d2      	asrs	r2, r2, #3
 8016ab0:	4323      	orrs	r3, r4
 8016ab2:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8016ab6:	4353      	muls	r3, r2
 8016ab8:	fb09 330c 	mla	r3, r9, ip, r3
 8016abc:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8016ac0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016ac4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8016ac8:	ea4c 0e0e 	orr.w	lr, ip, lr
 8016acc:	f1c1 0c10 	rsb	ip, r1, #16
 8016ad0:	ebac 0c00 	sub.w	ip, ip, r0
 8016ad4:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8016ad8:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8016adc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016ade:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016ae0:	0418      	lsls	r0, r3, #16
 8016ae2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8016ae6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016aea:	4318      	orrs	r0, r3
 8016aec:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8016af0:	fb02 c200 	mla	r2, r2, r0, ip
 8016af4:	0d53      	lsrs	r3, r2, #21
 8016af6:	0952      	lsrs	r2, r2, #5
 8016af8:	8838      	ldrh	r0, [r7, #0]
 8016afa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016afe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016b02:	431a      	orrs	r2, r3
 8016b04:	b292      	uxth	r2, r2
 8016b06:	1201      	asrs	r1, r0, #8
 8016b08:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8016b0c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8016b10:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8016b14:	fb11 f104 	smulbb	r1, r1, r4
 8016b18:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8016b1c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016b20:	00c0      	lsls	r0, r0, #3
 8016b22:	fb0c 1c03 	mla	ip, ip, r3, r1
 8016b26:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8016b2a:	10d1      	asrs	r1, r2, #3
 8016b2c:	b2c0      	uxtb	r0, r0
 8016b2e:	00d2      	lsls	r2, r2, #3
 8016b30:	b2d2      	uxtb	r2, r2
 8016b32:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016b36:	fb1e fe04 	smulbb	lr, lr, r4
 8016b3a:	fb10 f004 	smulbb	r0, r0, r4
 8016b3e:	fa1f fc8c 	uxth.w	ip, ip
 8016b42:	fb01 e103 	mla	r1, r1, r3, lr
 8016b46:	fb02 0303 	mla	r3, r2, r3, r0
 8016b4a:	b29a      	uxth	r2, r3
 8016b4c:	f10c 0301 	add.w	r3, ip, #1
 8016b50:	b289      	uxth	r1, r1
 8016b52:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8016b56:	1c53      	adds	r3, r2, #1
 8016b58:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8016b5c:	1c4a      	adds	r2, r1, #1
 8016b5e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016b62:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016b66:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8016b6a:	0949      	lsrs	r1, r1, #5
 8016b6c:	ea43 030c 	orr.w	r3, r3, ip
 8016b70:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016b74:	430b      	orrs	r3, r1
 8016b76:	803b      	strh	r3, [r7, #0]
 8016b78:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016b7a:	449a      	add	sl, r3
 8016b7c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016b7e:	3702      	adds	r7, #2
 8016b80:	441d      	add	r5, r3
 8016b82:	f10b 3bff 	add.w	fp, fp, #4294967295
 8016b86:	e742      	b.n	8016a0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8016b88:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016b8a:	449a      	add	sl, r3
 8016b8c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016b8e:	441d      	add	r5, r3
 8016b90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016b92:	3b01      	subs	r3, #1
 8016b94:	9309      	str	r3, [sp, #36]	; 0x24
 8016b96:	f108 0802 	add.w	r8, r8, #2
 8016b9a:	e718      	b.n	80169ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016b9c:	d023      	beq.n	8016be6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8016b9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016ba0:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8016ba2:	3b01      	subs	r3, #1
 8016ba4:	fb00 a003 	mla	r0, r0, r3, sl
 8016ba8:	1400      	asrs	r0, r0, #16
 8016baa:	f53f af2d 	bmi.w	8016a08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8016bae:	3901      	subs	r1, #1
 8016bb0:	4288      	cmp	r0, r1
 8016bb2:	f6bf af29 	bge.w	8016a08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8016bb6:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8016bb8:	fb01 5303 	mla	r3, r1, r3, r5
 8016bbc:	141b      	asrs	r3, r3, #16
 8016bbe:	f53f af23 	bmi.w	8016a08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8016bc2:	3a01      	subs	r2, #1
 8016bc4:	4293      	cmp	r3, r2
 8016bc6:	f6bf af1f 	bge.w	8016a08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8016bca:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8016bce:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8016bd2:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8016bd6:	f1be 0f00 	cmp.w	lr, #0
 8016bda:	dc6c      	bgt.n	8016cb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 8016bdc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016bde:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8016be2:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8016be6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016be8:	2b00      	cmp	r3, #0
 8016bea:	f340 810e 	ble.w	8016e0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 8016bee:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016bf2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016bf6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016bfa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016bfc:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016c00:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016c04:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016c08:	eef0 6a48 	vmov.f32	s13, s16
 8016c0c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016c10:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016c14:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016c18:	ee16 aa90 	vmov	sl, s13
 8016c1c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016c20:	eef0 6a68 	vmov.f32	s13, s17
 8016c24:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016c28:	ee18 2a10 	vmov	r2, s16
 8016c2c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016c30:	fb92 f3f3 	sdiv	r3, r2, r3
 8016c34:	ee18 2a90 	vmov	r2, s17
 8016c38:	932d      	str	r3, [sp, #180]	; 0xb4
 8016c3a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016c3c:	fb92 f3f3 	sdiv	r3, r2, r3
 8016c40:	932e      	str	r3, [sp, #184]	; 0xb8
 8016c42:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016c44:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8016c46:	3b01      	subs	r3, #1
 8016c48:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016c4c:	930c      	str	r3, [sp, #48]	; 0x30
 8016c4e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016c50:	bf08      	it	eq
 8016c52:	4613      	moveq	r3, r2
 8016c54:	ee16 5a90 	vmov	r5, s13
 8016c58:	9309      	str	r3, [sp, #36]	; 0x24
 8016c5a:	eef0 8a67 	vmov.f32	s17, s15
 8016c5e:	eeb0 8a47 	vmov.f32	s16, s14
 8016c62:	e6a6      	b.n	80169b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8016c64:	2900      	cmp	r1, #0
 8016c66:	f43f af10 	beq.w	8016a8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8016c6a:	f819 3003 	ldrb.w	r3, [r9, r3]
 8016c6e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016c72:	930f      	str	r3, [sp, #60]	; 0x3c
 8016c74:	e709      	b.n	8016a8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8016c76:	f112 0901 	adds.w	r9, r2, #1
 8016c7a:	f53f af7d 	bmi.w	8016b78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8016c7e:	454b      	cmp	r3, r9
 8016c80:	f6ff af7a 	blt.w	8016b78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8016c84:	f11c 0901 	adds.w	r9, ip, #1
 8016c88:	f53f af76 	bmi.w	8016b78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8016c8c:	45ce      	cmp	lr, r9
 8016c8e:	f6ff af73 	blt.w	8016b78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8016c92:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016c94:	9202      	str	r2, [sp, #8]
 8016c96:	b21b      	sxth	r3, r3
 8016c98:	fa0f f28e 	sxth.w	r2, lr
 8016c9c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8016ca0:	e9cd c003 	strd	ip, r0, [sp, #12]
 8016ca4:	9201      	str	r2, [sp, #4]
 8016ca6:	9300      	str	r3, [sp, #0]
 8016ca8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016caa:	9816      	ldr	r0, [sp, #88]	; 0x58
 8016cac:	4633      	mov	r3, r6
 8016cae:	4639      	mov	r1, r7
 8016cb0:	f7ff fd70 	bl	8016794 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8016cb4:	e760      	b.n	8016b78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8016cb6:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8016cb8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016cba:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8016cbe:	ea4f 422a 	mov.w	r2, sl, asr #16
 8016cc2:	1429      	asrs	r1, r5, #16
 8016cc4:	fb03 2101 	mla	r1, r3, r1, r2
 8016cc8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016cca:	440a      	add	r2, r1
 8016ccc:	5c61      	ldrb	r1, [r4, r1]
 8016cce:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8016cd2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8016cd6:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8016cda:	f1bc 0f00 	cmp.w	ip, #0
 8016cde:	f000 808c 	beq.w	8016dfa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8016ce2:	7857      	ldrb	r7, [r2, #1]
 8016ce4:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8016ce8:	9413      	str	r4, [sp, #76]	; 0x4c
 8016cea:	b140      	cbz	r0, 8016cfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8016cec:	18d7      	adds	r7, r2, r3
 8016cee:	5cd3      	ldrb	r3, [r2, r3]
 8016cf0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016cf4:	9310      	str	r3, [sp, #64]	; 0x40
 8016cf6:	787b      	ldrb	r3, [r7, #1]
 8016cf8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016cfc:	9314      	str	r3, [sp, #80]	; 0x50
 8016cfe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016d00:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016d02:	fb1c f200 	smulbb	r2, ip, r0
 8016d06:	041f      	lsls	r7, r3, #16
 8016d08:	10d2      	asrs	r2, r2, #3
 8016d0a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016d0e:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8016d12:	431f      	orrs	r7, r3
 8016d14:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8016d18:	9317      	str	r3, [sp, #92]	; 0x5c
 8016d1a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8016d1c:	041b      	lsls	r3, r3, #16
 8016d1e:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8016d22:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8016d26:	ea43 030b 	orr.w	r3, r3, fp
 8016d2a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8016d2c:	4353      	muls	r3, r2
 8016d2e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8016d32:	fb04 3707 	mla	r7, r4, r7, r3
 8016d36:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016d3a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8016d3e:	ea43 0b01 	orr.w	fp, r3, r1
 8016d42:	f1c0 0110 	rsb	r1, r0, #16
 8016d46:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016d48:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016d4a:	eba1 0c0c 	sub.w	ip, r1, ip
 8016d4e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8016d52:	fb0c 770b 	mla	r7, ip, fp, r7
 8016d56:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016d5a:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8016d5e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016d62:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8016d66:	ea4c 0c0b 	orr.w	ip, ip, fp
 8016d6a:	fb02 770c 	mla	r7, r2, ip, r7
 8016d6e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016d70:	0d79      	lsrs	r1, r7, #21
 8016d72:	097f      	lsrs	r7, r7, #5
 8016d74:	8812      	ldrh	r2, [r2, #0]
 8016d76:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016d7a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8016d7e:	430f      	orrs	r7, r1
 8016d80:	b2bb      	uxth	r3, r7
 8016d82:	1211      	asrs	r1, r2, #8
 8016d84:	1218      	asrs	r0, r3, #8
 8016d86:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8016d8a:	fb11 f104 	smulbb	r1, r1, r4
 8016d8e:	10d7      	asrs	r7, r2, #3
 8016d90:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016d94:	00d2      	lsls	r2, r2, #3
 8016d96:	fb00 1009 	mla	r0, r0, r9, r1
 8016d9a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016d9e:	10d9      	asrs	r1, r3, #3
 8016da0:	b2d2      	uxtb	r2, r2
 8016da2:	00db      	lsls	r3, r3, #3
 8016da4:	fb17 f704 	smulbb	r7, r7, r4
 8016da8:	fb12 f204 	smulbb	r2, r2, r4
 8016dac:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016db0:	b2db      	uxtb	r3, r3
 8016db2:	b280      	uxth	r0, r0
 8016db4:	fb01 7109 	mla	r1, r1, r9, r7
 8016db8:	fb03 2309 	mla	r3, r3, r9, r2
 8016dbc:	b29b      	uxth	r3, r3
 8016dbe:	b289      	uxth	r1, r1
 8016dc0:	1c42      	adds	r2, r0, #1
 8016dc2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8016dc6:	1c4f      	adds	r7, r1, #1
 8016dc8:	1c5a      	adds	r2, r3, #1
 8016dca:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8016dce:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8016dd2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8016dd6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016dda:	0949      	lsrs	r1, r1, #5
 8016ddc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016dde:	4310      	orrs	r0, r2
 8016de0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016de4:	4308      	orrs	r0, r1
 8016de6:	f823 0b02 	strh.w	r0, [r3], #2
 8016dea:	930e      	str	r3, [sp, #56]	; 0x38
 8016dec:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016dee:	449a      	add	sl, r3
 8016df0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016df2:	f10e 3eff 	add.w	lr, lr, #4294967295
 8016df6:	441d      	add	r5, r3
 8016df8:	e6ed      	b.n	8016bd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 8016dfa:	2800      	cmp	r0, #0
 8016dfc:	f43f af7f 	beq.w	8016cfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8016e00:	5cd3      	ldrb	r3, [r2, r3]
 8016e02:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016e06:	9310      	str	r3, [sp, #64]	; 0x40
 8016e08:	e779      	b.n	8016cfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8016e0a:	b019      	add	sp, #100	; 0x64
 8016e0c:	ecbd 8b08 	vpop	{d8-d11}
 8016e10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016e14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8016e14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8016e18:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8016e1c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8016e20:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8016e24:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8016e28:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8016e2c:	8808      	ldrh	r0, [r1, #0]
 8016e2e:	fb06 570e 	mla	r7, r6, lr, r5
 8016e32:	2e00      	cmp	r6, #0
 8016e34:	eb02 0807 	add.w	r8, r2, r7
 8016e38:	db38      	blt.n	8016eac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8016e3a:	45b1      	cmp	r9, r6
 8016e3c:	dd36      	ble.n	8016eac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8016e3e:	2d00      	cmp	r5, #0
 8016e40:	db32      	blt.n	8016ea8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8016e42:	45ae      	cmp	lr, r5
 8016e44:	dd30      	ble.n	8016ea8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8016e46:	5dd2      	ldrb	r2, [r2, r7]
 8016e48:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8016e4c:	1c6a      	adds	r2, r5, #1
 8016e4e:	d430      	bmi.n	8016eb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8016e50:	4596      	cmp	lr, r2
 8016e52:	dd2e      	ble.n	8016eb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8016e54:	b36c      	cbz	r4, 8016eb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8016e56:	f898 2001 	ldrb.w	r2, [r8, #1]
 8016e5a:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8016e5e:	3601      	adds	r6, #1
 8016e60:	d42b      	bmi.n	8016eba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8016e62:	45b1      	cmp	r9, r6
 8016e64:	dd29      	ble.n	8016eba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8016e66:	f1bc 0f00 	cmp.w	ip, #0
 8016e6a:	d028      	beq.n	8016ebe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8016e6c:	2d00      	cmp	r5, #0
 8016e6e:	db22      	blt.n	8016eb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8016e70:	45ae      	cmp	lr, r5
 8016e72:	dd20      	ble.n	8016eb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8016e74:	f818 600e 	ldrb.w	r6, [r8, lr]
 8016e78:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8016e7c:	3501      	adds	r5, #1
 8016e7e:	d407      	bmi.n	8016e90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8016e80:	45ae      	cmp	lr, r5
 8016e82:	dd05      	ble.n	8016e90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8016e84:	b134      	cbz	r4, 8016e94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8016e86:	44c6      	add	lr, r8
 8016e88:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8016e8c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8016e90:	2c0f      	cmp	r4, #15
 8016e92:	d802      	bhi.n	8016e9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8016e94:	f1bc 0f0f 	cmp.w	ip, #15
 8016e98:	d914      	bls.n	8016ec4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8016e9a:	4b26      	ldr	r3, [pc, #152]	; (8016f34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8016e9c:	4a26      	ldr	r2, [pc, #152]	; (8016f38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 8016e9e:	4827      	ldr	r0, [pc, #156]	; (8016f3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8016ea0:	f240 11db 	movw	r1, #475	; 0x1db
 8016ea4:	f006 fdc2 	bl	801da2c <__assert_func>
 8016ea8:	4607      	mov	r7, r0
 8016eaa:	e7cf      	b.n	8016e4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8016eac:	4602      	mov	r2, r0
 8016eae:	4607      	mov	r7, r0
 8016eb0:	e7d5      	b.n	8016e5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8016eb2:	4602      	mov	r2, r0
 8016eb4:	e7d3      	b.n	8016e5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8016eb6:	4606      	mov	r6, r0
 8016eb8:	e7e0      	b.n	8016e7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8016eba:	4606      	mov	r6, r0
 8016ebc:	e7e8      	b.n	8016e90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8016ebe:	2c0f      	cmp	r4, #15
 8016ec0:	d8eb      	bhi.n	8016e9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8016ec2:	4606      	mov	r6, r0
 8016ec4:	043d      	lsls	r5, r7, #16
 8016ec6:	fb14 f30c 	smulbb	r3, r4, ip
 8016eca:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8016ece:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8016ed2:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8016ed6:	10db      	asrs	r3, r3, #3
 8016ed8:	432f      	orrs	r7, r5
 8016eda:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016ede:	f1cc 0510 	rsb	r5, ip, #16
 8016ee2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016ee6:	1b2d      	subs	r5, r5, r4
 8016ee8:	ea4e 0202 	orr.w	r2, lr, r2
 8016eec:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8016ef0:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8016ef4:	4354      	muls	r4, r2
 8016ef6:	fb05 4507 	mla	r5, r5, r7, r4
 8016efa:	0404      	lsls	r4, r0, #16
 8016efc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8016f00:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016f04:	4320      	orrs	r0, r4
 8016f06:	fb03 5400 	mla	r4, r3, r0, r5
 8016f0a:	0430      	lsls	r0, r6, #16
 8016f0c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8016f10:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8016f14:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8016f18:	4330      	orrs	r0, r6
 8016f1a:	fb03 4000 	mla	r0, r3, r0, r4
 8016f1e:	0d43      	lsrs	r3, r0, #21
 8016f20:	0940      	lsrs	r0, r0, #5
 8016f22:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016f26:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016f2a:	4318      	orrs	r0, r3
 8016f2c:	8008      	strh	r0, [r1, #0]
 8016f2e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8016f32:	bf00      	nop
 8016f34:	08021c76 	.word	0x08021c76
 8016f38:	0802224f 	.word	0x0802224f
 8016f3c:	08021c43 	.word	0x08021c43

08016f40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016f40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f44:	ed2d 8b0a 	vpush	{d8-d12}
 8016f48:	b093      	sub	sp, #76	; 0x4c
 8016f4a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8016f4e:	920f      	str	r2, [sp, #60]	; 0x3c
 8016f50:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8016f52:	9108      	str	r1, [sp, #32]
 8016f54:	9306      	str	r3, [sp, #24]
 8016f56:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8016f5a:	9010      	str	r0, [sp, #64]	; 0x40
 8016f5c:	6850      	ldr	r0, [r2, #4]
 8016f5e:	6812      	ldr	r2, [r2, #0]
 8016f60:	fb00 1303 	mla	r3, r0, r3, r1
 8016f64:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8016f68:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016f6a:	681b      	ldr	r3, [r3, #0]
 8016f6c:	9307      	str	r3, [sp, #28]
 8016f6e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016f70:	685f      	ldr	r7, [r3, #4]
 8016f72:	eeb0 aa40 	vmov.f32	s20, s0
 8016f76:	eef0 9a60 	vmov.f32	s19, s1
 8016f7a:	eeb0 9a41 	vmov.f32	s18, s2
 8016f7e:	eeb0 8a62 	vmov.f32	s16, s5
 8016f82:	eef0 8a43 	vmov.f32	s17, s6
 8016f86:	eeb0 ca44 	vmov.f32	s24, s8
 8016f8a:	eef0 ba64 	vmov.f32	s23, s9
 8016f8e:	eeb0 ba45 	vmov.f32	s22, s10
 8016f92:	3704      	adds	r7, #4
 8016f94:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8016f98:	9b08      	ldr	r3, [sp, #32]
 8016f9a:	2b00      	cmp	r3, #0
 8016f9c:	dc03      	bgt.n	8016fa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016f9e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016fa0:	2b00      	cmp	r3, #0
 8016fa2:	f340 81b2 	ble.w	801730a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8016fa6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016fa8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016fac:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016fb0:	1e48      	subs	r0, r1, #1
 8016fb2:	f102 3cff 	add.w	ip, r2, #4294967295
 8016fb6:	9b06      	ldr	r3, [sp, #24]
 8016fb8:	2b00      	cmp	r3, #0
 8016fba:	f340 80a9 	ble.w	8017110 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8016fbe:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8016fc2:	ea4f 4326 	mov.w	r3, r6, asr #16
 8016fc6:	d406      	bmi.n	8016fd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016fc8:	4586      	cmp	lr, r0
 8016fca:	da04      	bge.n	8016fd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016fcc:	2b00      	cmp	r3, #0
 8016fce:	db02      	blt.n	8016fd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016fd0:	4563      	cmp	r3, ip
 8016fd2:	f2c0 809e 	blt.w	8017112 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8016fd6:	f11e 0e01 	adds.w	lr, lr, #1
 8016fda:	f100 808f 	bmi.w	80170fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016fde:	4571      	cmp	r1, lr
 8016fe0:	f2c0 808c 	blt.w	80170fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016fe4:	3301      	adds	r3, #1
 8016fe6:	f100 8089 	bmi.w	80170fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016fea:	429a      	cmp	r2, r3
 8016fec:	f2c0 8086 	blt.w	80170fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016ff0:	f8dd b018 	ldr.w	fp, [sp, #24]
 8016ff4:	46c8      	mov	r8, r9
 8016ff6:	f1bb 0f00 	cmp.w	fp, #0
 8016ffa:	f340 80a6 	ble.w	801714a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 8016ffe:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8017000:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017002:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8017006:	689b      	ldr	r3, [r3, #8]
 8017008:	1422      	asrs	r2, r4, #16
 801700a:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801700e:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8017012:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8017016:	f100 80e3 	bmi.w	80171e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801701a:	f103 3aff 	add.w	sl, r3, #4294967295
 801701e:	4552      	cmp	r2, sl
 8017020:	f280 80de 	bge.w	80171e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8017024:	f1bc 0f00 	cmp.w	ip, #0
 8017028:	f2c0 80da 	blt.w	80171e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801702c:	f10e 3aff 	add.w	sl, lr, #4294967295
 8017030:	45d4      	cmp	ip, sl
 8017032:	f280 80d5 	bge.w	80171e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8017036:	b21b      	sxth	r3, r3
 8017038:	fb0c 2203 	mla	r2, ip, r3, r2
 801703c:	9d07      	ldr	r5, [sp, #28]
 801703e:	eb05 0a02 	add.w	sl, r5, r2
 8017042:	5caa      	ldrb	r2, [r5, r2]
 8017044:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8017048:	2800      	cmp	r0, #0
 801704a:	f000 80c0 	beq.w	80171ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 801704e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8017052:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8017056:	920b      	str	r2, [sp, #44]	; 0x2c
 8017058:	b151      	cbz	r1, 8017070 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 801705a:	eb0a 0203 	add.w	r2, sl, r3
 801705e:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8017062:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017066:	9309      	str	r3, [sp, #36]	; 0x24
 8017068:	7853      	ldrb	r3, [r2, #1]
 801706a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801706e:	930c      	str	r3, [sp, #48]	; 0x30
 8017070:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017072:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8017074:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8017078:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801707c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017080:	ea4c 0c03 	orr.w	ip, ip, r3
 8017084:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017086:	041b      	lsls	r3, r3, #16
 8017088:	fb10 f201 	smulbb	r2, r0, r1
 801708c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8017090:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8017094:	10d2      	asrs	r2, r2, #3
 8017096:	432b      	orrs	r3, r5
 8017098:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801709c:	4353      	muls	r3, r2
 801709e:	fb0a 330c 	mla	r3, sl, ip, r3
 80170a2:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80170a6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80170aa:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80170ae:	ea4c 0e0e 	orr.w	lr, ip, lr
 80170b2:	f1c1 0c10 	rsb	ip, r1, #16
 80170b6:	ebac 0c00 	sub.w	ip, ip, r0
 80170ba:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80170be:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80170c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80170c4:	0418      	lsls	r0, r3, #16
 80170c6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80170ca:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80170ce:	4318      	orrs	r0, r3
 80170d0:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80170d4:	fb02 c200 	mla	r2, r2, r0, ip
 80170d8:	0d53      	lsrs	r3, r2, #21
 80170da:	0952      	lsrs	r2, r2, #5
 80170dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80170e0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80170e4:	431a      	orrs	r2, r3
 80170e6:	f8a8 2000 	strh.w	r2, [r8]
 80170ea:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80170ec:	441c      	add	r4, r3
 80170ee:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80170f0:	f108 0802 	add.w	r8, r8, #2
 80170f4:	441e      	add	r6, r3
 80170f6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80170fa:	e77c      	b.n	8016ff6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80170fc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80170fe:	441c      	add	r4, r3
 8017100:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017102:	441e      	add	r6, r3
 8017104:	9b06      	ldr	r3, [sp, #24]
 8017106:	3b01      	subs	r3, #1
 8017108:	9306      	str	r3, [sp, #24]
 801710a:	f109 0902 	add.w	r9, r9, #2
 801710e:	e752      	b.n	8016fb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8017110:	d020      	beq.n	8017154 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8017112:	9b06      	ldr	r3, [sp, #24]
 8017114:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8017116:	3b01      	subs	r3, #1
 8017118:	fb00 4003 	mla	r0, r0, r3, r4
 801711c:	1400      	asrs	r0, r0, #16
 801711e:	f53f af67 	bmi.w	8016ff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8017122:	3901      	subs	r1, #1
 8017124:	4288      	cmp	r0, r1
 8017126:	f6bf af63 	bge.w	8016ff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801712a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801712c:	fb01 6303 	mla	r3, r1, r3, r6
 8017130:	141b      	asrs	r3, r3, #16
 8017132:	f53f af5d 	bmi.w	8016ff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8017136:	3a01      	subs	r2, #1
 8017138:	4293      	cmp	r3, r2
 801713a:	f6bf af59 	bge.w	8016ff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801713e:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8017142:	46ca      	mov	sl, r9
 8017144:	f1b8 0f00 	cmp.w	r8, #0
 8017148:	dc67      	bgt.n	801721a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801714a:	9b06      	ldr	r3, [sp, #24]
 801714c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8017150:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8017154:	9b08      	ldr	r3, [sp, #32]
 8017156:	2b00      	cmp	r3, #0
 8017158:	f340 80d7 	ble.w	801730a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 801715c:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8017160:	ee79 9aab 	vadd.f32	s19, s19, s23
 8017164:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8017168:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801716a:	ee39 9a0b 	vadd.f32	s18, s18, s22
 801716e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017172:	eef0 6a48 	vmov.f32	s13, s16
 8017176:	ee69 7a27 	vmul.f32	s15, s18, s15
 801717a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801717e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017182:	ee16 4a90 	vmov	r4, s13
 8017186:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801718a:	eef0 6a68 	vmov.f32	s13, s17
 801718e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017192:	ee18 2a10 	vmov	r2, s16
 8017196:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801719a:	fb92 f3f3 	sdiv	r3, r2, r3
 801719e:	ee18 2a90 	vmov	r2, s17
 80171a2:	9329      	str	r3, [sp, #164]	; 0xa4
 80171a4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80171a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80171aa:	932a      	str	r3, [sp, #168]	; 0xa8
 80171ac:	9b08      	ldr	r3, [sp, #32]
 80171ae:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80171b0:	3b01      	subs	r3, #1
 80171b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80171b6:	9308      	str	r3, [sp, #32]
 80171b8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80171ba:	bf08      	it	eq
 80171bc:	4613      	moveq	r3, r2
 80171be:	ee16 6a90 	vmov	r6, s13
 80171c2:	9306      	str	r3, [sp, #24]
 80171c4:	eef0 8a67 	vmov.f32	s17, s15
 80171c8:	eeb0 8a47 	vmov.f32	s16, s14
 80171cc:	e6e4      	b.n	8016f98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80171ce:	2900      	cmp	r1, #0
 80171d0:	f43f af4e 	beq.w	8017070 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 80171d4:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80171d8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80171dc:	9309      	str	r3, [sp, #36]	; 0x24
 80171de:	e747      	b.n	8017070 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 80171e0:	f112 0a01 	adds.w	sl, r2, #1
 80171e4:	d481      	bmi.n	80170ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 80171e6:	4553      	cmp	r3, sl
 80171e8:	f6ff af7f 	blt.w	80170ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 80171ec:	f11c 0a01 	adds.w	sl, ip, #1
 80171f0:	f53f af7b 	bmi.w	80170ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 80171f4:	45d6      	cmp	lr, sl
 80171f6:	f6ff af78 	blt.w	80170ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 80171fa:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 80171fe:	b21b      	sxth	r3, r3
 8017200:	fa0f f28e 	sxth.w	r2, lr
 8017204:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8017208:	9201      	str	r2, [sp, #4]
 801720a:	9300      	str	r3, [sp, #0]
 801720c:	9a07      	ldr	r2, [sp, #28]
 801720e:	9810      	ldr	r0, [sp, #64]	; 0x40
 8017210:	463b      	mov	r3, r7
 8017212:	4641      	mov	r1, r8
 8017214:	f7ff fdfe 	bl	8016e14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8017218:	e767      	b.n	80170ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801721a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801721c:	9d07      	ldr	r5, [sp, #28]
 801721e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8017222:	1422      	asrs	r2, r4, #16
 8017224:	1431      	asrs	r1, r6, #16
 8017226:	fb03 2101 	mla	r1, r3, r1, r2
 801722a:	9a07      	ldr	r2, [sp, #28]
 801722c:	440a      	add	r2, r1
 801722e:	5c69      	ldrb	r1, [r5, r1]
 8017230:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8017234:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8017238:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801723c:	f1be 0f00 	cmp.w	lr, #0
 8017240:	d05c      	beq.n	80172fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 8017242:	f892 c001 	ldrb.w	ip, [r2, #1]
 8017246:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801724a:	950d      	str	r5, [sp, #52]	; 0x34
 801724c:	b150      	cbz	r0, 8017264 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801724e:	eb02 0c03 	add.w	ip, r2, r3
 8017252:	5cd3      	ldrb	r3, [r2, r3]
 8017254:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017258:	930a      	str	r3, [sp, #40]	; 0x28
 801725a:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801725e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017262:	930e      	str	r3, [sp, #56]	; 0x38
 8017264:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017266:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8017268:	fb1e f200 	smulbb	r2, lr, r0
 801726c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8017270:	10d2      	asrs	r2, r2, #3
 8017272:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017276:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801727a:	ea4c 0c03 	orr.w	ip, ip, r3
 801727e:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8017282:	9311      	str	r3, [sp, #68]	; 0x44
 8017284:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017286:	041b      	lsls	r3, r3, #16
 8017288:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801728c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8017290:	ea43 030b 	orr.w	r3, r3, fp
 8017294:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8017296:	4353      	muls	r3, r2
 8017298:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801729c:	fb05 3c0c 	mla	ip, r5, ip, r3
 80172a0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80172a4:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80172a8:	ea43 0b01 	orr.w	fp, r3, r1
 80172ac:	f1c0 0110 	rsb	r1, r0, #16
 80172b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80172b2:	eba1 0e0e 	sub.w	lr, r1, lr
 80172b6:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80172ba:	fb0e cc0b 	mla	ip, lr, fp, ip
 80172be:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80172c2:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 80172c6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80172ca:	ea4b 0e0e 	orr.w	lr, fp, lr
 80172ce:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80172d2:	fb02 cc0e 	mla	ip, r2, lr, ip
 80172d6:	ea4f 535c 	mov.w	r3, ip, lsr #21
 80172da:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80172de:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80172e2:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80172e6:	ea43 0c0c 	orr.w	ip, r3, ip
 80172ea:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80172ec:	f82a cb02 	strh.w	ip, [sl], #2
 80172f0:	441c      	add	r4, r3
 80172f2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80172f4:	f108 38ff 	add.w	r8, r8, #4294967295
 80172f8:	441e      	add	r6, r3
 80172fa:	e723      	b.n	8017144 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80172fc:	2800      	cmp	r0, #0
 80172fe:	d0b1      	beq.n	8017264 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8017300:	5cd3      	ldrb	r3, [r2, r3]
 8017302:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017306:	930a      	str	r3, [sp, #40]	; 0x28
 8017308:	e7ac      	b.n	8017264 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801730a:	b013      	add	sp, #76	; 0x4c
 801730c:	ecbd 8b0a 	vpop	{d8-d12}
 8017310:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017314 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8017314:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017318:	468b      	mov	fp, r1
 801731a:	8809      	ldrh	r1, [r1, #0]
 801731c:	b089      	sub	sp, #36	; 0x24
 801731e:	10cd      	asrs	r5, r1, #3
 8017320:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8017324:	ea4f 2921 	mov.w	r9, r1, asr #8
 8017328:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801732c:	00c9      	lsls	r1, r1, #3
 801732e:	9500      	str	r5, [sp, #0]
 8017330:	b2c9      	uxtb	r1, r1
 8017332:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 8017336:	9101      	str	r1, [sp, #4]
 8017338:	9900      	ldr	r1, [sp, #0]
 801733a:	9202      	str	r2, [sp, #8]
 801733c:	fb04 650e 	mla	r5, r4, lr, r6
 8017340:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8017344:	eb02 0805 	add.w	r8, r2, r5
 8017348:	0209      	lsls	r1, r1, #8
 801734a:	9a01      	ldr	r2, [sp, #4]
 801734c:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8017350:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8017354:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8017358:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 801735c:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8017360:	4311      	orrs	r1, r2
 8017362:	2c00      	cmp	r4, #0
 8017364:	9107      	str	r1, [sp, #28]
 8017366:	db43      	blt.n	80173f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8017368:	45a2      	cmp	sl, r4
 801736a:	dd41      	ble.n	80173f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 801736c:	2e00      	cmp	r6, #0
 801736e:	db3d      	blt.n	80173ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8017370:	45b6      	cmp	lr, r6
 8017372:	dd3b      	ble.n	80173ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8017374:	9a02      	ldr	r2, [sp, #8]
 8017376:	5d55      	ldrb	r5, [r2, r5]
 8017378:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801737c:	441d      	add	r5, r3
 801737e:	1c72      	adds	r2, r6, #1
 8017380:	d439      	bmi.n	80173f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8017382:	4596      	cmp	lr, r2
 8017384:	dd37      	ble.n	80173f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8017386:	2f00      	cmp	r7, #0
 8017388:	d035      	beq.n	80173f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801738a:	f898 1001 	ldrb.w	r1, [r8, #1]
 801738e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8017392:	4419      	add	r1, r3
 8017394:	3401      	adds	r4, #1
 8017396:	d432      	bmi.n	80173fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8017398:	45a2      	cmp	sl, r4
 801739a:	dd30      	ble.n	80173fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 801739c:	b378      	cbz	r0, 80173fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 801739e:	2e00      	cmp	r6, #0
 80173a0:	db2b      	blt.n	80173fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 80173a2:	45b6      	cmp	lr, r6
 80173a4:	dd29      	ble.n	80173fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 80173a6:	f818 400e 	ldrb.w	r4, [r8, lr]
 80173aa:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80173ae:	441c      	add	r4, r3
 80173b0:	3601      	adds	r6, #1
 80173b2:	d427      	bmi.n	8017404 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80173b4:	45b6      	cmp	lr, r6
 80173b6:	dd25      	ble.n	8017404 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80173b8:	b327      	cbz	r7, 8017404 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80173ba:	44c6      	add	lr, r8
 80173bc:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80173c0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80173c4:	4413      	add	r3, r2
 80173c6:	782a      	ldrb	r2, [r5, #0]
 80173c8:	9202      	str	r2, [sp, #8]
 80173ca:	780a      	ldrb	r2, [r1, #0]
 80173cc:	9203      	str	r2, [sp, #12]
 80173ce:	7822      	ldrb	r2, [r4, #0]
 80173d0:	9204      	str	r2, [sp, #16]
 80173d2:	2f0f      	cmp	r7, #15
 80173d4:	781a      	ldrb	r2, [r3, #0]
 80173d6:	9205      	str	r2, [sp, #20]
 80173d8:	d801      	bhi.n	80173de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 80173da:	280f      	cmp	r0, #15
 80173dc:	d914      	bls.n	8017408 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 80173de:	4b3f      	ldr	r3, [pc, #252]	; (80174dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 80173e0:	4a3f      	ldr	r2, [pc, #252]	; (80174e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 80173e2:	4840      	ldr	r0, [pc, #256]	; (80174e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 80173e4:	f240 11f9 	movw	r1, #505	; 0x1f9
 80173e8:	f006 fb20 	bl	801da2c <__assert_func>
 80173ec:	ad07      	add	r5, sp, #28
 80173ee:	e7c6      	b.n	801737e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 80173f0:	a907      	add	r1, sp, #28
 80173f2:	460d      	mov	r5, r1
 80173f4:	e7ce      	b.n	8017394 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 80173f6:	a907      	add	r1, sp, #28
 80173f8:	e7cc      	b.n	8017394 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 80173fa:	ac07      	add	r4, sp, #28
 80173fc:	e7d8      	b.n	80173b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 80173fe:	ab07      	add	r3, sp, #28
 8017400:	461c      	mov	r4, r3
 8017402:	e7e0      	b.n	80173c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8017404:	ab07      	add	r3, sp, #28
 8017406:	e7de      	b.n	80173c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8017408:	b2ba      	uxth	r2, r7
 801740a:	b280      	uxth	r0, r0
 801740c:	fb02 fa00 	mul.w	sl, r2, r0
 8017410:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8017414:	0112      	lsls	r2, r2, #4
 8017416:	b280      	uxth	r0, r0
 8017418:	f891 8002 	ldrb.w	r8, [r1, #2]
 801741c:	7849      	ldrb	r1, [r1, #1]
 801741e:	78ae      	ldrb	r6, [r5, #2]
 8017420:	786d      	ldrb	r5, [r5, #1]
 8017422:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 8017426:	eba2 020a 	sub.w	r2, r2, sl
 801742a:	b292      	uxth	r2, r2
 801742c:	ebae 0e00 	sub.w	lr, lr, r0
 8017430:	fa1f fe8e 	uxth.w	lr, lr
 8017434:	4351      	muls	r1, r2
 8017436:	fb02 f808 	mul.w	r8, r2, r8
 801743a:	fb0e 8806 	mla	r8, lr, r6, r8
 801743e:	fb0e 1505 	mla	r5, lr, r5, r1
 8017442:	78a6      	ldrb	r6, [r4, #2]
 8017444:	7861      	ldrb	r1, [r4, #1]
 8017446:	fa1f f78c 	uxth.w	r7, ip
 801744a:	fb00 8806 	mla	r8, r0, r6, r8
 801744e:	fb00 5501 	mla	r5, r0, r1, r5
 8017452:	789e      	ldrb	r6, [r3, #2]
 8017454:	7859      	ldrb	r1, [r3, #1]
 8017456:	9b00      	ldr	r3, [sp, #0]
 8017458:	ea6f 0c0c 	mvn.w	ip, ip
 801745c:	fa5f fc8c 	uxtb.w	ip, ip
 8017460:	fb0a 5101 	mla	r1, sl, r1, r5
 8017464:	fb13 f50c 	smulbb	r5, r3, ip
 8017468:	9b03      	ldr	r3, [sp, #12]
 801746a:	435a      	muls	r2, r3
 801746c:	9b02      	ldr	r3, [sp, #8]
 801746e:	fb0e 2203 	mla	r2, lr, r3, r2
 8017472:	9b04      	ldr	r3, [sp, #16]
 8017474:	fb00 2003 	mla	r0, r0, r3, r2
 8017478:	9b05      	ldr	r3, [sp, #20]
 801747a:	fb0a 8606 	mla	r6, sl, r6, r8
 801747e:	fb19 f90c 	smulbb	r9, r9, ip
 8017482:	fb0a 0a03 	mla	sl, sl, r3, r0
 8017486:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801748a:	9b01      	ldr	r3, [sp, #4]
 801748c:	fb06 9607 	mla	r6, r6, r7, r9
 8017490:	b2b6      	uxth	r6, r6
 8017492:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8017496:	fb13 fc0c 	smulbb	ip, r3, ip
 801749a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801749e:	fb01 5107 	mla	r1, r1, r7, r5
 80174a2:	f106 0901 	add.w	r9, r6, #1
 80174a6:	fb0a c707 	mla	r7, sl, r7, ip
 80174aa:	b2bf      	uxth	r7, r7
 80174ac:	b289      	uxth	r1, r1
 80174ae:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 80174b2:	f406 4978 	and.w	r9, r6, #63488	; 0xf800
 80174b6:	1c4d      	adds	r5, r1, #1
 80174b8:	1c7e      	adds	r6, r7, #1
 80174ba:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80174be:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 80174c2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80174c6:	0949      	lsrs	r1, r1, #5
 80174c8:	ea46 0609 	orr.w	r6, r6, r9
 80174cc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80174d0:	430e      	orrs	r6, r1
 80174d2:	f8ab 6000 	strh.w	r6, [fp]
 80174d6:	b009      	add	sp, #36	; 0x24
 80174d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80174dc:	08021c76 	.word	0x08021c76
 80174e0:	080221a6 	.word	0x080221a6
 80174e4:	08021c43 	.word	0x08021c43

080174e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80174e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80174ec:	ed2d 8b08 	vpush	{d8-d11}
 80174f0:	b095      	sub	sp, #84	; 0x54
 80174f2:	eeb0 aa40 	vmov.f32	s20, s0
 80174f6:	9212      	str	r2, [sp, #72]	; 0x48
 80174f8:	9309      	str	r3, [sp, #36]	; 0x24
 80174fa:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80174fc:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8017500:	930f      	str	r3, [sp, #60]	; 0x3c
 8017502:	910e      	str	r1, [sp, #56]	; 0x38
 8017504:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8017508:	9013      	str	r0, [sp, #76]	; 0x4c
 801750a:	6850      	ldr	r0, [r2, #4]
 801750c:	6812      	ldr	r2, [r2, #0]
 801750e:	fb00 1303 	mla	r3, r0, r3, r1
 8017512:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017516:	930a      	str	r3, [sp, #40]	; 0x28
 8017518:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801751a:	681b      	ldr	r3, [r3, #0]
 801751c:	930d      	str	r3, [sp, #52]	; 0x34
 801751e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017520:	685c      	ldr	r4, [r3, #4]
 8017522:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017524:	43db      	mvns	r3, r3
 8017526:	b2db      	uxtb	r3, r3
 8017528:	eef0 9a60 	vmov.f32	s19, s1
 801752c:	eeb0 9a41 	vmov.f32	s18, s2
 8017530:	eeb0 8a62 	vmov.f32	s16, s5
 8017534:	eef0 8a43 	vmov.f32	s17, s6
 8017538:	eef0 ba44 	vmov.f32	s23, s8
 801753c:	eeb0 ba64 	vmov.f32	s22, s9
 8017540:	eef0 aa45 	vmov.f32	s21, s10
 8017544:	3404      	adds	r4, #4
 8017546:	930b      	str	r3, [sp, #44]	; 0x2c
 8017548:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801754a:	2b00      	cmp	r3, #0
 801754c:	dc03      	bgt.n	8017556 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801754e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017550:	2b00      	cmp	r3, #0
 8017552:	f340 8255 	ble.w	8017a00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 8017556:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017558:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801755c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017560:	1e48      	subs	r0, r1, #1
 8017562:	1e55      	subs	r5, r2, #1
 8017564:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017566:	2b00      	cmp	r3, #0
 8017568:	f340 80f9 	ble.w	801775e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801756c:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 801756e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017570:	1436      	asrs	r6, r6, #16
 8017572:	ea4f 4323 	mov.w	r3, r3, asr #16
 8017576:	d406      	bmi.n	8017586 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017578:	4286      	cmp	r6, r0
 801757a:	da04      	bge.n	8017586 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801757c:	2b00      	cmp	r3, #0
 801757e:	db02      	blt.n	8017586 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017580:	42ab      	cmp	r3, r5
 8017582:	f2c0 80ed 	blt.w	8017760 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8017586:	3601      	adds	r6, #1
 8017588:	f100 80da 	bmi.w	8017740 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801758c:	42b1      	cmp	r1, r6
 801758e:	f2c0 80d7 	blt.w	8017740 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8017592:	3301      	adds	r3, #1
 8017594:	f100 80d4 	bmi.w	8017740 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8017598:	429a      	cmp	r2, r3
 801759a:	f2c0 80d1 	blt.w	8017740 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801759e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80175a0:	9311      	str	r3, [sp, #68]	; 0x44
 80175a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80175a4:	930c      	str	r3, [sp, #48]	; 0x30
 80175a6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80175a8:	2b00      	cmp	r3, #0
 80175aa:	f340 80fa 	ble.w	80177a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80175ae:	982e      	ldr	r0, [sp, #184]	; 0xb8
 80175b0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80175b2:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80175b4:	68c6      	ldr	r6, [r0, #12]
 80175b6:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80175b8:	141d      	asrs	r5, r3, #16
 80175ba:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80175be:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80175c0:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80175c2:	1400      	asrs	r0, r0, #16
 80175c4:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80175c8:	6892      	ldr	r2, [r2, #8]
 80175ca:	f100 813e 	bmi.w	801784a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80175ce:	1e57      	subs	r7, r2, #1
 80175d0:	42b8      	cmp	r0, r7
 80175d2:	f280 813a 	bge.w	801784a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80175d6:	2d00      	cmp	r5, #0
 80175d8:	f2c0 8137 	blt.w	801784a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80175dc:	1e77      	subs	r7, r6, #1
 80175de:	42bd      	cmp	r5, r7
 80175e0:	f280 8133 	bge.w	801784a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80175e4:	b212      	sxth	r2, r2
 80175e6:	fb05 0002 	mla	r0, r5, r2, r0
 80175ea:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80175ec:	f815 a000 	ldrb.w	sl, [r5, r0]
 80175f0:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80175f4:	182e      	adds	r6, r5, r0
 80175f6:	eb04 050a 	add.w	r5, r4, sl
 80175fa:	2b00      	cmp	r3, #0
 80175fc:	f000 8117 	beq.w	801782e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 8017600:	f896 c001 	ldrb.w	ip, [r6, #1]
 8017604:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8017608:	44a4      	add	ip, r4
 801760a:	2900      	cmp	r1, #0
 801760c:	f000 8117 	beq.w	801783e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8017610:	18b0      	adds	r0, r6, r2
 8017612:	5cb2      	ldrb	r2, [r6, r2]
 8017614:	7840      	ldrb	r0, [r0, #1]
 8017616:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801761a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801761e:	4422      	add	r2, r4
 8017620:	4420      	add	r0, r4
 8017622:	b29b      	uxth	r3, r3
 8017624:	b289      	uxth	r1, r1
 8017626:	fb03 f901 	mul.w	r9, r3, r1
 801762a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801762e:	011b      	lsls	r3, r3, #4
 8017630:	b289      	uxth	r1, r1
 8017632:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8017636:	f895 b002 	ldrb.w	fp, [r5, #2]
 801763a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801763c:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8017640:	f8b6 e000 	ldrh.w	lr, [r6]
 8017644:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8017648:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801764c:	eba3 0309 	sub.w	r3, r3, r9
 8017650:	b29b      	uxth	r3, r3
 8017652:	eba8 0801 	sub.w	r8, r8, r1
 8017656:	fa1f f888 	uxth.w	r8, r8
 801765a:	435f      	muls	r7, r3
 801765c:	fb08 770b 	mla	r7, r8, fp, r7
 8017660:	f892 b002 	ldrb.w	fp, [r2, #2]
 8017664:	9310      	str	r3, [sp, #64]	; 0x40
 8017666:	fb01 770b 	mla	r7, r1, fp, r7
 801766a:	f890 b002 	ldrb.w	fp, [r0, #2]
 801766e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017670:	fb09 770b 	mla	r7, r9, fp, r7
 8017674:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8017678:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801767c:	fb1b fb03 	smulbb	fp, fp, r3
 8017680:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8017684:	fb07 b706 	mla	r7, r7, r6, fp
 8017688:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801768a:	f895 b001 	ldrb.w	fp, [r5, #1]
 801768e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8017692:	f89c c000 	ldrb.w	ip, [ip]
 8017696:	435d      	muls	r5, r3
 8017698:	fb08 550b 	mla	r5, r8, fp, r5
 801769c:	f892 b001 	ldrb.w	fp, [r2, #1]
 80176a0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80176a2:	fb01 550b 	mla	r5, r1, fp, r5
 80176a6:	f890 b001 	ldrb.w	fp, [r0, #1]
 80176aa:	fb09 550b 	mla	r5, r9, fp, r5
 80176ae:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80176b2:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80176b6:	fb1b fb03 	smulbb	fp, fp, r3
 80176ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80176bc:	fb03 f30c 	mul.w	r3, r3, ip
 80176c0:	f892 c000 	ldrb.w	ip, [r2]
 80176c4:	fb08 330a 	mla	r3, r8, sl, r3
 80176c8:	fb01 330c 	mla	r3, r1, ip, r3
 80176cc:	f890 c000 	ldrb.w	ip, [r0]
 80176d0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80176d4:	fb09 3c0c 	mla	ip, r9, ip, r3
 80176d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80176da:	fa5f fe8e 	uxtb.w	lr, lr
 80176de:	b2bf      	uxth	r7, r7
 80176e0:	fb1e fe03 	smulbb	lr, lr, r3
 80176e4:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80176e8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80176ec:	fb05 b506 	mla	r5, r5, r6, fp
 80176f0:	1c7b      	adds	r3, r7, #1
 80176f2:	fb0c e606 	mla	r6, ip, r6, lr
 80176f6:	b2ad      	uxth	r5, r5
 80176f8:	b2b6      	uxth	r6, r6
 80176fa:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80176fe:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8017702:	f105 0b01 	add.w	fp, r5, #1
 8017706:	1c77      	adds	r7, r6, #1
 8017708:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801770c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8017710:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017714:	096d      	lsrs	r5, r5, #5
 8017716:	431f      	orrs	r7, r3
 8017718:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801771c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801771e:	433d      	orrs	r5, r7
 8017720:	801d      	strh	r5, [r3, #0]
 8017722:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017724:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017726:	3302      	adds	r3, #2
 8017728:	930c      	str	r3, [sp, #48]	; 0x30
 801772a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801772c:	4413      	add	r3, r2
 801772e:	9327      	str	r3, [sp, #156]	; 0x9c
 8017730:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8017732:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017734:	4413      	add	r3, r2
 8017736:	9328      	str	r3, [sp, #160]	; 0xa0
 8017738:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801773a:	3b01      	subs	r3, #1
 801773c:	9311      	str	r3, [sp, #68]	; 0x44
 801773e:	e732      	b.n	80175a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8017740:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017742:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8017744:	4433      	add	r3, r6
 8017746:	9327      	str	r3, [sp, #156]	; 0x9c
 8017748:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 801774a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801774c:	4433      	add	r3, r6
 801774e:	9328      	str	r3, [sp, #160]	; 0xa0
 8017750:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017752:	3b01      	subs	r3, #1
 8017754:	9309      	str	r3, [sp, #36]	; 0x24
 8017756:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017758:	3302      	adds	r3, #2
 801775a:	930a      	str	r3, [sp, #40]	; 0x28
 801775c:	e702      	b.n	8017564 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801775e:	d027      	beq.n	80177b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8017760:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017762:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8017764:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8017766:	3b01      	subs	r3, #1
 8017768:	fb00 5003 	mla	r0, r0, r3, r5
 801776c:	1400      	asrs	r0, r0, #16
 801776e:	f53f af16 	bmi.w	801759e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8017772:	3901      	subs	r1, #1
 8017774:	4288      	cmp	r0, r1
 8017776:	f6bf af12 	bge.w	801759e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801777a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801777c:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801777e:	fb01 0303 	mla	r3, r1, r3, r0
 8017782:	141b      	asrs	r3, r3, #16
 8017784:	f53f af0b 	bmi.w	801759e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8017788:	3a01      	subs	r2, #1
 801778a:	4293      	cmp	r3, r2
 801778c:	f6bf af07 	bge.w	801759e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8017790:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017792:	9311      	str	r3, [sp, #68]	; 0x44
 8017794:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8017798:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801779a:	930c      	str	r3, [sp, #48]	; 0x30
 801779c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801779e:	2b00      	cmp	r3, #0
 80177a0:	dc70      	bgt.n	8017884 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 80177a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80177a4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80177a6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80177aa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80177ae:	930a      	str	r3, [sp, #40]	; 0x28
 80177b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80177b2:	2b00      	cmp	r3, #0
 80177b4:	f340 8124 	ble.w	8017a00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 80177b8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80177bc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80177c0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80177c4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80177c6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80177ca:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80177ce:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80177d2:	eef0 6a48 	vmov.f32	s13, s16
 80177d6:	ee69 7a27 	vmul.f32	s15, s18, s15
 80177da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80177de:	ee37 8a48 	vsub.f32	s16, s14, s16
 80177e2:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 80177e6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80177ea:	eef0 6a68 	vmov.f32	s13, s17
 80177ee:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80177f2:	ee18 2a10 	vmov	r2, s16
 80177f6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80177fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80177fe:	ee18 2a90 	vmov	r2, s17
 8017802:	9329      	str	r3, [sp, #164]	; 0xa4
 8017804:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017806:	fb92 f3f3 	sdiv	r3, r2, r3
 801780a:	932a      	str	r3, [sp, #168]	; 0xa8
 801780c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801780e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017810:	3b01      	subs	r3, #1
 8017812:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017816:	930e      	str	r3, [sp, #56]	; 0x38
 8017818:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801781a:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 801781e:	bf08      	it	eq
 8017820:	4613      	moveq	r3, r2
 8017822:	9309      	str	r3, [sp, #36]	; 0x24
 8017824:	eef0 8a67 	vmov.f32	s17, s15
 8017828:	eeb0 8a47 	vmov.f32	s16, s14
 801782c:	e68c      	b.n	8017548 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801782e:	b149      	cbz	r1, 8017844 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 8017830:	5cb2      	ldrb	r2, [r6, r2]
 8017832:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017836:	4422      	add	r2, r4
 8017838:	4628      	mov	r0, r5
 801783a:	46ac      	mov	ip, r5
 801783c:	e6f1      	b.n	8017622 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801783e:	4628      	mov	r0, r5
 8017840:	462a      	mov	r2, r5
 8017842:	e6ee      	b.n	8017622 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8017844:	4628      	mov	r0, r5
 8017846:	462a      	mov	r2, r5
 8017848:	e7f7      	b.n	801783a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801784a:	1c47      	adds	r7, r0, #1
 801784c:	f53f af69 	bmi.w	8017722 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8017850:	42ba      	cmp	r2, r7
 8017852:	f6ff af66 	blt.w	8017722 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8017856:	1c6f      	adds	r7, r5, #1
 8017858:	f53f af63 	bmi.w	8017722 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801785c:	42be      	cmp	r6, r7
 801785e:	f6ff af60 	blt.w	8017722 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8017862:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8017864:	9002      	str	r0, [sp, #8]
 8017866:	b236      	sxth	r6, r6
 8017868:	b212      	sxth	r2, r2
 801786a:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801786e:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8017872:	9200      	str	r2, [sp, #0]
 8017874:	9601      	str	r6, [sp, #4]
 8017876:	4623      	mov	r3, r4
 8017878:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801787c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801787e:	f7ff fd49 	bl	8017314 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8017882:	e74e      	b.n	8017722 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8017884:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8017886:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8017888:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 801788a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801788c:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8017890:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8017892:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8017896:	142d      	asrs	r5, r5, #16
 8017898:	1400      	asrs	r0, r0, #16
 801789a:	fb02 5000 	mla	r0, r2, r0, r5
 801789e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80178a0:	f815 9000 	ldrb.w	r9, [r5, r0]
 80178a4:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80178a8:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80178ac:	182e      	adds	r6, r5, r0
 80178ae:	eb04 0509 	add.w	r5, r4, r9
 80178b2:	2b00      	cmp	r3, #0
 80178b4:	f000 8096 	beq.w	80179e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 80178b8:	7877      	ldrb	r7, [r6, #1]
 80178ba:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80178be:	4427      	add	r7, r4
 80178c0:	2900      	cmp	r1, #0
 80178c2:	f000 8097 	beq.w	80179f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 80178c6:	18b0      	adds	r0, r6, r2
 80178c8:	5cb2      	ldrb	r2, [r6, r2]
 80178ca:	7840      	ldrb	r0, [r0, #1]
 80178cc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80178d0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80178d4:	4422      	add	r2, r4
 80178d6:	4420      	add	r0, r4
 80178d8:	b29b      	uxth	r3, r3
 80178da:	b289      	uxth	r1, r1
 80178dc:	fb03 f801 	mul.w	r8, r3, r1
 80178e0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80178e2:	f895 b002 	ldrb.w	fp, [r5, #2]
 80178e6:	f8b6 c000 	ldrh.w	ip, [r6]
 80178ea:	78be      	ldrb	r6, [r7, #2]
 80178ec:	f814 9009 	ldrb.w	r9, [r4, r9]
 80178f0:	011b      	lsls	r3, r3, #4
 80178f2:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80178f6:	b289      	uxth	r1, r1
 80178f8:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80178fc:	eba3 0308 	sub.w	r3, r3, r8
 8017900:	b29b      	uxth	r3, r3
 8017902:	ebae 0e01 	sub.w	lr, lr, r1
 8017906:	fa1f fe8e 	uxth.w	lr, lr
 801790a:	435e      	muls	r6, r3
 801790c:	fb0e 660b 	mla	r6, lr, fp, r6
 8017910:	f892 b002 	ldrb.w	fp, [r2, #2]
 8017914:	9310      	str	r3, [sp, #64]	; 0x40
 8017916:	fb01 660b 	mla	r6, r1, fp, r6
 801791a:	f890 b002 	ldrb.w	fp, [r0, #2]
 801791e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017920:	fb08 660b 	mla	r6, r8, fp, r6
 8017924:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8017928:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801792c:	fb1b fb03 	smulbb	fp, fp, r3
 8017930:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8017934:	fb06 b60a 	mla	r6, r6, sl, fp
 8017938:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801793a:	f895 b001 	ldrb.w	fp, [r5, #1]
 801793e:	787d      	ldrb	r5, [r7, #1]
 8017940:	783f      	ldrb	r7, [r7, #0]
 8017942:	435d      	muls	r5, r3
 8017944:	fb0e 550b 	mla	r5, lr, fp, r5
 8017948:	f892 b001 	ldrb.w	fp, [r2, #1]
 801794c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801794e:	fb01 550b 	mla	r5, r1, fp, r5
 8017952:	f890 b001 	ldrb.w	fp, [r0, #1]
 8017956:	fb08 550b 	mla	r5, r8, fp, r5
 801795a:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801795e:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8017962:	fb1b fb03 	smulbb	fp, fp, r3
 8017966:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017968:	437b      	muls	r3, r7
 801796a:	7817      	ldrb	r7, [r2, #0]
 801796c:	fb0e 3309 	mla	r3, lr, r9, r3
 8017970:	fb01 3307 	mla	r3, r1, r7, r3
 8017974:	7807      	ldrb	r7, [r0, #0]
 8017976:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801797a:	fb08 3707 	mla	r7, r8, r7, r3
 801797e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017980:	fa5f fc8c 	uxtb.w	ip, ip
 8017984:	fb1c fc03 	smulbb	ip, ip, r3
 8017988:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801798c:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8017990:	fb05 b50a 	mla	r5, r5, sl, fp
 8017994:	fb07 c70a 	mla	r7, r7, sl, ip
 8017998:	b2b6      	uxth	r6, r6
 801799a:	b2ad      	uxth	r5, r5
 801799c:	b2bf      	uxth	r7, r7
 801799e:	1c73      	adds	r3, r6, #1
 80179a0:	1c7a      	adds	r2, r7, #1
 80179a2:	f105 0b01 	add.w	fp, r5, #1
 80179a6:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80179aa:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80179ae:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80179b2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80179b6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80179ba:	096d      	lsrs	r5, r5, #5
 80179bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80179be:	4316      	orrs	r6, r2
 80179c0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80179c4:	432e      	orrs	r6, r5
 80179c6:	f823 6b02 	strh.w	r6, [r3], #2
 80179ca:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80179cc:	930c      	str	r3, [sp, #48]	; 0x30
 80179ce:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80179d0:	4413      	add	r3, r2
 80179d2:	9327      	str	r3, [sp, #156]	; 0x9c
 80179d4:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80179d6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80179d8:	4413      	add	r3, r2
 80179da:	9328      	str	r3, [sp, #160]	; 0xa0
 80179dc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80179de:	3b01      	subs	r3, #1
 80179e0:	9311      	str	r3, [sp, #68]	; 0x44
 80179e2:	e6db      	b.n	801779c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 80179e4:	b149      	cbz	r1, 80179fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 80179e6:	5cb2      	ldrb	r2, [r6, r2]
 80179e8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80179ec:	4422      	add	r2, r4
 80179ee:	4628      	mov	r0, r5
 80179f0:	462f      	mov	r7, r5
 80179f2:	e771      	b.n	80178d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 80179f4:	4628      	mov	r0, r5
 80179f6:	462a      	mov	r2, r5
 80179f8:	e76e      	b.n	80178d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 80179fa:	4628      	mov	r0, r5
 80179fc:	462a      	mov	r2, r5
 80179fe:	e7f7      	b.n	80179f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8017a00:	b015      	add	sp, #84	; 0x54
 8017a02:	ecbd 8b08 	vpop	{d8-d11}
 8017a06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08017a0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8017a0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a10:	880e      	ldrh	r6, [r1, #0]
 8017a12:	b085      	sub	sp, #20
 8017a14:	0230      	lsls	r0, r6, #8
 8017a16:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8017a1a:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8017a1e:	0170      	lsls	r0, r6, #5
 8017a20:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8017a24:	9101      	str	r1, [sp, #4]
 8017a26:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8017a2a:	00f6      	lsls	r6, r6, #3
 8017a2c:	ea4b 0000 	orr.w	r0, fp, r0
 8017a30:	b2f6      	uxtb	r6, r6
 8017a32:	4691      	mov	r9, r2
 8017a34:	fb05 7a0c 	mla	sl, r5, ip, r7
 8017a38:	4306      	orrs	r6, r0
 8017a3a:	2d00      	cmp	r5, #0
 8017a3c:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8017a40:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8017a44:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8017a48:	9603      	str	r6, [sp, #12]
 8017a4a:	eb09 0e0a 	add.w	lr, r9, sl
 8017a4e:	db42      	blt.n	8017ad6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8017a50:	45a8      	cmp	r8, r5
 8017a52:	dd40      	ble.n	8017ad6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8017a54:	2f00      	cmp	r7, #0
 8017a56:	db3c      	blt.n	8017ad2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8017a58:	45bc      	cmp	ip, r7
 8017a5a:	dd3a      	ble.n	8017ad2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8017a5c:	f819 600a 	ldrb.w	r6, [r9, sl]
 8017a60:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8017a64:	441e      	add	r6, r3
 8017a66:	1c78      	adds	r0, r7, #1
 8017a68:	d438      	bmi.n	8017adc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8017a6a:	4584      	cmp	ip, r0
 8017a6c:	dd36      	ble.n	8017adc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8017a6e:	b3aa      	cbz	r2, 8017adc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8017a70:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8017a74:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8017a78:	4418      	add	r0, r3
 8017a7a:	3501      	adds	r5, #1
 8017a7c:	d432      	bmi.n	8017ae4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8017a7e:	45a8      	cmp	r8, r5
 8017a80:	dd30      	ble.n	8017ae4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8017a82:	b37c      	cbz	r4, 8017ae4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8017a84:	2f00      	cmp	r7, #0
 8017a86:	db2b      	blt.n	8017ae0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8017a88:	45bc      	cmp	ip, r7
 8017a8a:	dd29      	ble.n	8017ae0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8017a8c:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8017a90:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8017a94:	441d      	add	r5, r3
 8017a96:	3701      	adds	r7, #1
 8017a98:	d427      	bmi.n	8017aea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8017a9a:	45bc      	cmp	ip, r7
 8017a9c:	dd25      	ble.n	8017aea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8017a9e:	b322      	cbz	r2, 8017aea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8017aa0:	44f4      	add	ip, lr
 8017aa2:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8017aa6:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8017aaa:	443b      	add	r3, r7
 8017aac:	781f      	ldrb	r7, [r3, #0]
 8017aae:	f896 9000 	ldrb.w	r9, [r6]
 8017ab2:	f890 a000 	ldrb.w	sl, [r0]
 8017ab6:	f895 8000 	ldrb.w	r8, [r5]
 8017aba:	2a0f      	cmp	r2, #15
 8017abc:	4639      	mov	r1, r7
 8017abe:	d801      	bhi.n	8017ac4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb8>
 8017ac0:	2c0f      	cmp	r4, #15
 8017ac2:	d914      	bls.n	8017aee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe2>
 8017ac4:	4b2c      	ldr	r3, [pc, #176]	; (8017b78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8017ac6:	4a2d      	ldr	r2, [pc, #180]	; (8017b7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8017ac8:	482d      	ldr	r0, [pc, #180]	; (8017b80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x174>)
 8017aca:	f240 11f9 	movw	r1, #505	; 0x1f9
 8017ace:	f005 ffad 	bl	801da2c <__assert_func>
 8017ad2:	ae03      	add	r6, sp, #12
 8017ad4:	e7c7      	b.n	8017a66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 8017ad6:	a803      	add	r0, sp, #12
 8017ad8:	4606      	mov	r6, r0
 8017ada:	e7ce      	b.n	8017a7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8017adc:	a803      	add	r0, sp, #12
 8017ade:	e7cc      	b.n	8017a7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8017ae0:	ad03      	add	r5, sp, #12
 8017ae2:	e7d8      	b.n	8017a96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8a>
 8017ae4:	ab03      	add	r3, sp, #12
 8017ae6:	461d      	mov	r5, r3
 8017ae8:	e7e0      	b.n	8017aac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8017aea:	ab03      	add	r3, sp, #12
 8017aec:	e7de      	b.n	8017aac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8017aee:	b292      	uxth	r2, r2
 8017af0:	b2a4      	uxth	r4, r4
 8017af2:	fb02 fe04 	mul.w	lr, r2, r4
 8017af6:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 8017afa:	0112      	lsls	r2, r2, #4
 8017afc:	b2a4      	uxth	r4, r4
 8017afe:	f890 c002 	ldrb.w	ip, [r0, #2]
 8017b02:	f896 b002 	ldrb.w	fp, [r6, #2]
 8017b06:	7840      	ldrb	r0, [r0, #1]
 8017b08:	7876      	ldrb	r6, [r6, #1]
 8017b0a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8017b0e:	eba2 020e 	sub.w	r2, r2, lr
 8017b12:	b292      	uxth	r2, r2
 8017b14:	1b3f      	subs	r7, r7, r4
 8017b16:	b2bf      	uxth	r7, r7
 8017b18:	fb02 fc0c 	mul.w	ip, r2, ip
 8017b1c:	fb07 cc0b 	mla	ip, r7, fp, ip
 8017b20:	f895 b002 	ldrb.w	fp, [r5, #2]
 8017b24:	fb04 cc0b 	mla	ip, r4, fp, ip
 8017b28:	f893 b002 	ldrb.w	fp, [r3, #2]
 8017b2c:	785b      	ldrb	r3, [r3, #1]
 8017b2e:	fb0e cc0b 	mla	ip, lr, fp, ip
 8017b32:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8017b36:	fb02 fc0a 	mul.w	ip, r2, sl
 8017b3a:	4342      	muls	r2, r0
 8017b3c:	7868      	ldrb	r0, [r5, #1]
 8017b3e:	fb07 cc09 	mla	ip, r7, r9, ip
 8017b42:	fb07 2206 	mla	r2, r7, r6, r2
 8017b46:	fb04 cc08 	mla	ip, r4, r8, ip
 8017b4a:	fb04 2400 	mla	r4, r4, r0, r2
 8017b4e:	fb0e cc01 	mla	ip, lr, r1, ip
 8017b52:	fb0e 4e03 	mla	lr, lr, r3, r4
 8017b56:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017b5a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017b5e:	ea4c 0c0b 	orr.w	ip, ip, fp
 8017b62:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8017b66:	9b01      	ldr	r3, [sp, #4]
 8017b68:	ea4c 0c0e 	orr.w	ip, ip, lr
 8017b6c:	f8a3 c000 	strh.w	ip, [r3]
 8017b70:	b005      	add	sp, #20
 8017b72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017b76:	bf00      	nop
 8017b78:	08021c76 	.word	0x08021c76
 8017b7c:	080221a6 	.word	0x080221a6
 8017b80:	08021c43 	.word	0x08021c43

08017b84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017b84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b88:	ed2d 8b08 	vpush	{d8-d11}
 8017b8c:	b08f      	sub	sp, #60	; 0x3c
 8017b8e:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 8017b92:	920c      	str	r2, [sp, #48]	; 0x30
 8017b94:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8017b96:	910a      	str	r1, [sp, #40]	; 0x28
 8017b98:	9306      	str	r3, [sp, #24]
 8017b9a:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8017b9e:	900d      	str	r0, [sp, #52]	; 0x34
 8017ba0:	6850      	ldr	r0, [r2, #4]
 8017ba2:	6812      	ldr	r2, [r2, #0]
 8017ba4:	fb00 1303 	mla	r3, r0, r3, r1
 8017ba8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017bac:	9307      	str	r3, [sp, #28]
 8017bae:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017bb0:	681b      	ldr	r3, [r3, #0]
 8017bb2:	9308      	str	r3, [sp, #32]
 8017bb4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017bb6:	685c      	ldr	r4, [r3, #4]
 8017bb8:	eeb0 aa40 	vmov.f32	s20, s0
 8017bbc:	eef0 9a60 	vmov.f32	s19, s1
 8017bc0:	eeb0 9a41 	vmov.f32	s18, s2
 8017bc4:	eeb0 8a62 	vmov.f32	s16, s5
 8017bc8:	eef0 8a43 	vmov.f32	s17, s6
 8017bcc:	eef0 ba44 	vmov.f32	s23, s8
 8017bd0:	eeb0 ba64 	vmov.f32	s22, s9
 8017bd4:	eef0 aa45 	vmov.f32	s21, s10
 8017bd8:	3404      	adds	r4, #4
 8017bda:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017bdc:	2b00      	cmp	r3, #0
 8017bde:	dc03      	bgt.n	8017be8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8017be0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017be2:	2b00      	cmp	r3, #0
 8017be4:	f340 81d6 	ble.w	8017f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8017be8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017bea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017bee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017bf2:	1e48      	subs	r0, r1, #1
 8017bf4:	1e56      	subs	r6, r2, #1
 8017bf6:	9b06      	ldr	r3, [sp, #24]
 8017bf8:	2b00      	cmp	r3, #0
 8017bfa:	f340 80b7 	ble.w	8017d6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8017bfe:	ea5f 472b 	movs.w	r7, fp, asr #16
 8017c02:	ea4f 4325 	mov.w	r3, r5, asr #16
 8017c06:	d406      	bmi.n	8017c16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017c08:	4287      	cmp	r7, r0
 8017c0a:	da04      	bge.n	8017c16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017c0c:	2b00      	cmp	r3, #0
 8017c0e:	db02      	blt.n	8017c16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017c10:	42b3      	cmp	r3, r6
 8017c12:	f2c0 80ac 	blt.w	8017d6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8017c16:	3701      	adds	r7, #1
 8017c18:	f100 809d 	bmi.w	8017d56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8017c1c:	42b9      	cmp	r1, r7
 8017c1e:	f2c0 809a 	blt.w	8017d56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8017c22:	3301      	adds	r3, #1
 8017c24:	f100 8097 	bmi.w	8017d56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8017c28:	429a      	cmp	r2, r3
 8017c2a:	f2c0 8094 	blt.w	8017d56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8017c2e:	9b06      	ldr	r3, [sp, #24]
 8017c30:	930b      	str	r3, [sp, #44]	; 0x2c
 8017c32:	9b07      	ldr	r3, [sp, #28]
 8017c34:	9309      	str	r3, [sp, #36]	; 0x24
 8017c36:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017c38:	2b00      	cmp	r3, #0
 8017c3a:	f340 80b5 	ble.w	8017da8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8017c3e:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8017c40:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8017c42:	68c7      	ldr	r7, [r0, #12]
 8017c44:	6892      	ldr	r2, [r2, #8]
 8017c46:	ea5f 402b 	movs.w	r0, fp, asr #16
 8017c4a:	ea4f 4625 	mov.w	r6, r5, asr #16
 8017c4e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8017c52:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8017c56:	f100 80fb 	bmi.w	8017e50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8017c5a:	f102 3cff 	add.w	ip, r2, #4294967295
 8017c5e:	4560      	cmp	r0, ip
 8017c60:	f280 80f6 	bge.w	8017e50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8017c64:	2e00      	cmp	r6, #0
 8017c66:	f2c0 80f3 	blt.w	8017e50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8017c6a:	f107 3cff 	add.w	ip, r7, #4294967295
 8017c6e:	4566      	cmp	r6, ip
 8017c70:	f280 80ee 	bge.w	8017e50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8017c74:	b212      	sxth	r2, r2
 8017c76:	fb06 0002 	mla	r0, r6, r2, r0
 8017c7a:	9e08      	ldr	r6, [sp, #32]
 8017c7c:	1837      	adds	r7, r6, r0
 8017c7e:	5c30      	ldrb	r0, [r6, r0]
 8017c80:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8017c84:	eb04 0c08 	add.w	ip, r4, r8
 8017c88:	2b00      	cmp	r3, #0
 8017c8a:	f000 80d3 	beq.w	8017e34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8017c8e:	787e      	ldrb	r6, [r7, #1]
 8017c90:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8017c94:	4426      	add	r6, r4
 8017c96:	2900      	cmp	r1, #0
 8017c98:	f000 80d4 	beq.w	8017e44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8017c9c:	18b8      	adds	r0, r7, r2
 8017c9e:	5cba      	ldrb	r2, [r7, r2]
 8017ca0:	7840      	ldrb	r0, [r0, #1]
 8017ca2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017ca6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8017caa:	4422      	add	r2, r4
 8017cac:	4420      	add	r0, r4
 8017cae:	b29b      	uxth	r3, r3
 8017cb0:	b289      	uxth	r1, r1
 8017cb2:	fb03 f901 	mul.w	r9, r3, r1
 8017cb6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8017cba:	011b      	lsls	r3, r3, #4
 8017cbc:	b289      	uxth	r1, r1
 8017cbe:	78b7      	ldrb	r7, [r6, #2]
 8017cc0:	f89c a002 	ldrb.w	sl, [ip, #2]
 8017cc4:	f89c c001 	ldrb.w	ip, [ip, #1]
 8017cc8:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8017ccc:	eba3 0309 	sub.w	r3, r3, r9
 8017cd0:	b29b      	uxth	r3, r3
 8017cd2:	ebae 0e01 	sub.w	lr, lr, r1
 8017cd6:	fa1f fe8e 	uxth.w	lr, lr
 8017cda:	435f      	muls	r7, r3
 8017cdc:	fb0e 770a 	mla	r7, lr, sl, r7
 8017ce0:	f892 a002 	ldrb.w	sl, [r2, #2]
 8017ce4:	fb01 770a 	mla	r7, r1, sl, r7
 8017ce8:	f890 a002 	ldrb.w	sl, [r0, #2]
 8017cec:	fb09 7a0a 	mla	sl, r9, sl, r7
 8017cf0:	f814 7008 	ldrb.w	r7, [r4, r8]
 8017cf4:	f896 8000 	ldrb.w	r8, [r6]
 8017cf8:	7876      	ldrb	r6, [r6, #1]
 8017cfa:	fb03 f808 	mul.w	r8, r3, r8
 8017cfe:	fb0e 8807 	mla	r8, lr, r7, r8
 8017d02:	7817      	ldrb	r7, [r2, #0]
 8017d04:	fb01 8807 	mla	r8, r1, r7, r8
 8017d08:	7807      	ldrb	r7, [r0, #0]
 8017d0a:	fb09 8707 	mla	r7, r9, r7, r8
 8017d0e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8017d12:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017d16:	ea47 070a 	orr.w	r7, r7, sl
 8017d1a:	4373      	muls	r3, r6
 8017d1c:	f892 a001 	ldrb.w	sl, [r2, #1]
 8017d20:	fb0e 330c 	mla	r3, lr, ip, r3
 8017d24:	fb01 310a 	mla	r1, r1, sl, r3
 8017d28:	f890 a001 	ldrb.w	sl, [r0, #1]
 8017d2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017d2e:	fb09 1a0a 	mla	sl, r9, sl, r1
 8017d32:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017d36:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017d3a:	ea47 070a 	orr.w	r7, r7, sl
 8017d3e:	801f      	strh	r7, [r3, #0]
 8017d40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017d42:	3302      	adds	r3, #2
 8017d44:	9309      	str	r3, [sp, #36]	; 0x24
 8017d46:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8017d48:	449b      	add	fp, r3
 8017d4a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017d4c:	441d      	add	r5, r3
 8017d4e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017d50:	3b01      	subs	r3, #1
 8017d52:	930b      	str	r3, [sp, #44]	; 0x2c
 8017d54:	e76f      	b.n	8017c36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8017d56:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8017d58:	449b      	add	fp, r3
 8017d5a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017d5c:	441d      	add	r5, r3
 8017d5e:	9b06      	ldr	r3, [sp, #24]
 8017d60:	3b01      	subs	r3, #1
 8017d62:	9306      	str	r3, [sp, #24]
 8017d64:	9b07      	ldr	r3, [sp, #28]
 8017d66:	3302      	adds	r3, #2
 8017d68:	9307      	str	r3, [sp, #28]
 8017d6a:	e744      	b.n	8017bf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017d6c:	d023      	beq.n	8017db6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8017d6e:	9b06      	ldr	r3, [sp, #24]
 8017d70:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8017d72:	3b01      	subs	r3, #1
 8017d74:	fb00 b003 	mla	r0, r0, r3, fp
 8017d78:	1400      	asrs	r0, r0, #16
 8017d7a:	f53f af58 	bmi.w	8017c2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8017d7e:	3901      	subs	r1, #1
 8017d80:	4288      	cmp	r0, r1
 8017d82:	f6bf af54 	bge.w	8017c2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8017d86:	9924      	ldr	r1, [sp, #144]	; 0x90
 8017d88:	fb01 5303 	mla	r3, r1, r3, r5
 8017d8c:	141b      	asrs	r3, r3, #16
 8017d8e:	f53f af4e 	bmi.w	8017c2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8017d92:	3a01      	subs	r2, #1
 8017d94:	4293      	cmp	r3, r2
 8017d96:	f6bf af4a 	bge.w	8017c2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8017d9a:	9b06      	ldr	r3, [sp, #24]
 8017d9c:	9309      	str	r3, [sp, #36]	; 0x24
 8017d9e:	9b07      	ldr	r3, [sp, #28]
 8017da0:	930b      	str	r3, [sp, #44]	; 0x2c
 8017da2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017da4:	2b00      	cmp	r3, #0
 8017da6:	dc70      	bgt.n	8017e8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8017da8:	9b06      	ldr	r3, [sp, #24]
 8017daa:	9a07      	ldr	r2, [sp, #28]
 8017dac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017db0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017db4:	9307      	str	r3, [sp, #28]
 8017db6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017db8:	2b00      	cmp	r3, #0
 8017dba:	f340 80eb 	ble.w	8017f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8017dbe:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017dc2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017dc6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017dca:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017dcc:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017dd0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017dd4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017dd8:	eef0 6a48 	vmov.f32	s13, s16
 8017ddc:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017de0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017de4:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017de8:	ee16 ba90 	vmov	fp, s13
 8017dec:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017df0:	eef0 6a68 	vmov.f32	s13, s17
 8017df4:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017df8:	ee18 2a10 	vmov	r2, s16
 8017dfc:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017e00:	fb92 f3f3 	sdiv	r3, r2, r3
 8017e04:	ee18 2a90 	vmov	r2, s17
 8017e08:	9323      	str	r3, [sp, #140]	; 0x8c
 8017e0a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017e0c:	fb92 f3f3 	sdiv	r3, r2, r3
 8017e10:	9324      	str	r3, [sp, #144]	; 0x90
 8017e12:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017e14:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8017e16:	3b01      	subs	r3, #1
 8017e18:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017e1c:	930a      	str	r3, [sp, #40]	; 0x28
 8017e1e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017e20:	bf08      	it	eq
 8017e22:	4613      	moveq	r3, r2
 8017e24:	ee16 5a90 	vmov	r5, s13
 8017e28:	9306      	str	r3, [sp, #24]
 8017e2a:	eef0 8a67 	vmov.f32	s17, s15
 8017e2e:	eeb0 8a47 	vmov.f32	s16, s14
 8017e32:	e6d2      	b.n	8017bda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8017e34:	b149      	cbz	r1, 8017e4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 8017e36:	5cba      	ldrb	r2, [r7, r2]
 8017e38:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017e3c:	4422      	add	r2, r4
 8017e3e:	4660      	mov	r0, ip
 8017e40:	4666      	mov	r6, ip
 8017e42:	e734      	b.n	8017cae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8017e44:	4660      	mov	r0, ip
 8017e46:	4662      	mov	r2, ip
 8017e48:	e731      	b.n	8017cae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8017e4a:	4660      	mov	r0, ip
 8017e4c:	4662      	mov	r2, ip
 8017e4e:	e7f7      	b.n	8017e40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8017e50:	f110 0c01 	adds.w	ip, r0, #1
 8017e54:	f53f af74 	bmi.w	8017d40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8017e58:	4562      	cmp	r2, ip
 8017e5a:	f6ff af71 	blt.w	8017d40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8017e5e:	f116 0c01 	adds.w	ip, r6, #1
 8017e62:	f53f af6d 	bmi.w	8017d40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8017e66:	4567      	cmp	r7, ip
 8017e68:	f6ff af6a 	blt.w	8017d40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8017e6c:	b23f      	sxth	r7, r7
 8017e6e:	b212      	sxth	r2, r2
 8017e70:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8017e74:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8017e78:	9200      	str	r2, [sp, #0]
 8017e7a:	9701      	str	r7, [sp, #4]
 8017e7c:	4623      	mov	r3, r4
 8017e7e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017e82:	980d      	ldr	r0, [sp, #52]	; 0x34
 8017e84:	f7ff fdc2 	bl	8017a0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8017e88:	e75a      	b.n	8017d40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8017e8a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8017e8c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8017e90:	ea4f 462b 	mov.w	r6, fp, asr #16
 8017e94:	1428      	asrs	r0, r5, #16
 8017e96:	fb02 6000 	mla	r0, r2, r0, r6
 8017e9a:	9e08      	ldr	r6, [sp, #32]
 8017e9c:	f816 8000 	ldrb.w	r8, [r6, r0]
 8017ea0:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8017ea4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8017ea8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8017eac:	1837      	adds	r7, r6, r0
 8017eae:	eb04 0c08 	add.w	ip, r4, r8
 8017eb2:	2b00      	cmp	r3, #0
 8017eb4:	d060      	beq.n	8017f78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8017eb6:	787e      	ldrb	r6, [r7, #1]
 8017eb8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8017ebc:	4426      	add	r6, r4
 8017ebe:	2900      	cmp	r1, #0
 8017ec0:	d062      	beq.n	8017f88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 8017ec2:	18b8      	adds	r0, r7, r2
 8017ec4:	5cba      	ldrb	r2, [r7, r2]
 8017ec6:	7840      	ldrb	r0, [r0, #1]
 8017ec8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017ecc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8017ed0:	4422      	add	r2, r4
 8017ed2:	4420      	add	r0, r4
 8017ed4:	b29b      	uxth	r3, r3
 8017ed6:	b289      	uxth	r1, r1
 8017ed8:	fb03 f901 	mul.w	r9, r3, r1
 8017edc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8017ee0:	011b      	lsls	r3, r3, #4
 8017ee2:	b289      	uxth	r1, r1
 8017ee4:	78b7      	ldrb	r7, [r6, #2]
 8017ee6:	f89c a002 	ldrb.w	sl, [ip, #2]
 8017eea:	f89c c001 	ldrb.w	ip, [ip, #1]
 8017eee:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8017ef2:	eba3 0309 	sub.w	r3, r3, r9
 8017ef6:	b29b      	uxth	r3, r3
 8017ef8:	ebae 0e01 	sub.w	lr, lr, r1
 8017efc:	fa1f fe8e 	uxth.w	lr, lr
 8017f00:	435f      	muls	r7, r3
 8017f02:	fb0e 770a 	mla	r7, lr, sl, r7
 8017f06:	f892 a002 	ldrb.w	sl, [r2, #2]
 8017f0a:	fb01 770a 	mla	r7, r1, sl, r7
 8017f0e:	f890 a002 	ldrb.w	sl, [r0, #2]
 8017f12:	fb09 7a0a 	mla	sl, r9, sl, r7
 8017f16:	f814 7008 	ldrb.w	r7, [r4, r8]
 8017f1a:	f896 8000 	ldrb.w	r8, [r6]
 8017f1e:	7876      	ldrb	r6, [r6, #1]
 8017f20:	fb03 f808 	mul.w	r8, r3, r8
 8017f24:	fb0e 8807 	mla	r8, lr, r7, r8
 8017f28:	7817      	ldrb	r7, [r2, #0]
 8017f2a:	fb01 8807 	mla	r8, r1, r7, r8
 8017f2e:	7807      	ldrb	r7, [r0, #0]
 8017f30:	fb09 8707 	mla	r7, r9, r7, r8
 8017f34:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8017f38:	4373      	muls	r3, r6
 8017f3a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017f3e:	7856      	ldrb	r6, [r2, #1]
 8017f40:	ea47 070a 	orr.w	r7, r7, sl
 8017f44:	fb0e 330c 	mla	r3, lr, ip, r3
 8017f48:	f890 a001 	ldrb.w	sl, [r0, #1]
 8017f4c:	fb01 3306 	mla	r3, r1, r6, r3
 8017f50:	fb09 3a0a 	mla	sl, r9, sl, r3
 8017f54:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017f58:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017f5a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017f5e:	ea47 070a 	orr.w	r7, r7, sl
 8017f62:	f823 7b02 	strh.w	r7, [r3], #2
 8017f66:	930b      	str	r3, [sp, #44]	; 0x2c
 8017f68:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8017f6a:	449b      	add	fp, r3
 8017f6c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017f6e:	441d      	add	r5, r3
 8017f70:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017f72:	3b01      	subs	r3, #1
 8017f74:	9309      	str	r3, [sp, #36]	; 0x24
 8017f76:	e714      	b.n	8017da2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 8017f78:	b149      	cbz	r1, 8017f8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8017f7a:	5cba      	ldrb	r2, [r7, r2]
 8017f7c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017f80:	4422      	add	r2, r4
 8017f82:	4660      	mov	r0, ip
 8017f84:	4666      	mov	r6, ip
 8017f86:	e7a5      	b.n	8017ed4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8017f88:	4660      	mov	r0, ip
 8017f8a:	4662      	mov	r2, ip
 8017f8c:	e7a2      	b.n	8017ed4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8017f8e:	4660      	mov	r0, ip
 8017f90:	4662      	mov	r2, ip
 8017f92:	e7f7      	b.n	8017f84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 8017f94:	b00f      	add	sp, #60	; 0x3c
 8017f96:	ecbd 8b08 	vpop	{d8-d11}
 8017f9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08017fa0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8017fa0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017fa4:	e9dd 540e 	ldrd	r5, r4, [sp, #56]	; 0x38
 8017fa8:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8017fac:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 8017fb0:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8017fb4:	f89d 7044 	ldrb.w	r7, [sp, #68]	; 0x44
 8017fb8:	fb04 560c 	mla	r6, r4, ip, r5
 8017fbc:	2c00      	cmp	r4, #0
 8017fbe:	eb02 0e06 	add.w	lr, r2, r6
 8017fc2:	db3d      	blt.n	8018040 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 8017fc4:	45a0      	cmp	r8, r4
 8017fc6:	dd3b      	ble.n	8018040 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 8017fc8:	2d00      	cmp	r5, #0
 8017fca:	db37      	blt.n	801803c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 8017fcc:	45ac      	cmp	ip, r5
 8017fce:	dd35      	ble.n	801803c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 8017fd0:	5d92      	ldrb	r2, [r2, r6]
 8017fd2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8017fd6:	1c6e      	adds	r6, r5, #1
 8017fd8:	d435      	bmi.n	8018046 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8017fda:	45b4      	cmp	ip, r6
 8017fdc:	dd33      	ble.n	8018046 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8017fde:	b3a0      	cbz	r0, 801804a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xaa>
 8017fe0:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8017fe4:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8017fe8:	3401      	adds	r4, #1
 8017fea:	d432      	bmi.n	8018052 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 8017fec:	45a0      	cmp	r8, r4
 8017fee:	dd30      	ble.n	8018052 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 8017ff0:	b397      	cbz	r7, 8018058 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb8>
 8017ff2:	2d00      	cmp	r5, #0
 8017ff4:	db2b      	blt.n	801804e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 8017ff6:	45ac      	cmp	ip, r5
 8017ff8:	dd29      	ble.n	801804e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 8017ffa:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8017ffe:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8018002:	3501      	adds	r5, #1
 8018004:	d42b      	bmi.n	801805e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8018006:	45ac      	cmp	ip, r5
 8018008:	dd29      	ble.n	801805e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 801800a:	b350      	cbz	r0, 8018062 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 801800c:	44f4      	add	ip, lr
 801800e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8018012:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8018016:	280f      	cmp	r0, #15
 8018018:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801801c:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8018020:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8018024:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8018028:	d801      	bhi.n	801802e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x8e>
 801802a:	2f0f      	cmp	r7, #15
 801802c:	d91b      	bls.n	8018066 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc6>
 801802e:	4b8d      	ldr	r3, [pc, #564]	; (8018264 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8018030:	4a8d      	ldr	r2, [pc, #564]	; (8018268 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 8018032:	488e      	ldr	r0, [pc, #568]	; (801826c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 8018034:	f240 11f9 	movw	r1, #505	; 0x1f9
 8018038:	f005 fcf8 	bl	801da2c <__assert_func>
 801803c:	2200      	movs	r2, #0
 801803e:	e7ca      	b.n	8017fd6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x36>
 8018040:	2600      	movs	r6, #0
 8018042:	4632      	mov	r2, r6
 8018044:	e7d0      	b.n	8017fe8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 8018046:	2600      	movs	r6, #0
 8018048:	e7ce      	b.n	8017fe8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 801804a:	4606      	mov	r6, r0
 801804c:	e7cc      	b.n	8017fe8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 801804e:	2400      	movs	r4, #0
 8018050:	e7d7      	b.n	8018002 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x62>
 8018052:	2300      	movs	r3, #0
 8018054:	461c      	mov	r4, r3
 8018056:	e7de      	b.n	8018016 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8018058:	463b      	mov	r3, r7
 801805a:	463c      	mov	r4, r7
 801805c:	e7db      	b.n	8018016 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 801805e:	2300      	movs	r3, #0
 8018060:	e7d9      	b.n	8018016 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8018062:	4603      	mov	r3, r0
 8018064:	e7d7      	b.n	8018016 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8018066:	b280      	uxth	r0, r0
 8018068:	b2bf      	uxth	r7, r7
 801806a:	fb07 fe00 	mul.w	lr, r7, r0
 801806e:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8018072:	0100      	lsls	r0, r0, #4
 8018074:	eba0 0c0e 	sub.w	ip, r0, lr
 8018078:	b2bf      	uxth	r7, r7
 801807a:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801807e:	fa1f fc8c 	uxth.w	ip, ip
 8018082:	1bed      	subs	r5, r5, r7
 8018084:	b2ad      	uxth	r5, r5
 8018086:	fb0a f00c 	mul.w	r0, sl, ip
 801808a:	fb0b 0005 	mla	r0, fp, r5, r0
 801808e:	fb07 0009 	mla	r0, r7, r9, r0
 8018092:	fb0e 0008 	mla	r0, lr, r8, r0
 8018096:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801809a:	9001      	str	r0, [sp, #4]
 801809c:	2800      	cmp	r0, #0
 801809e:	f000 80de 	beq.w	801825e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2be>
 80180a2:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80180a6:	d018      	beq.n	80180da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x13a>
 80180a8:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80180ac:	fb0b f000 	mul.w	r0, fp, r0
 80180b0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80180b4:	fb0b fb02 	mul.w	fp, fp, r2
 80180b8:	0a02      	lsrs	r2, r0, #8
 80180ba:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80180be:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80180c2:	4402      	add	r2, r0
 80180c4:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 80180c8:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80180cc:	0a12      	lsrs	r2, r2, #8
 80180ce:	0a00      	lsrs	r0, r0, #8
 80180d0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80180d4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80180d8:	4302      	orrs	r2, r0
 80180da:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80180de:	d01a      	beq.n	8018116 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x176>
 80180e0:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 80180e4:	fb0a f000 	mul.w	r0, sl, r0
 80180e8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80180ec:	fb0a fa06 	mul.w	sl, sl, r6
 80180f0:	0a06      	lsrs	r6, r0, #8
 80180f2:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80180f6:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80180fa:	4406      	add	r6, r0
 80180fc:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8018100:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8018104:	0a36      	lsrs	r6, r6, #8
 8018106:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801810a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801810e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018112:	ea46 060a 	orr.w	r6, r6, sl
 8018116:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801811a:	d01b      	beq.n	8018154 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1b4>
 801811c:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8018120:	fb09 fa0a 	mul.w	sl, r9, sl
 8018124:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8018128:	fb09 f004 	mul.w	r0, r9, r4
 801812c:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8018130:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8018134:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018138:	f500 7980 	add.w	r9, r0, #256	; 0x100
 801813c:	4454      	add	r4, sl
 801813e:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 8018142:	0a24      	lsrs	r4, r4, #8
 8018144:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018148:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801814c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8018150:	ea44 0409 	orr.w	r4, r4, r9
 8018154:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018158:	d01b      	beq.n	8018192 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1f2>
 801815a:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801815e:	fb08 f909 	mul.w	r9, r8, r9
 8018162:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018166:	fb08 f003 	mul.w	r0, r8, r3
 801816a:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801816e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018172:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8018176:	f500 7880 	add.w	r8, r0, #256	; 0x100
 801817a:	444b      	add	r3, r9
 801817c:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 8018180:	0a1b      	lsrs	r3, r3, #8
 8018182:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8018186:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801818a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801818e:	ea43 0308 	orr.w	r3, r3, r8
 8018192:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8018196:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801819a:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 801819e:	fb0c f808 	mul.w	r8, ip, r8
 80181a2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80181a6:	fb0c f606 	mul.w	r6, ip, r6
 80181aa:	fb05 8909 	mla	r9, r5, r9, r8
 80181ae:	fb05 6502 	mla	r5, r5, r2, r6
 80181b2:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 80181b6:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 80181ba:	9a01      	ldr	r2, [sp, #4]
 80181bc:	8808      	ldrh	r0, [r1, #0]
 80181be:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80181c2:	fb07 9908 	mla	r9, r7, r8, r9
 80181c6:	fb07 5704 	mla	r7, r7, r4, r5
 80181ca:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 80181ce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80181d2:	b2b6      	uxth	r6, r6
 80181d4:	fb0e 9808 	mla	r8, lr, r8, r9
 80181d8:	fb0e 7e03 	mla	lr, lr, r3, r7
 80181dc:	4372      	muls	r2, r6
 80181de:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80181e2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80181e6:	1c53      	adds	r3, r2, #1
 80181e8:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 80181ec:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80181f0:	ea48 0e0e 	orr.w	lr, r8, lr
 80181f4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80181f8:	1205      	asrs	r5, r0, #8
 80181fa:	ea4f 421e 	mov.w	r2, lr, lsr #16
 80181fe:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8018202:	b2db      	uxtb	r3, r3
 8018204:	fb12 f206 	smulbb	r2, r2, r6
 8018208:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801820c:	fb05 2503 	mla	r5, r5, r3, r2
 8018210:	f3ce 2407 	ubfx	r4, lr, #8, #8
 8018214:	10c2      	asrs	r2, r0, #3
 8018216:	fa5f fe8e 	uxtb.w	lr, lr
 801821a:	00c0      	lsls	r0, r0, #3
 801821c:	fb14 f406 	smulbb	r4, r4, r6
 8018220:	b2c0      	uxtb	r0, r0
 8018222:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018226:	fb1e fe06 	smulbb	lr, lr, r6
 801822a:	fb02 4203 	mla	r2, r2, r3, r4
 801822e:	b2ad      	uxth	r5, r5
 8018230:	fb00 e303 	mla	r3, r0, r3, lr
 8018234:	b298      	uxth	r0, r3
 8018236:	b294      	uxth	r4, r2
 8018238:	1c6b      	adds	r3, r5, #1
 801823a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801823e:	1c62      	adds	r2, r4, #1
 8018240:	1c43      	adds	r3, r0, #1
 8018242:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018246:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801824a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801824e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018252:	0952      	lsrs	r2, r2, #5
 8018254:	432b      	orrs	r3, r5
 8018256:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801825a:	4313      	orrs	r3, r2
 801825c:	800b      	strh	r3, [r1, #0]
 801825e:	b003      	add	sp, #12
 8018260:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018264:	08021c76 	.word	0x08021c76
 8018268:	080221a6 	.word	0x080221a6
 801826c:	08021c43 	.word	0x08021c43

08018270 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018270:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018274:	ed2d 8b08 	vpush	{d8-d11}
 8018278:	b09f      	sub	sp, #124	; 0x7c
 801827a:	eeb0 aa40 	vmov.f32	s20, s0
 801827e:	921b      	str	r2, [sp, #108]	; 0x6c
 8018280:	9309      	str	r3, [sp, #36]	; 0x24
 8018282:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 8018284:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 8018288:	931c      	str	r3, [sp, #112]	; 0x70
 801828a:	9119      	str	r1, [sp, #100]	; 0x64
 801828c:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 8018290:	901d      	str	r0, [sp, #116]	; 0x74
 8018292:	6850      	ldr	r0, [r2, #4]
 8018294:	6812      	ldr	r2, [r2, #0]
 8018296:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 8018298:	fb00 1303 	mla	r3, r0, r3, r1
 801829c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80182a0:	930c      	str	r3, [sp, #48]	; 0x30
 80182a2:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80182a4:	681b      	ldr	r3, [r3, #0]
 80182a6:	9312      	str	r3, [sp, #72]	; 0x48
 80182a8:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80182aa:	685e      	ldr	r6, [r3, #4]
 80182ac:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 80182b0:	930d      	str	r3, [sp, #52]	; 0x34
 80182b2:	eef0 9a60 	vmov.f32	s19, s1
 80182b6:	eeb0 9a41 	vmov.f32	s18, s2
 80182ba:	eeb0 8a62 	vmov.f32	s16, s5
 80182be:	eef0 8a43 	vmov.f32	s17, s6
 80182c2:	eef0 ba44 	vmov.f32	s23, s8
 80182c6:	eeb0 ba64 	vmov.f32	s22, s9
 80182ca:	eef0 aa45 	vmov.f32	s21, s10
 80182ce:	3604      	adds	r6, #4
 80182d0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80182d2:	2b00      	cmp	r3, #0
 80182d4:	dc03      	bgt.n	80182de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80182d6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80182d8:	2b00      	cmp	r3, #0
 80182da:	f340 8388 	ble.w	80189ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 80182de:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80182e0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80182e4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80182e8:	1e48      	subs	r0, r1, #1
 80182ea:	1e57      	subs	r7, r2, #1
 80182ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80182ee:	2b00      	cmp	r3, #0
 80182f0:	f340 8195 	ble.w	801861e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80182f4:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80182f6:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80182fa:	ea4f 4325 	mov.w	r3, r5, asr #16
 80182fe:	d406      	bmi.n	801830e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018300:	4584      	cmp	ip, r0
 8018302:	da04      	bge.n	801830e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018304:	2b00      	cmp	r3, #0
 8018306:	db02      	blt.n	801830e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018308:	42bb      	cmp	r3, r7
 801830a:	f2c0 8189 	blt.w	8018620 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 801830e:	f11c 0c01 	adds.w	ip, ip, #1
 8018312:	f100 8177 	bmi.w	8018604 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8018316:	4561      	cmp	r1, ip
 8018318:	f2c0 8174 	blt.w	8018604 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801831c:	3301      	adds	r3, #1
 801831e:	f100 8171 	bmi.w	8018604 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8018322:	429a      	cmp	r2, r3
 8018324:	f2c0 816e 	blt.w	8018604 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8018328:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801832a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801832c:	931a      	str	r3, [sp, #104]	; 0x68
 801832e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8018330:	2b00      	cmp	r3, #0
 8018332:	f340 8193 	ble.w	801865c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8018336:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8018338:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801833c:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801833e:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8018342:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8018344:	141b      	asrs	r3, r3, #16
 8018346:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801834a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801834e:	f100 81d6 	bmi.w	80186fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8018352:	f100 38ff 	add.w	r8, r0, #4294967295
 8018356:	4543      	cmp	r3, r8
 8018358:	f280 81d1 	bge.w	80186fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801835c:	f1bc 0f00 	cmp.w	ip, #0
 8018360:	f2c0 81cd 	blt.w	80186fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8018364:	f10e 38ff 	add.w	r8, lr, #4294967295
 8018368:	45c4      	cmp	ip, r8
 801836a:	f280 81c8 	bge.w	80186fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801836e:	b200      	sxth	r0, r0
 8018370:	fb0c 3300 	mla	r3, ip, r0, r3
 8018374:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018376:	eb04 0803 	add.w	r8, r4, r3
 801837a:	5ce3      	ldrb	r3, [r4, r3]
 801837c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8018380:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8018384:	2a00      	cmp	r2, #0
 8018386:	f000 81af 	beq.w	80186e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801838a:	f898 c001 	ldrb.w	ip, [r8, #1]
 801838e:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8018392:	940e      	str	r4, [sp, #56]	; 0x38
 8018394:	0e24      	lsrs	r4, r4, #24
 8018396:	9415      	str	r4, [sp, #84]	; 0x54
 8018398:	b179      	cbz	r1, 80183ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801839a:	eb08 0c00 	add.w	ip, r8, r0
 801839e:	f818 0000 	ldrb.w	r0, [r8, r0]
 80183a2:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80183a6:	900a      	str	r0, [sp, #40]	; 0x28
 80183a8:	0e00      	lsrs	r0, r0, #24
 80183aa:	9013      	str	r0, [sp, #76]	; 0x4c
 80183ac:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80183b0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80183b4:	900f      	str	r0, [sp, #60]	; 0x3c
 80183b6:	0e00      	lsrs	r0, r0, #24
 80183b8:	9016      	str	r0, [sp, #88]	; 0x58
 80183ba:	b292      	uxth	r2, r2
 80183bc:	b289      	uxth	r1, r1
 80183be:	fb02 f901 	mul.w	r9, r2, r1
 80183c2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80183c6:	0112      	lsls	r2, r2, #4
 80183c8:	eba2 0809 	sub.w	r8, r2, r9
 80183cc:	b289      	uxth	r1, r1
 80183ce:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80183d2:	9815      	ldr	r0, [sp, #84]	; 0x54
 80183d4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80183d6:	fa1f f888 	uxth.w	r8, r8
 80183da:	1a52      	subs	r2, r2, r1
 80183dc:	b292      	uxth	r2, r2
 80183de:	fb08 f000 	mul.w	r0, r8, r0
 80183e2:	fb02 000e 	mla	r0, r2, lr, r0
 80183e6:	fb01 0004 	mla	r0, r1, r4, r0
 80183ea:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80183ec:	fb09 0004 	mla	r0, r9, r4, r0
 80183f0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80183f4:	2800      	cmp	r0, #0
 80183f6:	f000 80fa 	beq.w	80185ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80183fa:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80183fe:	d01b      	beq.n	8018438 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8018400:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8018404:	fb0e fa0a 	mul.w	sl, lr, sl
 8018408:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801840c:	fb0e fe03 	mul.w	lr, lr, r3
 8018410:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8018414:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018418:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801841c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8018420:	4453      	add	r3, sl
 8018422:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8018426:	0a1b      	lsrs	r3, r3, #8
 8018428:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801842c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018430:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018434:	ea43 030c 	orr.w	r3, r3, ip
 8018438:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801843a:	2cff      	cmp	r4, #255	; 0xff
 801843c:	d021      	beq.n	8018482 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801843e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018440:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8018444:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018446:	fb04 fb0b 	mul.w	fp, r4, fp
 801844a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801844c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018450:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018452:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018456:	fb04 fa0a 	mul.w	sl, r4, sl
 801845a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801845e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018462:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018466:	44de      	add	lr, fp
 8018468:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801846c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018470:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018474:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018478:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801847c:	ea4e 040a 	orr.w	r4, lr, sl
 8018480:	940e      	str	r4, [sp, #56]	; 0x38
 8018482:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018484:	2cff      	cmp	r4, #255	; 0xff
 8018486:	d021      	beq.n	80184cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 8018488:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801848a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801848e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018490:	fb04 fb0b 	mul.w	fp, r4, fp
 8018494:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018496:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801849a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801849c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80184a0:	fb04 fa0a 	mul.w	sl, r4, sl
 80184a4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80184a8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80184ac:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80184b0:	44de      	add	lr, fp
 80184b2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80184b6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80184ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80184be:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80184c2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80184c6:	ea4e 040a 	orr.w	r4, lr, sl
 80184ca:	940a      	str	r4, [sp, #40]	; 0x28
 80184cc:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80184ce:	2cff      	cmp	r4, #255	; 0xff
 80184d0:	d021      	beq.n	8018516 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80184d2:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80184d4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80184d8:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80184da:	fb04 fb0b 	mul.w	fp, r4, fp
 80184de:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80184e0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80184e4:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80184e6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80184ea:	fb04 fa0a 	mul.w	sl, r4, sl
 80184ee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80184f2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80184f6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80184fa:	44de      	add	lr, fp
 80184fc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018500:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018504:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018508:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801850c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018510:	ea4e 040a 	orr.w	r4, lr, sl
 8018514:	940f      	str	r4, [sp, #60]	; 0x3c
 8018516:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018518:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801851c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801851e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8018522:	fb08 fc0c 	mul.w	ip, r8, ip
 8018526:	fb02 cc0e 	mla	ip, r2, lr, ip
 801852a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801852e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8018530:	fb01 cc0e 	mla	ip, r1, lr, ip
 8018534:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8018538:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801853a:	fb09 cc0e 	mla	ip, r9, lr, ip
 801853e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8018542:	fb08 f80e 	mul.w	r8, r8, lr
 8018546:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801854a:	fb02 8303 	mla	r3, r2, r3, r8
 801854e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018550:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018552:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8018556:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018558:	fb01 330a 	mla	r3, r1, sl, r3
 801855c:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8018560:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018562:	fb09 3901 	mla	r9, r9, r1, r3
 8018566:	4342      	muls	r2, r0
 8018568:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801856c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018570:	883b      	ldrh	r3, [r7, #0]
 8018572:	1c50      	adds	r0, r2, #1
 8018574:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018578:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801857c:	ea4c 0c09 	orr.w	ip, ip, r9
 8018580:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8018584:	1219      	asrs	r1, r3, #8
 8018586:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801858a:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801858e:	b2c0      	uxtb	r0, r0
 8018590:	fb12 f204 	smulbb	r2, r2, r4
 8018594:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018598:	fb01 2100 	mla	r1, r1, r0, r2
 801859c:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80185a0:	10da      	asrs	r2, r3, #3
 80185a2:	fa5f fc8c 	uxtb.w	ip, ip
 80185a6:	00db      	lsls	r3, r3, #3
 80185a8:	fb1c fc04 	smulbb	ip, ip, r4
 80185ac:	b2db      	uxtb	r3, r3
 80185ae:	b289      	uxth	r1, r1
 80185b0:	fb03 c300 	mla	r3, r3, r0, ip
 80185b4:	fa1f fc83 	uxth.w	ip, r3
 80185b8:	1c4b      	adds	r3, r1, #1
 80185ba:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80185be:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80185c2:	fb1e fe04 	smulbb	lr, lr, r4
 80185c6:	f10c 0301 	add.w	r3, ip, #1
 80185ca:	fb02 e200 	mla	r2, r2, r0, lr
 80185ce:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80185d2:	b292      	uxth	r2, r2
 80185d4:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80185d8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80185dc:	430b      	orrs	r3, r1
 80185de:	1c51      	adds	r1, r2, #1
 80185e0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80185e4:	0952      	lsrs	r2, r2, #5
 80185e6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80185ea:	4313      	orrs	r3, r2
 80185ec:	803b      	strh	r3, [r7, #0]
 80185ee:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80185f0:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80185f2:	441a      	add	r2, r3
 80185f4:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80185f6:	9231      	str	r2, [sp, #196]	; 0xc4
 80185f8:	441d      	add	r5, r3
 80185fa:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80185fc:	3b01      	subs	r3, #1
 80185fe:	3702      	adds	r7, #2
 8018600:	931a      	str	r3, [sp, #104]	; 0x68
 8018602:	e694      	b.n	801832e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8018604:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8018606:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8018608:	441c      	add	r4, r3
 801860a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801860c:	9431      	str	r4, [sp, #196]	; 0xc4
 801860e:	441d      	add	r5, r3
 8018610:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018612:	3b01      	subs	r3, #1
 8018614:	9309      	str	r3, [sp, #36]	; 0x24
 8018616:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018618:	3302      	adds	r3, #2
 801861a:	930c      	str	r3, [sp, #48]	; 0x30
 801861c:	e666      	b.n	80182ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801861e:	d024      	beq.n	801866a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fa>
 8018620:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018622:	9833      	ldr	r0, [sp, #204]	; 0xcc
 8018624:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8018626:	3b01      	subs	r3, #1
 8018628:	fb00 4003 	mla	r0, r0, r3, r4
 801862c:	1400      	asrs	r0, r0, #16
 801862e:	f53f ae7b 	bmi.w	8018328 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8018632:	3901      	subs	r1, #1
 8018634:	4288      	cmp	r0, r1
 8018636:	f6bf ae77 	bge.w	8018328 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801863a:	9934      	ldr	r1, [sp, #208]	; 0xd0
 801863c:	fb01 5303 	mla	r3, r1, r3, r5
 8018640:	141b      	asrs	r3, r3, #16
 8018642:	f53f ae71 	bmi.w	8018328 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8018646:	3a01      	subs	r2, #1
 8018648:	4293      	cmp	r3, r2
 801864a:	f6bf ae6d 	bge.w	8018328 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801864e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8018652:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8018656:	f1bb 0f00 	cmp.w	fp, #0
 801865a:	dc70      	bgt.n	801873e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 801865c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801865e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018662:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018664:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8018668:	930c      	str	r3, [sp, #48]	; 0x30
 801866a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801866c:	2b00      	cmp	r3, #0
 801866e:	f340 81be 	ble.w	80189ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 8018672:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018676:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801867a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801867e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018680:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018684:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018688:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801868c:	eef0 6a48 	vmov.f32	s13, s16
 8018690:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018694:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018698:	ee37 8a48 	vsub.f32	s16, s14, s16
 801869c:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 80186a0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80186a4:	eef0 6a68 	vmov.f32	s13, s17
 80186a8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80186ac:	ee18 2a10 	vmov	r2, s16
 80186b0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80186b4:	fb92 f3f3 	sdiv	r3, r2, r3
 80186b8:	ee18 2a90 	vmov	r2, s17
 80186bc:	9333      	str	r3, [sp, #204]	; 0xcc
 80186be:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80186c0:	fb92 f3f3 	sdiv	r3, r2, r3
 80186c4:	9334      	str	r3, [sp, #208]	; 0xd0
 80186c6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80186c8:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80186ca:	3b01      	subs	r3, #1
 80186cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80186d0:	9319      	str	r3, [sp, #100]	; 0x64
 80186d2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80186d4:	bf08      	it	eq
 80186d6:	4613      	moveq	r3, r2
 80186d8:	ee16 5a90 	vmov	r5, s13
 80186dc:	9309      	str	r3, [sp, #36]	; 0x24
 80186de:	eef0 8a67 	vmov.f32	s17, s15
 80186e2:	eeb0 8a47 	vmov.f32	s16, s14
 80186e6:	e5f3      	b.n	80182d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80186e8:	2900      	cmp	r1, #0
 80186ea:	f43f ae66 	beq.w	80183ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80186ee:	f818 0000 	ldrb.w	r0, [r8, r0]
 80186f2:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80186f6:	900a      	str	r0, [sp, #40]	; 0x28
 80186f8:	0e00      	lsrs	r0, r0, #24
 80186fa:	9013      	str	r0, [sp, #76]	; 0x4c
 80186fc:	e65d      	b.n	80183ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80186fe:	f113 0801 	adds.w	r8, r3, #1
 8018702:	f53f af74 	bmi.w	80185ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8018706:	4540      	cmp	r0, r8
 8018708:	f6ff af71 	blt.w	80185ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801870c:	f11c 0801 	adds.w	r8, ip, #1
 8018710:	f53f af6d 	bmi.w	80185ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8018714:	45c6      	cmp	lr, r8
 8018716:	f6ff af6a 	blt.w	80185ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801871a:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801871c:	9302      	str	r3, [sp, #8]
 801871e:	b200      	sxth	r0, r0
 8018720:	fa0f f38e 	sxth.w	r3, lr
 8018724:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8018728:	e9cd c203 	strd	ip, r2, [sp, #12]
 801872c:	9301      	str	r3, [sp, #4]
 801872e:	9000      	str	r0, [sp, #0]
 8018730:	4633      	mov	r3, r6
 8018732:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018734:	981d      	ldr	r0, [sp, #116]	; 0x74
 8018736:	4639      	mov	r1, r7
 8018738:	f7ff fc32 	bl	8017fa0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801873c:	e757      	b.n	80185ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801873e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8018740:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8018742:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018746:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8018748:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801874c:	1427      	asrs	r7, r4, #16
 801874e:	142b      	asrs	r3, r5, #16
 8018750:	fb01 7303 	mla	r3, r1, r3, r7
 8018754:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018756:	18e7      	adds	r7, r4, r3
 8018758:	5ce3      	ldrb	r3, [r4, r3]
 801875a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801875e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8018762:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8018766:	2a00      	cmp	r2, #0
 8018768:	f000 8137 	beq.w	80189da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 801876c:	f897 e001 	ldrb.w	lr, [r7, #1]
 8018770:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8018774:	9410      	str	r4, [sp, #64]	; 0x40
 8018776:	0e24      	lsrs	r4, r4, #24
 8018778:	9417      	str	r4, [sp, #92]	; 0x5c
 801877a:	b170      	cbz	r0, 801879a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 801877c:	eb07 0e01 	add.w	lr, r7, r1
 8018780:	5c79      	ldrb	r1, [r7, r1]
 8018782:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018786:	910b      	str	r1, [sp, #44]	; 0x2c
 8018788:	0e09      	lsrs	r1, r1, #24
 801878a:	9114      	str	r1, [sp, #80]	; 0x50
 801878c:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8018790:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018794:	9111      	str	r1, [sp, #68]	; 0x44
 8018796:	0e09      	lsrs	r1, r1, #24
 8018798:	9118      	str	r1, [sp, #96]	; 0x60
 801879a:	b292      	uxth	r2, r2
 801879c:	b280      	uxth	r0, r0
 801879e:	fb02 f800 	mul.w	r8, r2, r0
 80187a2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80187a6:	0112      	lsls	r2, r2, #4
 80187a8:	eba2 0e08 	sub.w	lr, r2, r8
 80187ac:	b280      	uxth	r0, r0
 80187ae:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80187b2:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80187b4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80187b6:	fa1f fe8e 	uxth.w	lr, lr
 80187ba:	1a12      	subs	r2, r2, r0
 80187bc:	b292      	uxth	r2, r2
 80187be:	fb0e f101 	mul.w	r1, lr, r1
 80187c2:	fb02 110c 	mla	r1, r2, ip, r1
 80187c6:	fb00 1104 	mla	r1, r0, r4, r1
 80187ca:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80187cc:	fb08 1104 	mla	r1, r8, r4, r1
 80187d0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80187d4:	2900      	cmp	r1, #0
 80187d6:	f000 80f5 	beq.w	80189c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 80187da:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80187de:	d019      	beq.n	8018814 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 80187e0:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80187e4:	fb0c fa0a 	mul.w	sl, ip, sl
 80187e8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80187ec:	fb0c fc03 	mul.w	ip, ip, r3
 80187f0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80187f4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80187f8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80187fc:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8018800:	4453      	add	r3, sl
 8018802:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8018806:	0a1b      	lsrs	r3, r3, #8
 8018808:	0a3f      	lsrs	r7, r7, #8
 801880a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801880e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8018812:	433b      	orrs	r3, r7
 8018814:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8018816:	2cff      	cmp	r4, #255	; 0xff
 8018818:	d020      	beq.n	801885c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801881a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801881c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8018820:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8018822:	4367      	muls	r7, r4
 8018824:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018826:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801882a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801882c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018830:	fb04 fa0a 	mul.w	sl, r4, sl
 8018834:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018838:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801883c:	44bc      	add	ip, r7
 801883e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018842:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018846:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801884a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801884e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018852:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018856:	ea4c 040a 	orr.w	r4, ip, sl
 801885a:	9410      	str	r4, [sp, #64]	; 0x40
 801885c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801885e:	2cff      	cmp	r4, #255	; 0xff
 8018860:	d020      	beq.n	80188a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8018862:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018864:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8018868:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801886a:	4367      	muls	r7, r4
 801886c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801886e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018872:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018874:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018878:	fb04 fa0a 	mul.w	sl, r4, sl
 801887c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018880:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018884:	44bc      	add	ip, r7
 8018886:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801888a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801888e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018892:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018896:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801889a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801889e:	ea4c 040a 	orr.w	r4, ip, sl
 80188a2:	940b      	str	r4, [sp, #44]	; 0x2c
 80188a4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80188a6:	2cff      	cmp	r4, #255	; 0xff
 80188a8:	d020      	beq.n	80188ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67c>
 80188aa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80188ac:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80188b0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80188b2:	4367      	muls	r7, r4
 80188b4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80188b6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80188ba:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80188bc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80188c0:	fb04 fa0a 	mul.w	sl, r4, sl
 80188c4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80188c8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80188cc:	44bc      	add	ip, r7
 80188ce:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80188d2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80188d6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80188da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80188de:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80188e2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80188e6:	ea4c 040a 	orr.w	r4, ip, sl
 80188ea:	9411      	str	r4, [sp, #68]	; 0x44
 80188ec:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80188ee:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80188f2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80188f4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80188f8:	fb0e f707 	mul.w	r7, lr, r7
 80188fc:	fb02 770c 	mla	r7, r2, ip, r7
 8018900:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018904:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018906:	fb00 770c 	mla	r7, r0, ip, r7
 801890a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801890e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018910:	fb08 770c 	mla	r7, r8, ip, r7
 8018914:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8018918:	fb0e fe0c 	mul.w	lr, lr, ip
 801891c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018920:	fb02 e303 	mla	r3, r2, r3, lr
 8018924:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018926:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018928:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801892c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801892e:	fb00 330a 	mla	r3, r0, sl, r3
 8018932:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8018936:	fb08 3c0c 	mla	ip, r8, ip, r3
 801893a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801893c:	f8b9 0000 	ldrh.w	r0, [r9]
 8018940:	434b      	muls	r3, r1
 8018942:	0a3f      	lsrs	r7, r7, #8
 8018944:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018948:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801894c:	1c59      	adds	r1, r3, #1
 801894e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018952:	ea47 070c 	orr.w	r7, r7, ip
 8018956:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801895a:	1202      	asrs	r2, r0, #8
 801895c:	0c3b      	lsrs	r3, r7, #16
 801895e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8018962:	b2c9      	uxtb	r1, r1
 8018964:	fb13 f304 	smulbb	r3, r3, r4
 8018968:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801896c:	fb02 3201 	mla	r2, r2, r1, r3
 8018970:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8018974:	10c3      	asrs	r3, r0, #3
 8018976:	b2ff      	uxtb	r7, r7
 8018978:	00c0      	lsls	r0, r0, #3
 801897a:	b292      	uxth	r2, r2
 801897c:	fb1c fc04 	smulbb	ip, ip, r4
 8018980:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8018984:	b2c0      	uxtb	r0, r0
 8018986:	fb17 f704 	smulbb	r7, r7, r4
 801898a:	fb03 c301 	mla	r3, r3, r1, ip
 801898e:	fb00 7001 	mla	r0, r0, r1, r7
 8018992:	f102 0c01 	add.w	ip, r2, #1
 8018996:	b280      	uxth	r0, r0
 8018998:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801899c:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80189a0:	1c42      	adds	r2, r0, #1
 80189a2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80189a6:	b29b      	uxth	r3, r3
 80189a8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80189ac:	ea42 020c 	orr.w	r2, r2, ip
 80189b0:	f103 0c01 	add.w	ip, r3, #1
 80189b4:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80189b8:	095b      	lsrs	r3, r3, #5
 80189ba:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80189be:	431a      	orrs	r2, r3
 80189c0:	f8a9 2000 	strh.w	r2, [r9]
 80189c4:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80189c6:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80189c8:	441a      	add	r2, r3
 80189ca:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80189cc:	9231      	str	r2, [sp, #196]	; 0xc4
 80189ce:	f109 0902 	add.w	r9, r9, #2
 80189d2:	441d      	add	r5, r3
 80189d4:	f10b 3bff 	add.w	fp, fp, #4294967295
 80189d8:	e63d      	b.n	8018656 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80189da:	2800      	cmp	r0, #0
 80189dc:	f43f aedd 	beq.w	801879a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 80189e0:	5c79      	ldrb	r1, [r7, r1]
 80189e2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80189e6:	910b      	str	r1, [sp, #44]	; 0x2c
 80189e8:	0e09      	lsrs	r1, r1, #24
 80189ea:	9114      	str	r1, [sp, #80]	; 0x50
 80189ec:	e6d5      	b.n	801879a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 80189ee:	b01f      	add	sp, #124	; 0x7c
 80189f0:	ecbd 8b08 	vpop	{d8-d11}
 80189f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080189f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80189f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80189fc:	880e      	ldrh	r6, [r1, #0]
 80189fe:	b085      	sub	sp, #20
 8018a00:	ea4f 2826 	mov.w	r8, r6, asr #8
 8018a04:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8018a08:	4691      	mov	r9, r2
 8018a0a:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8018a0e:	f9bd e03c 	ldrsh.w	lr, [sp, #60]	; 0x3c
 8018a12:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8018a16:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8018a1a:	f008 02f8 	and.w	r2, r8, #248	; 0xf8
 8018a1e:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8018a22:	9200      	str	r2, [sp, #0]
 8018a24:	00f6      	lsls	r6, r6, #3
 8018a26:	f008 02fc 	and.w	r2, r8, #252	; 0xfc
 8018a2a:	9201      	str	r2, [sp, #4]
 8018a2c:	2c00      	cmp	r4, #0
 8018a2e:	b2f2      	uxtb	r2, r6
 8018a30:	fb04 560c 	mla	r6, r4, ip, r5
 8018a34:	9202      	str	r2, [sp, #8]
 8018a36:	eb09 0806 	add.w	r8, r9, r6
 8018a3a:	db3f      	blt.n	8018abc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8018a3c:	45a6      	cmp	lr, r4
 8018a3e:	dd3d      	ble.n	8018abc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8018a40:	2d00      	cmp	r5, #0
 8018a42:	db39      	blt.n	8018ab8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8018a44:	45ac      	cmp	ip, r5
 8018a46:	dd37      	ble.n	8018ab8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8018a48:	f819 2006 	ldrb.w	r2, [r9, r6]
 8018a4c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8018a50:	1c6e      	adds	r6, r5, #1
 8018a52:	d436      	bmi.n	8018ac2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8018a54:	45b4      	cmp	ip, r6
 8018a56:	dd34      	ble.n	8018ac2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8018a58:	b3a8      	cbz	r0, 8018ac6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xce>
 8018a5a:	f898 6001 	ldrb.w	r6, [r8, #1]
 8018a5e:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8018a62:	3401      	adds	r4, #1
 8018a64:	d433      	bmi.n	8018ace <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8018a66:	45a6      	cmp	lr, r4
 8018a68:	dd31      	ble.n	8018ace <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8018a6a:	b39f      	cbz	r7, 8018ad4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xdc>
 8018a6c:	2d00      	cmp	r5, #0
 8018a6e:	eb08 0e0c 	add.w	lr, r8, ip
 8018a72:	db2a      	blt.n	8018aca <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8018a74:	45ac      	cmp	ip, r5
 8018a76:	dd28      	ble.n	8018aca <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8018a78:	f818 400c 	ldrb.w	r4, [r8, ip]
 8018a7c:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8018a80:	3501      	adds	r5, #1
 8018a82:	d42a      	bmi.n	8018ada <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8018a84:	45ac      	cmp	ip, r5
 8018a86:	dd28      	ble.n	8018ada <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8018a88:	b348      	cbz	r0, 8018ade <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe6>
 8018a8a:	f89e 5001 	ldrb.w	r5, [lr, #1]
 8018a8e:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8018a92:	280f      	cmp	r0, #15
 8018a94:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8018a98:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8018a9c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8018aa0:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8018aa4:	d801      	bhi.n	8018aaa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb2>
 8018aa6:	2f0f      	cmp	r7, #15
 8018aa8:	d91b      	bls.n	8018ae2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xea>
 8018aaa:	4b7d      	ldr	r3, [pc, #500]	; (8018ca0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8018aac:	4a7d      	ldr	r2, [pc, #500]	; (8018ca4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8018aae:	487e      	ldr	r0, [pc, #504]	; (8018ca8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8018ab0:	f240 11f9 	movw	r1, #505	; 0x1f9
 8018ab4:	f004 ffba 	bl	801da2c <__assert_func>
 8018ab8:	2200      	movs	r2, #0
 8018aba:	e7c9      	b.n	8018a50 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 8018abc:	2600      	movs	r6, #0
 8018abe:	4632      	mov	r2, r6
 8018ac0:	e7cf      	b.n	8018a62 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8018ac2:	2600      	movs	r6, #0
 8018ac4:	e7cd      	b.n	8018a62 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8018ac6:	4606      	mov	r6, r0
 8018ac8:	e7cb      	b.n	8018a62 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8018aca:	2400      	movs	r4, #0
 8018acc:	e7d8      	b.n	8018a80 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x88>
 8018ace:	2300      	movs	r3, #0
 8018ad0:	461c      	mov	r4, r3
 8018ad2:	e7de      	b.n	8018a92 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8018ad4:	463b      	mov	r3, r7
 8018ad6:	463c      	mov	r4, r7
 8018ad8:	e7db      	b.n	8018a92 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8018ada:	2300      	movs	r3, #0
 8018adc:	e7d9      	b.n	8018a92 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8018ade:	4603      	mov	r3, r0
 8018ae0:	e7d7      	b.n	8018a92 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8018ae2:	b280      	uxth	r0, r0
 8018ae4:	b2bf      	uxth	r7, r7
 8018ae6:	fb00 fe07 	mul.w	lr, r0, r7
 8018aea:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8018aee:	0100      	lsls	r0, r0, #4
 8018af0:	eba0 0c0e 	sub.w	ip, r0, lr
 8018af4:	b2bf      	uxth	r7, r7
 8018af6:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8018afa:	fa1f fc8c 	uxth.w	ip, ip
 8018afe:	1bed      	subs	r5, r5, r7
 8018b00:	b2ad      	uxth	r5, r5
 8018b02:	fb0c f00a 	mul.w	r0, ip, sl
 8018b06:	fb05 000b 	mla	r0, r5, fp, r0
 8018b0a:	fb07 0009 	mla	r0, r7, r9, r0
 8018b0e:	fb0e 0008 	mla	r0, lr, r8, r0
 8018b12:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8018b16:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8018b1a:	9003      	str	r0, [sp, #12]
 8018b1c:	d018      	beq.n	8018b50 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x158>
 8018b1e:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8018b22:	fb0b f000 	mul.w	r0, fp, r0
 8018b26:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018b2a:	fb0b fb02 	mul.w	fp, fp, r2
 8018b2e:	0a02      	lsrs	r2, r0, #8
 8018b30:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018b34:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8018b38:	4402      	add	r2, r0
 8018b3a:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8018b3e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8018b42:	0a12      	lsrs	r2, r2, #8
 8018b44:	0a00      	lsrs	r0, r0, #8
 8018b46:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018b4a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018b4e:	4302      	orrs	r2, r0
 8018b50:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018b54:	d019      	beq.n	8018b8a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x192>
 8018b56:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8018b5a:	fb0a fb0b 	mul.w	fp, sl, fp
 8018b5e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018b62:	fb0a fa06 	mul.w	sl, sl, r6
 8018b66:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8018b6a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018b6e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018b72:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8018b76:	445e      	add	r6, fp
 8018b78:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8018b7c:	0a36      	lsrs	r6, r6, #8
 8018b7e:	0a00      	lsrs	r0, r0, #8
 8018b80:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018b84:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018b88:	4306      	orrs	r6, r0
 8018b8a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018b8e:	d019      	beq.n	8018bc4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1cc>
 8018b90:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8018b94:	fb09 fa0a 	mul.w	sl, r9, sl
 8018b98:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8018b9c:	fb09 f904 	mul.w	r9, r9, r4
 8018ba0:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8018ba4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8018ba8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018bac:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8018bb0:	4454      	add	r4, sl
 8018bb2:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8018bb6:	0a24      	lsrs	r4, r4, #8
 8018bb8:	0a00      	lsrs	r0, r0, #8
 8018bba:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8018bbe:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018bc2:	4304      	orrs	r4, r0
 8018bc4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018bc8:	d019      	beq.n	8018bfe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x206>
 8018bca:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8018bce:	fb08 f909 	mul.w	r9, r8, r9
 8018bd2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018bd6:	fb08 f803 	mul.w	r8, r8, r3
 8018bda:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8018bde:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018be2:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8018be6:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8018bea:	444b      	add	r3, r9
 8018bec:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8018bf0:	0a1b      	lsrs	r3, r3, #8
 8018bf2:	0a00      	lsrs	r0, r0, #8
 8018bf4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018bf8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018bfc:	4303      	orrs	r3, r0
 8018bfe:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8018c02:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8018c06:	fb0c f808 	mul.w	r8, ip, r8
 8018c0a:	fb05 8800 	mla	r8, r5, r0, r8
 8018c0e:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8018c12:	fb07 8800 	mla	r8, r7, r0, r8
 8018c16:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8018c1a:	fb0e 8000 	mla	r0, lr, r0, r8
 8018c1e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018c22:	fb0c f606 	mul.w	r6, ip, r6
 8018c26:	0a00      	lsrs	r0, r0, #8
 8018c28:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018c2c:	fb05 6202 	mla	r2, r5, r2, r6
 8018c30:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8018c34:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8018c38:	fb07 2700 	mla	r7, r7, r0, r2
 8018c3c:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8018c40:	9b03      	ldr	r3, [sp, #12]
 8018c42:	9d00      	ldr	r5, [sp, #0]
 8018c44:	9a02      	ldr	r2, [sp, #8]
 8018c46:	fb0e 7000 	mla	r0, lr, r0, r7
 8018c4a:	43dc      	mvns	r4, r3
 8018c4c:	9b01      	ldr	r3, [sp, #4]
 8018c4e:	b2e4      	uxtb	r4, r4
 8018c50:	0a00      	lsrs	r0, r0, #8
 8018c52:	4363      	muls	r3, r4
 8018c54:	4365      	muls	r5, r4
 8018c56:	4362      	muls	r2, r4
 8018c58:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018c5c:	ea48 0000 	orr.w	r0, r8, r0
 8018c60:	4614      	mov	r4, r2
 8018c62:	1c5e      	adds	r6, r3, #1
 8018c64:	1c6a      	adds	r2, r5, #1
 8018c66:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 8018c6a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8018c6e:	0a03      	lsrs	r3, r0, #8
 8018c70:	0c02      	lsrs	r2, r0, #16
 8018c72:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8018c76:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8018c7a:	00db      	lsls	r3, r3, #3
 8018c7c:	0212      	lsls	r2, r2, #8
 8018c7e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8018c82:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018c86:	4313      	orrs	r3, r2
 8018c88:	1c62      	adds	r2, r4, #1
 8018c8a:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8018c8e:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8018c92:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8018c96:	4318      	orrs	r0, r3
 8018c98:	8008      	strh	r0, [r1, #0]
 8018c9a:	b005      	add	sp, #20
 8018c9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018ca0:	08021c76 	.word	0x08021c76
 8018ca4:	080221a6 	.word	0x080221a6
 8018ca8:	08021c43 	.word	0x08021c43

08018cac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018cac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018cb0:	ed2d 8b08 	vpush	{d8-d11}
 8018cb4:	b09b      	sub	sp, #108	; 0x6c
 8018cb6:	eeb0 aa40 	vmov.f32	s20, s0
 8018cba:	9218      	str	r2, [sp, #96]	; 0x60
 8018cbc:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8018cbe:	9116      	str	r1, [sp, #88]	; 0x58
 8018cc0:	9307      	str	r3, [sp, #28]
 8018cc2:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8018cc6:	9019      	str	r0, [sp, #100]	; 0x64
 8018cc8:	6850      	ldr	r0, [r2, #4]
 8018cca:	6812      	ldr	r2, [r2, #0]
 8018ccc:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 8018cce:	fb00 1303 	mla	r3, r0, r3, r1
 8018cd2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018cd6:	930a      	str	r3, [sp, #40]	; 0x28
 8018cd8:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8018cda:	681b      	ldr	r3, [r3, #0]
 8018cdc:	930f      	str	r3, [sp, #60]	; 0x3c
 8018cde:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8018ce0:	685e      	ldr	r6, [r3, #4]
 8018ce2:	eef0 9a60 	vmov.f32	s19, s1
 8018ce6:	eeb0 9a41 	vmov.f32	s18, s2
 8018cea:	eeb0 8a62 	vmov.f32	s16, s5
 8018cee:	eef0 8a43 	vmov.f32	s17, s6
 8018cf2:	eef0 ba44 	vmov.f32	s23, s8
 8018cf6:	eeb0 ba64 	vmov.f32	s22, s9
 8018cfa:	eef0 aa45 	vmov.f32	s21, s10
 8018cfe:	3604      	adds	r6, #4
 8018d00:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8018d02:	2b00      	cmp	r3, #0
 8018d04:	dc03      	bgt.n	8018d0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8018d06:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8018d08:	2b00      	cmp	r3, #0
 8018d0a:	f340 8373 	ble.w	80193f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8018d0e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8018d10:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018d14:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018d18:	1e48      	subs	r0, r1, #1
 8018d1a:	1e57      	subs	r7, r2, #1
 8018d1c:	9b07      	ldr	r3, [sp, #28]
 8018d1e:	2b00      	cmp	r3, #0
 8018d20:	f340 8190 	ble.w	8019044 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8018d24:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8018d26:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8018d2a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8018d2e:	d406      	bmi.n	8018d3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018d30:	4584      	cmp	ip, r0
 8018d32:	da04      	bge.n	8018d3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018d34:	2b00      	cmp	r3, #0
 8018d36:	db02      	blt.n	8018d3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018d38:	42bb      	cmp	r3, r7
 8018d3a:	f2c0 8184 	blt.w	8019046 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8018d3e:	f11c 0c01 	adds.w	ip, ip, #1
 8018d42:	f100 8172 	bmi.w	801902a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8018d46:	4561      	cmp	r1, ip
 8018d48:	f2c0 816f 	blt.w	801902a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8018d4c:	3301      	adds	r3, #1
 8018d4e:	f100 816c 	bmi.w	801902a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8018d52:	429a      	cmp	r2, r3
 8018d54:	f2c0 8169 	blt.w	801902a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8018d58:	9b07      	ldr	r3, [sp, #28]
 8018d5a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8018d5c:	9317      	str	r3, [sp, #92]	; 0x5c
 8018d5e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8018d60:	2b00      	cmp	r3, #0
 8018d62:	f340 818e 	ble.w	8019082 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8018d66:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8018d68:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018d6c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8018d6e:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8018d72:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8018d74:	141b      	asrs	r3, r3, #16
 8018d76:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8018d7a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8018d7e:	f100 81d1 	bmi.w	8019124 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8018d82:	f101 38ff 	add.w	r8, r1, #4294967295
 8018d86:	4543      	cmp	r3, r8
 8018d88:	f280 81cc 	bge.w	8019124 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8018d8c:	f1bc 0f00 	cmp.w	ip, #0
 8018d90:	f2c0 81c8 	blt.w	8019124 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8018d94:	f10e 38ff 	add.w	r8, lr, #4294967295
 8018d98:	45c4      	cmp	ip, r8
 8018d9a:	f280 81c3 	bge.w	8019124 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8018d9e:	b209      	sxth	r1, r1
 8018da0:	fb0c 3301 	mla	r3, ip, r1, r3
 8018da4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8018da6:	eb04 0803 	add.w	r8, r4, r3
 8018daa:	5ce3      	ldrb	r3, [r4, r3]
 8018dac:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8018db0:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8018db4:	2a00      	cmp	r2, #0
 8018db6:	f000 81aa 	beq.w	801910e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 8018dba:	f898 c001 	ldrb.w	ip, [r8, #1]
 8018dbe:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8018dc2:	940b      	str	r4, [sp, #44]	; 0x2c
 8018dc4:	0e24      	lsrs	r4, r4, #24
 8018dc6:	9412      	str	r4, [sp, #72]	; 0x48
 8018dc8:	b178      	cbz	r0, 8018dea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018dca:	eb08 0c01 	add.w	ip, r8, r1
 8018dce:	f818 1001 	ldrb.w	r1, [r8, r1]
 8018dd2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018dd6:	9108      	str	r1, [sp, #32]
 8018dd8:	0e09      	lsrs	r1, r1, #24
 8018dda:	9110      	str	r1, [sp, #64]	; 0x40
 8018ddc:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8018de0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018de4:	910c      	str	r1, [sp, #48]	; 0x30
 8018de6:	0e09      	lsrs	r1, r1, #24
 8018de8:	9113      	str	r1, [sp, #76]	; 0x4c
 8018dea:	b292      	uxth	r2, r2
 8018dec:	b280      	uxth	r0, r0
 8018dee:	fb02 f900 	mul.w	r9, r2, r0
 8018df2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8018df6:	0112      	lsls	r2, r2, #4
 8018df8:	eba2 0809 	sub.w	r8, r2, r9
 8018dfc:	b280      	uxth	r0, r0
 8018dfe:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8018e02:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018e04:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018e06:	fa1f f888 	uxth.w	r8, r8
 8018e0a:	1a12      	subs	r2, r2, r0
 8018e0c:	b292      	uxth	r2, r2
 8018e0e:	fb08 f101 	mul.w	r1, r8, r1
 8018e12:	fb02 110e 	mla	r1, r2, lr, r1
 8018e16:	fb00 1104 	mla	r1, r0, r4, r1
 8018e1a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018e1c:	fb09 1104 	mla	r1, r9, r4, r1
 8018e20:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8018e24:	2900      	cmp	r1, #0
 8018e26:	f000 80f5 	beq.w	8019014 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8018e2a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8018e2e:	d01b      	beq.n	8018e68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8018e30:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8018e34:	fb0e fa0a 	mul.w	sl, lr, sl
 8018e38:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018e3c:	fb0e fe03 	mul.w	lr, lr, r3
 8018e40:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8018e44:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018e48:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018e4c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8018e50:	4453      	add	r3, sl
 8018e52:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8018e56:	0a1b      	lsrs	r3, r3, #8
 8018e58:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018e5c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018e60:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018e64:	ea43 030c 	orr.w	r3, r3, ip
 8018e68:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018e6a:	2cff      	cmp	r4, #255	; 0xff
 8018e6c:	d021      	beq.n	8018eb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8018e6e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018e70:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8018e74:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018e76:	fb04 fb0b 	mul.w	fp, r4, fp
 8018e7a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018e7c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018e80:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018e82:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018e86:	fb04 fa0a 	mul.w	sl, r4, sl
 8018e8a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018e8e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018e92:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018e96:	44de      	add	lr, fp
 8018e98:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018e9c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018ea0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018ea4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018ea8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018eac:	ea4e 040a 	orr.w	r4, lr, sl
 8018eb0:	940b      	str	r4, [sp, #44]	; 0x2c
 8018eb2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018eb4:	2cff      	cmp	r4, #255	; 0xff
 8018eb6:	d021      	beq.n	8018efc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8018eb8:	9c08      	ldr	r4, [sp, #32]
 8018eba:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8018ebe:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018ec0:	fb04 fb0b 	mul.w	fp, r4, fp
 8018ec4:	9c08      	ldr	r4, [sp, #32]
 8018ec6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018eca:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018ecc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018ed0:	fb04 fa0a 	mul.w	sl, r4, sl
 8018ed4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018ed8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018edc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018ee0:	44de      	add	lr, fp
 8018ee2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018ee6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018eea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018eee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018ef2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018ef6:	ea4e 040a 	orr.w	r4, lr, sl
 8018efa:	9408      	str	r4, [sp, #32]
 8018efc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018efe:	2cff      	cmp	r4, #255	; 0xff
 8018f00:	d021      	beq.n	8018f46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018f02:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018f04:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8018f08:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018f0a:	fb04 fb0b 	mul.w	fp, r4, fp
 8018f0e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018f10:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018f14:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018f16:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018f1a:	fb04 fa0a 	mul.w	sl, r4, sl
 8018f1e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018f22:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018f26:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018f2a:	44de      	add	lr, fp
 8018f2c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018f30:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018f34:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018f38:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018f3c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018f40:	ea4e 040a 	orr.w	r4, lr, sl
 8018f44:	940c      	str	r4, [sp, #48]	; 0x30
 8018f46:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018f48:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018f4c:	9c08      	ldr	r4, [sp, #32]
 8018f4e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8018f52:	fb08 fc0c 	mul.w	ip, r8, ip
 8018f56:	fb02 cc0e 	mla	ip, r2, lr, ip
 8018f5a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8018f5e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018f60:	fb00 cc0e 	mla	ip, r0, lr, ip
 8018f64:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8018f68:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018f6a:	fb09 cc0e 	mla	ip, r9, lr, ip
 8018f6e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8018f72:	fb08 f80e 	mul.w	r8, r8, lr
 8018f76:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018f7a:	fb02 8303 	mla	r3, r2, r3, r8
 8018f7e:	9a08      	ldr	r2, [sp, #32]
 8018f80:	f8b7 8000 	ldrh.w	r8, [r7]
 8018f84:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8018f88:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018f8a:	fb00 330a 	mla	r3, r0, sl, r3
 8018f8e:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8018f92:	fb09 3900 	mla	r9, r9, r0, r3
 8018f96:	43c9      	mvns	r1, r1
 8018f98:	ea4f 2228 	mov.w	r2, r8, asr #8
 8018f9c:	fa5f fe81 	uxtb.w	lr, r1
 8018fa0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018fa4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018fa8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018fac:	fb02 f20e 	mul.w	r2, r2, lr
 8018fb0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018fb4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8018fb8:	ea4c 0c09 	orr.w	ip, ip, r9
 8018fbc:	1c53      	adds	r3, r2, #1
 8018fbe:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8018fc2:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8018fc6:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8018fca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018fce:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018fd2:	4a63      	ldr	r2, [pc, #396]	; (8019160 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>)
 8018fd4:	fb00 f00e 	mul.w	r0, r0, lr
 8018fd8:	b2db      	uxtb	r3, r3
 8018fda:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8018fde:	1c43      	adds	r3, r0, #1
 8018fe0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018fe4:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8018fe8:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8018fec:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018ff0:	b2c9      	uxtb	r1, r1
 8018ff2:	00db      	lsls	r3, r3, #3
 8018ff4:	fb01 f10e 	mul.w	r1, r1, lr
 8018ff8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018ffc:	4313      	orrs	r3, r2
 8018ffe:	1c4a      	adds	r2, r1, #1
 8019000:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019004:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8019008:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801900c:	ea4c 0c03 	orr.w	ip, ip, r3
 8019010:	f8a7 c000 	strh.w	ip, [r7]
 8019014:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8019016:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8019018:	441a      	add	r2, r3
 801901a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801901c:	922d      	str	r2, [sp, #180]	; 0xb4
 801901e:	441d      	add	r5, r3
 8019020:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019022:	3b01      	subs	r3, #1
 8019024:	3702      	adds	r7, #2
 8019026:	9317      	str	r3, [sp, #92]	; 0x5c
 8019028:	e699      	b.n	8018d5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801902a:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801902c:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801902e:	441c      	add	r4, r3
 8019030:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019032:	942d      	str	r4, [sp, #180]	; 0xb4
 8019034:	441d      	add	r5, r3
 8019036:	9b07      	ldr	r3, [sp, #28]
 8019038:	3b01      	subs	r3, #1
 801903a:	9307      	str	r3, [sp, #28]
 801903c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801903e:	3302      	adds	r3, #2
 8019040:	930a      	str	r3, [sp, #40]	; 0x28
 8019042:	e66b      	b.n	8018d1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019044:	d024      	beq.n	8019090 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 8019046:	9b07      	ldr	r3, [sp, #28]
 8019048:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801904a:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801904c:	3b01      	subs	r3, #1
 801904e:	fb00 4003 	mla	r0, r0, r3, r4
 8019052:	1400      	asrs	r0, r0, #16
 8019054:	f53f ae80 	bmi.w	8018d58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8019058:	3901      	subs	r1, #1
 801905a:	4288      	cmp	r0, r1
 801905c:	f6bf ae7c 	bge.w	8018d58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8019060:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8019062:	fb01 5303 	mla	r3, r1, r3, r5
 8019066:	141b      	asrs	r3, r3, #16
 8019068:	f53f ae76 	bmi.w	8018d58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801906c:	3a01      	subs	r2, #1
 801906e:	4293      	cmp	r3, r2
 8019070:	f6bf ae72 	bge.w	8018d58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8019074:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8019078:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801907c:	f1bb 0f00 	cmp.w	fp, #0
 8019080:	dc70      	bgt.n	8019164 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 8019082:	9b07      	ldr	r3, [sp, #28]
 8019084:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019088:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801908a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801908e:	930a      	str	r3, [sp, #40]	; 0x28
 8019090:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8019092:	2b00      	cmp	r3, #0
 8019094:	f340 81ae 	ble.w	80193f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8019098:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801909c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80190a0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80190a4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80190a6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80190aa:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80190ae:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80190b2:	eef0 6a48 	vmov.f32	s13, s16
 80190b6:	ee69 7a27 	vmul.f32	s15, s18, s15
 80190ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80190be:	ee37 8a48 	vsub.f32	s16, s14, s16
 80190c2:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 80190c6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80190ca:	eef0 6a68 	vmov.f32	s13, s17
 80190ce:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80190d2:	ee18 2a10 	vmov	r2, s16
 80190d6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80190da:	fb92 f3f3 	sdiv	r3, r2, r3
 80190de:	ee18 2a90 	vmov	r2, s17
 80190e2:	932f      	str	r3, [sp, #188]	; 0xbc
 80190e4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80190e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80190ea:	9330      	str	r3, [sp, #192]	; 0xc0
 80190ec:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80190ee:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80190f0:	3b01      	subs	r3, #1
 80190f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80190f6:	9316      	str	r3, [sp, #88]	; 0x58
 80190f8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80190fa:	bf08      	it	eq
 80190fc:	4613      	moveq	r3, r2
 80190fe:	ee16 5a90 	vmov	r5, s13
 8019102:	9307      	str	r3, [sp, #28]
 8019104:	eef0 8a67 	vmov.f32	s17, s15
 8019108:	eeb0 8a47 	vmov.f32	s16, s14
 801910c:	e5f8      	b.n	8018d00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801910e:	2800      	cmp	r0, #0
 8019110:	f43f ae6b 	beq.w	8018dea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019114:	f818 1001 	ldrb.w	r1, [r8, r1]
 8019118:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801911c:	9108      	str	r1, [sp, #32]
 801911e:	0e09      	lsrs	r1, r1, #24
 8019120:	9110      	str	r1, [sp, #64]	; 0x40
 8019122:	e662      	b.n	8018dea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019124:	f113 0801 	adds.w	r8, r3, #1
 8019128:	f53f af74 	bmi.w	8019014 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801912c:	4541      	cmp	r1, r8
 801912e:	f6ff af71 	blt.w	8019014 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8019132:	f11c 0801 	adds.w	r8, ip, #1
 8019136:	f53f af6d 	bmi.w	8019014 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801913a:	45c6      	cmp	lr, r8
 801913c:	f6ff af6a 	blt.w	8019014 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8019140:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8019144:	b209      	sxth	r1, r1
 8019146:	fa0f f38e 	sxth.w	r3, lr
 801914a:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801914e:	9301      	str	r3, [sp, #4]
 8019150:	9100      	str	r1, [sp, #0]
 8019152:	4633      	mov	r3, r6
 8019154:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019156:	9819      	ldr	r0, [sp, #100]	; 0x64
 8019158:	4639      	mov	r1, r7
 801915a:	f7ff fc4d 	bl	80189f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801915e:	e759      	b.n	8019014 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8019160:	fffff800 	.word	0xfffff800
 8019164:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8019166:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8019168:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801916c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801916e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019172:	1427      	asrs	r7, r4, #16
 8019174:	142b      	asrs	r3, r5, #16
 8019176:	fb01 7303 	mla	r3, r1, r3, r7
 801917a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801917c:	18e7      	adds	r7, r4, r3
 801917e:	5ce3      	ldrb	r3, [r4, r3]
 8019180:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8019184:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019188:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801918c:	2a00      	cmp	r2, #0
 801918e:	f000 8127 	beq.w	80193e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8019192:	f897 e001 	ldrb.w	lr, [r7, #1]
 8019196:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801919a:	940d      	str	r4, [sp, #52]	; 0x34
 801919c:	0e24      	lsrs	r4, r4, #24
 801919e:	9414      	str	r4, [sp, #80]	; 0x50
 80191a0:	b170      	cbz	r0, 80191c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 80191a2:	eb07 0e01 	add.w	lr, r7, r1
 80191a6:	5c79      	ldrb	r1, [r7, r1]
 80191a8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80191ac:	9109      	str	r1, [sp, #36]	; 0x24
 80191ae:	0e09      	lsrs	r1, r1, #24
 80191b0:	9111      	str	r1, [sp, #68]	; 0x44
 80191b2:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80191b6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80191ba:	910e      	str	r1, [sp, #56]	; 0x38
 80191bc:	0e09      	lsrs	r1, r1, #24
 80191be:	9115      	str	r1, [sp, #84]	; 0x54
 80191c0:	b292      	uxth	r2, r2
 80191c2:	b280      	uxth	r0, r0
 80191c4:	fb02 f800 	mul.w	r8, r2, r0
 80191c8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80191cc:	0112      	lsls	r2, r2, #4
 80191ce:	eba2 0e08 	sub.w	lr, r2, r8
 80191d2:	b280      	uxth	r0, r0
 80191d4:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80191d8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80191da:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80191dc:	fa1f fe8e 	uxth.w	lr, lr
 80191e0:	1a09      	subs	r1, r1, r0
 80191e2:	b289      	uxth	r1, r1
 80191e4:	fb0e f202 	mul.w	r2, lr, r2
 80191e8:	fb01 220c 	mla	r2, r1, ip, r2
 80191ec:	fb00 2204 	mla	r2, r0, r4, r2
 80191f0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80191f2:	fb08 2204 	mla	r2, r8, r4, r2
 80191f6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80191fa:	2a00      	cmp	r2, #0
 80191fc:	f000 80e5 	beq.w	80193ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8019200:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8019204:	d019      	beq.n	801923a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58e>
 8019206:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801920a:	fb0c fa0a 	mul.w	sl, ip, sl
 801920e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019212:	fb0c fc03 	mul.w	ip, ip, r3
 8019216:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801921a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801921e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019222:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8019226:	4453      	add	r3, sl
 8019228:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801922c:	0a1b      	lsrs	r3, r3, #8
 801922e:	0a3f      	lsrs	r7, r7, #8
 8019230:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019234:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8019238:	433b      	orrs	r3, r7
 801923a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801923c:	2cff      	cmp	r4, #255	; 0xff
 801923e:	d020      	beq.n	8019282 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d6>
 8019240:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019242:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8019246:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019248:	4367      	muls	r7, r4
 801924a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801924c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019250:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019252:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019256:	fb04 fa0a 	mul.w	sl, r4, sl
 801925a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801925e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019262:	44bc      	add	ip, r7
 8019264:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019268:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801926c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019270:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019274:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019278:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801927c:	ea4c 040a 	orr.w	r4, ip, sl
 8019280:	940d      	str	r4, [sp, #52]	; 0x34
 8019282:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019284:	2cff      	cmp	r4, #255	; 0xff
 8019286:	d020      	beq.n	80192ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61e>
 8019288:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801928a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801928e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019290:	4367      	muls	r7, r4
 8019292:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8019294:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019298:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801929a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801929e:	fb04 fa0a 	mul.w	sl, r4, sl
 80192a2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80192a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80192aa:	44bc      	add	ip, r7
 80192ac:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80192b0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80192b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80192b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80192bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80192c0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80192c4:	ea4c 040a 	orr.w	r4, ip, sl
 80192c8:	9409      	str	r4, [sp, #36]	; 0x24
 80192ca:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80192cc:	2cff      	cmp	r4, #255	; 0xff
 80192ce:	d020      	beq.n	8019312 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x666>
 80192d0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80192d2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80192d6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80192d8:	4367      	muls	r7, r4
 80192da:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80192dc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80192e0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80192e2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80192e6:	fb04 fa0a 	mul.w	sl, r4, sl
 80192ea:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80192ee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80192f2:	44bc      	add	ip, r7
 80192f4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80192f8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80192fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019300:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019304:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019308:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801930c:	ea4c 040a 	orr.w	r4, ip, sl
 8019310:	940e      	str	r4, [sp, #56]	; 0x38
 8019312:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019314:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8019318:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801931a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801931e:	fb0e f707 	mul.w	r7, lr, r7
 8019322:	fb01 770c 	mla	r7, r1, ip, r7
 8019326:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801932a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801932c:	fb00 770c 	mla	r7, r0, ip, r7
 8019330:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019334:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019336:	fb08 770c 	mla	r7, r8, ip, r7
 801933a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801933e:	fb0e fe0c 	mul.w	lr, lr, ip
 8019342:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019346:	fb01 e303 	mla	r3, r1, r3, lr
 801934a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801934c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8019350:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019352:	fb00 330a 	mla	r3, r0, sl, r3
 8019356:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801935a:	fb08 3c0c 	mla	ip, r8, ip, r3
 801935e:	f8b9 3000 	ldrh.w	r3, [r9]
 8019362:	43d2      	mvns	r2, r2
 8019364:	1218      	asrs	r0, r3, #8
 8019366:	b2d2      	uxtb	r2, r2
 8019368:	10d9      	asrs	r1, r3, #3
 801936a:	0a3f      	lsrs	r7, r7, #8
 801936c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019370:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019374:	00db      	lsls	r3, r3, #3
 8019376:	4350      	muls	r0, r2
 8019378:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801937c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019380:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019384:	b2db      	uxtb	r3, r3
 8019386:	ea47 070c 	orr.w	r7, r7, ip
 801938a:	4351      	muls	r1, r2
 801938c:	4353      	muls	r3, r2
 801938e:	1c42      	adds	r2, r0, #1
 8019390:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019394:	0c3a      	lsrs	r2, r7, #16
 8019396:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801939a:	4a19      	ldr	r2, [pc, #100]	; (8019400 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>)
 801939c:	b2c0      	uxtb	r0, r0
 801939e:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80193a2:	1c4a      	adds	r2, r1, #1
 80193a4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80193a8:	0a3a      	lsrs	r2, r7, #8
 80193aa:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80193ae:	00c9      	lsls	r1, r1, #3
 80193b0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80193b4:	4301      	orrs	r1, r0
 80193b6:	1c58      	adds	r0, r3, #1
 80193b8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80193bc:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80193c0:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80193c4:	4308      	orrs	r0, r1
 80193c6:	f8a9 0000 	strh.w	r0, [r9]
 80193ca:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80193cc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80193ce:	441a      	add	r2, r3
 80193d0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80193d2:	922d      	str	r2, [sp, #180]	; 0xb4
 80193d4:	f109 0902 	add.w	r9, r9, #2
 80193d8:	441d      	add	r5, r3
 80193da:	f10b 3bff 	add.w	fp, fp, #4294967295
 80193de:	e64d      	b.n	801907c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 80193e0:	2800      	cmp	r0, #0
 80193e2:	f43f aeed 	beq.w	80191c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 80193e6:	5c79      	ldrb	r1, [r7, r1]
 80193e8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80193ec:	9109      	str	r1, [sp, #36]	; 0x24
 80193ee:	0e09      	lsrs	r1, r1, #24
 80193f0:	9111      	str	r1, [sp, #68]	; 0x44
 80193f2:	e6e5      	b.n	80191c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 80193f4:	b01b      	add	sp, #108	; 0x6c
 80193f6:	ecbd 8b08 	vpop	{d8-d11}
 80193fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80193fe:	bf00      	nop
 8019400:	fffff800 	.word	0xfffff800

08019404 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8019404:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019408:	b085      	sub	sp, #20
 801940a:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801940e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8019412:	9103      	str	r1, [sp, #12]
 8019414:	fb05 7106 	mla	r1, r5, r6, r7
 8019418:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 801941c:	2d00      	cmp	r5, #0
 801941e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8019422:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8019426:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801942a:	9401      	str	r4, [sp, #4]
 801942c:	eb03 0901 	add.w	r9, r3, r1
 8019430:	f2c0 80c0 	blt.w	80195b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8019434:	45a8      	cmp	r8, r5
 8019436:	f340 80bd 	ble.w	80195b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 801943a:	2f00      	cmp	r7, #0
 801943c:	f2c0 80b6 	blt.w	80195ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8019440:	42be      	cmp	r6, r7
 8019442:	f340 80b3 	ble.w	80195ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8019446:	f813 c001 	ldrb.w	ip, [r3, r1]
 801944a:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 801944e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8019452:	d019      	beq.n	8019488 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 8019454:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8019458:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801945c:	435a      	muls	r2, r3
 801945e:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8019462:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8019466:	fb0c f403 	mul.w	r4, ip, r3
 801946a:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 801946e:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8019472:	441a      	add	r2, r3
 8019474:	f104 0320 	add.w	r3, r4, #32
 8019478:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 801947c:	0a1b      	lsrs	r3, r3, #8
 801947e:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 8019482:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019486:	4319      	orrs	r1, r3
 8019488:	b289      	uxth	r1, r1
 801948a:	1c7b      	adds	r3, r7, #1
 801948c:	f100 8097 	bmi.w	80195be <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 8019490:	429e      	cmp	r6, r3
 8019492:	f340 8094 	ble.w	80195be <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 8019496:	2800      	cmp	r0, #0
 8019498:	f000 8094 	beq.w	80195c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 801949c:	f899 4001 	ldrb.w	r4, [r9, #1]
 80194a0:	9b01      	ldr	r3, [sp, #4]
 80194a2:	2cff      	cmp	r4, #255	; 0xff
 80194a4:	885b      	ldrh	r3, [r3, #2]
 80194a6:	d01b      	beq.n	80194e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 80194a8:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 80194ac:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80194b0:	fb0a f202 	mul.w	r2, sl, r2
 80194b4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80194b8:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80194bc:	fb04 fa03 	mul.w	sl, r4, r3
 80194c0:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 80194c4:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80194c8:	441a      	add	r2, r3
 80194ca:	f10a 0320 	add.w	r3, sl, #32
 80194ce:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80194d2:	0a1b      	lsrs	r3, r3, #8
 80194d4:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 80194d8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80194dc:	ea4b 0303 	orr.w	r3, fp, r3
 80194e0:	b29b      	uxth	r3, r3
 80194e2:	3501      	adds	r5, #1
 80194e4:	d474      	bmi.n	80195d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 80194e6:	45a8      	cmp	r8, r5
 80194e8:	dd72      	ble.n	80195d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 80194ea:	f1be 0f00 	cmp.w	lr, #0
 80194ee:	f000 8120 	beq.w	8019732 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 80194f2:	2f00      	cmp	r7, #0
 80194f4:	db69      	blt.n	80195ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 80194f6:	42be      	cmp	r6, r7
 80194f8:	dd67      	ble.n	80195ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 80194fa:	f819 5006 	ldrb.w	r5, [r9, r6]
 80194fe:	9a01      	ldr	r2, [sp, #4]
 8019500:	2dff      	cmp	r5, #255	; 0xff
 8019502:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8019506:	d01c      	beq.n	8019542 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 8019508:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 801950c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019510:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8019514:	fb05 fa0b 	mul.w	sl, r5, fp
 8019518:	fb08 f802 	mul.w	r8, r8, r2
 801951c:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8019520:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8019524:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019528:	4490      	add	r8, r2
 801952a:	f10a 0220 	add.w	r2, sl, #32
 801952e:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8019532:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019536:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 801953a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801953e:	ea4b 0b0a 	orr.w	fp, fp, sl
 8019542:	fa1f fb8b 	uxth.w	fp, fp
 8019546:	3701      	adds	r7, #1
 8019548:	d447      	bmi.n	80195da <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 801954a:	42be      	cmp	r6, r7
 801954c:	dd45      	ble.n	80195da <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 801954e:	2800      	cmp	r0, #0
 8019550:	d046      	beq.n	80195e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 8019552:	3601      	adds	r6, #1
 8019554:	9a01      	ldr	r2, [sp, #4]
 8019556:	f819 7006 	ldrb.w	r7, [r9, r6]
 801955a:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 801955e:	2fff      	cmp	r7, #255	; 0xff
 8019560:	d01a      	beq.n	8019598 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 8019562:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8019566:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801956a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801956e:	fb07 f902 	mul.w	r9, r7, r2
 8019572:	fb08 f806 	mul.w	r8, r8, r6
 8019576:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801957a:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 801957e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019582:	44b0      	add	r8, r6
 8019584:	f109 0620 	add.w	r6, r9, #32
 8019588:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 801958c:	0a36      	lsrs	r6, r6, #8
 801958e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8019592:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019596:	4332      	orrs	r2, r6
 8019598:	b292      	uxth	r2, r2
 801959a:	280f      	cmp	r0, #15
 801959c:	d922      	bls.n	80195e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 801959e:	4b69      	ldr	r3, [pc, #420]	; (8019744 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 80195a0:	4a69      	ldr	r2, [pc, #420]	; (8019748 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 80195a2:	486a      	ldr	r0, [pc, #424]	; (801974c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 80195a4:	f240 11f9 	movw	r1, #505	; 0x1f9
 80195a8:	f004 fa40 	bl	801da2c <__assert_func>
 80195ac:	f04f 0c00 	mov.w	ip, #0
 80195b0:	4661      	mov	r1, ip
 80195b2:	e76a      	b.n	801948a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 80195b4:	2400      	movs	r4, #0
 80195b6:	46a4      	mov	ip, r4
 80195b8:	4623      	mov	r3, r4
 80195ba:	4621      	mov	r1, r4
 80195bc:	e791      	b.n	80194e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80195be:	2400      	movs	r4, #0
 80195c0:	4623      	mov	r3, r4
 80195c2:	e78e      	b.n	80194e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80195c4:	4604      	mov	r4, r0
 80195c6:	4603      	mov	r3, r0
 80195c8:	e78b      	b.n	80194e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80195ca:	2500      	movs	r5, #0
 80195cc:	46ab      	mov	fp, r5
 80195ce:	e7ba      	b.n	8019546 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 80195d0:	2700      	movs	r7, #0
 80195d2:	463d      	mov	r5, r7
 80195d4:	463a      	mov	r2, r7
 80195d6:	46bb      	mov	fp, r7
 80195d8:	e7df      	b.n	801959a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 80195da:	2700      	movs	r7, #0
 80195dc:	463a      	mov	r2, r7
 80195de:	e7dc      	b.n	801959a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 80195e0:	4607      	mov	r7, r0
 80195e2:	4602      	mov	r2, r0
 80195e4:	f1be 0f0f 	cmp.w	lr, #15
 80195e8:	d8d9      	bhi.n	801959e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 80195ea:	b286      	uxth	r6, r0
 80195ec:	fa1f f98e 	uxth.w	r9, lr
 80195f0:	fb06 f809 	mul.w	r8, r6, r9
 80195f4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80195f8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80195fc:	0136      	lsls	r6, r6, #4
 80195fe:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019602:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019606:	9601      	str	r6, [sp, #4]
 8019608:	ea4a 0101 	orr.w	r1, sl, r1
 801960c:	fa1f f689 	uxth.w	r6, r9
 8019610:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8019614:	fb10 f90e 	smulbb	r9, r0, lr
 8019618:	ea4f 09e9 	mov.w	r9, r9, asr #3
 801961c:	9602      	str	r6, [sp, #8]
 801961e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019622:	460e      	mov	r6, r1
 8019624:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019628:	f1ce 0110 	rsb	r1, lr, #16
 801962c:	1a09      	subs	r1, r1, r0
 801962e:	ea4a 0303 	orr.w	r3, sl, r3
 8019632:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 8019636:	4343      	muls	r3, r0
 8019638:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 801963c:	9801      	ldr	r0, [sp, #4]
 801963e:	fb01 3106 	mla	r1, r1, r6, r3
 8019642:	9e02      	ldr	r6, [sp, #8]
 8019644:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8019648:	1b80      	subs	r0, r0, r6
 801964a:	9e01      	ldr	r6, [sp, #4]
 801964c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8019650:	eba6 0608 	sub.w	r6, r6, r8
 8019654:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019658:	b2b6      	uxth	r6, r6
 801965a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801965e:	ea4a 0202 	orr.w	r2, sl, r2
 8019662:	b280      	uxth	r0, r0
 8019664:	4374      	muls	r4, r6
 8019666:	fb09 1302 	mla	r3, r9, r2, r1
 801966a:	fb0c 4400 	mla	r4, ip, r0, r4
 801966e:	9a03      	ldr	r2, [sp, #12]
 8019670:	9802      	ldr	r0, [sp, #8]
 8019672:	8811      	ldrh	r1, [r2, #0]
 8019674:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8019678:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 801967c:	fb00 4505 	mla	r5, r0, r5, r4
 8019680:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019684:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8019688:	fb08 5707 	mla	r7, r8, r7, r5
 801968c:	ea4a 0b0b 	orr.w	fp, sl, fp
 8019690:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8019694:	b292      	uxth	r2, r2
 8019696:	fb0e 3e0b 	mla	lr, lr, fp, r3
 801969a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801969e:	4357      	muls	r7, r2
 80196a0:	ea4f 535e 	mov.w	r3, lr, lsr #21
 80196a4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80196a8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80196ac:	f107 0801 	add.w	r8, r7, #1
 80196b0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80196b4:	ea43 0e0e 	orr.w	lr, r3, lr
 80196b8:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 80196bc:	fa1f f38e 	uxth.w	r3, lr
 80196c0:	1208      	asrs	r0, r1, #8
 80196c2:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80196c6:	b2ff      	uxtb	r7, r7
 80196c8:	121c      	asrs	r4, r3, #8
 80196ca:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80196ce:	fb10 f007 	smulbb	r0, r0, r7
 80196d2:	10cd      	asrs	r5, r1, #3
 80196d4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80196d8:	fb04 0402 	mla	r4, r4, r2, r0
 80196dc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80196e0:	10d8      	asrs	r0, r3, #3
 80196e2:	fb15 f507 	smulbb	r5, r5, r7
 80196e6:	00db      	lsls	r3, r3, #3
 80196e8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80196ec:	fb00 5002 	mla	r0, r0, r2, r5
 80196f0:	b2dd      	uxtb	r5, r3
 80196f2:	00cb      	lsls	r3, r1, #3
 80196f4:	b2db      	uxtb	r3, r3
 80196f6:	fb13 f307 	smulbb	r3, r3, r7
 80196fa:	fb05 3202 	mla	r2, r5, r2, r3
 80196fe:	b2a4      	uxth	r4, r4
 8019700:	b292      	uxth	r2, r2
 8019702:	1c63      	adds	r3, r4, #1
 8019704:	b280      	uxth	r0, r0
 8019706:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801970a:	1c53      	adds	r3, r2, #1
 801970c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019710:	1c42      	adds	r2, r0, #1
 8019712:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019716:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801971a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801971e:	0940      	lsrs	r0, r0, #5
 8019720:	4323      	orrs	r3, r4
 8019722:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019726:	9a03      	ldr	r2, [sp, #12]
 8019728:	4303      	orrs	r3, r0
 801972a:	8013      	strh	r3, [r2, #0]
 801972c:	b005      	add	sp, #20
 801972e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019732:	280f      	cmp	r0, #15
 8019734:	f63f af33 	bhi.w	801959e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8019738:	4677      	mov	r7, lr
 801973a:	4675      	mov	r5, lr
 801973c:	4672      	mov	r2, lr
 801973e:	46f3      	mov	fp, lr
 8019740:	e753      	b.n	80195ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 8019742:	bf00      	nop
 8019744:	08021c76 	.word	0x08021c76
 8019748:	080221a6 	.word	0x080221a6
 801974c:	08021c43 	.word	0x08021c43

08019750 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019750:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019754:	ed2d 8b08 	vpush	{d8-d11}
 8019758:	b097      	sub	sp, #92	; 0x5c
 801975a:	eeb0 aa40 	vmov.f32	s20, s0
 801975e:	9214      	str	r2, [sp, #80]	; 0x50
 8019760:	9308      	str	r3, [sp, #32]
 8019762:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8019764:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8019768:	9312      	str	r3, [sp, #72]	; 0x48
 801976a:	9111      	str	r1, [sp, #68]	; 0x44
 801976c:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8019770:	9015      	str	r0, [sp, #84]	; 0x54
 8019772:	6850      	ldr	r0, [r2, #4]
 8019774:	6812      	ldr	r2, [r2, #0]
 8019776:	fb00 1303 	mla	r3, r0, r3, r1
 801977a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801977e:	9309      	str	r3, [sp, #36]	; 0x24
 8019780:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019782:	681b      	ldr	r3, [r3, #0]
 8019784:	930b      	str	r3, [sp, #44]	; 0x2c
 8019786:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019788:	685b      	ldr	r3, [r3, #4]
 801978a:	930c      	str	r3, [sp, #48]	; 0x30
 801978c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8019790:	930a      	str	r3, [sp, #40]	; 0x28
 8019792:	eef0 9a60 	vmov.f32	s19, s1
 8019796:	eeb0 9a41 	vmov.f32	s18, s2
 801979a:	eeb0 8a62 	vmov.f32	s16, s5
 801979e:	eef0 8a43 	vmov.f32	s17, s6
 80197a2:	eef0 ba44 	vmov.f32	s23, s8
 80197a6:	eeb0 ba64 	vmov.f32	s22, s9
 80197aa:	eef0 aa45 	vmov.f32	s21, s10
 80197ae:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80197b0:	2b00      	cmp	r3, #0
 80197b2:	dc03      	bgt.n	80197bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80197b4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80197b6:	2b00      	cmp	r3, #0
 80197b8:	f340 83cb 	ble.w	8019f52 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 80197bc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80197be:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80197c2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80197c6:	1e48      	subs	r0, r1, #1
 80197c8:	1e55      	subs	r5, r2, #1
 80197ca:	9b08      	ldr	r3, [sp, #32]
 80197cc:	2b00      	cmp	r3, #0
 80197ce:	f340 81a3 	ble.w	8019b18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80197d2:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 80197d4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80197d6:	1436      	asrs	r6, r6, #16
 80197d8:	ea4f 4323 	mov.w	r3, r3, asr #16
 80197dc:	d406      	bmi.n	80197ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80197de:	4286      	cmp	r6, r0
 80197e0:	da04      	bge.n	80197ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80197e2:	2b00      	cmp	r3, #0
 80197e4:	db02      	blt.n	80197ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80197e6:	42ab      	cmp	r3, r5
 80197e8:	f2c0 8197 	blt.w	8019b1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80197ec:	3601      	adds	r6, #1
 80197ee:	f100 8184 	bmi.w	8019afa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80197f2:	42b1      	cmp	r1, r6
 80197f4:	f2c0 8181 	blt.w	8019afa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80197f8:	3301      	adds	r3, #1
 80197fa:	f100 817e 	bmi.w	8019afa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80197fe:	429a      	cmp	r2, r3
 8019800:	f2c0 817b 	blt.w	8019afa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8019804:	9b08      	ldr	r3, [sp, #32]
 8019806:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8019808:	9313      	str	r3, [sp, #76]	; 0x4c
 801980a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801980e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019810:	2b00      	cmp	r3, #0
 8019812:	f340 81a4 	ble.w	8019b5e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 8019816:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019818:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 801981a:	1418      	asrs	r0, r3, #16
 801981c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801981e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8019822:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019824:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8019828:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801982a:	142d      	asrs	r5, r5, #16
 801982c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8019830:	f100 81f8 	bmi.w	8019c24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8019834:	f102 3eff 	add.w	lr, r2, #4294967295
 8019838:	4575      	cmp	r5, lr
 801983a:	f280 81f3 	bge.w	8019c24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801983e:	2800      	cmp	r0, #0
 8019840:	f2c0 81f0 	blt.w	8019c24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8019844:	f103 3eff 	add.w	lr, r3, #4294967295
 8019848:	4570      	cmp	r0, lr
 801984a:	f280 81eb 	bge.w	8019c24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801984e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019850:	b212      	sxth	r2, r2
 8019852:	fb00 5002 	mla	r0, r0, r2, r5
 8019856:	fa1f fe81 	uxth.w	lr, r1
 801985a:	eb03 0a00 	add.w	sl, r3, r0
 801985e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8019862:	f813 9000 	ldrb.w	r9, [r3, r0]
 8019866:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801986a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801986e:	b29b      	uxth	r3, r3
 8019870:	f1bc 0f00 	cmp.w	ip, #0
 8019874:	f000 81b9 	beq.w	8019bea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8019878:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801987c:	940d      	str	r4, [sp, #52]	; 0x34
 801987e:	eb0a 0b02 	add.w	fp, sl, r2
 8019882:	fa1f fa8c 	uxth.w	sl, ip
 8019886:	fb0a fe0e 	mul.w	lr, sl, lr
 801988a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801988e:	fa1f fa8a 	uxth.w	sl, sl
 8019892:	eba5 050e 	sub.w	r5, r5, lr
 8019896:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801989a:	940e      	str	r4, [sp, #56]	; 0x38
 801989c:	eba3 030a 	sub.w	r3, r3, sl
 80198a0:	b2ad      	uxth	r5, r5
 80198a2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80198a4:	b29b      	uxth	r3, r3
 80198a6:	fb08 f505 	mul.w	r5, r8, r5
 80198aa:	fb09 5303 	mla	r3, r9, r3, r5
 80198ae:	fb0a 3304 	mla	r3, sl, r4, r3
 80198b2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80198b4:	fb0e 3304 	mla	r3, lr, r4, r3
 80198b8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80198bc:	2b00      	cmp	r3, #0
 80198be:	f000 810f 	beq.w	8019ae0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80198c2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80198c4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80198c8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80198cc:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80198d0:	f000 8190 	beq.w	8019bf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 80198d4:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80198d8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80198dc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80198e0:	fb09 f000 	mul.w	r0, r9, r0
 80198e4:	fb0a fe0e 	mul.w	lr, sl, lr
 80198e8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80198ec:	f100 0b20 	add.w	fp, r0, #32
 80198f0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80198f4:	44ce      	add	lr, r9
 80198f6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80198fa:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80198fe:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8019902:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019906:	ea4e 0909 	orr.w	r9, lr, r9
 801990a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801990e:	8868      	ldrh	r0, [r5, #2]
 8019910:	d019      	beq.n	8019946 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8019912:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8019916:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801991a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801991e:	fb08 f800 	mul.w	r8, r8, r0
 8019922:	fb0a fe0e 	mul.w	lr, sl, lr
 8019926:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801992a:	f108 0b20 	add.w	fp, r8, #32
 801992e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8019932:	4486      	add	lr, r0
 8019934:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8019938:	0a00      	lsrs	r0, r0, #8
 801993a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801993e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019942:	ea4e 0000 	orr.w	r0, lr, r0
 8019946:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801994a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801994e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019952:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8019956:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801995a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801995e:	ea4e 0909 	orr.w	r9, lr, r9
 8019962:	ea4a 0000 	orr.w	r0, sl, r0
 8019966:	f1bc 0f00 	cmp.w	ip, #0
 801996a:	f000 8145 	beq.w	8019bf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 801996e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8019972:	3a01      	subs	r2, #1
 8019974:	0052      	lsls	r2, r2, #1
 8019976:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019978:	3202      	adds	r2, #2
 801997a:	2cff      	cmp	r4, #255	; 0xff
 801997c:	eb05 0e02 	add.w	lr, r5, r2
 8019980:	5aaa      	ldrh	r2, [r5, r2]
 8019982:	d018      	beq.n	80199b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8019984:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8019988:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801998c:	fb04 fa02 	mul.w	sl, r4, r2
 8019990:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019994:	fb08 f805 	mul.w	r8, r8, r5
 8019998:	f10a 0520 	add.w	r5, sl, #32
 801999c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80199a0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80199a4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80199a8:	4442      	add	r2, r8
 80199aa:	0a2d      	lsrs	r5, r5, #8
 80199ac:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80199b0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80199b4:	432a      	orrs	r2, r5
 80199b6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80199b8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80199bc:	2cff      	cmp	r4, #255	; 0xff
 80199be:	d01a      	beq.n	80199f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80199c0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80199c4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80199c8:	fb04 fa05 	mul.w	sl, r4, r5
 80199cc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80199d0:	fb08 f80e 	mul.w	r8, r8, lr
 80199d4:	f10a 0e20 	add.w	lr, sl, #32
 80199d8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80199dc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80199e0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80199e4:	4445      	add	r5, r8
 80199e6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80199ea:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80199ee:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80199f2:	ea45 050e 	orr.w	r5, r5, lr
 80199f6:	fb1c fe01 	smulbb	lr, ip, r1
 80199fa:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80199fe:	f1cc 0810 	rsb	r8, ip, #16
 8019a02:	eba8 0801 	sub.w	r8, r8, r1
 8019a06:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8019a0a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8019a0e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8019a12:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8019a16:	4341      	muls	r1, r0
 8019a18:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019a1c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019a20:	ea4a 0202 	orr.w	r2, sl, r2
 8019a24:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8019a28:	fb09 1108 	mla	r1, r9, r8, r1
 8019a2c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019a30:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8019a34:	fb0c 1102 	mla	r1, ip, r2, r1
 8019a38:	ea4b 0505 	orr.w	r5, fp, r5
 8019a3c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8019a40:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8019a44:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8019a48:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019a4c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019a50:	ea42 0e0e 	orr.w	lr, r2, lr
 8019a54:	fa1f f28e 	uxth.w	r2, lr
 8019a58:	2bff      	cmp	r3, #255	; 0xff
 8019a5a:	d103      	bne.n	8019a64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8019a5c:	9912      	ldr	r1, [sp, #72]	; 0x48
 8019a5e:	29ff      	cmp	r1, #255	; 0xff
 8019a60:	f000 80de 	beq.w	8019c20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 8019a64:	990a      	ldr	r1, [sp, #40]	; 0x28
 8019a66:	8838      	ldrh	r0, [r7, #0]
 8019a68:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019a6a:	434b      	muls	r3, r1
 8019a6c:	f103 0c01 	add.w	ip, r3, #1
 8019a70:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8019a74:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8019a78:	fa5f fc83 	uxtb.w	ip, r3
 8019a7c:	1203      	asrs	r3, r0, #8
 8019a7e:	1215      	asrs	r5, r2, #8
 8019a80:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8019a84:	fb13 f30c 	smulbb	r3, r3, ip
 8019a88:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019a8c:	fb05 3501 	mla	r5, r5, r1, r3
 8019a90:	10c3      	asrs	r3, r0, #3
 8019a92:	10d1      	asrs	r1, r2, #3
 8019a94:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8019a98:	fb13 f30c 	smulbb	r3, r3, ip
 8019a9c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019aa0:	fb01 3104 	mla	r1, r1, r4, r3
 8019aa4:	00c3      	lsls	r3, r0, #3
 8019aa6:	00d2      	lsls	r2, r2, #3
 8019aa8:	b2db      	uxtb	r3, r3
 8019aaa:	b2d2      	uxtb	r2, r2
 8019aac:	fb13 f30c 	smulbb	r3, r3, ip
 8019ab0:	b2ad      	uxth	r5, r5
 8019ab2:	fb02 3304 	mla	r3, r2, r4, r3
 8019ab6:	b29a      	uxth	r2, r3
 8019ab8:	1c6b      	adds	r3, r5, #1
 8019aba:	b289      	uxth	r1, r1
 8019abc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019ac0:	1c53      	adds	r3, r2, #1
 8019ac2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019ac6:	1c4a      	adds	r2, r1, #1
 8019ac8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019acc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019ad0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019ad4:	0949      	lsrs	r1, r1, #5
 8019ad6:	432b      	orrs	r3, r5
 8019ad8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019adc:	430b      	orrs	r3, r1
 8019ade:	803b      	strh	r3, [r7, #0]
 8019ae0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019ae2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8019ae4:	4413      	add	r3, r2
 8019ae6:	9329      	str	r3, [sp, #164]	; 0xa4
 8019ae8:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8019aea:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019aec:	441a      	add	r2, r3
 8019aee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019af0:	922a      	str	r2, [sp, #168]	; 0xa8
 8019af2:	3b01      	subs	r3, #1
 8019af4:	3702      	adds	r7, #2
 8019af6:	9313      	str	r3, [sp, #76]	; 0x4c
 8019af8:	e689      	b.n	801980e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8019afa:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019afc:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8019afe:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 8019b00:	4433      	add	r3, r6
 8019b02:	9329      	str	r3, [sp, #164]	; 0xa4
 8019b04:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019b06:	441c      	add	r4, r3
 8019b08:	9b08      	ldr	r3, [sp, #32]
 8019b0a:	942a      	str	r4, [sp, #168]	; 0xa8
 8019b0c:	3b01      	subs	r3, #1
 8019b0e:	9308      	str	r3, [sp, #32]
 8019b10:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019b12:	3302      	adds	r3, #2
 8019b14:	9309      	str	r3, [sp, #36]	; 0x24
 8019b16:	e658      	b.n	80197ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019b18:	d028      	beq.n	8019b6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8019b1a:	9b08      	ldr	r3, [sp, #32]
 8019b1c:	982b      	ldr	r0, [sp, #172]	; 0xac
 8019b1e:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8019b20:	3b01      	subs	r3, #1
 8019b22:	fb00 5003 	mla	r0, r0, r3, r5
 8019b26:	1400      	asrs	r0, r0, #16
 8019b28:	f53f ae6c 	bmi.w	8019804 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8019b2c:	3901      	subs	r1, #1
 8019b2e:	4288      	cmp	r0, r1
 8019b30:	f6bf ae68 	bge.w	8019804 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8019b34:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8019b36:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8019b38:	fb01 0303 	mla	r3, r1, r3, r0
 8019b3c:	141b      	asrs	r3, r3, #16
 8019b3e:	f53f ae61 	bmi.w	8019804 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8019b42:	3a01      	subs	r2, #1
 8019b44:	4293      	cmp	r3, r2
 8019b46:	f6bf ae5d 	bge.w	8019804 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8019b4a:	9b08      	ldr	r3, [sp, #32]
 8019b4c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8019b50:	9313      	str	r3, [sp, #76]	; 0x4c
 8019b52:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8019b56:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019b58:	2b00      	cmp	r3, #0
 8019b5a:	f300 8082 	bgt.w	8019c62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8019b5e:	9b08      	ldr	r3, [sp, #32]
 8019b60:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019b64:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019b66:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8019b6a:	9309      	str	r3, [sp, #36]	; 0x24
 8019b6c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019b6e:	2b00      	cmp	r3, #0
 8019b70:	f340 81ef 	ble.w	8019f52 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8019b74:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019b78:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019b7c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019b80:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019b82:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019b86:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019b8a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019b8e:	eef0 6a48 	vmov.f32	s13, s16
 8019b92:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019b96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019b9a:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019b9e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8019ba2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019ba6:	eef0 6a68 	vmov.f32	s13, s17
 8019baa:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019bae:	ee18 2a10 	vmov	r2, s16
 8019bb2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019bb6:	fb92 f3f3 	sdiv	r3, r2, r3
 8019bba:	ee18 2a90 	vmov	r2, s17
 8019bbe:	932b      	str	r3, [sp, #172]	; 0xac
 8019bc0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019bc2:	fb92 f3f3 	sdiv	r3, r2, r3
 8019bc6:	932c      	str	r3, [sp, #176]	; 0xb0
 8019bc8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019bca:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019bcc:	3b01      	subs	r3, #1
 8019bce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019bd2:	9311      	str	r3, [sp, #68]	; 0x44
 8019bd4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019bd6:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8019bda:	bf08      	it	eq
 8019bdc:	4613      	moveq	r3, r2
 8019bde:	9308      	str	r3, [sp, #32]
 8019be0:	eef0 8a67 	vmov.f32	s17, s15
 8019be4:	eeb0 8a47 	vmov.f32	s16, s14
 8019be8:	e5e1      	b.n	80197ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019bea:	fb08 f505 	mul.w	r5, r8, r5
 8019bee:	fb09 5303 	mla	r3, r9, r3, r5
 8019bf2:	e661      	b.n	80198b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 8019bf4:	4681      	mov	r9, r0
 8019bf6:	e688      	b.n	801990a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8019bf8:	f1c1 0210 	rsb	r2, r1, #16
 8019bfc:	4341      	muls	r1, r0
 8019bfe:	fb09 1902 	mla	r9, r9, r2, r1
 8019c02:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8019c06:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8019c0a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019c0e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019c12:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8019c16:	ea42 0909 	orr.w	r9, r2, r9
 8019c1a:	fa1f f289 	uxth.w	r2, r9
 8019c1e:	e71b      	b.n	8019a58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 8019c20:	803a      	strh	r2, [r7, #0]
 8019c22:	e75d      	b.n	8019ae0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8019c24:	f115 0e01 	adds.w	lr, r5, #1
 8019c28:	f53f af5a 	bmi.w	8019ae0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8019c2c:	4572      	cmp	r2, lr
 8019c2e:	f6ff af57 	blt.w	8019ae0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8019c32:	f110 0e01 	adds.w	lr, r0, #1
 8019c36:	f53f af53 	bmi.w	8019ae0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8019c3a:	4573      	cmp	r3, lr
 8019c3c:	f6ff af50 	blt.w	8019ae0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8019c40:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019c42:	9502      	str	r5, [sp, #8]
 8019c44:	b21b      	sxth	r3, r3
 8019c46:	b212      	sxth	r2, r2
 8019c48:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8019c4c:	9301      	str	r3, [sp, #4]
 8019c4e:	9200      	str	r2, [sp, #0]
 8019c50:	e9cd c405 	strd	ip, r4, [sp, #20]
 8019c54:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8019c58:	4639      	mov	r1, r7
 8019c5a:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019c5c:	f7ff fbd2 	bl	8019404 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8019c60:	e73e      	b.n	8019ae0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8019c62:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019c64:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019c68:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019c6a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8019c6e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019c70:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019c74:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019c76:	141f      	asrs	r7, r3, #16
 8019c78:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019c7a:	141b      	asrs	r3, r3, #16
 8019c7c:	fb01 3707 	mla	r7, r1, r7, r3
 8019c80:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019c82:	fa1f fc82 	uxth.w	ip, r2
 8019c86:	eb03 0a07 	add.w	sl, r3, r7
 8019c8a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8019c8e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8019c92:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8019c96:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8019c9a:	b29b      	uxth	r3, r3
 8019c9c:	2d00      	cmp	r5, #0
 8019c9e:	f000 813d 	beq.w	8019f1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 8019ca2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8019ca6:	940f      	str	r4, [sp, #60]	; 0x3c
 8019ca8:	eb0a 0b01 	add.w	fp, sl, r1
 8019cac:	fa1f fa85 	uxth.w	sl, r5
 8019cb0:	fb0a fc0c 	mul.w	ip, sl, ip
 8019cb4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8019cb8:	fa1f fa8a 	uxth.w	sl, sl
 8019cbc:	eba0 000c 	sub.w	r0, r0, ip
 8019cc0:	eba3 030a 	sub.w	r3, r3, sl
 8019cc4:	b280      	uxth	r0, r0
 8019cc6:	fb08 f000 	mul.w	r0, r8, r0
 8019cca:	b29b      	uxth	r3, r3
 8019ccc:	fb09 0303 	mla	r3, r9, r3, r0
 8019cd0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019cd2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8019cd6:	9410      	str	r4, [sp, #64]	; 0x40
 8019cd8:	fb0a 3300 	mla	r3, sl, r0, r3
 8019cdc:	fb0c 3304 	mla	r3, ip, r4, r3
 8019ce0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019ce4:	2b00      	cmp	r3, #0
 8019ce6:	f000 810b 	beq.w	8019f00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8019cea:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8019cec:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019cee:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019cf2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8019cf6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8019cfa:	f000 8114 	beq.w	8019f26 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 8019cfe:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8019d02:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8019d06:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019d0a:	fb09 f707 	mul.w	r7, r9, r7
 8019d0e:	fb0a fc0c 	mul.w	ip, sl, ip
 8019d12:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8019d16:	f107 0b20 	add.w	fp, r7, #32
 8019d1a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8019d1e:	44cc      	add	ip, r9
 8019d20:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8019d24:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019d28:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8019d2c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019d30:	ea4c 0909 	orr.w	r9, ip, r9
 8019d34:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019d38:	8847      	ldrh	r7, [r0, #2]
 8019d3a:	d019      	beq.n	8019d70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 8019d3c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8019d40:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8019d44:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019d48:	fb08 f807 	mul.w	r8, r8, r7
 8019d4c:	fb0a fc0c 	mul.w	ip, sl, ip
 8019d50:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8019d54:	f108 0b20 	add.w	fp, r8, #32
 8019d58:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8019d5c:	44bc      	add	ip, r7
 8019d5e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8019d62:	0a3f      	lsrs	r7, r7, #8
 8019d64:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8019d68:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019d6c:	ea4c 0707 	orr.w	r7, ip, r7
 8019d70:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8019d74:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8019d78:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019d7c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8019d80:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019d84:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019d88:	ea4c 0909 	orr.w	r9, ip, r9
 8019d8c:	ea4a 0707 	orr.w	r7, sl, r7
 8019d90:	2d00      	cmp	r5, #0
 8019d92:	f000 80ca 	beq.w	8019f2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 8019d96:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8019d9a:	3901      	subs	r1, #1
 8019d9c:	0049      	lsls	r1, r1, #1
 8019d9e:	3102      	adds	r1, #2
 8019da0:	eb00 0c01 	add.w	ip, r0, r1
 8019da4:	5a41      	ldrh	r1, [r0, r1]
 8019da6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019da8:	28ff      	cmp	r0, #255	; 0xff
 8019daa:	d019      	beq.n	8019de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 8019dac:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019dae:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8019db2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019db6:	fb04 fa01 	mul.w	sl, r4, r1
 8019dba:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019dbe:	fb08 f800 	mul.w	r8, r8, r0
 8019dc2:	f10a 0020 	add.w	r0, sl, #32
 8019dc6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8019dca:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8019dce:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019dd2:	4441      	add	r1, r8
 8019dd4:	0a00      	lsrs	r0, r0, #8
 8019dd6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8019dda:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019dde:	4301      	orrs	r1, r0
 8019de0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019de2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8019de6:	2cff      	cmp	r4, #255	; 0xff
 8019de8:	d01a      	beq.n	8019e20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 8019dea:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8019dee:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019df2:	fb04 fa00 	mul.w	sl, r4, r0
 8019df6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019dfa:	fb08 f80c 	mul.w	r8, r8, ip
 8019dfe:	f10a 0c20 	add.w	ip, sl, #32
 8019e02:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8019e06:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8019e0a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019e0e:	4440      	add	r0, r8
 8019e10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019e14:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8019e18:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8019e1c:	ea40 000c 	orr.w	r0, r0, ip
 8019e20:	fb15 fc02 	smulbb	ip, r5, r2
 8019e24:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8019e28:	f1c5 0810 	rsb	r8, r5, #16
 8019e2c:	eba8 0802 	sub.w	r8, r8, r2
 8019e30:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8019e34:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8019e38:	437a      	muls	r2, r7
 8019e3a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8019e3e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8019e42:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019e46:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019e4a:	fb09 2208 	mla	r2, r9, r8, r2
 8019e4e:	ea4a 0101 	orr.w	r1, sl, r1
 8019e52:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8019e56:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019e5a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019e5e:	fb05 2201 	mla	r2, r5, r1, r2
 8019e62:	ea4b 0000 	orr.w	r0, fp, r0
 8019e66:	fb0c 2200 	mla	r2, ip, r0, r2
 8019e6a:	0d57      	lsrs	r7, r2, #21
 8019e6c:	0952      	lsrs	r2, r2, #5
 8019e6e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019e72:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019e76:	433a      	orrs	r2, r7
 8019e78:	2bff      	cmp	r3, #255	; 0xff
 8019e7a:	b292      	uxth	r2, r2
 8019e7c:	d102      	bne.n	8019e84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8019e7e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8019e80:	29ff      	cmp	r1, #255	; 0xff
 8019e82:	d063      	beq.n	8019f4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 8019e84:	980a      	ldr	r0, [sp, #40]	; 0x28
 8019e86:	f8be 1000 	ldrh.w	r1, [lr]
 8019e8a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019e8c:	4343      	muls	r3, r0
 8019e8e:	1c58      	adds	r0, r3, #1
 8019e90:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8019e94:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8019e98:	1208      	asrs	r0, r1, #8
 8019e9a:	b2db      	uxtb	r3, r3
 8019e9c:	1215      	asrs	r5, r2, #8
 8019e9e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019ea2:	fb10 f003 	smulbb	r0, r0, r3
 8019ea6:	10cf      	asrs	r7, r1, #3
 8019ea8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019eac:	00c9      	lsls	r1, r1, #3
 8019eae:	fb05 0504 	mla	r5, r5, r4, r0
 8019eb2:	b2c9      	uxtb	r1, r1
 8019eb4:	10d0      	asrs	r0, r2, #3
 8019eb6:	00d2      	lsls	r2, r2, #3
 8019eb8:	fb11 f103 	smulbb	r1, r1, r3
 8019ebc:	b2d2      	uxtb	r2, r2
 8019ebe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019ec2:	fb02 1204 	mla	r2, r2, r4, r1
 8019ec6:	fb17 f703 	smulbb	r7, r7, r3
 8019eca:	b2ad      	uxth	r5, r5
 8019ecc:	b292      	uxth	r2, r2
 8019ece:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8019ed2:	fb00 7004 	mla	r0, r0, r4, r7
 8019ed6:	1c6b      	adds	r3, r5, #1
 8019ed8:	1c57      	adds	r7, r2, #1
 8019eda:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019ede:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8019ee2:	b280      	uxth	r0, r0
 8019ee4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019ee8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019eec:	433d      	orrs	r5, r7
 8019eee:	1c47      	adds	r7, r0, #1
 8019ef0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8019ef4:	097f      	lsrs	r7, r7, #5
 8019ef6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019efa:	433d      	orrs	r5, r7
 8019efc:	f8ae 5000 	strh.w	r5, [lr]
 8019f00:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019f02:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8019f04:	4413      	add	r3, r2
 8019f06:	9329      	str	r3, [sp, #164]	; 0xa4
 8019f08:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8019f0a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019f0c:	441a      	add	r2, r3
 8019f0e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019f10:	922a      	str	r2, [sp, #168]	; 0xa8
 8019f12:	3b01      	subs	r3, #1
 8019f14:	f10e 0e02 	add.w	lr, lr, #2
 8019f18:	9313      	str	r3, [sp, #76]	; 0x4c
 8019f1a:	e61c      	b.n	8019b56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 8019f1c:	fb08 f000 	mul.w	r0, r8, r0
 8019f20:	fb09 0303 	mla	r3, r9, r3, r0
 8019f24:	e6dc      	b.n	8019ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 8019f26:	46b9      	mov	r9, r7
 8019f28:	e704      	b.n	8019d34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 8019f2a:	f1c2 0110 	rsb	r1, r2, #16
 8019f2e:	437a      	muls	r2, r7
 8019f30:	fb09 2901 	mla	r9, r9, r1, r2
 8019f34:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8019f38:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8019f3c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8019f40:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019f44:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019f48:	4302      	orrs	r2, r0
 8019f4a:	e795      	b.n	8019e78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 8019f4c:	f8ae 2000 	strh.w	r2, [lr]
 8019f50:	e7d6      	b.n	8019f00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8019f52:	b017      	add	sp, #92	; 0x5c
 8019f54:	ecbd 8b08 	vpop	{d8-d11}
 8019f58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019f5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8019f5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f60:	b085      	sub	sp, #20
 8019f62:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8019f66:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8019f6a:	9103      	str	r1, [sp, #12]
 8019f6c:	fb05 7106 	mla	r1, r5, r6, r7
 8019f70:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 8019f74:	2d00      	cmp	r5, #0
 8019f76:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8019f7a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8019f7e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8019f82:	9401      	str	r4, [sp, #4]
 8019f84:	eb02 0901 	add.w	r9, r2, r1
 8019f88:	f2c0 80c0 	blt.w	801a10c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8019f8c:	45a8      	cmp	r8, r5
 8019f8e:	f340 80bd 	ble.w	801a10c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8019f92:	2f00      	cmp	r7, #0
 8019f94:	f2c0 80b6 	blt.w	801a104 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8019f98:	42be      	cmp	r6, r7
 8019f9a:	f340 80b3 	ble.w	801a104 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8019f9e:	f812 c001 	ldrb.w	ip, [r2, r1]
 8019fa2:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8019fa6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8019faa:	d019      	beq.n	8019fe0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 8019fac:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8019fb0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8019fb4:	435a      	muls	r2, r3
 8019fb6:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8019fba:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8019fbe:	fb0c f403 	mul.w	r4, ip, r3
 8019fc2:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8019fc6:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8019fca:	441a      	add	r2, r3
 8019fcc:	f104 0320 	add.w	r3, r4, #32
 8019fd0:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8019fd4:	0a1b      	lsrs	r3, r3, #8
 8019fd6:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 8019fda:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019fde:	4319      	orrs	r1, r3
 8019fe0:	b289      	uxth	r1, r1
 8019fe2:	1c7b      	adds	r3, r7, #1
 8019fe4:	f100 8097 	bmi.w	801a116 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8019fe8:	429e      	cmp	r6, r3
 8019fea:	f340 8094 	ble.w	801a116 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8019fee:	2800      	cmp	r0, #0
 8019ff0:	f000 8094 	beq.w	801a11c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 8019ff4:	f899 4001 	ldrb.w	r4, [r9, #1]
 8019ff8:	9b01      	ldr	r3, [sp, #4]
 8019ffa:	2cff      	cmp	r4, #255	; 0xff
 8019ffc:	885b      	ldrh	r3, [r3, #2]
 8019ffe:	d01b      	beq.n	801a038 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 801a000:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 801a004:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801a008:	fb0a f202 	mul.w	r2, sl, r2
 801a00c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a010:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801a014:	fb04 fa03 	mul.w	sl, r4, r3
 801a018:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 801a01c:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801a020:	441a      	add	r2, r3
 801a022:	f10a 0320 	add.w	r3, sl, #32
 801a026:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801a02a:	0a1b      	lsrs	r3, r3, #8
 801a02c:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 801a030:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a034:	ea4b 0303 	orr.w	r3, fp, r3
 801a038:	b29b      	uxth	r3, r3
 801a03a:	3501      	adds	r5, #1
 801a03c:	d474      	bmi.n	801a128 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 801a03e:	45a8      	cmp	r8, r5
 801a040:	dd72      	ble.n	801a128 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 801a042:	f1be 0f00 	cmp.w	lr, #0
 801a046:	f000 8110 	beq.w	801a26a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x30e>
 801a04a:	2f00      	cmp	r7, #0
 801a04c:	db69      	blt.n	801a122 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 801a04e:	42be      	cmp	r6, r7
 801a050:	dd67      	ble.n	801a122 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 801a052:	f819 5006 	ldrb.w	r5, [r9, r6]
 801a056:	9a01      	ldr	r2, [sp, #4]
 801a058:	2dff      	cmp	r5, #255	; 0xff
 801a05a:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 801a05e:	d01c      	beq.n	801a09a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 801a060:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 801a064:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801a068:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a06c:	fb05 fa0b 	mul.w	sl, r5, fp
 801a070:	fb08 f802 	mul.w	r8, r8, r2
 801a074:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801a078:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 801a07c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801a080:	4490      	add	r8, r2
 801a082:	f10a 0220 	add.w	r2, sl, #32
 801a086:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 801a08a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a08e:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 801a092:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a096:	ea4b 0b0a 	orr.w	fp, fp, sl
 801a09a:	fa1f fb8b 	uxth.w	fp, fp
 801a09e:	3701      	adds	r7, #1
 801a0a0:	d447      	bmi.n	801a132 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 801a0a2:	42be      	cmp	r6, r7
 801a0a4:	dd45      	ble.n	801a132 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 801a0a6:	2800      	cmp	r0, #0
 801a0a8:	d046      	beq.n	801a138 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 801a0aa:	3601      	adds	r6, #1
 801a0ac:	9a01      	ldr	r2, [sp, #4]
 801a0ae:	f819 7006 	ldrb.w	r7, [r9, r6]
 801a0b2:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 801a0b6:	2fff      	cmp	r7, #255	; 0xff
 801a0b8:	d01a      	beq.n	801a0f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 801a0ba:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 801a0be:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801a0c2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a0c6:	fb07 f902 	mul.w	r9, r7, r2
 801a0ca:	fb08 f806 	mul.w	r8, r8, r6
 801a0ce:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801a0d2:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 801a0d6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801a0da:	44b0      	add	r8, r6
 801a0dc:	f109 0620 	add.w	r6, r9, #32
 801a0e0:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 801a0e4:	0a36      	lsrs	r6, r6, #8
 801a0e6:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801a0ea:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a0ee:	4332      	orrs	r2, r6
 801a0f0:	b292      	uxth	r2, r2
 801a0f2:	280f      	cmp	r0, #15
 801a0f4:	d922      	bls.n	801a13c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 801a0f6:	4b61      	ldr	r3, [pc, #388]	; (801a27c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 801a0f8:	4a61      	ldr	r2, [pc, #388]	; (801a280 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 801a0fa:	4862      	ldr	r0, [pc, #392]	; (801a284 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 801a0fc:	f240 11f9 	movw	r1, #505	; 0x1f9
 801a100:	f003 fc94 	bl	801da2c <__assert_func>
 801a104:	f04f 0c00 	mov.w	ip, #0
 801a108:	4661      	mov	r1, ip
 801a10a:	e76a      	b.n	8019fe2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801a10c:	2400      	movs	r4, #0
 801a10e:	46a4      	mov	ip, r4
 801a110:	4623      	mov	r3, r4
 801a112:	4621      	mov	r1, r4
 801a114:	e791      	b.n	801a03a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801a116:	2400      	movs	r4, #0
 801a118:	4623      	mov	r3, r4
 801a11a:	e78e      	b.n	801a03a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801a11c:	4604      	mov	r4, r0
 801a11e:	4603      	mov	r3, r0
 801a120:	e78b      	b.n	801a03a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801a122:	2500      	movs	r5, #0
 801a124:	46ab      	mov	fp, r5
 801a126:	e7ba      	b.n	801a09e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 801a128:	2700      	movs	r7, #0
 801a12a:	463d      	mov	r5, r7
 801a12c:	463a      	mov	r2, r7
 801a12e:	46bb      	mov	fp, r7
 801a130:	e7df      	b.n	801a0f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 801a132:	2700      	movs	r7, #0
 801a134:	463a      	mov	r2, r7
 801a136:	e7dc      	b.n	801a0f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 801a138:	4607      	mov	r7, r0
 801a13a:	4602      	mov	r2, r0
 801a13c:	f1be 0f0f 	cmp.w	lr, #15
 801a140:	d8d9      	bhi.n	801a0f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 801a142:	b286      	uxth	r6, r0
 801a144:	fa1f f98e 	uxth.w	r9, lr
 801a148:	fb06 f809 	mul.w	r8, r6, r9
 801a14c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801a150:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801a154:	0136      	lsls	r6, r6, #4
 801a156:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801a15a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a15e:	9601      	str	r6, [sp, #4]
 801a160:	ea4a 0101 	orr.w	r1, sl, r1
 801a164:	fa1f f689 	uxth.w	r6, r9
 801a168:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 801a16c:	fb10 f90e 	smulbb	r9, r0, lr
 801a170:	ea4f 09e9 	mov.w	r9, r9, asr #3
 801a174:	9602      	str	r6, [sp, #8]
 801a176:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801a17a:	460e      	mov	r6, r1
 801a17c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a180:	f1ce 0110 	rsb	r1, lr, #16
 801a184:	1a09      	subs	r1, r1, r0
 801a186:	ea4a 0303 	orr.w	r3, sl, r3
 801a18a:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 801a18e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801a192:	4343      	muls	r3, r0
 801a194:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 801a198:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801a19c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a1a0:	fb01 3106 	mla	r1, r1, r6, r3
 801a1a4:	ea4a 0202 	orr.w	r2, sl, r2
 801a1a8:	fb09 1302 	mla	r3, r9, r2, r1
 801a1ac:	9a03      	ldr	r2, [sp, #12]
 801a1ae:	9802      	ldr	r0, [sp, #8]
 801a1b0:	8811      	ldrh	r1, [r2, #0]
 801a1b2:	9a01      	ldr	r2, [sp, #4]
 801a1b4:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801a1b8:	1a12      	subs	r2, r2, r0
 801a1ba:	9801      	ldr	r0, [sp, #4]
 801a1bc:	eba0 0608 	sub.w	r6, r0, r8
 801a1c0:	b2b6      	uxth	r6, r6
 801a1c2:	b292      	uxth	r2, r2
 801a1c4:	4374      	muls	r4, r6
 801a1c6:	fb0c 4402 	mla	r4, ip, r2, r4
 801a1ca:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 801a1ce:	9a02      	ldr	r2, [sp, #8]
 801a1d0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801a1d4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801a1d8:	fb02 4505 	mla	r5, r2, r5, r4
 801a1dc:	ea4a 0b0b 	orr.w	fp, sl, fp
 801a1e0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801a1e4:	fb0e 3e0b 	mla	lr, lr, fp, r3
 801a1e8:	fb08 5707 	mla	r7, r8, r7, r5
 801a1ec:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801a1f0:	120a      	asrs	r2, r1, #8
 801a1f2:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801a1f6:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801a1fa:	b2ff      	uxtb	r7, r7
 801a1fc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a200:	10c8      	asrs	r0, r1, #3
 801a202:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801a206:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801a20a:	00c9      	lsls	r1, r1, #3
 801a20c:	437a      	muls	r2, r7
 801a20e:	ea43 0e0e 	orr.w	lr, r3, lr
 801a212:	b2c9      	uxtb	r1, r1
 801a214:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a218:	fa1f f38e 	uxth.w	r3, lr
 801a21c:	4378      	muls	r0, r7
 801a21e:	434f      	muls	r7, r1
 801a220:	1c51      	adds	r1, r2, #1
 801a222:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801a226:	121a      	asrs	r2, r3, #8
 801a228:	f022 0207 	bic.w	r2, r2, #7
 801a22c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801a230:	1c41      	adds	r1, r0, #1
 801a232:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801a236:	10d9      	asrs	r1, r3, #3
 801a238:	f021 0103 	bic.w	r1, r1, #3
 801a23c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801a240:	0212      	lsls	r2, r2, #8
 801a242:	00c9      	lsls	r1, r1, #3
 801a244:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a248:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801a24c:	430a      	orrs	r2, r1
 801a24e:	1c79      	adds	r1, r7, #1
 801a250:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801a254:	00db      	lsls	r3, r3, #3
 801a256:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801a25a:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801a25e:	4313      	orrs	r3, r2
 801a260:	9a03      	ldr	r2, [sp, #12]
 801a262:	8013      	strh	r3, [r2, #0]
 801a264:	b005      	add	sp, #20
 801a266:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a26a:	280f      	cmp	r0, #15
 801a26c:	f63f af43 	bhi.w	801a0f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 801a270:	4677      	mov	r7, lr
 801a272:	4675      	mov	r5, lr
 801a274:	4672      	mov	r2, lr
 801a276:	46f3      	mov	fp, lr
 801a278:	e763      	b.n	801a142 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 801a27a:	bf00      	nop
 801a27c:	08021c76 	.word	0x08021c76
 801a280:	080221a6 	.word	0x080221a6
 801a284:	08021c43 	.word	0x08021c43

0801a288 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a288:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a28c:	ed2d 8b08 	vpush	{d8-d11}
 801a290:	b093      	sub	sp, #76	; 0x4c
 801a292:	eeb0 aa40 	vmov.f32	s20, s0
 801a296:	9210      	str	r2, [sp, #64]	; 0x40
 801a298:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a29a:	910e      	str	r1, [sp, #56]	; 0x38
 801a29c:	9306      	str	r3, [sp, #24]
 801a29e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801a2a2:	9011      	str	r0, [sp, #68]	; 0x44
 801a2a4:	6850      	ldr	r0, [r2, #4]
 801a2a6:	6812      	ldr	r2, [r2, #0]
 801a2a8:	fb00 1303 	mla	r3, r0, r3, r1
 801a2ac:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a2b0:	9307      	str	r3, [sp, #28]
 801a2b2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a2b4:	681b      	ldr	r3, [r3, #0]
 801a2b6:	9308      	str	r3, [sp, #32]
 801a2b8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a2ba:	685b      	ldr	r3, [r3, #4]
 801a2bc:	9309      	str	r3, [sp, #36]	; 0x24
 801a2be:	eef0 9a60 	vmov.f32	s19, s1
 801a2c2:	eeb0 9a41 	vmov.f32	s18, s2
 801a2c6:	eeb0 8a62 	vmov.f32	s16, s5
 801a2ca:	eef0 8a43 	vmov.f32	s17, s6
 801a2ce:	eef0 ba44 	vmov.f32	s23, s8
 801a2d2:	eeb0 ba64 	vmov.f32	s22, s9
 801a2d6:	eef0 aa45 	vmov.f32	s21, s10
 801a2da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a2dc:	2b00      	cmp	r3, #0
 801a2de:	dc03      	bgt.n	801a2e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a2e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a2e2:	2b00      	cmp	r3, #0
 801a2e4:	f340 83b4 	ble.w	801aa50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 801a2e8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a2ea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a2ee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a2f2:	1e48      	subs	r0, r1, #1
 801a2f4:	1e55      	subs	r5, r2, #1
 801a2f6:	9b06      	ldr	r3, [sp, #24]
 801a2f8:	2b00      	cmp	r3, #0
 801a2fa:	f340 8163 	ble.w	801a5c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801a2fe:	9e25      	ldr	r6, [sp, #148]	; 0x94
 801a300:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a302:	1436      	asrs	r6, r6, #16
 801a304:	ea4f 4323 	mov.w	r3, r3, asr #16
 801a308:	d406      	bmi.n	801a318 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a30a:	4286      	cmp	r6, r0
 801a30c:	da04      	bge.n	801a318 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a30e:	2b00      	cmp	r3, #0
 801a310:	db02      	blt.n	801a318 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a312:	42ab      	cmp	r3, r5
 801a314:	f2c0 8157 	blt.w	801a5c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a318:	3601      	adds	r6, #1
 801a31a:	f100 8144 	bmi.w	801a5a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801a31e:	42b1      	cmp	r1, r6
 801a320:	f2c0 8141 	blt.w	801a5a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801a324:	3301      	adds	r3, #1
 801a326:	f100 813e 	bmi.w	801a5a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801a32a:	429a      	cmp	r2, r3
 801a32c:	f2c0 813b 	blt.w	801a5a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801a330:	9b06      	ldr	r3, [sp, #24]
 801a332:	9f07      	ldr	r7, [sp, #28]
 801a334:	930f      	str	r3, [sp, #60]	; 0x3c
 801a336:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801a33a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a33c:	2b00      	cmp	r3, #0
 801a33e:	f340 8164 	ble.w	801a60a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 801a342:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a344:	9d25      	ldr	r5, [sp, #148]	; 0x94
 801a346:	1418      	asrs	r0, r3, #16
 801a348:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a34a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801a34e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a350:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801a354:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a356:	142d      	asrs	r5, r5, #16
 801a358:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801a35c:	f100 81ee 	bmi.w	801a73c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801a360:	f102 3eff 	add.w	lr, r2, #4294967295
 801a364:	4575      	cmp	r5, lr
 801a366:	f280 81e9 	bge.w	801a73c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801a36a:	2800      	cmp	r0, #0
 801a36c:	f2c0 81e6 	blt.w	801a73c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801a370:	f103 3eff 	add.w	lr, r3, #4294967295
 801a374:	4570      	cmp	r0, lr
 801a376:	f280 81e1 	bge.w	801a73c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801a37a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a37c:	b212      	sxth	r2, r2
 801a37e:	fb00 5002 	mla	r0, r0, r2, r5
 801a382:	fa1f fe81 	uxth.w	lr, r1
 801a386:	eb03 0a00 	add.w	sl, r3, r0
 801a38a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801a38e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801a392:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801a396:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801a39a:	b29b      	uxth	r3, r3
 801a39c:	f1bc 0f00 	cmp.w	ip, #0
 801a3a0:	f000 8179 	beq.w	801a696 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 801a3a4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801a3a8:	940a      	str	r4, [sp, #40]	; 0x28
 801a3aa:	eb0a 0b02 	add.w	fp, sl, r2
 801a3ae:	fa1f fa8c 	uxth.w	sl, ip
 801a3b2:	fb0a fe0e 	mul.w	lr, sl, lr
 801a3b6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801a3ba:	fa1f fa8a 	uxth.w	sl, sl
 801a3be:	eba5 050e 	sub.w	r5, r5, lr
 801a3c2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801a3c6:	940b      	str	r4, [sp, #44]	; 0x2c
 801a3c8:	eba3 030a 	sub.w	r3, r3, sl
 801a3cc:	b2ad      	uxth	r5, r5
 801a3ce:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801a3d0:	b29b      	uxth	r3, r3
 801a3d2:	fb08 f505 	mul.w	r5, r8, r5
 801a3d6:	fb09 5303 	mla	r3, r9, r3, r5
 801a3da:	fb0a 3304 	mla	r3, sl, r4, r3
 801a3de:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a3e0:	fb0e 3304 	mla	r3, lr, r4, r3
 801a3e4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a3e8:	2b00      	cmp	r3, #0
 801a3ea:	f000 80cf 	beq.w	801a58c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801a3ee:	9c08      	ldr	r4, [sp, #32]
 801a3f0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a3f4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801a3f8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801a3fc:	f000 8150 	beq.w	801a6a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 801a400:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801a404:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801a408:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a40c:	fb09 f000 	mul.w	r0, r9, r0
 801a410:	fb0a fe0e 	mul.w	lr, sl, lr
 801a414:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801a418:	f100 0b20 	add.w	fp, r0, #32
 801a41c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801a420:	44ce      	add	lr, r9
 801a422:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801a426:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a42a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801a42e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a432:	ea4e 0909 	orr.w	r9, lr, r9
 801a436:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801a43a:	8868      	ldrh	r0, [r5, #2]
 801a43c:	d019      	beq.n	801a472 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801a43e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801a442:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801a446:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a44a:	fb08 f800 	mul.w	r8, r8, r0
 801a44e:	fb0a fe0e 	mul.w	lr, sl, lr
 801a452:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801a456:	f108 0b20 	add.w	fp, r8, #32
 801a45a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801a45e:	4486      	add	lr, r0
 801a460:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801a464:	0a00      	lsrs	r0, r0, #8
 801a466:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801a46a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a46e:	ea4e 0000 	orr.w	r0, lr, r0
 801a472:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801a476:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801a47a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801a47e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801a482:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801a486:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a48a:	ea4e 0909 	orr.w	r9, lr, r9
 801a48e:	ea4a 0000 	orr.w	r0, sl, r0
 801a492:	f1bc 0f00 	cmp.w	ip, #0
 801a496:	f000 8105 	beq.w	801a6a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 801a49a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801a49e:	3a01      	subs	r2, #1
 801a4a0:	0052      	lsls	r2, r2, #1
 801a4a2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801a4a4:	3202      	adds	r2, #2
 801a4a6:	2cff      	cmp	r4, #255	; 0xff
 801a4a8:	eb05 0e02 	add.w	lr, r5, r2
 801a4ac:	5aaa      	ldrh	r2, [r5, r2]
 801a4ae:	d018      	beq.n	801a4e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801a4b0:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801a4b4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a4b8:	fb04 fa02 	mul.w	sl, r4, r2
 801a4bc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a4c0:	fb08 f805 	mul.w	r8, r8, r5
 801a4c4:	f10a 0520 	add.w	r5, sl, #32
 801a4c8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801a4cc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801a4d0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801a4d4:	4442      	add	r2, r8
 801a4d6:	0a2d      	lsrs	r5, r5, #8
 801a4d8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801a4dc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a4e0:	432a      	orrs	r2, r5
 801a4e2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a4e4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801a4e8:	2cff      	cmp	r4, #255	; 0xff
 801a4ea:	d01a      	beq.n	801a522 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801a4ec:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801a4f0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a4f4:	fb04 fa05 	mul.w	sl, r4, r5
 801a4f8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a4fc:	fb08 f80e 	mul.w	r8, r8, lr
 801a500:	f10a 0e20 	add.w	lr, sl, #32
 801a504:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801a508:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801a50c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801a510:	4445      	add	r5, r8
 801a512:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a516:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801a51a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801a51e:	ea45 050e 	orr.w	r5, r5, lr
 801a522:	fb1c fe01 	smulbb	lr, ip, r1
 801a526:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801a52a:	f1cc 0810 	rsb	r8, ip, #16
 801a52e:	eba8 0801 	sub.w	r8, r8, r1
 801a532:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801a536:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801a53a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801a53e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801a542:	4341      	muls	r1, r0
 801a544:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801a548:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a54c:	ea4a 0202 	orr.w	r2, sl, r2
 801a550:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801a554:	fb09 1108 	mla	r1, r9, r8, r1
 801a558:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a55c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801a560:	fb0c 1102 	mla	r1, ip, r2, r1
 801a564:	ea4b 0505 	orr.w	r5, fp, r5
 801a568:	fb0e 1e05 	mla	lr, lr, r5, r1
 801a56c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801a570:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801a574:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a578:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801a57c:	ea42 0e0e 	orr.w	lr, r2, lr
 801a580:	fa1f f28e 	uxth.w	r2, lr
 801a584:	2bff      	cmp	r3, #255	; 0xff
 801a586:	f040 80a1 	bne.w	801a6cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x444>
 801a58a:	803a      	strh	r2, [r7, #0]
 801a58c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a58e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801a590:	4413      	add	r3, r2
 801a592:	9325      	str	r3, [sp, #148]	; 0x94
 801a594:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a596:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a598:	441a      	add	r2, r3
 801a59a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a59c:	9226      	str	r2, [sp, #152]	; 0x98
 801a59e:	3b01      	subs	r3, #1
 801a5a0:	3702      	adds	r7, #2
 801a5a2:	930f      	str	r3, [sp, #60]	; 0x3c
 801a5a4:	e6c9      	b.n	801a33a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a5a6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a5a8:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 801a5aa:	9c26      	ldr	r4, [sp, #152]	; 0x98
 801a5ac:	4433      	add	r3, r6
 801a5ae:	9325      	str	r3, [sp, #148]	; 0x94
 801a5b0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a5b2:	441c      	add	r4, r3
 801a5b4:	9b06      	ldr	r3, [sp, #24]
 801a5b6:	9426      	str	r4, [sp, #152]	; 0x98
 801a5b8:	3b01      	subs	r3, #1
 801a5ba:	9306      	str	r3, [sp, #24]
 801a5bc:	9b07      	ldr	r3, [sp, #28]
 801a5be:	3302      	adds	r3, #2
 801a5c0:	9307      	str	r3, [sp, #28]
 801a5c2:	e698      	b.n	801a2f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a5c4:	d028      	beq.n	801a618 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801a5c6:	9b06      	ldr	r3, [sp, #24]
 801a5c8:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801a5ca:	9d25      	ldr	r5, [sp, #148]	; 0x94
 801a5cc:	3b01      	subs	r3, #1
 801a5ce:	fb00 5003 	mla	r0, r0, r3, r5
 801a5d2:	1400      	asrs	r0, r0, #16
 801a5d4:	f53f aeac 	bmi.w	801a330 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a5d8:	3901      	subs	r1, #1
 801a5da:	4288      	cmp	r0, r1
 801a5dc:	f6bf aea8 	bge.w	801a330 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a5e0:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801a5e2:	9826      	ldr	r0, [sp, #152]	; 0x98
 801a5e4:	fb01 0303 	mla	r3, r1, r3, r0
 801a5e8:	141b      	asrs	r3, r3, #16
 801a5ea:	f53f aea1 	bmi.w	801a330 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a5ee:	3a01      	subs	r2, #1
 801a5f0:	4293      	cmp	r3, r2
 801a5f2:	f6bf ae9d 	bge.w	801a330 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a5f6:	9b06      	ldr	r3, [sp, #24]
 801a5f8:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801a5fc:	930f      	str	r3, [sp, #60]	; 0x3c
 801a5fe:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801a602:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a604:	2b00      	cmp	r3, #0
 801a606:	f300 80b6 	bgt.w	801a776 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801a60a:	9b06      	ldr	r3, [sp, #24]
 801a60c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a610:	9b07      	ldr	r3, [sp, #28]
 801a612:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801a616:	9307      	str	r3, [sp, #28]
 801a618:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a61a:	2b00      	cmp	r3, #0
 801a61c:	f340 8218 	ble.w	801aa50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 801a620:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a624:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a628:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a62c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a62e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a632:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a636:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a63a:	eef0 6a48 	vmov.f32	s13, s16
 801a63e:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a642:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a646:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a64a:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801a64e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a652:	eef0 6a68 	vmov.f32	s13, s17
 801a656:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a65a:	ee18 2a10 	vmov	r2, s16
 801a65e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a662:	fb92 f3f3 	sdiv	r3, r2, r3
 801a666:	ee18 2a90 	vmov	r2, s17
 801a66a:	9327      	str	r3, [sp, #156]	; 0x9c
 801a66c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a66e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a672:	9328      	str	r3, [sp, #160]	; 0xa0
 801a674:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a676:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a678:	3b01      	subs	r3, #1
 801a67a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a67e:	930e      	str	r3, [sp, #56]	; 0x38
 801a680:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a682:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 801a686:	bf08      	it	eq
 801a688:	4613      	moveq	r3, r2
 801a68a:	9306      	str	r3, [sp, #24]
 801a68c:	eef0 8a67 	vmov.f32	s17, s15
 801a690:	eeb0 8a47 	vmov.f32	s16, s14
 801a694:	e621      	b.n	801a2da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a696:	fb08 f505 	mul.w	r5, r8, r5
 801a69a:	fb09 5303 	mla	r3, r9, r3, r5
 801a69e:	e6a1      	b.n	801a3e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801a6a0:	4681      	mov	r9, r0
 801a6a2:	e6c8      	b.n	801a436 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a6a4:	f1c1 0210 	rsb	r2, r1, #16
 801a6a8:	4341      	muls	r1, r0
 801a6aa:	fb09 1902 	mla	r9, r9, r2, r1
 801a6ae:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801a6b2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801a6b6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a6ba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a6be:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801a6c2:	ea42 0909 	orr.w	r9, r2, r9
 801a6c6:	fa1f f289 	uxth.w	r2, r9
 801a6ca:	e75b      	b.n	801a584 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801a6cc:	f8b7 c000 	ldrh.w	ip, [r7]
 801a6d0:	43db      	mvns	r3, r3
 801a6d2:	ea4f 202c 	mov.w	r0, ip, asr #8
 801a6d6:	fa5f fe83 	uxtb.w	lr, r3
 801a6da:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a6de:	fb00 f00e 	mul.w	r0, r0, lr
 801a6e2:	1c41      	adds	r1, r0, #1
 801a6e4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801a6e8:	1211      	asrs	r1, r2, #8
 801a6ea:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801a6ee:	f021 0107 	bic.w	r1, r1, #7
 801a6f2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801a6f6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a6fa:	48d8      	ldr	r0, [pc, #864]	; (801aa5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 801a6fc:	fb05 f50e 	mul.w	r5, r5, lr
 801a700:	b2c9      	uxtb	r1, r1
 801a702:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801a706:	1c69      	adds	r1, r5, #1
 801a708:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801a70c:	10d1      	asrs	r1, r2, #3
 801a70e:	f021 0103 	bic.w	r1, r1, #3
 801a712:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801a716:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801a71a:	b2db      	uxtb	r3, r3
 801a71c:	00c9      	lsls	r1, r1, #3
 801a71e:	fb03 f30e 	mul.w	r3, r3, lr
 801a722:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a726:	4301      	orrs	r1, r0
 801a728:	1c58      	adds	r0, r3, #1
 801a72a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801a72e:	00d2      	lsls	r2, r2, #3
 801a730:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a734:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a738:	430a      	orrs	r2, r1
 801a73a:	e726      	b.n	801a58a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801a73c:	f115 0e01 	adds.w	lr, r5, #1
 801a740:	f53f af24 	bmi.w	801a58c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801a744:	4572      	cmp	r2, lr
 801a746:	f6ff af21 	blt.w	801a58c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801a74a:	f110 0e01 	adds.w	lr, r0, #1
 801a74e:	f53f af1d 	bmi.w	801a58c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801a752:	4573      	cmp	r3, lr
 801a754:	f6ff af1a 	blt.w	801a58c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801a758:	b21b      	sxth	r3, r3
 801a75a:	b212      	sxth	r2, r2
 801a75c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801a760:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801a764:	9301      	str	r3, [sp, #4]
 801a766:	9200      	str	r2, [sp, #0]
 801a768:	4639      	mov	r1, r7
 801a76a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801a76e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a770:	f7ff fbf4 	bl	8019f5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801a774:	e70a      	b.n	801a58c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801a776:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a778:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a77c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a77e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801a782:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a784:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a788:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a78a:	141f      	asrs	r7, r3, #16
 801a78c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a78e:	141b      	asrs	r3, r3, #16
 801a790:	fb01 3707 	mla	r7, r1, r7, r3
 801a794:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a796:	fa1f fc82 	uxth.w	ip, r2
 801a79a:	eb03 0a07 	add.w	sl, r3, r7
 801a79e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801a7a2:	f813 9007 	ldrb.w	r9, [r3, r7]
 801a7a6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801a7aa:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801a7ae:	b29b      	uxth	r3, r3
 801a7b0:	2d00      	cmp	r5, #0
 801a7b2:	f000 80fe 	beq.w	801a9b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72a>
 801a7b6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801a7ba:	940c      	str	r4, [sp, #48]	; 0x30
 801a7bc:	eb0a 0b01 	add.w	fp, sl, r1
 801a7c0:	fa1f fa85 	uxth.w	sl, r5
 801a7c4:	fb0a fc0c 	mul.w	ip, sl, ip
 801a7c8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801a7cc:	fa1f fa8a 	uxth.w	sl, sl
 801a7d0:	eba0 000c 	sub.w	r0, r0, ip
 801a7d4:	eba3 030a 	sub.w	r3, r3, sl
 801a7d8:	b280      	uxth	r0, r0
 801a7da:	fb08 f000 	mul.w	r0, r8, r0
 801a7de:	b29b      	uxth	r3, r3
 801a7e0:	fb09 0303 	mla	r3, r9, r3, r0
 801a7e4:	980c      	ldr	r0, [sp, #48]	; 0x30
 801a7e6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801a7ea:	940d      	str	r4, [sp, #52]	; 0x34
 801a7ec:	fb0a 3300 	mla	r3, sl, r0, r3
 801a7f0:	fb0c 3304 	mla	r3, ip, r4, r3
 801a7f4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a7f8:	2b00      	cmp	r3, #0
 801a7fa:	f000 80cc 	beq.w	801a996 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 801a7fe:	9808      	ldr	r0, [sp, #32]
 801a800:	9c08      	ldr	r4, [sp, #32]
 801a802:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a806:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801a80a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801a80e:	f000 80d5 	beq.w	801a9bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 801a812:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801a816:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801a81a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801a81e:	fb09 f707 	mul.w	r7, r9, r7
 801a822:	fb0a fc0c 	mul.w	ip, sl, ip
 801a826:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801a82a:	f107 0b20 	add.w	fp, r7, #32
 801a82e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801a832:	44cc      	add	ip, r9
 801a834:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801a838:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a83c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801a840:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a844:	ea4c 0909 	orr.w	r9, ip, r9
 801a848:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801a84c:	8847      	ldrh	r7, [r0, #2]
 801a84e:	d019      	beq.n	801a884 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801a850:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801a854:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801a858:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801a85c:	fb08 f807 	mul.w	r8, r8, r7
 801a860:	fb0a fc0c 	mul.w	ip, sl, ip
 801a864:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801a868:	f108 0b20 	add.w	fp, r8, #32
 801a86c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801a870:	44bc      	add	ip, r7
 801a872:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801a876:	0a3f      	lsrs	r7, r7, #8
 801a878:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801a87c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801a880:	ea4c 0707 	orr.w	r7, ip, r7
 801a884:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801a888:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801a88c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801a890:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801a894:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801a898:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801a89c:	ea4c 0909 	orr.w	r9, ip, r9
 801a8a0:	ea4a 0707 	orr.w	r7, sl, r7
 801a8a4:	2d00      	cmp	r5, #0
 801a8a6:	f000 808b 	beq.w	801a9c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x738>
 801a8aa:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801a8ae:	3901      	subs	r1, #1
 801a8b0:	0049      	lsls	r1, r1, #1
 801a8b2:	3102      	adds	r1, #2
 801a8b4:	eb00 0c01 	add.w	ip, r0, r1
 801a8b8:	5a41      	ldrh	r1, [r0, r1]
 801a8ba:	980c      	ldr	r0, [sp, #48]	; 0x30
 801a8bc:	28ff      	cmp	r0, #255	; 0xff
 801a8be:	d019      	beq.n	801a8f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801a8c0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801a8c2:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801a8c6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a8ca:	fb04 fa01 	mul.w	sl, r4, r1
 801a8ce:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a8d2:	fb08 f800 	mul.w	r8, r8, r0
 801a8d6:	f10a 0020 	add.w	r0, sl, #32
 801a8da:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801a8de:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801a8e2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801a8e6:	4441      	add	r1, r8
 801a8e8:	0a00      	lsrs	r0, r0, #8
 801a8ea:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801a8ee:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a8f2:	4301      	orrs	r1, r0
 801a8f4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a8f6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801a8fa:	2cff      	cmp	r4, #255	; 0xff
 801a8fc:	d01a      	beq.n	801a934 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801a8fe:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801a902:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a906:	fb04 fa00 	mul.w	sl, r4, r0
 801a90a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a90e:	fb08 f80c 	mul.w	r8, r8, ip
 801a912:	f10a 0c20 	add.w	ip, sl, #32
 801a916:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801a91a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801a91e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801a922:	4440      	add	r0, r8
 801a924:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a928:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801a92c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801a930:	ea40 000c 	orr.w	r0, r0, ip
 801a934:	fb15 fc02 	smulbb	ip, r5, r2
 801a938:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801a93c:	f1c5 0810 	rsb	r8, r5, #16
 801a940:	eba8 0802 	sub.w	r8, r8, r2
 801a944:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801a948:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801a94c:	437a      	muls	r2, r7
 801a94e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801a952:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801a956:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801a95a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a95e:	fb09 2208 	mla	r2, r9, r8, r2
 801a962:	ea4a 0101 	orr.w	r1, sl, r1
 801a966:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801a96a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a96e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a972:	fb05 2201 	mla	r2, r5, r1, r2
 801a976:	ea4b 0000 	orr.w	r0, fp, r0
 801a97a:	fb0c 2200 	mla	r2, ip, r0, r2
 801a97e:	0d57      	lsrs	r7, r2, #21
 801a980:	0952      	lsrs	r2, r2, #5
 801a982:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801a986:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a98a:	433a      	orrs	r2, r7
 801a98c:	2bff      	cmp	r3, #255	; 0xff
 801a98e:	b292      	uxth	r2, r2
 801a990:	d127      	bne.n	801a9e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801a992:	f8ae 2000 	strh.w	r2, [lr]
 801a996:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a998:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801a99a:	4413      	add	r3, r2
 801a99c:	9325      	str	r3, [sp, #148]	; 0x94
 801a99e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a9a0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a9a2:	441a      	add	r2, r3
 801a9a4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a9a6:	9226      	str	r2, [sp, #152]	; 0x98
 801a9a8:	3b01      	subs	r3, #1
 801a9aa:	f10e 0e02 	add.w	lr, lr, #2
 801a9ae:	930f      	str	r3, [sp, #60]	; 0x3c
 801a9b0:	e627      	b.n	801a602 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801a9b2:	fb08 f000 	mul.w	r0, r8, r0
 801a9b6:	fb09 0303 	mla	r3, r9, r3, r0
 801a9ba:	e71b      	b.n	801a7f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801a9bc:	46b9      	mov	r9, r7
 801a9be:	e743      	b.n	801a848 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801a9c0:	f1c2 0110 	rsb	r1, r2, #16
 801a9c4:	437a      	muls	r2, r7
 801a9c6:	fb09 2901 	mla	r9, r9, r1, r2
 801a9ca:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801a9ce:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801a9d2:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801a9d6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a9da:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a9de:	4302      	orrs	r2, r0
 801a9e0:	e7d4      	b.n	801a98c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801a9e2:	f8be 7000 	ldrh.w	r7, [lr]
 801a9e6:	4c1d      	ldr	r4, [pc, #116]	; (801aa5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 801a9e8:	43db      	mvns	r3, r3
 801a9ea:	1238      	asrs	r0, r7, #8
 801a9ec:	fa5f fc83 	uxtb.w	ip, r3
 801a9f0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a9f4:	10fd      	asrs	r5, r7, #3
 801a9f6:	fb00 f00c 	mul.w	r0, r0, ip
 801a9fa:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a9fe:	fb05 f10c 	mul.w	r1, r5, ip
 801aa02:	1c45      	adds	r5, r0, #1
 801aa04:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801aa08:	1215      	asrs	r5, r2, #8
 801aa0a:	f025 0507 	bic.w	r5, r5, #7
 801aa0e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801aa12:	1c4d      	adds	r5, r1, #1
 801aa14:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801aa18:	10d1      	asrs	r1, r2, #3
 801aa1a:	f021 0103 	bic.w	r1, r1, #3
 801aa1e:	00fb      	lsls	r3, r7, #3
 801aa20:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801aa24:	b2db      	uxtb	r3, r3
 801aa26:	b2c0      	uxtb	r0, r0
 801aa28:	00c9      	lsls	r1, r1, #3
 801aa2a:	fb03 f30c 	mul.w	r3, r3, ip
 801aa2e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801aa32:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801aa36:	4308      	orrs	r0, r1
 801aa38:	1c59      	adds	r1, r3, #1
 801aa3a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801aa3e:	00d2      	lsls	r2, r2, #3
 801aa40:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801aa44:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801aa48:	4318      	orrs	r0, r3
 801aa4a:	f8ae 0000 	strh.w	r0, [lr]
 801aa4e:	e7a2      	b.n	801a996 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 801aa50:	b013      	add	sp, #76	; 0x4c
 801aa52:	ecbd 8b08 	vpop	{d8-d11}
 801aa56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aa5a:	bf00      	nop
 801aa5c:	fffff800 	.word	0xfffff800

0801aa60 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801aa60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801aa64:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 801aa68:	fb0c 4e03 	mla	lr, ip, r3, r4
 801aa6c:	f1bc 0f00 	cmp.w	ip, #0
 801aa70:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801aa74:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 801aa78:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 801aa7c:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 801aa80:	8808      	ldrh	r0, [r1, #0]
 801aa82:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 801aa86:	db2f      	blt.n	801aae8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 801aa88:	45e2      	cmp	sl, ip
 801aa8a:	dd2d      	ble.n	801aae8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 801aa8c:	2c00      	cmp	r4, #0
 801aa8e:	db29      	blt.n	801aae4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 801aa90:	42a3      	cmp	r3, r4
 801aa92:	dd27      	ble.n	801aae4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 801aa94:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 801aa98:	1c62      	adds	r2, r4, #1
 801aa9a:	d428      	bmi.n	801aaee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801aa9c:	4293      	cmp	r3, r2
 801aa9e:	dd26      	ble.n	801aaee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801aaa0:	b32f      	cbz	r7, 801aaee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801aaa2:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 801aaa6:	f11c 0c01 	adds.w	ip, ip, #1
 801aaaa:	d424      	bmi.n	801aaf6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 801aaac:	45e2      	cmp	sl, ip
 801aaae:	dd22      	ble.n	801aaf6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 801aab0:	2e00      	cmp	r6, #0
 801aab2:	f000 809d 	beq.w	801abf0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x190>
 801aab6:	2c00      	cmp	r4, #0
 801aab8:	db1b      	blt.n	801aaf2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 801aaba:	42a3      	cmp	r3, r4
 801aabc:	dd19      	ble.n	801aaf2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 801aabe:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 801aac2:	3401      	adds	r4, #1
 801aac4:	d41a      	bmi.n	801aafc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 801aac6:	42a3      	cmp	r3, r4
 801aac8:	dd18      	ble.n	801aafc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 801aaca:	b1cf      	cbz	r7, 801ab00 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 801aacc:	3301      	adds	r3, #1
 801aace:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 801aad2:	2f0f      	cmp	r7, #15
 801aad4:	d915      	bls.n	801ab02 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 801aad6:	4b49      	ldr	r3, [pc, #292]	; (801abfc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 801aad8:	4a49      	ldr	r2, [pc, #292]	; (801ac00 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 801aada:	484a      	ldr	r0, [pc, #296]	; (801ac04 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 801aadc:	f240 11db 	movw	r1, #475	; 0x1db
 801aae0:	f002 ffa4 	bl	801da2c <__assert_func>
 801aae4:	4681      	mov	r9, r0
 801aae6:	e7d7      	b.n	801aa98 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 801aae8:	4686      	mov	lr, r0
 801aaea:	4681      	mov	r9, r0
 801aaec:	e7db      	b.n	801aaa6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 801aaee:	4686      	mov	lr, r0
 801aaf0:	e7d9      	b.n	801aaa6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 801aaf2:	4684      	mov	ip, r0
 801aaf4:	e7e5      	b.n	801aac2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 801aaf6:	4603      	mov	r3, r0
 801aaf8:	4684      	mov	ip, r0
 801aafa:	e7ea      	b.n	801aad2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 801aafc:	4603      	mov	r3, r0
 801aafe:	e7e8      	b.n	801aad2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 801ab00:	4603      	mov	r3, r0
 801ab02:	2e0f      	cmp	r6, #15
 801ab04:	d8e7      	bhi.n	801aad6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 801ab06:	ea4f 4409 	mov.w	r4, r9, lsl #16
 801ab0a:	fb17 f806 	smulbb	r8, r7, r6
 801ab0e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801ab12:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 801ab16:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801ab1a:	ea4f 08e8 	mov.w	r8, r8, asr #3
 801ab1e:	ea44 0909 	orr.w	r9, r4, r9
 801ab22:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ab26:	f1c6 0410 	rsb	r4, r6, #16
 801ab2a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ab2e:	1be4      	subs	r4, r4, r7
 801ab30:	041a      	lsls	r2, r3, #16
 801ab32:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 801ab36:	ea4a 0e0e 	orr.w	lr, sl, lr
 801ab3a:	fb07 fe0e 	mul.w	lr, r7, lr
 801ab3e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ab42:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801ab46:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ab4a:	fb04 e409 	mla	r4, r4, r9, lr
 801ab4e:	4313      	orrs	r3, r2
 801ab50:	ea4f 420c 	mov.w	r2, ip, lsl #16
 801ab54:	fb08 4303 	mla	r3, r8, r3, r4
 801ab58:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ab5c:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 801ab60:	4322      	orrs	r2, r4
 801ab62:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 801ab66:	fb06 3202 	mla	r2, r6, r2, r3
 801ab6a:	0d53      	lsrs	r3, r2, #21
 801ab6c:	0952      	lsrs	r2, r2, #5
 801ab6e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ab72:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ab76:	431a      	orrs	r2, r3
 801ab78:	b293      	uxth	r3, r2
 801ab7a:	b2af      	uxth	r7, r5
 801ab7c:	1202      	asrs	r2, r0, #8
 801ab7e:	43ed      	mvns	r5, r5
 801ab80:	b2ed      	uxtb	r5, r5
 801ab82:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801ab86:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801ab8a:	fb12 f205 	smulbb	r2, r2, r5
 801ab8e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ab92:	fb0c 2c07 	mla	ip, ip, r7, r2
 801ab96:	00dc      	lsls	r4, r3, #3
 801ab98:	10da      	asrs	r2, r3, #3
 801ab9a:	10c6      	asrs	r6, r0, #3
 801ab9c:	00c3      	lsls	r3, r0, #3
 801ab9e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801aba2:	b2db      	uxtb	r3, r3
 801aba4:	fb16 f605 	smulbb	r6, r6, r5
 801aba8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801abac:	b2e4      	uxtb	r4, r4
 801abae:	fb13 f305 	smulbb	r3, r3, r5
 801abb2:	fa1f fc8c 	uxth.w	ip, ip
 801abb6:	fb02 6207 	mla	r2, r2, r7, r6
 801abba:	fb04 3307 	mla	r3, r4, r7, r3
 801abbe:	b296      	uxth	r6, r2
 801abc0:	b29a      	uxth	r2, r3
 801abc2:	f10c 0301 	add.w	r3, ip, #1
 801abc6:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801abca:	1c53      	adds	r3, r2, #1
 801abcc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801abd0:	1c72      	adds	r2, r6, #1
 801abd2:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 801abd6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801abda:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801abde:	0952      	lsrs	r2, r2, #5
 801abe0:	ea43 030c 	orr.w	r3, r3, ip
 801abe4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801abe8:	4313      	orrs	r3, r2
 801abea:	800b      	strh	r3, [r1, #0]
 801abec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801abf0:	2f0f      	cmp	r7, #15
 801abf2:	f63f af70 	bhi.w	801aad6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 801abf6:	4603      	mov	r3, r0
 801abf8:	4684      	mov	ip, r0
 801abfa:	e784      	b.n	801ab06 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 801abfc:	08021c76 	.word	0x08021c76
 801ac00:	0802224f 	.word	0x0802224f
 801ac04:	08021c43 	.word	0x08021c43

0801ac08 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ac08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac0c:	ed2d 8b08 	vpush	{d8-d11}
 801ac10:	b093      	sub	sp, #76	; 0x4c
 801ac12:	461d      	mov	r5, r3
 801ac14:	9210      	str	r2, [sp, #64]	; 0x40
 801ac16:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ac18:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 801ac1c:	920b      	str	r2, [sp, #44]	; 0x2c
 801ac1e:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 801ac22:	910a      	str	r1, [sp, #40]	; 0x28
 801ac24:	6859      	ldr	r1, [r3, #4]
 801ac26:	681b      	ldr	r3, [r3, #0]
 801ac28:	9011      	str	r0, [sp, #68]	; 0x44
 801ac2a:	fb01 2707 	mla	r7, r1, r7, r2
 801ac2e:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801ac32:	9307      	str	r3, [sp, #28]
 801ac34:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ac36:	681b      	ldr	r3, [r3, #0]
 801ac38:	9309      	str	r3, [sp, #36]	; 0x24
 801ac3a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ac3c:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801ac40:	43db      	mvns	r3, r3
 801ac42:	b2db      	uxtb	r3, r3
 801ac44:	eeb0 aa40 	vmov.f32	s20, s0
 801ac48:	eef0 9a60 	vmov.f32	s19, s1
 801ac4c:	eeb0 9a41 	vmov.f32	s18, s2
 801ac50:	eeb0 8a62 	vmov.f32	s16, s5
 801ac54:	eef0 8a43 	vmov.f32	s17, s6
 801ac58:	eef0 ba44 	vmov.f32	s23, s8
 801ac5c:	eeb0 ba64 	vmov.f32	s22, s9
 801ac60:	eef0 aa45 	vmov.f32	s21, s10
 801ac64:	9308      	str	r3, [sp, #32]
 801ac66:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ac68:	2b00      	cmp	r3, #0
 801ac6a:	dc03      	bgt.n	801ac74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ac6c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ac6e:	2b00      	cmp	r3, #0
 801ac70:	f340 8203 	ble.w	801b07a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801ac74:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ac76:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ac7a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ac7e:	1e48      	subs	r0, r1, #1
 801ac80:	f102 3cff 	add.w	ip, r2, #4294967295
 801ac84:	2d00      	cmp	r5, #0
 801ac86:	f340 80da 	ble.w	801ae3e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801ac8a:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ac8e:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ac92:	d406      	bmi.n	801aca2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ac94:	4586      	cmp	lr, r0
 801ac96:	da04      	bge.n	801aca2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ac98:	2b00      	cmp	r3, #0
 801ac9a:	db02      	blt.n	801aca2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ac9c:	4563      	cmp	r3, ip
 801ac9e:	f2c0 80cf 	blt.w	801ae40 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801aca2:	f11e 0e01 	adds.w	lr, lr, #1
 801aca6:	f100 80c1 	bmi.w	801ae2c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801acaa:	4571      	cmp	r1, lr
 801acac:	f2c0 80be 	blt.w	801ae2c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801acb0:	3301      	adds	r3, #1
 801acb2:	f100 80bb 	bmi.w	801ae2c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801acb6:	429a      	cmp	r2, r3
 801acb8:	f2c0 80b8 	blt.w	801ae2c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801acbc:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801acc0:	46a9      	mov	r9, r5
 801acc2:	f1b9 0f00 	cmp.w	r9, #0
 801acc6:	f340 80d8 	ble.w	801ae7a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801acca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801accc:	1421      	asrs	r1, r4, #16
 801acce:	ea4f 4026 	mov.w	r0, r6, asr #16
 801acd2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801acd6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801acda:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801acde:	f100 8111 	bmi.w	801af04 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801ace2:	f10e 3aff 	add.w	sl, lr, #4294967295
 801ace6:	4551      	cmp	r1, sl
 801ace8:	f280 810c 	bge.w	801af04 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801acec:	2800      	cmp	r0, #0
 801acee:	f2c0 8109 	blt.w	801af04 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801acf2:	f103 3aff 	add.w	sl, r3, #4294967295
 801acf6:	4550      	cmp	r0, sl
 801acf8:	f280 8104 	bge.w	801af04 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801acfc:	fa0f f38e 	sxth.w	r3, lr
 801ad00:	fb00 1103 	mla	r1, r0, r3, r1
 801ad04:	9809      	ldr	r0, [sp, #36]	; 0x24
 801ad06:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801ad0a:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801ad0e:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801ad12:	f1bc 0f00 	cmp.w	ip, #0
 801ad16:	d007      	beq.n	801ad28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 801ad18:	005b      	lsls	r3, r3, #1
 801ad1a:	eb0a 0003 	add.w	r0, sl, r3
 801ad1e:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801ad22:	930c      	str	r3, [sp, #48]	; 0x30
 801ad24:	8843      	ldrh	r3, [r0, #2]
 801ad26:	930d      	str	r3, [sp, #52]	; 0x34
 801ad28:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801ad2c:	fb12 f30c 	smulbb	r3, r2, ip
 801ad30:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ad34:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801ad38:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ad3c:	10db      	asrs	r3, r3, #3
 801ad3e:	ea40 000e 	orr.w	r0, r0, lr
 801ad42:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ad46:	f1cc 0e10 	rsb	lr, ip, #16
 801ad4a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ad4e:	ebae 0e02 	sub.w	lr, lr, r2
 801ad52:	ea4a 0101 	orr.w	r1, sl, r1
 801ad56:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801ad5a:	4351      	muls	r1, r2
 801ad5c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801ad5e:	9f08      	ldr	r7, [sp, #32]
 801ad60:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801ad64:	fb0e 1e00 	mla	lr, lr, r0, r1
 801ad68:	0410      	lsls	r0, r2, #16
 801ad6a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ad6e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ad72:	4310      	orrs	r0, r2
 801ad74:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ad76:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ad78:	0412      	lsls	r2, r2, #16
 801ad7a:	fb03 e000 	mla	r0, r3, r0, lr
 801ad7e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ad82:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801ad86:	ea42 020e 	orr.w	r2, r2, lr
 801ad8a:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801ad8e:	fb03 0302 	mla	r3, r3, r2, r0
 801ad92:	0d5a      	lsrs	r2, r3, #21
 801ad94:	095b      	lsrs	r3, r3, #5
 801ad96:	f8b8 0000 	ldrh.w	r0, [r8]
 801ad9a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ad9e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ada2:	4313      	orrs	r3, r2
 801ada4:	b29b      	uxth	r3, r3
 801ada6:	1201      	asrs	r1, r0, #8
 801ada8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801adac:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801adb0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801adb4:	fb11 f107 	smulbb	r1, r1, r7
 801adb8:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801adbc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801adc0:	00c0      	lsls	r0, r0, #3
 801adc2:	fb0c 1c02 	mla	ip, ip, r2, r1
 801adc6:	b2c0      	uxtb	r0, r0
 801adc8:	10d9      	asrs	r1, r3, #3
 801adca:	00db      	lsls	r3, r3, #3
 801adcc:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801add0:	b2db      	uxtb	r3, r3
 801add2:	fb10 f007 	smulbb	r0, r0, r7
 801add6:	fa1f fc8c 	uxth.w	ip, ip
 801adda:	fb03 0302 	mla	r3, r3, r2, r0
 801adde:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ade2:	fb1e fe07 	smulbb	lr, lr, r7
 801ade6:	fb01 e102 	mla	r1, r1, r2, lr
 801adea:	b29a      	uxth	r2, r3
 801adec:	f10c 0301 	add.w	r3, ip, #1
 801adf0:	b289      	uxth	r1, r1
 801adf2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801adf6:	1c53      	adds	r3, r2, #1
 801adf8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801adfc:	1c4a      	adds	r2, r1, #1
 801adfe:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ae02:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ae06:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ae0a:	0949      	lsrs	r1, r1, #5
 801ae0c:	ea43 030c 	orr.w	r3, r3, ip
 801ae10:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ae14:	430b      	orrs	r3, r1
 801ae16:	f8a8 3000 	strh.w	r3, [r8]
 801ae1a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ae1c:	441c      	add	r4, r3
 801ae1e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ae20:	f108 0802 	add.w	r8, r8, #2
 801ae24:	441e      	add	r6, r3
 801ae26:	f109 39ff 	add.w	r9, r9, #4294967295
 801ae2a:	e74a      	b.n	801acc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 801ae2c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ae2e:	441c      	add	r4, r3
 801ae30:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ae32:	441e      	add	r6, r3
 801ae34:	9b07      	ldr	r3, [sp, #28]
 801ae36:	3302      	adds	r3, #2
 801ae38:	3d01      	subs	r5, #1
 801ae3a:	9307      	str	r3, [sp, #28]
 801ae3c:	e722      	b.n	801ac84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ae3e:	d022      	beq.n	801ae86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 801ae40:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801ae42:	1e6b      	subs	r3, r5, #1
 801ae44:	fb00 4003 	mla	r0, r0, r3, r4
 801ae48:	1400      	asrs	r0, r0, #16
 801ae4a:	f53f af37 	bmi.w	801acbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801ae4e:	3901      	subs	r1, #1
 801ae50:	4288      	cmp	r0, r1
 801ae52:	f6bf af33 	bge.w	801acbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801ae56:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801ae58:	fb01 6303 	mla	r3, r1, r3, r6
 801ae5c:	141b      	asrs	r3, r3, #16
 801ae5e:	f53f af2d 	bmi.w	801acbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801ae62:	3a01      	subs	r2, #1
 801ae64:	4293      	cmp	r3, r2
 801ae66:	f6bf af29 	bge.w	801acbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801ae6a:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801ae6e:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801ae72:	46a8      	mov	r8, r5
 801ae74:	f1b8 0f00 	cmp.w	r8, #0
 801ae78:	dc5e      	bgt.n	801af38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801ae7a:	9b07      	ldr	r3, [sp, #28]
 801ae7c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801ae80:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801ae84:	9307      	str	r3, [sp, #28]
 801ae86:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ae88:	2b00      	cmp	r3, #0
 801ae8a:	f340 80f6 	ble.w	801b07a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801ae8e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801ae92:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ae96:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801ae9a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ae9c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801aea0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801aea4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801aea8:	eef0 6a48 	vmov.f32	s13, s16
 801aeac:	ee69 7a27 	vmul.f32	s15, s18, s15
 801aeb0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801aeb4:	ee37 8a48 	vsub.f32	s16, s14, s16
 801aeb8:	ee16 4a90 	vmov	r4, s13
 801aebc:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801aec0:	eef0 6a68 	vmov.f32	s13, s17
 801aec4:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801aec8:	ee18 2a10 	vmov	r2, s16
 801aecc:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801aed0:	fb92 f3f3 	sdiv	r3, r2, r3
 801aed4:	ee18 2a90 	vmov	r2, s17
 801aed8:	9327      	str	r3, [sp, #156]	; 0x9c
 801aeda:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801aedc:	fb92 f3f3 	sdiv	r3, r2, r3
 801aee0:	9328      	str	r3, [sp, #160]	; 0xa0
 801aee2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801aee4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801aee6:	3b01      	subs	r3, #1
 801aee8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801aeec:	930a      	str	r3, [sp, #40]	; 0x28
 801aeee:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801aef0:	ee16 6a90 	vmov	r6, s13
 801aef4:	bf14      	ite	ne
 801aef6:	461d      	movne	r5, r3
 801aef8:	4615      	moveq	r5, r2
 801aefa:	eef0 8a67 	vmov.f32	s17, s15
 801aefe:	eeb0 8a47 	vmov.f32	s16, s14
 801af02:	e6b0      	b.n	801ac66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801af04:	f111 0a01 	adds.w	sl, r1, #1
 801af08:	d487      	bmi.n	801ae1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801af0a:	45d6      	cmp	lr, sl
 801af0c:	db85      	blt.n	801ae1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801af0e:	f110 0a01 	adds.w	sl, r0, #1
 801af12:	d482      	bmi.n	801ae1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801af14:	4553      	cmp	r3, sl
 801af16:	db80      	blt.n	801ae1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801af18:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801af1a:	9101      	str	r1, [sp, #4]
 801af1c:	b21b      	sxth	r3, r3
 801af1e:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801af22:	9300      	str	r3, [sp, #0]
 801af24:	e9cd c704 	strd	ip, r7, [sp, #16]
 801af28:	fa0f f38e 	sxth.w	r3, lr
 801af2c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801af2e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801af30:	4641      	mov	r1, r8
 801af32:	f7ff fd95 	bl	801aa60 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801af36:	e770      	b.n	801ae1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801af38:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801af3a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801af3c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801af40:	1430      	asrs	r0, r6, #16
 801af42:	1423      	asrs	r3, r4, #16
 801af44:	fb01 3000 	mla	r0, r1, r0, r3
 801af48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801af4a:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801af4e:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801af52:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801af56:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801af5a:	8858      	ldrh	r0, [r3, #2]
 801af5c:	f1be 0f00 	cmp.w	lr, #0
 801af60:	d00b      	beq.n	801af7a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801af62:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801af66:	3901      	subs	r1, #1
 801af68:	0049      	lsls	r1, r1, #1
 801af6a:	3102      	adds	r1, #2
 801af6c:	eb03 0b01 	add.w	fp, r3, r1
 801af70:	5a5b      	ldrh	r3, [r3, r1]
 801af72:	930e      	str	r3, [sp, #56]	; 0x38
 801af74:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801af78:	930f      	str	r3, [sp, #60]	; 0x3c
 801af7a:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801af7e:	fb12 f30e 	smulbb	r3, r2, lr
 801af82:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801af86:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801af8a:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801af8e:	10db      	asrs	r3, r3, #3
 801af90:	ea41 010c 	orr.w	r1, r1, ip
 801af94:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801af98:	f1ce 0c10 	rsb	ip, lr, #16
 801af9c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801afa0:	ebac 0c02 	sub.w	ip, ip, r2
 801afa4:	ea4b 0000 	orr.w	r0, fp, r0
 801afa8:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801afac:	4350      	muls	r0, r2
 801afae:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801afb0:	9f08      	ldr	r7, [sp, #32]
 801afb2:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801afb6:	fb0c 0c01 	mla	ip, ip, r1, r0
 801afba:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801afbe:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801afc2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801afc4:	980e      	ldr	r0, [sp, #56]	; 0x38
 801afc6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801afca:	0412      	lsls	r2, r2, #16
 801afcc:	ea4b 0101 	orr.w	r1, fp, r1
 801afd0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801afd4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801afd8:	fb03 c101 	mla	r1, r3, r1, ip
 801afdc:	4302      	orrs	r2, r0
 801afde:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801afe2:	fb03 1202 	mla	r2, r3, r2, r1
 801afe6:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801afea:	0952      	lsrs	r2, r2, #5
 801afec:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801aff0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801aff4:	f8b9 2000 	ldrh.w	r2, [r9]
 801aff8:	ea4b 0303 	orr.w	r3, fp, r3
 801affc:	b29b      	uxth	r3, r3
 801affe:	1211      	asrs	r1, r2, #8
 801b000:	1218      	asrs	r0, r3, #8
 801b002:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b006:	fb11 f107 	smulbb	r1, r1, r7
 801b00a:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801b00e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b012:	00d2      	lsls	r2, r2, #3
 801b014:	fb00 100a 	mla	r0, r0, sl, r1
 801b018:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b01c:	10d9      	asrs	r1, r3, #3
 801b01e:	b2d2      	uxtb	r2, r2
 801b020:	00db      	lsls	r3, r3, #3
 801b022:	fb1c fc07 	smulbb	ip, ip, r7
 801b026:	fb12 f207 	smulbb	r2, r2, r7
 801b02a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b02e:	b2db      	uxtb	r3, r3
 801b030:	b280      	uxth	r0, r0
 801b032:	fb01 c10a 	mla	r1, r1, sl, ip
 801b036:	fb03 230a 	mla	r3, r3, sl, r2
 801b03a:	b29b      	uxth	r3, r3
 801b03c:	b289      	uxth	r1, r1
 801b03e:	1c42      	adds	r2, r0, #1
 801b040:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b044:	f101 0c01 	add.w	ip, r1, #1
 801b048:	1c5a      	adds	r2, r3, #1
 801b04a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801b04e:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801b052:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b054:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801b058:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b05c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801b060:	4310      	orrs	r0, r2
 801b062:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801b066:	441c      	add	r4, r3
 801b068:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b06a:	ea40 000c 	orr.w	r0, r0, ip
 801b06e:	f829 0b02 	strh.w	r0, [r9], #2
 801b072:	441e      	add	r6, r3
 801b074:	f108 38ff 	add.w	r8, r8, #4294967295
 801b078:	e6fc      	b.n	801ae74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801b07a:	b013      	add	sp, #76	; 0x4c
 801b07c:	ecbd 8b08 	vpop	{d8-d11}
 801b080:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b084 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801b084:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b088:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 801b08c:	fb06 5c03 	mla	ip, r6, r3, r5
 801b090:	2e00      	cmp	r6, #0
 801b092:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 801b096:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 801b09a:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 801b09e:	8808      	ldrh	r0, [r1, #0]
 801b0a0:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801b0a4:	db2e      	blt.n	801b104 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 801b0a6:	45b0      	cmp	r8, r6
 801b0a8:	dd2c      	ble.n	801b104 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 801b0aa:	2d00      	cmp	r5, #0
 801b0ac:	db28      	blt.n	801b100 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801b0ae:	42ab      	cmp	r3, r5
 801b0b0:	dd26      	ble.n	801b100 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801b0b2:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 801b0b6:	1c6a      	adds	r2, r5, #1
 801b0b8:	d427      	bmi.n	801b10a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801b0ba:	4293      	cmp	r3, r2
 801b0bc:	dd25      	ble.n	801b10a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801b0be:	b324      	cbz	r4, 801b10a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801b0c0:	f8be 2002 	ldrh.w	r2, [lr, #2]
 801b0c4:	3601      	adds	r6, #1
 801b0c6:	d424      	bmi.n	801b112 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 801b0c8:	45b0      	cmp	r8, r6
 801b0ca:	dd22      	ble.n	801b112 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 801b0cc:	b31f      	cbz	r7, 801b116 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 801b0ce:	2d00      	cmp	r5, #0
 801b0d0:	db1d      	blt.n	801b10e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 801b0d2:	42ab      	cmp	r3, r5
 801b0d4:	dd1b      	ble.n	801b10e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 801b0d6:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 801b0da:	3501      	adds	r5, #1
 801b0dc:	d405      	bmi.n	801b0ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801b0de:	42ab      	cmp	r3, r5
 801b0e0:	dd03      	ble.n	801b0ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801b0e2:	b124      	cbz	r4, 801b0ee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 801b0e4:	3301      	adds	r3, #1
 801b0e6:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 801b0ea:	2c0f      	cmp	r4, #15
 801b0ec:	d801      	bhi.n	801b0f2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801b0ee:	2f0f      	cmp	r7, #15
 801b0f0:	d914      	bls.n	801b11c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 801b0f2:	4b27      	ldr	r3, [pc, #156]	; (801b190 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 801b0f4:	4a27      	ldr	r2, [pc, #156]	; (801b194 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 801b0f6:	4828      	ldr	r0, [pc, #160]	; (801b198 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 801b0f8:	f240 11db 	movw	r1, #475	; 0x1db
 801b0fc:	f002 fc96 	bl	801da2c <__assert_func>
 801b100:	4684      	mov	ip, r0
 801b102:	e7d8      	b.n	801b0b6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 801b104:	4602      	mov	r2, r0
 801b106:	4684      	mov	ip, r0
 801b108:	e7dc      	b.n	801b0c4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801b10a:	4602      	mov	r2, r0
 801b10c:	e7da      	b.n	801b0c4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801b10e:	4606      	mov	r6, r0
 801b110:	e7e3      	b.n	801b0da <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 801b112:	4606      	mov	r6, r0
 801b114:	e7e9      	b.n	801b0ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801b116:	2c0f      	cmp	r4, #15
 801b118:	d8eb      	bhi.n	801b0f2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801b11a:	4606      	mov	r6, r0
 801b11c:	ea4f 450c 	mov.w	r5, ip, lsl #16
 801b120:	fb14 f307 	smulbb	r3, r4, r7
 801b124:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 801b128:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 801b12c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801b130:	10db      	asrs	r3, r3, #3
 801b132:	ea45 0c0c 	orr.w	ip, r5, ip
 801b136:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801b13a:	f1c7 0510 	rsb	r5, r7, #16
 801b13e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b142:	1b2d      	subs	r5, r5, r4
 801b144:	ea4e 0202 	orr.w	r2, lr, r2
 801b148:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 801b14c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801b150:	4354      	muls	r4, r2
 801b152:	fb05 450c 	mla	r5, r5, ip, r4
 801b156:	0404      	lsls	r4, r0, #16
 801b158:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801b15c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801b160:	4320      	orrs	r0, r4
 801b162:	fb03 5400 	mla	r4, r3, r0, r5
 801b166:	0430      	lsls	r0, r6, #16
 801b168:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801b16c:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 801b170:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 801b174:	4330      	orrs	r0, r6
 801b176:	fb07 4000 	mla	r0, r7, r0, r4
 801b17a:	0d43      	lsrs	r3, r0, #21
 801b17c:	0940      	lsrs	r0, r0, #5
 801b17e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b182:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801b186:	4318      	orrs	r0, r3
 801b188:	8008      	strh	r0, [r1, #0]
 801b18a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b18e:	bf00      	nop
 801b190:	08021c76 	.word	0x08021c76
 801b194:	0802224f 	.word	0x0802224f
 801b198:	08021c43 	.word	0x08021c43

0801b19c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b19c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b1a0:	ed2d 8b08 	vpush	{d8-d11}
 801b1a4:	b08f      	sub	sp, #60	; 0x3c
 801b1a6:	461d      	mov	r5, r3
 801b1a8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b1aa:	920c      	str	r2, [sp, #48]	; 0x30
 801b1ac:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 801b1b0:	9107      	str	r1, [sp, #28]
 801b1b2:	6859      	ldr	r1, [r3, #4]
 801b1b4:	681b      	ldr	r3, [r3, #0]
 801b1b6:	900d      	str	r0, [sp, #52]	; 0x34
 801b1b8:	fb01 2707 	mla	r7, r1, r7, r2
 801b1bc:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801b1c0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b1c2:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801b1c6:	f8d3 8000 	ldr.w	r8, [r3]
 801b1ca:	eeb0 aa40 	vmov.f32	s20, s0
 801b1ce:	eef0 9a60 	vmov.f32	s19, s1
 801b1d2:	eeb0 9a41 	vmov.f32	s18, s2
 801b1d6:	eeb0 8a62 	vmov.f32	s16, s5
 801b1da:	eef0 8a43 	vmov.f32	s17, s6
 801b1de:	eef0 ba44 	vmov.f32	s23, s8
 801b1e2:	eeb0 ba64 	vmov.f32	s22, s9
 801b1e6:	eef0 aa45 	vmov.f32	s21, s10
 801b1ea:	9b07      	ldr	r3, [sp, #28]
 801b1ec:	2b00      	cmp	r3, #0
 801b1ee:	dc03      	bgt.n	801b1f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801b1f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b1f2:	2b00      	cmp	r3, #0
 801b1f4:	f340 8181 	ble.w	801b4fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801b1f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b1fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b1fe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b202:	1e48      	subs	r0, r1, #1
 801b204:	f102 3cff 	add.w	ip, r2, #4294967295
 801b208:	2d00      	cmp	r5, #0
 801b20a:	f340 809b 	ble.w	801b344 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 801b20e:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801b212:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b216:	d406      	bmi.n	801b226 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801b218:	4586      	cmp	lr, r0
 801b21a:	da04      	bge.n	801b226 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801b21c:	2b00      	cmp	r3, #0
 801b21e:	db02      	blt.n	801b226 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801b220:	4563      	cmp	r3, ip
 801b222:	f2c0 8090 	blt.w	801b346 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801b226:	f11e 0e01 	adds.w	lr, lr, #1
 801b22a:	f100 8084 	bmi.w	801b336 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801b22e:	4571      	cmp	r1, lr
 801b230:	f2c0 8081 	blt.w	801b336 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801b234:	3301      	adds	r3, #1
 801b236:	d47e      	bmi.n	801b336 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801b238:	429a      	cmp	r2, r3
 801b23a:	db7c      	blt.n	801b336 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801b23c:	46aa      	mov	sl, r5
 801b23e:	46b9      	mov	r9, r7
 801b240:	f1ba 0f00 	cmp.w	sl, #0
 801b244:	f340 8099 	ble.w	801b37a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 801b248:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b24a:	1421      	asrs	r1, r4, #16
 801b24c:	ea4f 4026 	mov.w	r0, r6, asr #16
 801b250:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b254:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801b258:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801b25c:	f100 80d0 	bmi.w	801b400 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801b260:	f10e 3bff 	add.w	fp, lr, #4294967295
 801b264:	4559      	cmp	r1, fp
 801b266:	f280 80cb 	bge.w	801b400 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801b26a:	2800      	cmp	r0, #0
 801b26c:	f2c0 80c8 	blt.w	801b400 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801b270:	f103 3bff 	add.w	fp, r3, #4294967295
 801b274:	4558      	cmp	r0, fp
 801b276:	f280 80c3 	bge.w	801b400 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801b27a:	fa0f fe8e 	sxth.w	lr, lr
 801b27e:	fb00 110e 	mla	r1, r0, lr, r1
 801b282:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801b286:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801b28a:	8841      	ldrh	r1, [r0, #2]
 801b28c:	f1bc 0f00 	cmp.w	ip, #0
 801b290:	d00b      	beq.n	801b2aa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801b292:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801b296:	3b01      	subs	r3, #1
 801b298:	005b      	lsls	r3, r3, #1
 801b29a:	3302      	adds	r3, #2
 801b29c:	eb00 0e03 	add.w	lr, r0, r3
 801b2a0:	5ac3      	ldrh	r3, [r0, r3]
 801b2a2:	9308      	str	r3, [sp, #32]
 801b2a4:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801b2a8:	9309      	str	r3, [sp, #36]	; 0x24
 801b2aa:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801b2ae:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801b2b2:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801b2b6:	ea40 000b 	orr.w	r0, r0, fp
 801b2ba:	fb12 f30c 	smulbb	r3, r2, ip
 801b2be:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801b2c2:	10db      	asrs	r3, r3, #3
 801b2c4:	f1cc 0e10 	rsb	lr, ip, #16
 801b2c8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801b2cc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801b2d0:	ebae 0e02 	sub.w	lr, lr, r2
 801b2d4:	ea4b 0101 	orr.w	r1, fp, r1
 801b2d8:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801b2dc:	4351      	muls	r1, r2
 801b2de:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b2e0:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801b2e4:	fb0e 1e00 	mla	lr, lr, r0, r1
 801b2e8:	0410      	lsls	r0, r2, #16
 801b2ea:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801b2ee:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b2f2:	4310      	orrs	r0, r2
 801b2f4:	9a08      	ldr	r2, [sp, #32]
 801b2f6:	9908      	ldr	r1, [sp, #32]
 801b2f8:	0412      	lsls	r2, r2, #16
 801b2fa:	fb03 e000 	mla	r0, r3, r0, lr
 801b2fe:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801b302:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801b306:	ea42 020e 	orr.w	r2, r2, lr
 801b30a:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801b30e:	fb03 0302 	mla	r3, r3, r2, r0
 801b312:	0d5a      	lsrs	r2, r3, #21
 801b314:	095b      	lsrs	r3, r3, #5
 801b316:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b31a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801b31e:	4313      	orrs	r3, r2
 801b320:	f8a9 3000 	strh.w	r3, [r9]
 801b324:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801b326:	441c      	add	r4, r3
 801b328:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b32a:	f109 0902 	add.w	r9, r9, #2
 801b32e:	441e      	add	r6, r3
 801b330:	f10a 3aff 	add.w	sl, sl, #4294967295
 801b334:	e784      	b.n	801b240 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801b336:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801b338:	441c      	add	r4, r3
 801b33a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b33c:	3d01      	subs	r5, #1
 801b33e:	441e      	add	r6, r3
 801b340:	3702      	adds	r7, #2
 801b342:	e761      	b.n	801b208 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b344:	d01d      	beq.n	801b382 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801b346:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801b348:	1e6b      	subs	r3, r5, #1
 801b34a:	fb00 4003 	mla	r0, r0, r3, r4
 801b34e:	1400      	asrs	r0, r0, #16
 801b350:	f53f af74 	bmi.w	801b23c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b354:	3901      	subs	r1, #1
 801b356:	4288      	cmp	r0, r1
 801b358:	f6bf af70 	bge.w	801b23c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b35c:	9924      	ldr	r1, [sp, #144]	; 0x90
 801b35e:	fb01 6303 	mla	r3, r1, r3, r6
 801b362:	141b      	asrs	r3, r3, #16
 801b364:	f53f af6a 	bmi.w	801b23c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b368:	3a01      	subs	r2, #1
 801b36a:	4293      	cmp	r3, r2
 801b36c:	f6bf af66 	bge.w	801b23c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b370:	46a9      	mov	r9, r5
 801b372:	46ba      	mov	sl, r7
 801b374:	f1b9 0f00 	cmp.w	r9, #0
 801b378:	dc5a      	bgt.n	801b430 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b37a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801b37e:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801b382:	9b07      	ldr	r3, [sp, #28]
 801b384:	2b00      	cmp	r3, #0
 801b386:	f340 80b8 	ble.w	801b4fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801b38a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801b38e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b392:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801b396:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b398:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801b39c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801b3a0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b3a4:	eef0 6a48 	vmov.f32	s13, s16
 801b3a8:	ee69 7a27 	vmul.f32	s15, s18, s15
 801b3ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b3b0:	ee37 8a48 	vsub.f32	s16, s14, s16
 801b3b4:	ee16 4a90 	vmov	r4, s13
 801b3b8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801b3bc:	eef0 6a68 	vmov.f32	s13, s17
 801b3c0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801b3c4:	ee18 2a10 	vmov	r2, s16
 801b3c8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801b3cc:	fb92 f3f3 	sdiv	r3, r2, r3
 801b3d0:	ee18 2a90 	vmov	r2, s17
 801b3d4:	9323      	str	r3, [sp, #140]	; 0x8c
 801b3d6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b3d8:	fb92 f3f3 	sdiv	r3, r2, r3
 801b3dc:	9324      	str	r3, [sp, #144]	; 0x90
 801b3de:	9b07      	ldr	r3, [sp, #28]
 801b3e0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b3e2:	3b01      	subs	r3, #1
 801b3e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b3e8:	9307      	str	r3, [sp, #28]
 801b3ea:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b3ec:	ee16 6a90 	vmov	r6, s13
 801b3f0:	bf14      	ite	ne
 801b3f2:	461d      	movne	r5, r3
 801b3f4:	4615      	moveq	r5, r2
 801b3f6:	eef0 8a67 	vmov.f32	s17, s15
 801b3fa:	eeb0 8a47 	vmov.f32	s16, s14
 801b3fe:	e6f4      	b.n	801b1ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801b400:	f111 0b01 	adds.w	fp, r1, #1
 801b404:	d48e      	bmi.n	801b324 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801b406:	45de      	cmp	lr, fp
 801b408:	db8c      	blt.n	801b324 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801b40a:	f110 0b01 	adds.w	fp, r0, #1
 801b40e:	d489      	bmi.n	801b324 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801b410:	455b      	cmp	r3, fp
 801b412:	db87      	blt.n	801b324 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801b414:	b21b      	sxth	r3, r3
 801b416:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801b41a:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801b41e:	9300      	str	r3, [sp, #0]
 801b420:	4642      	mov	r2, r8
 801b422:	fa0f f38e 	sxth.w	r3, lr
 801b426:	4649      	mov	r1, r9
 801b428:	980d      	ldr	r0, [sp, #52]	; 0x34
 801b42a:	f7ff fe2b 	bl	801b084 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801b42e:	e779      	b.n	801b324 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801b430:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b432:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801b436:	1420      	asrs	r0, r4, #16
 801b438:	1431      	asrs	r1, r6, #16
 801b43a:	fb03 0101 	mla	r1, r3, r1, r0
 801b43e:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801b442:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801b446:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801b44a:	8841      	ldrh	r1, [r0, #2]
 801b44c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b450:	f1be 0f00 	cmp.w	lr, #0
 801b454:	d00b      	beq.n	801b46e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 801b456:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801b45a:	3b01      	subs	r3, #1
 801b45c:	005b      	lsls	r3, r3, #1
 801b45e:	3302      	adds	r3, #2
 801b460:	eb00 0b03 	add.w	fp, r0, r3
 801b464:	5ac3      	ldrh	r3, [r0, r3]
 801b466:	930a      	str	r3, [sp, #40]	; 0x28
 801b468:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801b46c:	930b      	str	r3, [sp, #44]	; 0x2c
 801b46e:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801b472:	fb12 f30e 	smulbb	r3, r2, lr
 801b476:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801b47a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801b47e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801b482:	10db      	asrs	r3, r3, #3
 801b484:	ea40 000c 	orr.w	r0, r0, ip
 801b488:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801b48c:	f1ce 0c10 	rsb	ip, lr, #16
 801b490:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801b494:	ebac 0c02 	sub.w	ip, ip, r2
 801b498:	ea4b 0101 	orr.w	r1, fp, r1
 801b49c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801b4a0:	4351      	muls	r1, r2
 801b4a2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b4a4:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801b4a8:	fb0c 1c00 	mla	ip, ip, r0, r1
 801b4ac:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801b4b0:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801b4b4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b4b6:	990a      	ldr	r1, [sp, #40]	; 0x28
 801b4b8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801b4bc:	0412      	lsls	r2, r2, #16
 801b4be:	ea4b 0000 	orr.w	r0, fp, r0
 801b4c2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801b4c6:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801b4ca:	fb03 c000 	mla	r0, r3, r0, ip
 801b4ce:	ea42 0b0b 	orr.w	fp, r2, fp
 801b4d2:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801b4d6:	fb03 000b 	mla	r0, r3, fp, r0
 801b4da:	0d43      	lsrs	r3, r0, #21
 801b4dc:	0940      	lsrs	r0, r0, #5
 801b4de:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b4e2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801b4e6:	4318      	orrs	r0, r3
 801b4e8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801b4ea:	f82a 0b02 	strh.w	r0, [sl], #2
 801b4ee:	441c      	add	r4, r3
 801b4f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b4f2:	f109 39ff 	add.w	r9, r9, #4294967295
 801b4f6:	441e      	add	r6, r3
 801b4f8:	e73c      	b.n	801b374 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801b4fa:	b00f      	add	sp, #60	; 0x3c
 801b4fc:	ecbd 8b08 	vpop	{d8-d11}
 801b500:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b504 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801b504:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b508:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 801b50c:	fb04 5603 	mla	r6, r4, r3, r5
 801b510:	2c00      	cmp	r4, #0
 801b512:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801b516:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 801b51a:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 801b51e:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 801b522:	db36      	blt.n	801b592 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 801b524:	45a6      	cmp	lr, r4
 801b526:	dd34      	ble.n	801b592 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 801b528:	2d00      	cmp	r5, #0
 801b52a:	db30      	blt.n	801b58e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 801b52c:	42ab      	cmp	r3, r5
 801b52e:	dd2e      	ble.n	801b58e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 801b530:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 801b534:	1c6e      	adds	r6, r5, #1
 801b536:	d42f      	bmi.n	801b598 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 801b538:	42b3      	cmp	r3, r6
 801b53a:	dd2d      	ble.n	801b598 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 801b53c:	b370      	cbz	r0, 801b59c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 801b53e:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801b542:	3401      	adds	r4, #1
 801b544:	d42e      	bmi.n	801b5a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 801b546:	45a6      	cmp	lr, r4
 801b548:	dd2c      	ble.n	801b5a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 801b54a:	b377      	cbz	r7, 801b5aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa6>
 801b54c:	2d00      	cmp	r5, #0
 801b54e:	db27      	blt.n	801b5a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 801b550:	42ab      	cmp	r3, r5
 801b552:	dd25      	ble.n	801b5a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 801b554:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801b558:	3501      	adds	r5, #1
 801b55a:	d429      	bmi.n	801b5b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 801b55c:	42ab      	cmp	r3, r5
 801b55e:	dd27      	ble.n	801b5b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 801b560:	b340      	cbz	r0, 801b5b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 801b562:	3301      	adds	r3, #1
 801b564:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 801b568:	280f      	cmp	r0, #15
 801b56a:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801b56e:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801b572:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801b576:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801b57a:	d801      	bhi.n	801b580 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x7c>
 801b57c:	2f0f      	cmp	r7, #15
 801b57e:	d91b      	bls.n	801b5b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 801b580:	4b8d      	ldr	r3, [pc, #564]	; (801b7b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 801b582:	4a8e      	ldr	r2, [pc, #568]	; (801b7bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 801b584:	488e      	ldr	r0, [pc, #568]	; (801b7c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 801b586:	f240 11f9 	movw	r1, #505	; 0x1f9
 801b58a:	f002 fa4f 	bl	801da2c <__assert_func>
 801b58e:	2200      	movs	r2, #0
 801b590:	e7d0      	b.n	801b534 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x30>
 801b592:	2600      	movs	r6, #0
 801b594:	4632      	mov	r2, r6
 801b596:	e7d4      	b.n	801b542 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 801b598:	2600      	movs	r6, #0
 801b59a:	e7d2      	b.n	801b542 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 801b59c:	4606      	mov	r6, r0
 801b59e:	e7d0      	b.n	801b542 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 801b5a0:	2400      	movs	r4, #0
 801b5a2:	e7d9      	b.n	801b558 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x54>
 801b5a4:	2300      	movs	r3, #0
 801b5a6:	461c      	mov	r4, r3
 801b5a8:	e7de      	b.n	801b568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 801b5aa:	463b      	mov	r3, r7
 801b5ac:	463c      	mov	r4, r7
 801b5ae:	e7db      	b.n	801b568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 801b5b0:	2300      	movs	r3, #0
 801b5b2:	e7d9      	b.n	801b568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 801b5b4:	4603      	mov	r3, r0
 801b5b6:	e7d7      	b.n	801b568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 801b5b8:	b280      	uxth	r0, r0
 801b5ba:	b2bf      	uxth	r7, r7
 801b5bc:	fb07 fe00 	mul.w	lr, r7, r0
 801b5c0:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801b5c4:	0100      	lsls	r0, r0, #4
 801b5c6:	eba0 0c0e 	sub.w	ip, r0, lr
 801b5ca:	b2bf      	uxth	r7, r7
 801b5cc:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801b5d0:	fa1f fc8c 	uxth.w	ip, ip
 801b5d4:	1bed      	subs	r5, r5, r7
 801b5d6:	b2ad      	uxth	r5, r5
 801b5d8:	fb0a f00c 	mul.w	r0, sl, ip
 801b5dc:	fb0b 0005 	mla	r0, fp, r5, r0
 801b5e0:	fb07 0009 	mla	r0, r7, r9, r0
 801b5e4:	fb0e 0008 	mla	r0, lr, r8, r0
 801b5e8:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801b5ec:	9001      	str	r0, [sp, #4]
 801b5ee:	2800      	cmp	r0, #0
 801b5f0:	f000 80de 	beq.w	801b7b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2ac>
 801b5f4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b5f8:	d018      	beq.n	801b62c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x128>
 801b5fa:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801b5fe:	fb0b f000 	mul.w	r0, fp, r0
 801b602:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b606:	fb0b fb02 	mul.w	fp, fp, r2
 801b60a:	0a02      	lsrs	r2, r0, #8
 801b60c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b610:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801b614:	4402      	add	r2, r0
 801b616:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801b61a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801b61e:	0a12      	lsrs	r2, r2, #8
 801b620:	0a00      	lsrs	r0, r0, #8
 801b622:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b626:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b62a:	4302      	orrs	r2, r0
 801b62c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801b630:	d01a      	beq.n	801b668 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x164>
 801b632:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 801b636:	fb0a f000 	mul.w	r0, sl, r0
 801b63a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b63e:	fb0a fa06 	mul.w	sl, sl, r6
 801b642:	0a06      	lsrs	r6, r0, #8
 801b644:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801b648:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801b64c:	4406      	add	r6, r0
 801b64e:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801b652:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 801b656:	0a36      	lsrs	r6, r6, #8
 801b658:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b65c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801b660:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b664:	ea46 060a 	orr.w	r6, r6, sl
 801b668:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b66c:	d01b      	beq.n	801b6a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1a2>
 801b66e:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801b672:	fb09 fa0a 	mul.w	sl, r9, sl
 801b676:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801b67a:	fb09 f004 	mul.w	r0, r9, r4
 801b67e:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801b682:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801b686:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b68a:	f500 7980 	add.w	r9, r0, #256	; 0x100
 801b68e:	4454      	add	r4, sl
 801b690:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 801b694:	0a24      	lsrs	r4, r4, #8
 801b696:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b69a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801b69e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b6a2:	ea44 0409 	orr.w	r4, r4, r9
 801b6a6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801b6aa:	d01b      	beq.n	801b6e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1e0>
 801b6ac:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801b6b0:	fb08 f909 	mul.w	r9, r8, r9
 801b6b4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b6b8:	fb08 f003 	mul.w	r0, r8, r3
 801b6bc:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801b6c0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b6c4:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801b6c8:	f500 7880 	add.w	r8, r0, #256	; 0x100
 801b6cc:	444b      	add	r3, r9
 801b6ce:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 801b6d2:	0a1b      	lsrs	r3, r3, #8
 801b6d4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801b6d8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b6dc:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801b6e0:	ea43 0308 	orr.w	r3, r3, r8
 801b6e4:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801b6e8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b6ec:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 801b6f0:	fb0c f808 	mul.w	r8, ip, r8
 801b6f4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b6f8:	fb0c f606 	mul.w	r6, ip, r6
 801b6fc:	fb05 8909 	mla	r9, r5, r9, r8
 801b700:	fb05 6502 	mla	r5, r5, r2, r6
 801b704:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801b708:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801b70c:	9a01      	ldr	r2, [sp, #4]
 801b70e:	8808      	ldrh	r0, [r1, #0]
 801b710:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801b714:	fb07 9908 	mla	r9, r7, r8, r9
 801b718:	fb07 5704 	mla	r7, r7, r4, r5
 801b71c:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 801b720:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b724:	b2b6      	uxth	r6, r6
 801b726:	fb0e 9808 	mla	r8, lr, r8, r9
 801b72a:	fb0e 7e03 	mla	lr, lr, r3, r7
 801b72e:	4372      	muls	r2, r6
 801b730:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801b734:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b738:	1c53      	adds	r3, r2, #1
 801b73a:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 801b73e:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801b742:	ea48 0e0e 	orr.w	lr, r8, lr
 801b746:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b74a:	1205      	asrs	r5, r0, #8
 801b74c:	ea4f 421e 	mov.w	r2, lr, lsr #16
 801b750:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801b754:	b2db      	uxtb	r3, r3
 801b756:	fb12 f206 	smulbb	r2, r2, r6
 801b75a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b75e:	fb05 2503 	mla	r5, r5, r3, r2
 801b762:	f3ce 2407 	ubfx	r4, lr, #8, #8
 801b766:	10c2      	asrs	r2, r0, #3
 801b768:	fa5f fe8e 	uxtb.w	lr, lr
 801b76c:	00c0      	lsls	r0, r0, #3
 801b76e:	fb14 f406 	smulbb	r4, r4, r6
 801b772:	b2c0      	uxtb	r0, r0
 801b774:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b778:	fb1e fe06 	smulbb	lr, lr, r6
 801b77c:	fb02 4203 	mla	r2, r2, r3, r4
 801b780:	b2ad      	uxth	r5, r5
 801b782:	fb00 e303 	mla	r3, r0, r3, lr
 801b786:	b298      	uxth	r0, r3
 801b788:	b294      	uxth	r4, r2
 801b78a:	1c6b      	adds	r3, r5, #1
 801b78c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b790:	1c62      	adds	r2, r4, #1
 801b792:	1c43      	adds	r3, r0, #1
 801b794:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b798:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801b79c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801b7a0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b7a4:	0952      	lsrs	r2, r2, #5
 801b7a6:	432b      	orrs	r3, r5
 801b7a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b7ac:	4313      	orrs	r3, r2
 801b7ae:	800b      	strh	r3, [r1, #0]
 801b7b0:	b003      	add	sp, #12
 801b7b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b7b6:	bf00      	nop
 801b7b8:	08021c76 	.word	0x08021c76
 801b7bc:	080221a6 	.word	0x080221a6
 801b7c0:	08021c43 	.word	0x08021c43

0801b7c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b7c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b7c8:	ed2d 8b08 	vpush	{d8-d11}
 801b7cc:	b09d      	sub	sp, #116	; 0x74
 801b7ce:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 801b7d2:	9219      	str	r2, [sp, #100]	; 0x64
 801b7d4:	9307      	str	r3, [sp, #28]
 801b7d6:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 801b7d8:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 801b7dc:	931a      	str	r3, [sp, #104]	; 0x68
 801b7de:	9117      	str	r1, [sp, #92]	; 0x5c
 801b7e0:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 801b7e4:	901b      	str	r0, [sp, #108]	; 0x6c
 801b7e6:	6850      	ldr	r0, [r2, #4]
 801b7e8:	6812      	ldr	r2, [r2, #0]
 801b7ea:	fb00 1303 	mla	r3, r0, r3, r1
 801b7ee:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b7f2:	930a      	str	r3, [sp, #40]	; 0x28
 801b7f4:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801b7f6:	681b      	ldr	r3, [r3, #0]
 801b7f8:	9310      	str	r3, [sp, #64]	; 0x40
 801b7fa:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801b7fe:	930b      	str	r3, [sp, #44]	; 0x2c
 801b800:	eeb0 aa40 	vmov.f32	s20, s0
 801b804:	eef0 9a60 	vmov.f32	s19, s1
 801b808:	eeb0 9a41 	vmov.f32	s18, s2
 801b80c:	eeb0 8a62 	vmov.f32	s16, s5
 801b810:	eef0 8a43 	vmov.f32	s17, s6
 801b814:	eef0 ba44 	vmov.f32	s23, s8
 801b818:	eeb0 ba64 	vmov.f32	s22, s9
 801b81c:	eef0 aa45 	vmov.f32	s21, s10
 801b820:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b822:	2b00      	cmp	r3, #0
 801b824:	dc03      	bgt.n	801b82e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801b826:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b828:	2b00      	cmp	r3, #0
 801b82a:	f340 8375 	ble.w	801bf18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 801b82e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801b830:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b834:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b838:	1e48      	subs	r0, r1, #1
 801b83a:	1e57      	subs	r7, r2, #1
 801b83c:	9b07      	ldr	r3, [sp, #28]
 801b83e:	2b00      	cmp	r3, #0
 801b840:	f340 818e 	ble.w	801bb60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801b844:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b848:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b84c:	d406      	bmi.n	801b85c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b84e:	4584      	cmp	ip, r0
 801b850:	da04      	bge.n	801b85c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b852:	2b00      	cmp	r3, #0
 801b854:	db02      	blt.n	801b85c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b856:	42bb      	cmp	r3, r7
 801b858:	f2c0 8183 	blt.w	801bb62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 801b85c:	f11c 0c01 	adds.w	ip, ip, #1
 801b860:	f100 8173 	bmi.w	801bb4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801b864:	4561      	cmp	r1, ip
 801b866:	f2c0 8170 	blt.w	801bb4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801b86a:	3301      	adds	r3, #1
 801b86c:	f100 816d 	bmi.w	801bb4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801b870:	429a      	cmp	r2, r3
 801b872:	f2c0 816a 	blt.w	801bb4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801b876:	9b07      	ldr	r3, [sp, #28]
 801b878:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b87a:	9318      	str	r3, [sp, #96]	; 0x60
 801b87c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b87e:	2b00      	cmp	r3, #0
 801b880:	f340 818c 	ble.w	801bb9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d8>
 801b884:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 801b886:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801b888:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801b88c:	689b      	ldr	r3, [r3, #8]
 801b88e:	1422      	asrs	r2, r4, #16
 801b890:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801b894:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801b898:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801b89c:	f100 81cd 	bmi.w	801bc3a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801b8a0:	f103 38ff 	add.w	r8, r3, #4294967295
 801b8a4:	4542      	cmp	r2, r8
 801b8a6:	f280 81c8 	bge.w	801bc3a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801b8aa:	f1bc 0f00 	cmp.w	ip, #0
 801b8ae:	f2c0 81c4 	blt.w	801bc3a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801b8b2:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b8b6:	45c4      	cmp	ip, r8
 801b8b8:	f280 81bf 	bge.w	801bc3a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801b8bc:	b21b      	sxth	r3, r3
 801b8be:	fb0c 2203 	mla	r2, ip, r3, r2
 801b8c2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b8c4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801b8c8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801b8cc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801b8d0:	2800      	cmp	r0, #0
 801b8d2:	f000 81a9 	beq.w	801bc28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 801b8d6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801b8da:	950c      	str	r5, [sp, #48]	; 0x30
 801b8dc:	0e2d      	lsrs	r5, r5, #24
 801b8de:	9513      	str	r5, [sp, #76]	; 0x4c
 801b8e0:	b181      	cbz	r1, 801b904 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801b8e2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801b8e6:	3b01      	subs	r3, #1
 801b8e8:	009b      	lsls	r3, r3, #2
 801b8ea:	3304      	adds	r3, #4
 801b8ec:	eb08 0c03 	add.w	ip, r8, r3
 801b8f0:	f858 3003 	ldr.w	r3, [r8, r3]
 801b8f4:	9308      	str	r3, [sp, #32]
 801b8f6:	0e1b      	lsrs	r3, r3, #24
 801b8f8:	9311      	str	r3, [sp, #68]	; 0x44
 801b8fa:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801b8fe:	930d      	str	r3, [sp, #52]	; 0x34
 801b900:	0e1b      	lsrs	r3, r3, #24
 801b902:	9314      	str	r3, [sp, #80]	; 0x50
 801b904:	b280      	uxth	r0, r0
 801b906:	b289      	uxth	r1, r1
 801b908:	fb00 f901 	mul.w	r9, r0, r1
 801b90c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b910:	0100      	lsls	r0, r0, #4
 801b912:	eba0 0809 	sub.w	r8, r0, r9
 801b916:	b289      	uxth	r1, r1
 801b918:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801b91c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b91e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b920:	fa1f f888 	uxth.w	r8, r8
 801b924:	1a5b      	subs	r3, r3, r1
 801b926:	b29b      	uxth	r3, r3
 801b928:	fb08 f000 	mul.w	r0, r8, r0
 801b92c:	fb03 000e 	mla	r0, r3, lr, r0
 801b930:	fb01 0005 	mla	r0, r1, r5, r0
 801b934:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b936:	fb09 0005 	mla	r0, r9, r5, r0
 801b93a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801b93e:	2800      	cmp	r0, #0
 801b940:	f000 80fa 	beq.w	801bb38 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801b944:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b948:	d01b      	beq.n	801b982 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 801b94a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801b94e:	fb0e fa0a 	mul.w	sl, lr, sl
 801b952:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b956:	fb0e fe02 	mul.w	lr, lr, r2
 801b95a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801b95e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b962:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b966:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b96a:	4452      	add	r2, sl
 801b96c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b970:	0a12      	lsrs	r2, r2, #8
 801b972:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b976:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b97a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b97e:	ea42 020c 	orr.w	r2, r2, ip
 801b982:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b984:	2dff      	cmp	r5, #255	; 0xff
 801b986:	d021      	beq.n	801b9cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801b988:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b98a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801b98e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b990:	fb05 fb0b 	mul.w	fp, r5, fp
 801b994:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b996:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b99a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b99c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b9a0:	fb05 fa0a 	mul.w	sl, r5, sl
 801b9a4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b9a8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b9ac:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b9b0:	44de      	add	lr, fp
 801b9b2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b9b6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b9ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b9be:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b9c2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b9c6:	ea4e 050a 	orr.w	r5, lr, sl
 801b9ca:	950c      	str	r5, [sp, #48]	; 0x30
 801b9cc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b9ce:	2dff      	cmp	r5, #255	; 0xff
 801b9d0:	d021      	beq.n	801ba16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801b9d2:	9d08      	ldr	r5, [sp, #32]
 801b9d4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801b9d8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b9da:	fb05 fb0b 	mul.w	fp, r5, fp
 801b9de:	9d08      	ldr	r5, [sp, #32]
 801b9e0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b9e4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b9e6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b9ea:	fb05 fa0a 	mul.w	sl, r5, sl
 801b9ee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b9f2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b9f6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b9fa:	44de      	add	lr, fp
 801b9fc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ba00:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ba04:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ba08:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ba0c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ba10:	ea4e 050a 	orr.w	r5, lr, sl
 801ba14:	9508      	str	r5, [sp, #32]
 801ba16:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ba18:	2dff      	cmp	r5, #255	; 0xff
 801ba1a:	d021      	beq.n	801ba60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801ba1c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ba1e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ba22:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ba24:	fb05 fb0b 	mul.w	fp, r5, fp
 801ba28:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ba2a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ba2e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ba30:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ba34:	fb05 fa0a 	mul.w	sl, r5, sl
 801ba38:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ba3c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ba40:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ba44:	44de      	add	lr, fp
 801ba46:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ba4a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ba4e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ba52:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ba56:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ba5a:	ea4e 050a 	orr.w	r5, lr, sl
 801ba5e:	950d      	str	r5, [sp, #52]	; 0x34
 801ba60:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ba62:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ba66:	9d08      	ldr	r5, [sp, #32]
 801ba68:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801ba6c:	fb08 fc0c 	mul.w	ip, r8, ip
 801ba70:	fb03 cc0e 	mla	ip, r3, lr, ip
 801ba74:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801ba78:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ba7a:	fb01 cc0e 	mla	ip, r1, lr, ip
 801ba7e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801ba82:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ba84:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ba88:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801ba8c:	fb08 f80e 	mul.w	r8, r8, lr
 801ba90:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ba94:	fb03 8202 	mla	r2, r3, r2, r8
 801ba98:	9b08      	ldr	r3, [sp, #32]
 801ba9a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ba9c:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801baa0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801baa2:	fb01 220a 	mla	r2, r1, sl, r2
 801baa6:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801baaa:	fb09 2901 	mla	r9, r9, r1, r2
 801baae:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801bab0:	883b      	ldrh	r3, [r7, #0]
 801bab2:	4342      	muls	r2, r0
 801bab4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bab8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801babc:	1c50      	adds	r0, r2, #1
 801babe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bac2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801bac6:	ea4c 0c09 	orr.w	ip, ip, r9
 801baca:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801bace:	1219      	asrs	r1, r3, #8
 801bad0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801bad4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801bad8:	b2c0      	uxtb	r0, r0
 801bada:	fb12 f205 	smulbb	r2, r2, r5
 801bade:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801bae2:	fb01 2100 	mla	r1, r1, r0, r2
 801bae6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801baea:	10da      	asrs	r2, r3, #3
 801baec:	fa5f fc8c 	uxtb.w	ip, ip
 801baf0:	00db      	lsls	r3, r3, #3
 801baf2:	fb1c fc05 	smulbb	ip, ip, r5
 801baf6:	b2db      	uxtb	r3, r3
 801baf8:	b289      	uxth	r1, r1
 801bafa:	fb03 c300 	mla	r3, r3, r0, ip
 801bafe:	fa1f fc83 	uxth.w	ip, r3
 801bb02:	1c4b      	adds	r3, r1, #1
 801bb04:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801bb08:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801bb0c:	fb1e fe05 	smulbb	lr, lr, r5
 801bb10:	f10c 0301 	add.w	r3, ip, #1
 801bb14:	fb02 e200 	mla	r2, r2, r0, lr
 801bb18:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801bb1c:	b292      	uxth	r2, r2
 801bb1e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801bb22:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801bb26:	430b      	orrs	r3, r1
 801bb28:	1c51      	adds	r1, r2, #1
 801bb2a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801bb2e:	0952      	lsrs	r2, r2, #5
 801bb30:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bb34:	4313      	orrs	r3, r2
 801bb36:	803b      	strh	r3, [r7, #0]
 801bb38:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801bb3a:	441c      	add	r4, r3
 801bb3c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801bb3e:	441e      	add	r6, r3
 801bb40:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801bb42:	3b01      	subs	r3, #1
 801bb44:	3702      	adds	r7, #2
 801bb46:	9318      	str	r3, [sp, #96]	; 0x60
 801bb48:	e698      	b.n	801b87c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801bb4a:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801bb4c:	441c      	add	r4, r3
 801bb4e:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801bb50:	441e      	add	r6, r3
 801bb52:	9b07      	ldr	r3, [sp, #28]
 801bb54:	3b01      	subs	r3, #1
 801bb56:	9307      	str	r3, [sp, #28]
 801bb58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bb5a:	3302      	adds	r3, #2
 801bb5c:	930a      	str	r3, [sp, #40]	; 0x28
 801bb5e:	e66d      	b.n	801b83c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801bb60:	d023      	beq.n	801bbaa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801bb62:	9b07      	ldr	r3, [sp, #28]
 801bb64:	9831      	ldr	r0, [sp, #196]	; 0xc4
 801bb66:	3b01      	subs	r3, #1
 801bb68:	fb00 4003 	mla	r0, r0, r3, r4
 801bb6c:	1400      	asrs	r0, r0, #16
 801bb6e:	f53f ae82 	bmi.w	801b876 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801bb72:	3901      	subs	r1, #1
 801bb74:	4288      	cmp	r0, r1
 801bb76:	f6bf ae7e 	bge.w	801b876 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801bb7a:	9932      	ldr	r1, [sp, #200]	; 0xc8
 801bb7c:	fb01 6303 	mla	r3, r1, r3, r6
 801bb80:	141b      	asrs	r3, r3, #16
 801bb82:	f53f ae78 	bmi.w	801b876 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801bb86:	3a01      	subs	r2, #1
 801bb88:	4293      	cmp	r3, r2
 801bb8a:	f6bf ae74 	bge.w	801b876 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801bb8e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801bb92:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801bb96:	f1bb 0f00 	cmp.w	fp, #0
 801bb9a:	dc6c      	bgt.n	801bc76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 801bb9c:	9b07      	ldr	r3, [sp, #28]
 801bb9e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801bba2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bba4:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801bba8:	930a      	str	r3, [sp, #40]	; 0x28
 801bbaa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801bbac:	2b00      	cmp	r3, #0
 801bbae:	f340 81b3 	ble.w	801bf18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 801bbb2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801bbb6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bbba:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801bbbe:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801bbc0:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801bbc4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801bbc8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801bbcc:	eef0 6a48 	vmov.f32	s13, s16
 801bbd0:	ee69 7a27 	vmul.f32	s15, s18, s15
 801bbd4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bbd8:	ee37 8a48 	vsub.f32	s16, s14, s16
 801bbdc:	ee16 4a90 	vmov	r4, s13
 801bbe0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801bbe4:	eef0 6a68 	vmov.f32	s13, s17
 801bbe8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801bbec:	ee18 2a10 	vmov	r2, s16
 801bbf0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801bbf4:	fb92 f3f3 	sdiv	r3, r2, r3
 801bbf8:	ee18 2a90 	vmov	r2, s17
 801bbfc:	9331      	str	r3, [sp, #196]	; 0xc4
 801bbfe:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801bc00:	fb92 f3f3 	sdiv	r3, r2, r3
 801bc04:	9332      	str	r3, [sp, #200]	; 0xc8
 801bc06:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801bc08:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801bc0a:	3b01      	subs	r3, #1
 801bc0c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bc10:	9317      	str	r3, [sp, #92]	; 0x5c
 801bc12:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801bc14:	bf08      	it	eq
 801bc16:	4613      	moveq	r3, r2
 801bc18:	ee16 6a90 	vmov	r6, s13
 801bc1c:	9307      	str	r3, [sp, #28]
 801bc1e:	eef0 8a67 	vmov.f32	s17, s15
 801bc22:	eeb0 8a47 	vmov.f32	s16, s14
 801bc26:	e5fb      	b.n	801b820 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801bc28:	2900      	cmp	r1, #0
 801bc2a:	f43f ae6b 	beq.w	801b904 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801bc2e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801bc32:	9308      	str	r3, [sp, #32]
 801bc34:	0e1b      	lsrs	r3, r3, #24
 801bc36:	9311      	str	r3, [sp, #68]	; 0x44
 801bc38:	e664      	b.n	801b904 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801bc3a:	f112 0801 	adds.w	r8, r2, #1
 801bc3e:	f53f af7b 	bmi.w	801bb38 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801bc42:	4543      	cmp	r3, r8
 801bc44:	f6ff af78 	blt.w	801bb38 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801bc48:	f11c 0801 	adds.w	r8, ip, #1
 801bc4c:	f53f af74 	bmi.w	801bb38 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801bc50:	45c6      	cmp	lr, r8
 801bc52:	f6ff af71 	blt.w	801bb38 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801bc56:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801bc58:	9201      	str	r2, [sp, #4]
 801bc5a:	fa0f f28e 	sxth.w	r2, lr
 801bc5e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801bc62:	e9cd c002 	strd	ip, r0, [sp, #8]
 801bc66:	9200      	str	r2, [sp, #0]
 801bc68:	b21b      	sxth	r3, r3
 801bc6a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801bc6c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801bc6e:	4639      	mov	r1, r7
 801bc70:	f7ff fc48 	bl	801b504 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801bc74:	e760      	b.n	801bb38 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801bc76:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801bc78:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801bc7a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bc7e:	1427      	asrs	r7, r4, #16
 801bc80:	1433      	asrs	r3, r6, #16
 801bc82:	fb01 7303 	mla	r3, r1, r3, r7
 801bc86:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801bc8a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801bc8e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801bc92:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801bc96:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801bc9a:	2a00      	cmp	r2, #0
 801bc9c:	f000 8133 	beq.w	801bf06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 801bca0:	687d      	ldr	r5, [r7, #4]
 801bca2:	950e      	str	r5, [sp, #56]	; 0x38
 801bca4:	0e2d      	lsrs	r5, r5, #24
 801bca6:	9515      	str	r5, [sp, #84]	; 0x54
 801bca8:	b178      	cbz	r0, 801bcca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801bcaa:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801bcae:	3901      	subs	r1, #1
 801bcb0:	0089      	lsls	r1, r1, #2
 801bcb2:	3104      	adds	r1, #4
 801bcb4:	eb07 0e01 	add.w	lr, r7, r1
 801bcb8:	5879      	ldr	r1, [r7, r1]
 801bcba:	9109      	str	r1, [sp, #36]	; 0x24
 801bcbc:	0e09      	lsrs	r1, r1, #24
 801bcbe:	9112      	str	r1, [sp, #72]	; 0x48
 801bcc0:	f8de 1004 	ldr.w	r1, [lr, #4]
 801bcc4:	910f      	str	r1, [sp, #60]	; 0x3c
 801bcc6:	0e09      	lsrs	r1, r1, #24
 801bcc8:	9116      	str	r1, [sp, #88]	; 0x58
 801bcca:	b292      	uxth	r2, r2
 801bccc:	b280      	uxth	r0, r0
 801bcce:	fb02 f800 	mul.w	r8, r2, r0
 801bcd2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801bcd6:	0112      	lsls	r2, r2, #4
 801bcd8:	eba2 0e08 	sub.w	lr, r2, r8
 801bcdc:	b280      	uxth	r0, r0
 801bcde:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801bce2:	9915      	ldr	r1, [sp, #84]	; 0x54
 801bce4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801bce6:	fa1f fe8e 	uxth.w	lr, lr
 801bcea:	1a12      	subs	r2, r2, r0
 801bcec:	b292      	uxth	r2, r2
 801bcee:	fb0e f101 	mul.w	r1, lr, r1
 801bcf2:	fb02 110c 	mla	r1, r2, ip, r1
 801bcf6:	fb00 1105 	mla	r1, r0, r5, r1
 801bcfa:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801bcfc:	fb08 1105 	mla	r1, r8, r5, r1
 801bd00:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801bd04:	2900      	cmp	r1, #0
 801bd06:	f000 80f5 	beq.w	801bef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801bd0a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801bd0e:	d019      	beq.n	801bd44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801bd10:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801bd14:	fb0c fa0a 	mul.w	sl, ip, sl
 801bd18:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bd1c:	fb0c fc03 	mul.w	ip, ip, r3
 801bd20:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bd24:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bd28:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801bd2c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801bd30:	4453      	add	r3, sl
 801bd32:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801bd36:	0a1b      	lsrs	r3, r3, #8
 801bd38:	0a3f      	lsrs	r7, r7, #8
 801bd3a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bd3e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801bd42:	433b      	orrs	r3, r7
 801bd44:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801bd46:	2dff      	cmp	r5, #255	; 0xff
 801bd48:	d020      	beq.n	801bd8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801bd4a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801bd4c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801bd50:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801bd52:	436f      	muls	r7, r5
 801bd54:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801bd56:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801bd5a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801bd5c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bd60:	fb05 fa0a 	mul.w	sl, r5, sl
 801bd64:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bd68:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bd6c:	44bc      	add	ip, r7
 801bd6e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bd72:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bd76:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bd7a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bd7e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bd82:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bd86:	ea4c 050a 	orr.w	r5, ip, sl
 801bd8a:	950e      	str	r5, [sp, #56]	; 0x38
 801bd8c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801bd8e:	2dff      	cmp	r5, #255	; 0xff
 801bd90:	d020      	beq.n	801bdd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801bd92:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801bd94:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801bd98:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801bd9a:	436f      	muls	r7, r5
 801bd9c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801bd9e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801bda2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801bda4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bda8:	fb05 fa0a 	mul.w	sl, r5, sl
 801bdac:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bdb0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bdb4:	44bc      	add	ip, r7
 801bdb6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bdba:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bdbe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bdc2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bdc6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bdca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bdce:	ea4c 050a 	orr.w	r5, ip, sl
 801bdd2:	9509      	str	r5, [sp, #36]	; 0x24
 801bdd4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801bdd6:	2dff      	cmp	r5, #255	; 0xff
 801bdd8:	d020      	beq.n	801be1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801bdda:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801bddc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801bde0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801bde2:	436f      	muls	r7, r5
 801bde4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801bde6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801bdea:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801bdec:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bdf0:	fb05 fa0a 	mul.w	sl, r5, sl
 801bdf4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bdf8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bdfc:	44bc      	add	ip, r7
 801bdfe:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801be02:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801be06:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801be0a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801be0e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801be12:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801be16:	ea4c 050a 	orr.w	r5, ip, sl
 801be1a:	950f      	str	r5, [sp, #60]	; 0x3c
 801be1c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801be1e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801be22:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801be24:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801be28:	fb0e f707 	mul.w	r7, lr, r7
 801be2c:	fb02 770c 	mla	r7, r2, ip, r7
 801be30:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801be34:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801be36:	fb00 770c 	mla	r7, r0, ip, r7
 801be3a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801be3e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801be40:	fb08 770c 	mla	r7, r8, ip, r7
 801be44:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801be48:	fb0e fe0c 	mul.w	lr, lr, ip
 801be4c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801be50:	fb02 e303 	mla	r3, r2, r3, lr
 801be54:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801be56:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801be58:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801be5c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801be5e:	fb00 330a 	mla	r3, r0, sl, r3
 801be62:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801be66:	fb08 3c0c 	mla	ip, r8, ip, r3
 801be6a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801be6c:	f8b9 0000 	ldrh.w	r0, [r9]
 801be70:	4359      	muls	r1, r3
 801be72:	0a3f      	lsrs	r7, r7, #8
 801be74:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801be78:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801be7c:	1c4b      	adds	r3, r1, #1
 801be7e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801be82:	ea47 070c 	orr.w	r7, r7, ip
 801be86:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801be8a:	1202      	asrs	r2, r0, #8
 801be8c:	0c3b      	lsrs	r3, r7, #16
 801be8e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801be92:	b2c9      	uxtb	r1, r1
 801be94:	fb13 f305 	smulbb	r3, r3, r5
 801be98:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801be9c:	fb02 3201 	mla	r2, r2, r1, r3
 801bea0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801bea4:	10c3      	asrs	r3, r0, #3
 801bea6:	b2ff      	uxtb	r7, r7
 801bea8:	00c0      	lsls	r0, r0, #3
 801beaa:	b2c0      	uxtb	r0, r0
 801beac:	fb17 f705 	smulbb	r7, r7, r5
 801beb0:	fb00 7001 	mla	r0, r0, r1, r7
 801beb4:	b292      	uxth	r2, r2
 801beb6:	fb1c fc05 	smulbb	ip, ip, r5
 801beba:	b280      	uxth	r0, r0
 801bebc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801bec0:	fb03 c301 	mla	r3, r3, r1, ip
 801bec4:	1c51      	adds	r1, r2, #1
 801bec6:	f100 0c01 	add.w	ip, r0, #1
 801beca:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801bece:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801bed2:	b29b      	uxth	r3, r3
 801bed4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801bed8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801bedc:	ea4c 0202 	orr.w	r2, ip, r2
 801bee0:	f103 0c01 	add.w	ip, r3, #1
 801bee4:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801bee8:	095b      	lsrs	r3, r3, #5
 801beea:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801beee:	431a      	orrs	r2, r3
 801bef0:	f8a9 2000 	strh.w	r2, [r9]
 801bef4:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801bef6:	441c      	add	r4, r3
 801bef8:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801befa:	f109 0902 	add.w	r9, r9, #2
 801befe:	441e      	add	r6, r3
 801bf00:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bf04:	e647      	b.n	801bb96 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 801bf06:	2800      	cmp	r0, #0
 801bf08:	f43f aedf 	beq.w	801bcca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801bf0c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801bf10:	9109      	str	r1, [sp, #36]	; 0x24
 801bf12:	0e09      	lsrs	r1, r1, #24
 801bf14:	9112      	str	r1, [sp, #72]	; 0x48
 801bf16:	e6d8      	b.n	801bcca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801bf18:	b01d      	add	sp, #116	; 0x74
 801bf1a:	ecbd 8b08 	vpop	{d8-d11}
 801bf1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801bf24 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801bf24:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bf28:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 801bf2c:	fb04 5603 	mla	r6, r4, r3, r5
 801bf30:	2c00      	cmp	r4, #0
 801bf32:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801bf36:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 801bf3a:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 801bf3e:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 801bf42:	db37      	blt.n	801bfb4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 801bf44:	45a6      	cmp	lr, r4
 801bf46:	dd35      	ble.n	801bfb4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 801bf48:	2d00      	cmp	r5, #0
 801bf4a:	db31      	blt.n	801bfb0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801bf4c:	42ab      	cmp	r3, r5
 801bf4e:	dd2f      	ble.n	801bfb0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801bf50:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 801bf54:	1c6e      	adds	r6, r5, #1
 801bf56:	d430      	bmi.n	801bfba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 801bf58:	42b3      	cmp	r3, r6
 801bf5a:	dd2e      	ble.n	801bfba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 801bf5c:	b378      	cbz	r0, 801bfbe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9a>
 801bf5e:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801bf62:	3401      	adds	r4, #1
 801bf64:	d42f      	bmi.n	801bfc6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 801bf66:	45a6      	cmp	lr, r4
 801bf68:	dd2d      	ble.n	801bfc6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 801bf6a:	b37f      	cbz	r7, 801bfcc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa8>
 801bf6c:	2d00      	cmp	r5, #0
 801bf6e:	eb0c 0e83 	add.w	lr, ip, r3, lsl #2
 801bf72:	db26      	blt.n	801bfc2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 801bf74:	42ab      	cmp	r3, r5
 801bf76:	dd24      	ble.n	801bfc2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 801bf78:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801bf7c:	3501      	adds	r5, #1
 801bf7e:	d428      	bmi.n	801bfd2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 801bf80:	42ab      	cmp	r3, r5
 801bf82:	dd26      	ble.n	801bfd2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 801bf84:	b338      	cbz	r0, 801bfd6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb2>
 801bf86:	f8de 3004 	ldr.w	r3, [lr, #4]
 801bf8a:	280f      	cmp	r0, #15
 801bf8c:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801bf90:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801bf94:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801bf98:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801bf9c:	d801      	bhi.n	801bfa2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x7e>
 801bf9e:	2f0f      	cmp	r7, #15
 801bfa0:	d91b      	bls.n	801bfda <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 801bfa2:	4b87      	ldr	r3, [pc, #540]	; (801c1c0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 801bfa4:	4a87      	ldr	r2, [pc, #540]	; (801c1c4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 801bfa6:	4888      	ldr	r0, [pc, #544]	; (801c1c8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 801bfa8:	f240 11f9 	movw	r1, #505	; 0x1f9
 801bfac:	f001 fd3e 	bl	801da2c <__assert_func>
 801bfb0:	2200      	movs	r2, #0
 801bfb2:	e7cf      	b.n	801bf54 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x30>
 801bfb4:	2600      	movs	r6, #0
 801bfb6:	4632      	mov	r2, r6
 801bfb8:	e7d3      	b.n	801bf62 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 801bfba:	2600      	movs	r6, #0
 801bfbc:	e7d1      	b.n	801bf62 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 801bfbe:	4606      	mov	r6, r0
 801bfc0:	e7cf      	b.n	801bf62 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 801bfc2:	2400      	movs	r4, #0
 801bfc4:	e7da      	b.n	801bf7c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x58>
 801bfc6:	2300      	movs	r3, #0
 801bfc8:	461c      	mov	r4, r3
 801bfca:	e7de      	b.n	801bf8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801bfcc:	463b      	mov	r3, r7
 801bfce:	463c      	mov	r4, r7
 801bfd0:	e7db      	b.n	801bf8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801bfd2:	2300      	movs	r3, #0
 801bfd4:	e7d9      	b.n	801bf8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801bfd6:	4603      	mov	r3, r0
 801bfd8:	e7d7      	b.n	801bf8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801bfda:	b280      	uxth	r0, r0
 801bfdc:	b2bf      	uxth	r7, r7
 801bfde:	fb07 fe00 	mul.w	lr, r7, r0
 801bfe2:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801bfe6:	0100      	lsls	r0, r0, #4
 801bfe8:	eba0 0c0e 	sub.w	ip, r0, lr
 801bfec:	b2bf      	uxth	r7, r7
 801bfee:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801bff2:	fa1f fc8c 	uxth.w	ip, ip
 801bff6:	1bed      	subs	r5, r5, r7
 801bff8:	b2ad      	uxth	r5, r5
 801bffa:	fb0c f00a 	mul.w	r0, ip, sl
 801bffe:	fb0b 0005 	mla	r0, fp, r5, r0
 801c002:	fb07 0009 	mla	r0, r7, r9, r0
 801c006:	fb0e 0008 	mla	r0, lr, r8, r0
 801c00a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801c00e:	9001      	str	r0, [sp, #4]
 801c010:	2800      	cmp	r0, #0
 801c012:	f000 80d1 	beq.w	801c1b8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>
 801c016:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801c01a:	d018      	beq.n	801c04e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x12a>
 801c01c:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801c020:	fb0b f000 	mul.w	r0, fp, r0
 801c024:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801c028:	fb0b fb02 	mul.w	fp, fp, r2
 801c02c:	0a02      	lsrs	r2, r0, #8
 801c02e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801c032:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801c036:	4402      	add	r2, r0
 801c038:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801c03c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801c040:	0a12      	lsrs	r2, r2, #8
 801c042:	0a00      	lsrs	r0, r0, #8
 801c044:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801c048:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801c04c:	4302      	orrs	r2, r0
 801c04e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801c052:	d01a      	beq.n	801c08a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x166>
 801c054:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 801c058:	fb0a f000 	mul.w	r0, sl, r0
 801c05c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801c060:	fb0a fa06 	mul.w	sl, sl, r6
 801c064:	0a06      	lsrs	r6, r0, #8
 801c066:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801c06a:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801c06e:	4406      	add	r6, r0
 801c070:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801c074:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 801c078:	0a36      	lsrs	r6, r6, #8
 801c07a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c07e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801c082:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c086:	ea46 060a 	orr.w	r6, r6, sl
 801c08a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c08e:	d01b      	beq.n	801c0c8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1a4>
 801c090:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801c094:	fb09 fa0a 	mul.w	sl, r9, sl
 801c098:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801c09c:	fb09 f004 	mul.w	r0, r9, r4
 801c0a0:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801c0a4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801c0a8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801c0ac:	f500 7980 	add.w	r9, r0, #256	; 0x100
 801c0b0:	4454      	add	r4, sl
 801c0b2:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 801c0b6:	0a24      	lsrs	r4, r4, #8
 801c0b8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c0bc:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801c0c0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801c0c4:	ea44 0409 	orr.w	r4, r4, r9
 801c0c8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c0cc:	d01b      	beq.n	801c106 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1e2>
 801c0ce:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801c0d2:	fb08 f909 	mul.w	r9, r8, r9
 801c0d6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c0da:	fb08 f003 	mul.w	r0, r8, r3
 801c0de:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801c0e2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c0e6:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801c0ea:	f500 7880 	add.w	r8, r0, #256	; 0x100
 801c0ee:	444b      	add	r3, r9
 801c0f0:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 801c0f4:	0a1b      	lsrs	r3, r3, #8
 801c0f6:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801c0fa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c0fe:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801c102:	ea43 0308 	orr.w	r3, r3, r8
 801c106:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801c10a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801c10e:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 801c112:	fb0c f808 	mul.w	r8, ip, r8
 801c116:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801c11a:	fb0c f606 	mul.w	r6, ip, r6
 801c11e:	fb05 8909 	mla	r9, r5, r9, r8
 801c122:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801c126:	fb05 6502 	mla	r5, r5, r2, r6
 801c12a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801c12e:	fb07 9908 	mla	r9, r7, r8, r9
 801c132:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 801c136:	fb07 5704 	mla	r7, r7, r4, r5
 801c13a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c13e:	8808      	ldrh	r0, [r1, #0]
 801c140:	fb0e 9808 	mla	r8, lr, r8, r9
 801c144:	fb0e 7e03 	mla	lr, lr, r3, r7
 801c148:	9b01      	ldr	r3, [sp, #4]
 801c14a:	43da      	mvns	r2, r3
 801c14c:	1203      	asrs	r3, r0, #8
 801c14e:	b2d2      	uxtb	r2, r2
 801c150:	10c4      	asrs	r4, r0, #3
 801c152:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801c156:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c15a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c15e:	00c0      	lsls	r0, r0, #3
 801c160:	4353      	muls	r3, r2
 801c162:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 801c166:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801c16a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801c16e:	b2c0      	uxtb	r0, r0
 801c170:	ea48 0e0e 	orr.w	lr, r8, lr
 801c174:	4354      	muls	r4, r2
 801c176:	4350      	muls	r0, r2
 801c178:	1c5a      	adds	r2, r3, #1
 801c17a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801c17e:	ea4f 431e 	mov.w	r3, lr, lsr #16
 801c182:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c186:	1c62      	adds	r2, r4, #1
 801c188:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801c18c:	ea4f 221e 	mov.w	r2, lr, lsr #8
 801c190:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801c194:	021b      	lsls	r3, r3, #8
 801c196:	00d2      	lsls	r2, r2, #3
 801c198:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c19c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801c1a0:	4313      	orrs	r3, r2
 801c1a2:	1c42      	adds	r2, r0, #1
 801c1a4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c1a8:	eb0e 2e10 	add.w	lr, lr, r0, lsr #8
 801c1ac:	f3ce 0ec4 	ubfx	lr, lr, #3, #5
 801c1b0:	ea4e 0e03 	orr.w	lr, lr, r3
 801c1b4:	f8a1 e000 	strh.w	lr, [r1]
 801c1b8:	b003      	add	sp, #12
 801c1ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c1be:	bf00      	nop
 801c1c0:	08021c76 	.word	0x08021c76
 801c1c4:	080221a6 	.word	0x080221a6
 801c1c8:	08021c43 	.word	0x08021c43

0801c1cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c1cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c1d0:	ed2d 8b08 	vpush	{d8-d11}
 801c1d4:	b09b      	sub	sp, #108	; 0x6c
 801c1d6:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 801c1da:	9218      	str	r2, [sp, #96]	; 0x60
 801c1dc:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801c1de:	9116      	str	r1, [sp, #88]	; 0x58
 801c1e0:	9307      	str	r3, [sp, #28]
 801c1e2:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801c1e6:	9019      	str	r0, [sp, #100]	; 0x64
 801c1e8:	6850      	ldr	r0, [r2, #4]
 801c1ea:	6812      	ldr	r2, [r2, #0]
 801c1ec:	fb00 1303 	mla	r3, r0, r3, r1
 801c1f0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c1f4:	930a      	str	r3, [sp, #40]	; 0x28
 801c1f6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801c1f8:	681b      	ldr	r3, [r3, #0]
 801c1fa:	930f      	str	r3, [sp, #60]	; 0x3c
 801c1fc:	eeb0 aa40 	vmov.f32	s20, s0
 801c200:	eef0 9a60 	vmov.f32	s19, s1
 801c204:	eeb0 9a41 	vmov.f32	s18, s2
 801c208:	eeb0 8a62 	vmov.f32	s16, s5
 801c20c:	eef0 8a43 	vmov.f32	s17, s6
 801c210:	eef0 ba44 	vmov.f32	s23, s8
 801c214:	eeb0 ba64 	vmov.f32	s22, s9
 801c218:	eef0 aa45 	vmov.f32	s21, s10
 801c21c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801c21e:	2b00      	cmp	r3, #0
 801c220:	dc03      	bgt.n	801c22a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801c222:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c224:	2b00      	cmp	r3, #0
 801c226:	f340 8386 	ble.w	801c936 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 801c22a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801c22c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c230:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c234:	1e48      	subs	r0, r1, #1
 801c236:	1e57      	subs	r7, r2, #1
 801c238:	9b07      	ldr	r3, [sp, #28]
 801c23a:	2b00      	cmp	r3, #0
 801c23c:	f340 8166 	ble.w	801c50c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x340>
 801c240:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801c244:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c248:	d406      	bmi.n	801c258 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801c24a:	4584      	cmp	ip, r0
 801c24c:	da04      	bge.n	801c258 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801c24e:	2b00      	cmp	r3, #0
 801c250:	db02      	blt.n	801c258 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801c252:	42bb      	cmp	r3, r7
 801c254:	f2c0 815b 	blt.w	801c50e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801c258:	f11c 0c01 	adds.w	ip, ip, #1
 801c25c:	f100 814b 	bmi.w	801c4f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801c260:	4561      	cmp	r1, ip
 801c262:	f2c0 8148 	blt.w	801c4f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801c266:	3301      	adds	r3, #1
 801c268:	f100 8145 	bmi.w	801c4f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801c26c:	429a      	cmp	r2, r3
 801c26e:	f2c0 8142 	blt.w	801c4f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801c272:	9b07      	ldr	r3, [sp, #28]
 801c274:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801c276:	9317      	str	r3, [sp, #92]	; 0x5c
 801c278:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801c27a:	2b00      	cmp	r3, #0
 801c27c:	f340 8165 	ble.w	801c54a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801c280:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 801c282:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801c284:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801c288:	689b      	ldr	r3, [r3, #8]
 801c28a:	1422      	asrs	r2, r4, #16
 801c28c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801c290:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801c294:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801c298:	f100 81d5 	bmi.w	801c646 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801c29c:	f103 38ff 	add.w	r8, r3, #4294967295
 801c2a0:	4542      	cmp	r2, r8
 801c2a2:	f280 81d0 	bge.w	801c646 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801c2a6:	f1bc 0f00 	cmp.w	ip, #0
 801c2aa:	f2c0 81cc 	blt.w	801c646 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801c2ae:	f10e 38ff 	add.w	r8, lr, #4294967295
 801c2b2:	45c4      	cmp	ip, r8
 801c2b4:	f280 81c7 	bge.w	801c646 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801c2b8:	b21b      	sxth	r3, r3
 801c2ba:	fb0c 2203 	mla	r2, ip, r3, r2
 801c2be:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801c2c0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801c2c4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801c2c8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801c2cc:	2900      	cmp	r1, #0
 801c2ce:	f000 8182 	beq.w	801c5d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 801c2d2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801c2d6:	950b      	str	r5, [sp, #44]	; 0x2c
 801c2d8:	0e2d      	lsrs	r5, r5, #24
 801c2da:	9512      	str	r5, [sp, #72]	; 0x48
 801c2dc:	b180      	cbz	r0, 801c300 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801c2de:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801c2e2:	3b01      	subs	r3, #1
 801c2e4:	009b      	lsls	r3, r3, #2
 801c2e6:	3304      	adds	r3, #4
 801c2e8:	eb08 0c03 	add.w	ip, r8, r3
 801c2ec:	f858 3003 	ldr.w	r3, [r8, r3]
 801c2f0:	9308      	str	r3, [sp, #32]
 801c2f2:	0e1b      	lsrs	r3, r3, #24
 801c2f4:	9310      	str	r3, [sp, #64]	; 0x40
 801c2f6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801c2fa:	930c      	str	r3, [sp, #48]	; 0x30
 801c2fc:	0e1b      	lsrs	r3, r3, #24
 801c2fe:	9313      	str	r3, [sp, #76]	; 0x4c
 801c300:	b289      	uxth	r1, r1
 801c302:	b280      	uxth	r0, r0
 801c304:	fb01 f900 	mul.w	r9, r1, r0
 801c308:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801c30c:	0109      	lsls	r1, r1, #4
 801c30e:	eba1 0809 	sub.w	r8, r1, r9
 801c312:	b280      	uxth	r0, r0
 801c314:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801c318:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801c31a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c31c:	fa1f f888 	uxth.w	r8, r8
 801c320:	1a09      	subs	r1, r1, r0
 801c322:	b289      	uxth	r1, r1
 801c324:	fb08 f303 	mul.w	r3, r8, r3
 801c328:	fb01 330e 	mla	r3, r1, lr, r3
 801c32c:	fb00 3305 	mla	r3, r0, r5, r3
 801c330:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c332:	fb09 3305 	mla	r3, r9, r5, r3
 801c336:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c33a:	2b00      	cmp	r3, #0
 801c33c:	f000 80d2 	beq.w	801c4e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801c340:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801c344:	d01b      	beq.n	801c37e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 801c346:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801c34a:	fb0e fa0a 	mul.w	sl, lr, sl
 801c34e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801c352:	fb0e fe02 	mul.w	lr, lr, r2
 801c356:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801c35a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801c35e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801c362:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801c366:	4452      	add	r2, sl
 801c368:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801c36c:	0a12      	lsrs	r2, r2, #8
 801c36e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c372:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801c376:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801c37a:	ea42 020c 	orr.w	r2, r2, ip
 801c37e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801c380:	2dff      	cmp	r5, #255	; 0xff
 801c382:	d021      	beq.n	801c3c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801c384:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801c386:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801c38a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801c38c:	fb05 fb0b 	mul.w	fp, r5, fp
 801c390:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801c392:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801c396:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801c398:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c39c:	fb05 fa0a 	mul.w	sl, r5, sl
 801c3a0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c3a4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801c3a8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801c3ac:	44de      	add	lr, fp
 801c3ae:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c3b2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c3b6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c3ba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c3be:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c3c2:	ea4e 050a 	orr.w	r5, lr, sl
 801c3c6:	950b      	str	r5, [sp, #44]	; 0x2c
 801c3c8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c3ca:	2dff      	cmp	r5, #255	; 0xff
 801c3cc:	d021      	beq.n	801c412 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801c3ce:	9d08      	ldr	r5, [sp, #32]
 801c3d0:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801c3d4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c3d6:	fb05 fb0b 	mul.w	fp, r5, fp
 801c3da:	9d08      	ldr	r5, [sp, #32]
 801c3dc:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801c3e0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c3e2:	fb05 fa0e 	mul.w	sl, r5, lr
 801c3e6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c3ea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c3ee:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801c3f2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801c3f6:	44de      	add	lr, fp
 801c3f8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c3fc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c400:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c404:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c408:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c40c:	ea4e 050a 	orr.w	r5, lr, sl
 801c410:	9508      	str	r5, [sp, #32]
 801c412:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c414:	2dff      	cmp	r5, #255	; 0xff
 801c416:	d021      	beq.n	801c45c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801c418:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801c41a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801c41e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c420:	fb05 fb0b 	mul.w	fp, r5, fp
 801c424:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801c426:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801c42a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c42c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c430:	fb05 fa0a 	mul.w	sl, r5, sl
 801c434:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c438:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801c43c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801c440:	44de      	add	lr, fp
 801c442:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c446:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c44a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c44e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c452:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c456:	ea4e 050a 	orr.w	r5, lr, sl
 801c45a:	950c      	str	r5, [sp, #48]	; 0x30
 801c45c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801c45e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801c462:	9d08      	ldr	r5, [sp, #32]
 801c464:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801c468:	fb08 fc0c 	mul.w	ip, r8, ip
 801c46c:	fb01 cc0e 	mla	ip, r1, lr, ip
 801c470:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801c474:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801c476:	fb00 cc0e 	mla	ip, r0, lr, ip
 801c47a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801c47e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801c480:	fb09 cc0e 	mla	ip, r9, lr, ip
 801c484:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801c488:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801c48c:	fb08 f80e 	mul.w	r8, r8, lr
 801c490:	fb01 8202 	mla	r2, r1, r2, r8
 801c494:	9908      	ldr	r1, [sp, #32]
 801c496:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801c49a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c49c:	fb00 220a 	mla	r2, r0, sl, r2
 801c4a0:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801c4a4:	fb09 2900 	mla	r9, r9, r0, r2
 801c4a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c4ac:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c4b0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c4b4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801c4b8:	ea4c 0c09 	orr.w	ip, ip, r9
 801c4bc:	2bff      	cmp	r3, #255	; 0xff
 801c4be:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801c4c2:	f040 8091 	bne.w	801c5e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 801c4c6:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801c4ca:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801c4ce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c4d2:	f022 0207 	bic.w	r2, r2, #7
 801c4d6:	431a      	orrs	r2, r3
 801c4d8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801c4dc:	ea4c 0c02 	orr.w	ip, ip, r2
 801c4e0:	f8a7 c000 	strh.w	ip, [r7]
 801c4e4:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801c4e6:	441c      	add	r4, r3
 801c4e8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801c4ea:	441e      	add	r6, r3
 801c4ec:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801c4ee:	3b01      	subs	r3, #1
 801c4f0:	3702      	adds	r7, #2
 801c4f2:	9317      	str	r3, [sp, #92]	; 0x5c
 801c4f4:	e6c0      	b.n	801c278 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801c4f6:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801c4f8:	441c      	add	r4, r3
 801c4fa:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801c4fc:	441e      	add	r6, r3
 801c4fe:	9b07      	ldr	r3, [sp, #28]
 801c500:	3b01      	subs	r3, #1
 801c502:	9307      	str	r3, [sp, #28]
 801c504:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c506:	3302      	adds	r3, #2
 801c508:	930a      	str	r3, [sp, #40]	; 0x28
 801c50a:	e695      	b.n	801c238 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c50c:	d024      	beq.n	801c558 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801c50e:	9b07      	ldr	r3, [sp, #28]
 801c510:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801c512:	3b01      	subs	r3, #1
 801c514:	fb00 4003 	mla	r0, r0, r3, r4
 801c518:	1400      	asrs	r0, r0, #16
 801c51a:	f53f aeaa 	bmi.w	801c272 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801c51e:	3901      	subs	r1, #1
 801c520:	4288      	cmp	r0, r1
 801c522:	f6bf aea6 	bge.w	801c272 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801c526:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801c528:	fb01 6303 	mla	r3, r1, r3, r6
 801c52c:	141b      	asrs	r3, r3, #16
 801c52e:	f53f aea0 	bmi.w	801c272 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801c532:	3a01      	subs	r2, #1
 801c534:	4293      	cmp	r3, r2
 801c536:	f6bf ae9c 	bge.w	801c272 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801c53a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801c53e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801c542:	f1bb 0f00 	cmp.w	fp, #0
 801c546:	f300 809a 	bgt.w	801c67e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 801c54a:	9b07      	ldr	r3, [sp, #28]
 801c54c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801c550:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c552:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801c556:	930a      	str	r3, [sp, #40]	; 0x28
 801c558:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801c55a:	2b00      	cmp	r3, #0
 801c55c:	f340 81eb 	ble.w	801c936 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 801c560:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801c564:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c568:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801c56c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c56e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801c572:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801c576:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801c57a:	eef0 6a48 	vmov.f32	s13, s16
 801c57e:	ee69 7a27 	vmul.f32	s15, s18, s15
 801c582:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c586:	ee37 8a48 	vsub.f32	s16, s14, s16
 801c58a:	ee16 4a90 	vmov	r4, s13
 801c58e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801c592:	eef0 6a68 	vmov.f32	s13, s17
 801c596:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801c59a:	ee18 2a10 	vmov	r2, s16
 801c59e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801c5a2:	fb92 f3f3 	sdiv	r3, r2, r3
 801c5a6:	ee18 2a90 	vmov	r2, s17
 801c5aa:	932f      	str	r3, [sp, #188]	; 0xbc
 801c5ac:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c5ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801c5b2:	9330      	str	r3, [sp, #192]	; 0xc0
 801c5b4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801c5b6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c5b8:	3b01      	subs	r3, #1
 801c5ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c5be:	9316      	str	r3, [sp, #88]	; 0x58
 801c5c0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c5c2:	bf08      	it	eq
 801c5c4:	4613      	moveq	r3, r2
 801c5c6:	ee16 6a90 	vmov	r6, s13
 801c5ca:	9307      	str	r3, [sp, #28]
 801c5cc:	eef0 8a67 	vmov.f32	s17, s15
 801c5d0:	eeb0 8a47 	vmov.f32	s16, s14
 801c5d4:	e622      	b.n	801c21c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801c5d6:	2800      	cmp	r0, #0
 801c5d8:	f43f ae92 	beq.w	801c300 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801c5dc:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801c5e0:	9308      	str	r3, [sp, #32]
 801c5e2:	0e1b      	lsrs	r3, r3, #24
 801c5e4:	9310      	str	r3, [sp, #64]	; 0x40
 801c5e6:	e68b      	b.n	801c300 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801c5e8:	8839      	ldrh	r1, [r7, #0]
 801c5ea:	4dd5      	ldr	r5, [pc, #852]	; (801c940 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 801c5ec:	43db      	mvns	r3, r3
 801c5ee:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801c5f2:	fa5f f883 	uxtb.w	r8, r3
 801c5f6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c5fa:	fb0e fe08 	mul.w	lr, lr, r8
 801c5fe:	10c8      	asrs	r0, r1, #3
 801c600:	00cb      	lsls	r3, r1, #3
 801c602:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c606:	f10e 0101 	add.w	r1, lr, #1
 801c60a:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801c60e:	fb00 f008 	mul.w	r0, r0, r8
 801c612:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801c616:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801c61a:	f100 0e01 	add.w	lr, r0, #1
 801c61e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801c622:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801c626:	b2db      	uxtb	r3, r3
 801c628:	b2c9      	uxtb	r1, r1
 801c62a:	00d2      	lsls	r2, r2, #3
 801c62c:	fb03 f308 	mul.w	r3, r3, r8
 801c630:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801c634:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c638:	430a      	orrs	r2, r1
 801c63a:	1c59      	adds	r1, r3, #1
 801c63c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801c640:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801c644:	e748      	b.n	801c4d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801c646:	f112 0801 	adds.w	r8, r2, #1
 801c64a:	f53f af4b 	bmi.w	801c4e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801c64e:	4543      	cmp	r3, r8
 801c650:	f6ff af48 	blt.w	801c4e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801c654:	f11c 0801 	adds.w	r8, ip, #1
 801c658:	f53f af44 	bmi.w	801c4e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801c65c:	45c6      	cmp	lr, r8
 801c65e:	f6ff af41 	blt.w	801c4e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801c662:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801c666:	fa0f f28e 	sxth.w	r2, lr
 801c66a:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801c66e:	9200      	str	r2, [sp, #0]
 801c670:	b21b      	sxth	r3, r3
 801c672:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c674:	9819      	ldr	r0, [sp, #100]	; 0x64
 801c676:	4639      	mov	r1, r7
 801c678:	f7ff fc54 	bl	801bf24 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801c67c:	e732      	b.n	801c4e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801c67e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801c680:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801c682:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801c686:	1421      	asrs	r1, r4, #16
 801c688:	1433      	asrs	r3, r6, #16
 801c68a:	fb07 1303 	mla	r3, r7, r3, r1
 801c68e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c690:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801c694:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801c698:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801c69c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801c6a0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801c6a4:	2a00      	cmp	r2, #0
 801c6a6:	f000 8107 	beq.w	801c8b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ec>
 801c6aa:	684d      	ldr	r5, [r1, #4]
 801c6ac:	950d      	str	r5, [sp, #52]	; 0x34
 801c6ae:	0e2d      	lsrs	r5, r5, #24
 801c6b0:	9514      	str	r5, [sp, #80]	; 0x50
 801c6b2:	b178      	cbz	r0, 801c6d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801c6b4:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801c6b8:	3f01      	subs	r7, #1
 801c6ba:	00bf      	lsls	r7, r7, #2
 801c6bc:	3704      	adds	r7, #4
 801c6be:	eb01 0e07 	add.w	lr, r1, r7
 801c6c2:	59c9      	ldr	r1, [r1, r7]
 801c6c4:	9109      	str	r1, [sp, #36]	; 0x24
 801c6c6:	0e09      	lsrs	r1, r1, #24
 801c6c8:	9111      	str	r1, [sp, #68]	; 0x44
 801c6ca:	f8de 1004 	ldr.w	r1, [lr, #4]
 801c6ce:	910e      	str	r1, [sp, #56]	; 0x38
 801c6d0:	0e09      	lsrs	r1, r1, #24
 801c6d2:	9115      	str	r1, [sp, #84]	; 0x54
 801c6d4:	b292      	uxth	r2, r2
 801c6d6:	b280      	uxth	r0, r0
 801c6d8:	fb02 f900 	mul.w	r9, r2, r0
 801c6dc:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801c6e0:	0112      	lsls	r2, r2, #4
 801c6e2:	eba2 0e09 	sub.w	lr, r2, r9
 801c6e6:	b280      	uxth	r0, r0
 801c6e8:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801c6ec:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c6ee:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c6f0:	fa1f fe8e 	uxth.w	lr, lr
 801c6f4:	1a09      	subs	r1, r1, r0
 801c6f6:	b289      	uxth	r1, r1
 801c6f8:	fb0e f202 	mul.w	r2, lr, r2
 801c6fc:	fb01 220c 	mla	r2, r1, ip, r2
 801c700:	fb00 2205 	mla	r2, r0, r5, r2
 801c704:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801c706:	fb09 2205 	mla	r2, r9, r5, r2
 801c70a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801c70e:	2a00      	cmp	r2, #0
 801c710:	f000 80c9 	beq.w	801c8a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801c714:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801c718:	d019      	beq.n	801c74e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x582>
 801c71a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801c71e:	fb0c fa0a 	mul.w	sl, ip, sl
 801c722:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c726:	fb0c fc03 	mul.w	ip, ip, r3
 801c72a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c72e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c732:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801c736:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801c73a:	4453      	add	r3, sl
 801c73c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c740:	0a1b      	lsrs	r3, r3, #8
 801c742:	0a3f      	lsrs	r7, r7, #8
 801c744:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c748:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801c74c:	433b      	orrs	r3, r7
 801c74e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c750:	2dff      	cmp	r5, #255	; 0xff
 801c752:	d020      	beq.n	801c796 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
 801c754:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801c756:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801c75a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c75c:	436f      	muls	r7, r5
 801c75e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801c760:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801c764:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c766:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c76a:	fb05 fa0a 	mul.w	sl, r5, sl
 801c76e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c772:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c776:	44bc      	add	ip, r7
 801c778:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c77c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c780:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c784:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c788:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c78c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c790:	ea4c 050a 	orr.w	r5, ip, sl
 801c794:	950d      	str	r5, [sp, #52]	; 0x34
 801c796:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c798:	2dff      	cmp	r5, #255	; 0xff
 801c79a:	d020      	beq.n	801c7de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x612>
 801c79c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801c79e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801c7a2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c7a4:	436f      	muls	r7, r5
 801c7a6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801c7a8:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801c7ac:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c7ae:	fb05 fa0c 	mul.w	sl, r5, ip
 801c7b2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c7b6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c7ba:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c7be:	44bc      	add	ip, r7
 801c7c0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c7c4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c7c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c7cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c7d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c7d4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c7d8:	ea4c 050a 	orr.w	r5, ip, sl
 801c7dc:	9509      	str	r5, [sp, #36]	; 0x24
 801c7de:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801c7e0:	2dff      	cmp	r5, #255	; 0xff
 801c7e2:	d020      	beq.n	801c826 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65a>
 801c7e4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801c7e6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801c7ea:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801c7ec:	436f      	muls	r7, r5
 801c7ee:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801c7f0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801c7f4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801c7f6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c7fa:	fb05 fa0a 	mul.w	sl, r5, sl
 801c7fe:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c802:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c806:	44bc      	add	ip, r7
 801c808:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c80c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c810:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c814:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c818:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c81c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c820:	ea4c 050a 	orr.w	r5, ip, sl
 801c824:	950e      	str	r5, [sp, #56]	; 0x38
 801c826:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801c828:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801c82c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801c82e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801c832:	fb0e f707 	mul.w	r7, lr, r7
 801c836:	fb01 770c 	mla	r7, r1, ip, r7
 801c83a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801c83e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801c840:	fb00 770c 	mla	r7, r0, ip, r7
 801c844:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801c848:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801c84a:	fb09 770c 	mla	r7, r9, ip, r7
 801c84e:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801c852:	fb0e fe0c 	mul.w	lr, lr, ip
 801c856:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c85a:	fb01 e303 	mla	r3, r1, r3, lr
 801c85e:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c860:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801c864:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c866:	fb00 330a 	mla	r3, r0, sl, r3
 801c86a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801c86e:	fb09 3c0c 	mla	ip, r9, ip, r3
 801c872:	0a3f      	lsrs	r7, r7, #8
 801c874:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c878:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801c87c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801c880:	ea47 070c 	orr.w	r7, r7, ip
 801c884:	2aff      	cmp	r2, #255	; 0xff
 801c886:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801c88a:	d11e      	bne.n	801c8ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 801c88c:	097a      	lsrs	r2, r7, #5
 801c88e:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801c892:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c896:	f023 0307 	bic.w	r3, r3, #7
 801c89a:	4313      	orrs	r3, r2
 801c89c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801c8a0:	431f      	orrs	r7, r3
 801c8a2:	f8a8 7000 	strh.w	r7, [r8]
 801c8a6:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801c8a8:	441c      	add	r4, r3
 801c8aa:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801c8ac:	f108 0802 	add.w	r8, r8, #2
 801c8b0:	441e      	add	r6, r3
 801c8b2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c8b6:	e644      	b.n	801c542 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801c8b8:	2800      	cmp	r0, #0
 801c8ba:	f43f af0b 	beq.w	801c6d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801c8be:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801c8c2:	9109      	str	r1, [sp, #36]	; 0x24
 801c8c4:	0e09      	lsrs	r1, r1, #24
 801c8c6:	9111      	str	r1, [sp, #68]	; 0x44
 801c8c8:	e704      	b.n	801c6d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801c8ca:	f8b8 1000 	ldrh.w	r1, [r8]
 801c8ce:	43d2      	mvns	r2, r2
 801c8d0:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801c8d4:	fa5f fe82 	uxtb.w	lr, r2
 801c8d8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c8dc:	fb0c fc0e 	mul.w	ip, ip, lr
 801c8e0:	10c8      	asrs	r0, r1, #3
 801c8e2:	00ca      	lsls	r2, r1, #3
 801c8e4:	f10c 0101 	add.w	r1, ip, #1
 801c8e8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801c8ec:	0c39      	lsrs	r1, r7, #16
 801c8ee:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801c8f2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c8f6:	4912      	ldr	r1, [pc, #72]	; (801c940 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 801c8f8:	fb00 f00e 	mul.w	r0, r0, lr
 801c8fc:	fa5f fc8c 	uxtb.w	ip, ip
 801c900:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801c904:	b2d2      	uxtb	r2, r2
 801c906:	1c41      	adds	r1, r0, #1
 801c908:	fb02 f20e 	mul.w	r2, r2, lr
 801c90c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801c910:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c914:	1c51      	adds	r1, r2, #1
 801c916:	00c0      	lsls	r0, r0, #3
 801c918:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c91c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c920:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801c924:	ea4c 0c00 	orr.w	ip, ip, r0
 801c928:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801c92c:	ea47 0c0c 	orr.w	ip, r7, ip
 801c930:	f8a8 c000 	strh.w	ip, [r8]
 801c934:	e7b7      	b.n	801c8a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801c936:	b01b      	add	sp, #108	; 0x6c
 801c938:	ecbd 8b08 	vpop	{d8-d11}
 801c93c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c940:	fffff800 	.word	0xfffff800

0801c944 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801c944:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c948:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801c94c:	2c00      	cmp	r4, #0
 801c94e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801c952:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801c956:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801c95a:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801c95e:	fb04 ce03 	mla	lr, r4, r3, ip
 801c962:	db60      	blt.n	801ca26 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801c964:	45a1      	cmp	r9, r4
 801c966:	dd5e      	ble.n	801ca26 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801c968:	f1bc 0f00 	cmp.w	ip, #0
 801c96c:	db59      	blt.n	801ca22 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801c96e:	45e0      	cmp	r8, ip
 801c970:	dd57      	ble.n	801ca22 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801c972:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801c976:	f01e 0f01 	tst.w	lr, #1
 801c97a:	5c16      	ldrb	r6, [r2, r0]
 801c97c:	bf0c      	ite	eq
 801c97e:	f006 060f 	andeq.w	r6, r6, #15
 801c982:	1136      	asrne	r6, r6, #4
 801c984:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801c988:	b2f6      	uxtb	r6, r6
 801c98a:	f11c 0001 	adds.w	r0, ip, #1
 801c98e:	d44d      	bmi.n	801ca2c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801c990:	4580      	cmp	r8, r0
 801c992:	dd4b      	ble.n	801ca2c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801c994:	2d00      	cmp	r5, #0
 801c996:	d04b      	beq.n	801ca30 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 801c998:	f10e 0a01 	add.w	sl, lr, #1
 801c99c:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801c9a0:	f01a 0f01 	tst.w	sl, #1
 801c9a4:	5c10      	ldrb	r0, [r2, r0]
 801c9a6:	bf0c      	ite	eq
 801c9a8:	f000 000f 	andeq.w	r0, r0, #15
 801c9ac:	1100      	asrne	r0, r0, #4
 801c9ae:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c9b2:	b2c0      	uxtb	r0, r0
 801c9b4:	3401      	adds	r4, #1
 801c9b6:	d43f      	bmi.n	801ca38 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801c9b8:	45a1      	cmp	r9, r4
 801c9ba:	dd3d      	ble.n	801ca38 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801c9bc:	2f00      	cmp	r7, #0
 801c9be:	f000 80a8 	beq.w	801cb12 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ce>
 801c9c2:	f1bc 0f00 	cmp.w	ip, #0
 801c9c6:	db35      	blt.n	801ca34 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801c9c8:	45e0      	cmp	r8, ip
 801c9ca:	dd33      	ble.n	801ca34 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801c9cc:	eb03 090e 	add.w	r9, r3, lr
 801c9d0:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801c9d4:	f019 0f01 	tst.w	r9, #1
 801c9d8:	5d14      	ldrb	r4, [r2, r4]
 801c9da:	bf0c      	ite	eq
 801c9dc:	f004 040f 	andeq.w	r4, r4, #15
 801c9e0:	1124      	asrne	r4, r4, #4
 801c9e2:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801c9e6:	b2e4      	uxtb	r4, r4
 801c9e8:	f11c 0c01 	adds.w	ip, ip, #1
 801c9ec:	d427      	bmi.n	801ca3e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801c9ee:	45e0      	cmp	r8, ip
 801c9f0:	dd25      	ble.n	801ca3e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801c9f2:	b335      	cbz	r5, 801ca42 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 801c9f4:	3301      	adds	r3, #1
 801c9f6:	449e      	add	lr, r3
 801c9f8:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801c9fc:	f01e 0f01 	tst.w	lr, #1
 801ca00:	5cd2      	ldrb	r2, [r2, r3]
 801ca02:	bf0c      	ite	eq
 801ca04:	f002 020f 	andeq.w	r2, r2, #15
 801ca08:	1112      	asrne	r2, r2, #4
 801ca0a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ca0e:	b2d3      	uxtb	r3, r2
 801ca10:	2d0f      	cmp	r5, #15
 801ca12:	d917      	bls.n	801ca44 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 801ca14:	4b42      	ldr	r3, [pc, #264]	; (801cb20 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1dc>)
 801ca16:	4a43      	ldr	r2, [pc, #268]	; (801cb24 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e0>)
 801ca18:	4843      	ldr	r0, [pc, #268]	; (801cb28 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e4>)
 801ca1a:	f240 11f9 	movw	r1, #505	; 0x1f9
 801ca1e:	f001 f805 	bl	801da2c <__assert_func>
 801ca22:	2600      	movs	r6, #0
 801ca24:	e7b1      	b.n	801c98a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 801ca26:	2000      	movs	r0, #0
 801ca28:	4606      	mov	r6, r0
 801ca2a:	e7c3      	b.n	801c9b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801ca2c:	2000      	movs	r0, #0
 801ca2e:	e7c1      	b.n	801c9b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801ca30:	4628      	mov	r0, r5
 801ca32:	e7bf      	b.n	801c9b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801ca34:	2400      	movs	r4, #0
 801ca36:	e7d7      	b.n	801c9e8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 801ca38:	2300      	movs	r3, #0
 801ca3a:	461c      	mov	r4, r3
 801ca3c:	e7e8      	b.n	801ca10 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801ca3e:	2300      	movs	r3, #0
 801ca40:	e7e6      	b.n	801ca10 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801ca42:	462b      	mov	r3, r5
 801ca44:	2f0f      	cmp	r7, #15
 801ca46:	d8e5      	bhi.n	801ca14 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801ca48:	b2ad      	uxth	r5, r5
 801ca4a:	b2bf      	uxth	r7, r7
 801ca4c:	fb05 fc07 	mul.w	ip, r5, r7
 801ca50:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801ca54:	012d      	lsls	r5, r5, #4
 801ca56:	b2bf      	uxth	r7, r7
 801ca58:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801ca5c:	eba5 050c 	sub.w	r5, r5, ip
 801ca60:	1bd2      	subs	r2, r2, r7
 801ca62:	b2ad      	uxth	r5, r5
 801ca64:	b292      	uxth	r2, r2
 801ca66:	4368      	muls	r0, r5
 801ca68:	fb06 0002 	mla	r0, r6, r2, r0
 801ca6c:	fb07 0404 	mla	r4, r7, r4, r0
 801ca70:	fb0c 4303 	mla	r3, ip, r3, r4
 801ca74:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ca78:	b1b3      	cbz	r3, 801caa8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 801ca7a:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801ca7e:	435a      	muls	r2, r3
 801ca80:	1c53      	adds	r3, r2, #1
 801ca82:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ca86:	4a29      	ldr	r2, [pc, #164]	; (801cb2c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e8>)
 801ca88:	121b      	asrs	r3, r3, #8
 801ca8a:	6812      	ldr	r2, [r2, #0]
 801ca8c:	2bff      	cmp	r3, #255	; 0xff
 801ca8e:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801ca92:	d10b      	bne.n	801caac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x168>
 801ca94:	4b26      	ldr	r3, [pc, #152]	; (801cb30 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ec>)
 801ca96:	0950      	lsrs	r0, r2, #5
 801ca98:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ca9c:	4033      	ands	r3, r6
 801ca9e:	4318      	orrs	r0, r3
 801caa0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801caa4:	4302      	orrs	r2, r0
 801caa6:	800a      	strh	r2, [r1, #0]
 801caa8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801caac:	880d      	ldrh	r5, [r1, #0]
 801caae:	b29f      	uxth	r7, r3
 801cab0:	122c      	asrs	r4, r5, #8
 801cab2:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801cab6:	43db      	mvns	r3, r3
 801cab8:	b2db      	uxtb	r3, r3
 801caba:	fb10 f007 	smulbb	r0, r0, r7
 801cabe:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801cac2:	fb04 0403 	mla	r4, r4, r3, r0
 801cac6:	b2f6      	uxtb	r6, r6
 801cac8:	10e8      	asrs	r0, r5, #3
 801caca:	b2d2      	uxtb	r2, r2
 801cacc:	00ed      	lsls	r5, r5, #3
 801cace:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801cad2:	fb12 f207 	smulbb	r2, r2, r7
 801cad6:	fb16 f607 	smulbb	r6, r6, r7
 801cada:	b2ed      	uxtb	r5, r5
 801cadc:	b2a4      	uxth	r4, r4
 801cade:	fb00 6603 	mla	r6, r0, r3, r6
 801cae2:	fb05 2303 	mla	r3, r5, r3, r2
 801cae6:	b29a      	uxth	r2, r3
 801cae8:	1c63      	adds	r3, r4, #1
 801caea:	b2b0      	uxth	r0, r6
 801caec:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801caf0:	1c53      	adds	r3, r2, #1
 801caf2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801caf6:	1c42      	adds	r2, r0, #1
 801caf8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801cafc:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801cb00:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801cb04:	0940      	lsrs	r0, r0, #5
 801cb06:	4323      	orrs	r3, r4
 801cb08:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cb0c:	4303      	orrs	r3, r0
 801cb0e:	800b      	strh	r3, [r1, #0]
 801cb10:	e7ca      	b.n	801caa8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 801cb12:	2d0f      	cmp	r5, #15
 801cb14:	f63f af7e 	bhi.w	801ca14 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801cb18:	463b      	mov	r3, r7
 801cb1a:	463c      	mov	r4, r7
 801cb1c:	e794      	b.n	801ca48 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 801cb1e:	bf00      	nop
 801cb20:	08021c76 	.word	0x08021c76
 801cb24:	080221a6 	.word	0x080221a6
 801cb28:	08021c43 	.word	0x08021c43
 801cb2c:	20026f08 	.word	0x20026f08
 801cb30:	00fff800 	.word	0x00fff800

0801cb34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cb34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cb38:	ed2d 8b08 	vpush	{d8-d11}
 801cb3c:	b097      	sub	sp, #92	; 0x5c
 801cb3e:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 801cb42:	9214      	str	r2, [sp, #80]	; 0x50
 801cb44:	9309      	str	r3, [sp, #36]	; 0x24
 801cb46:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801cb48:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801cb4c:	910d      	str	r1, [sp, #52]	; 0x34
 801cb4e:	930f      	str	r3, [sp, #60]	; 0x3c
 801cb50:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801cb54:	9015      	str	r0, [sp, #84]	; 0x54
 801cb56:	6850      	ldr	r0, [r2, #4]
 801cb58:	6812      	ldr	r2, [r2, #0]
 801cb5a:	fb00 1303 	mla	r3, r0, r3, r1
 801cb5e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801cb62:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801cb64:	689b      	ldr	r3, [r3, #8]
 801cb66:	3301      	adds	r3, #1
 801cb68:	f023 0301 	bic.w	r3, r3, #1
 801cb6c:	930a      	str	r3, [sp, #40]	; 0x28
 801cb6e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801cb70:	681f      	ldr	r7, [r3, #0]
 801cb72:	eeb0 aa40 	vmov.f32	s20, s0
 801cb76:	eef0 9a60 	vmov.f32	s19, s1
 801cb7a:	eeb0 9a41 	vmov.f32	s18, s2
 801cb7e:	eeb0 8a62 	vmov.f32	s16, s5
 801cb82:	eef0 8a43 	vmov.f32	s17, s6
 801cb86:	eef0 ba44 	vmov.f32	s23, s8
 801cb8a:	eeb0 ba64 	vmov.f32	s22, s9
 801cb8e:	eef0 aa45 	vmov.f32	s21, s10
 801cb92:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cb94:	2b00      	cmp	r3, #0
 801cb96:	dc03      	bgt.n	801cba0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cb98:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801cb9a:	2b00      	cmp	r3, #0
 801cb9c:	f340 8287 	ble.w	801d0ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 801cba0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801cba2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cba6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cbaa:	1e48      	subs	r0, r1, #1
 801cbac:	f102 3cff 	add.w	ip, r2, #4294967295
 801cbb0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cbb2:	2b00      	cmp	r3, #0
 801cbb4:	f340 80c4 	ble.w	801cd40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801cbb8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801cbbc:	ea4f 4326 	mov.w	r3, r6, asr #16
 801cbc0:	d406      	bmi.n	801cbd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801cbc2:	4586      	cmp	lr, r0
 801cbc4:	da04      	bge.n	801cbd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801cbc6:	2b00      	cmp	r3, #0
 801cbc8:	db02      	blt.n	801cbd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801cbca:	4563      	cmp	r3, ip
 801cbcc:	f2c0 80b9 	blt.w	801cd42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801cbd0:	f11e 0e01 	adds.w	lr, lr, #1
 801cbd4:	f100 80aa 	bmi.w	801cd2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801cbd8:	4571      	cmp	r1, lr
 801cbda:	f2c0 80a7 	blt.w	801cd2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801cbde:	3301      	adds	r3, #1
 801cbe0:	f100 80a4 	bmi.w	801cd2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801cbe4:	429a      	cmp	r2, r3
 801cbe6:	f2c0 80a1 	blt.w	801cd2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801cbea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cbec:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801cbf0:	930e      	str	r3, [sp, #56]	; 0x38
 801cbf2:	46c8      	mov	r8, r9
 801cbf4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cbf6:	2b00      	cmp	r3, #0
 801cbf8:	f340 80c3 	ble.w	801cd82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801cbfc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801cbfe:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801cc02:	1423      	asrs	r3, r4, #16
 801cc04:	ea4f 4026 	mov.w	r0, r6, asr #16
 801cc08:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801cc0c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801cc10:	f100 814d 	bmi.w	801ceae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801cc14:	f10c 3bff 	add.w	fp, ip, #4294967295
 801cc18:	455b      	cmp	r3, fp
 801cc1a:	f280 8148 	bge.w	801ceae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801cc1e:	2800      	cmp	r0, #0
 801cc20:	f2c0 8145 	blt.w	801ceae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801cc24:	f10e 3bff 	add.w	fp, lr, #4294967295
 801cc28:	4558      	cmp	r0, fp
 801cc2a:	f280 8140 	bge.w	801ceae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801cc2e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801cc30:	fb00 3305 	mla	r3, r0, r5, r3
 801cc34:	0858      	lsrs	r0, r3, #1
 801cc36:	07dd      	lsls	r5, r3, #31
 801cc38:	f817 c000 	ldrb.w	ip, [r7, r0]
 801cc3c:	bf54      	ite	pl
 801cc3e:	f00c 0c0f 	andpl.w	ip, ip, #15
 801cc42:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801cc46:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801cc4a:	fa5f fc8c 	uxtb.w	ip, ip
 801cc4e:	2a00      	cmp	r2, #0
 801cc50:	f000 80db 	beq.w	801ce0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801cc54:	1c58      	adds	r0, r3, #1
 801cc56:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801cc5a:	07c0      	lsls	r0, r0, #31
 801cc5c:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801cc60:	bf54      	ite	pl
 801cc62:	f00e 0e0f 	andpl.w	lr, lr, #15
 801cc66:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801cc6a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801cc6e:	fa5f f08e 	uxtb.w	r0, lr
 801cc72:	9010      	str	r0, [sp, #64]	; 0x40
 801cc74:	b1c9      	cbz	r1, 801ccaa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801cc76:	4453      	add	r3, sl
 801cc78:	0858      	lsrs	r0, r3, #1
 801cc7a:	07dd      	lsls	r5, r3, #31
 801cc7c:	5c38      	ldrb	r0, [r7, r0]
 801cc7e:	bf54      	ite	pl
 801cc80:	f000 000f 	andpl.w	r0, r0, #15
 801cc84:	1100      	asrmi	r0, r0, #4
 801cc86:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801cc8a:	3301      	adds	r3, #1
 801cc8c:	b2c0      	uxtb	r0, r0
 801cc8e:	900b      	str	r0, [sp, #44]	; 0x2c
 801cc90:	0858      	lsrs	r0, r3, #1
 801cc92:	07dd      	lsls	r5, r3, #31
 801cc94:	f817 e000 	ldrb.w	lr, [r7, r0]
 801cc98:	bf54      	ite	pl
 801cc9a:	f00e 030f 	andpl.w	r3, lr, #15
 801cc9e:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801cca2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801cca6:	b2db      	uxtb	r3, r3
 801cca8:	9311      	str	r3, [sp, #68]	; 0x44
 801ccaa:	b292      	uxth	r2, r2
 801ccac:	b289      	uxth	r1, r1
 801ccae:	fb02 f301 	mul.w	r3, r2, r1
 801ccb2:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801ccb6:	0112      	lsls	r2, r2, #4
 801ccb8:	b289      	uxth	r1, r1
 801ccba:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801ccbe:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ccc0:	1ad2      	subs	r2, r2, r3
 801ccc2:	1a40      	subs	r0, r0, r1
 801ccc4:	b292      	uxth	r2, r2
 801ccc6:	436a      	muls	r2, r5
 801ccc8:	b280      	uxth	r0, r0
 801ccca:	fb0c 2c00 	mla	ip, ip, r0, r2
 801ccce:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ccd0:	fb01 c102 	mla	r1, r1, r2, ip
 801ccd4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ccd6:	fb03 1302 	mla	r3, r3, r2, r1
 801ccda:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ccde:	b1db      	cbz	r3, 801cd18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801cce0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801cce2:	4353      	muls	r3, r2
 801cce4:	1c5a      	adds	r2, r3, #1
 801cce6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801ccea:	4ac6      	ldr	r2, [pc, #792]	; (801d004 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 801ccec:	121b      	asrs	r3, r3, #8
 801ccee:	6812      	ldr	r2, [r2, #0]
 801ccf0:	2bff      	cmp	r3, #255	; 0xff
 801ccf2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801ccf6:	f040 8099 	bne.w	801ce2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 801ccfa:	0953      	lsrs	r3, r2, #5
 801ccfc:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801cd00:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cd04:	f02c 0c07 	bic.w	ip, ip, #7
 801cd08:	ea43 0c0c 	orr.w	ip, r3, ip
 801cd0c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cd10:	ea4c 0202 	orr.w	r2, ip, r2
 801cd14:	f8a8 2000 	strh.w	r2, [r8]
 801cd18:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801cd1a:	441c      	add	r4, r3
 801cd1c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801cd1e:	441e      	add	r6, r3
 801cd20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cd22:	3b01      	subs	r3, #1
 801cd24:	f108 0802 	add.w	r8, r8, #2
 801cd28:	930e      	str	r3, [sp, #56]	; 0x38
 801cd2a:	e763      	b.n	801cbf4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 801cd2c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801cd2e:	441c      	add	r4, r3
 801cd30:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801cd32:	441e      	add	r6, r3
 801cd34:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cd36:	3b01      	subs	r3, #1
 801cd38:	9309      	str	r3, [sp, #36]	; 0x24
 801cd3a:	f109 0902 	add.w	r9, r9, #2
 801cd3e:	e737      	b.n	801cbb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801cd40:	d024      	beq.n	801cd8c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801cd42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cd44:	982b      	ldr	r0, [sp, #172]	; 0xac
 801cd46:	3b01      	subs	r3, #1
 801cd48:	fb00 4003 	mla	r0, r0, r3, r4
 801cd4c:	1400      	asrs	r0, r0, #16
 801cd4e:	f53f af4c 	bmi.w	801cbea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801cd52:	3901      	subs	r1, #1
 801cd54:	4288      	cmp	r0, r1
 801cd56:	f6bf af48 	bge.w	801cbea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801cd5a:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801cd5c:	fb01 6303 	mla	r3, r1, r3, r6
 801cd60:	141b      	asrs	r3, r3, #16
 801cd62:	f53f af42 	bmi.w	801cbea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801cd66:	3a01      	subs	r2, #1
 801cd68:	4293      	cmp	r3, r2
 801cd6a:	f6bf af3e 	bge.w	801cbea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801cd6e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801cd72:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801cd76:	930e      	str	r3, [sp, #56]	; 0x38
 801cd78:	46c8      	mov	r8, r9
 801cd7a:	f1bb 0f00 	cmp.w	fp, #0
 801cd7e:	f300 80b7 	bgt.w	801cef0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 801cd82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cd84:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801cd88:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801cd8c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cd8e:	2b00      	cmp	r3, #0
 801cd90:	f340 818d 	ble.w	801d0ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 801cd94:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801cd98:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cd9c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801cda0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cda2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801cda6:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801cdaa:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801cdae:	eef0 6a48 	vmov.f32	s13, s16
 801cdb2:	ee69 7a27 	vmul.f32	s15, s18, s15
 801cdb6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cdba:	ee37 8a48 	vsub.f32	s16, s14, s16
 801cdbe:	ee16 4a90 	vmov	r4, s13
 801cdc2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801cdc6:	eef0 6a68 	vmov.f32	s13, s17
 801cdca:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801cdce:	ee18 2a10 	vmov	r2, s16
 801cdd2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801cdd6:	fb92 f3f3 	sdiv	r3, r2, r3
 801cdda:	ee18 2a90 	vmov	r2, s17
 801cdde:	932b      	str	r3, [sp, #172]	; 0xac
 801cde0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cde2:	fb92 f3f3 	sdiv	r3, r2, r3
 801cde6:	932c      	str	r3, [sp, #176]	; 0xb0
 801cde8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cdea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801cdec:	3b01      	subs	r3, #1
 801cdee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cdf2:	930d      	str	r3, [sp, #52]	; 0x34
 801cdf4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cdf6:	bf08      	it	eq
 801cdf8:	4613      	moveq	r3, r2
 801cdfa:	ee16 6a90 	vmov	r6, s13
 801cdfe:	9309      	str	r3, [sp, #36]	; 0x24
 801ce00:	eef0 8a67 	vmov.f32	s17, s15
 801ce04:	eeb0 8a47 	vmov.f32	s16, s14
 801ce08:	e6c3      	b.n	801cb92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801ce0a:	2900      	cmp	r1, #0
 801ce0c:	f43f af4d 	beq.w	801ccaa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801ce10:	eb0a 0003 	add.w	r0, sl, r3
 801ce14:	0843      	lsrs	r3, r0, #1
 801ce16:	07c0      	lsls	r0, r0, #31
 801ce18:	5cfb      	ldrb	r3, [r7, r3]
 801ce1a:	bf54      	ite	pl
 801ce1c:	f003 030f 	andpl.w	r3, r3, #15
 801ce20:	111b      	asrmi	r3, r3, #4
 801ce22:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ce26:	b2db      	uxtb	r3, r3
 801ce28:	930b      	str	r3, [sp, #44]	; 0x2c
 801ce2a:	e73e      	b.n	801ccaa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801ce2c:	f8b8 e000 	ldrh.w	lr, [r8]
 801ce30:	fa1f fb83 	uxth.w	fp, r3
 801ce34:	ea4f 202e 	mov.w	r0, lr, asr #8
 801ce38:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801ce3c:	43db      	mvns	r3, r3
 801ce3e:	b2db      	uxtb	r3, r3
 801ce40:	fb11 f10b 	smulbb	r1, r1, fp
 801ce44:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ce48:	fb00 1003 	mla	r0, r0, r3, r1
 801ce4c:	fa5f fc8c 	uxtb.w	ip, ip
 801ce50:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801ce54:	b2d2      	uxtb	r2, r2
 801ce56:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ce5a:	b280      	uxth	r0, r0
 801ce5c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ce60:	fb1c fc0b 	smulbb	ip, ip, fp
 801ce64:	fa5f fe8e 	uxtb.w	lr, lr
 801ce68:	fb12 fb0b 	smulbb	fp, r2, fp
 801ce6c:	fb01 cc03 	mla	ip, r1, r3, ip
 801ce70:	fb0e bb03 	mla	fp, lr, r3, fp
 801ce74:	1c43      	adds	r3, r0, #1
 801ce76:	fa1f fc8c 	uxth.w	ip, ip
 801ce7a:	fa1f fb8b 	uxth.w	fp, fp
 801ce7e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ce82:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801ce86:	f10c 0101 	add.w	r1, ip, #1
 801ce8a:	f10b 0001 	add.w	r0, fp, #1
 801ce8e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801ce92:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ce96:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801ce9a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ce9e:	4318      	orrs	r0, r3
 801cea0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801cea4:	ea40 000c 	orr.w	r0, r0, ip
 801cea8:	f8a8 0000 	strh.w	r0, [r8]
 801ceac:	e734      	b.n	801cd18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801ceae:	f113 0b01 	adds.w	fp, r3, #1
 801ceb2:	f53f af31 	bmi.w	801cd18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801ceb6:	45dc      	cmp	ip, fp
 801ceb8:	f6ff af2e 	blt.w	801cd18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801cebc:	f110 0b01 	adds.w	fp, r0, #1
 801cec0:	f53f af2a 	bmi.w	801cd18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801cec4:	45de      	cmp	lr, fp
 801cec6:	f6ff af27 	blt.w	801cd18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801ceca:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801cecc:	9302      	str	r3, [sp, #8]
 801cece:	fa0f f38e 	sxth.w	r3, lr
 801ced2:	9301      	str	r3, [sp, #4]
 801ced4:	fa0f f38c 	sxth.w	r3, ip
 801ced8:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801cedc:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801cee0:	9300      	str	r3, [sp, #0]
 801cee2:	463a      	mov	r2, r7
 801cee4:	4653      	mov	r3, sl
 801cee6:	4641      	mov	r1, r8
 801cee8:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ceea:	f7ff fd2b 	bl	801c944 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801ceee:	e713      	b.n	801cd18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801cef0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801cef2:	1422      	asrs	r2, r4, #16
 801cef4:	1433      	asrs	r3, r6, #16
 801cef6:	fb05 2303 	mla	r3, r5, r3, r2
 801cefa:	085a      	lsrs	r2, r3, #1
 801cefc:	07dd      	lsls	r5, r3, #31
 801cefe:	5cba      	ldrb	r2, [r7, r2]
 801cf00:	bf54      	ite	pl
 801cf02:	f002 020f 	andpl.w	r2, r2, #15
 801cf06:	1112      	asrmi	r2, r2, #4
 801cf08:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801cf0c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801cf10:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801cf14:	b2d2      	uxtb	r2, r2
 801cf16:	2900      	cmp	r1, #0
 801cf18:	d076      	beq.n	801d008 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801cf1a:	f103 0e01 	add.w	lr, r3, #1
 801cf1e:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801cf22:	f01e 0f01 	tst.w	lr, #1
 801cf26:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801cf2a:	bf0c      	ite	eq
 801cf2c:	f00c 0c0f 	andeq.w	ip, ip, #15
 801cf30:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801cf34:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801cf38:	fa5f f58c 	uxtb.w	r5, ip
 801cf3c:	9512      	str	r5, [sp, #72]	; 0x48
 801cf3e:	b300      	cbz	r0, 801cf82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801cf40:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801cf42:	442b      	add	r3, r5
 801cf44:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801cf48:	07dd      	lsls	r5, r3, #31
 801cf4a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801cf4e:	bf54      	ite	pl
 801cf50:	f00c 0c0f 	andpl.w	ip, ip, #15
 801cf54:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801cf58:	3301      	adds	r3, #1
 801cf5a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801cf5e:	fa5f f58c 	uxtb.w	r5, ip
 801cf62:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801cf66:	950c      	str	r5, [sp, #48]	; 0x30
 801cf68:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801cf6c:	07dd      	lsls	r5, r3, #31
 801cf6e:	bf54      	ite	pl
 801cf70:	f00c 0c0f 	andpl.w	ip, ip, #15
 801cf74:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801cf78:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801cf7c:	fa5f f38c 	uxtb.w	r3, ip
 801cf80:	9313      	str	r3, [sp, #76]	; 0x4c
 801cf82:	b289      	uxth	r1, r1
 801cf84:	b280      	uxth	r0, r0
 801cf86:	fb01 f300 	mul.w	r3, r1, r0
 801cf8a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801cf8e:	0109      	lsls	r1, r1, #4
 801cf90:	b280      	uxth	r0, r0
 801cf92:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801cf96:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801cf98:	1ac9      	subs	r1, r1, r3
 801cf9a:	ebac 0c00 	sub.w	ip, ip, r0
 801cf9e:	b289      	uxth	r1, r1
 801cfa0:	4369      	muls	r1, r5
 801cfa2:	fa1f fc8c 	uxth.w	ip, ip
 801cfa6:	fb02 120c 	mla	r2, r2, ip, r1
 801cfaa:	990c      	ldr	r1, [sp, #48]	; 0x30
 801cfac:	fb00 2001 	mla	r0, r0, r1, r2
 801cfb0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801cfb2:	fb03 0302 	mla	r3, r3, r2, r0
 801cfb6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cfba:	b1d3      	cbz	r3, 801cff2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 801cfbc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801cfbe:	4353      	muls	r3, r2
 801cfc0:	1c5a      	adds	r2, r3, #1
 801cfc2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801cfc6:	4a0f      	ldr	r2, [pc, #60]	; (801d004 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 801cfc8:	121b      	asrs	r3, r3, #8
 801cfca:	6812      	ldr	r2, [r2, #0]
 801cfcc:	2bff      	cmp	r3, #255	; 0xff
 801cfce:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801cfd2:	d12d      	bne.n	801d030 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 801cfd4:	0953      	lsrs	r3, r2, #5
 801cfd6:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801cfda:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cfde:	f02c 0c07 	bic.w	ip, ip, #7
 801cfe2:	ea43 0c0c 	orr.w	ip, r3, ip
 801cfe6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cfea:	ea4c 0202 	orr.w	r2, ip, r2
 801cfee:	f8a8 2000 	strh.w	r2, [r8]
 801cff2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801cff4:	441c      	add	r4, r3
 801cff6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801cff8:	f108 0802 	add.w	r8, r8, #2
 801cffc:	441e      	add	r6, r3
 801cffe:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d002:	e6ba      	b.n	801cd7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801d004:	20026f08 	.word	0x20026f08
 801d008:	2800      	cmp	r0, #0
 801d00a:	d0ba      	beq.n	801cf82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d00c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801d00e:	442b      	add	r3, r5
 801d010:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801d014:	07db      	lsls	r3, r3, #31
 801d016:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801d01a:	bf54      	ite	pl
 801d01c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801d020:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801d024:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801d028:	fa5f f38c 	uxtb.w	r3, ip
 801d02c:	930c      	str	r3, [sp, #48]	; 0x30
 801d02e:	e7a8      	b.n	801cf82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d030:	f8b8 e000 	ldrh.w	lr, [r8]
 801d034:	fa1f fa83 	uxth.w	sl, r3
 801d038:	ea4f 202e 	mov.w	r0, lr, asr #8
 801d03c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801d040:	43db      	mvns	r3, r3
 801d042:	b2db      	uxtb	r3, r3
 801d044:	fb11 f10a 	smulbb	r1, r1, sl
 801d048:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d04c:	fb00 1003 	mla	r0, r0, r3, r1
 801d050:	b2d2      	uxtb	r2, r2
 801d052:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801d056:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d05a:	fa5f fe8e 	uxtb.w	lr, lr
 801d05e:	fb12 f20a 	smulbb	r2, r2, sl
 801d062:	fb0e 2203 	mla	r2, lr, r3, r2
 801d066:	fa5f fc8c 	uxtb.w	ip, ip
 801d06a:	b280      	uxth	r0, r0
 801d06c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d070:	b292      	uxth	r2, r2
 801d072:	fb1c fc0a 	smulbb	ip, ip, sl
 801d076:	fb01 cc03 	mla	ip, r1, r3, ip
 801d07a:	1c43      	adds	r3, r0, #1
 801d07c:	1c51      	adds	r1, r2, #1
 801d07e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801d082:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801d086:	fa1f fc8c 	uxth.w	ip, ip
 801d08a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801d08e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801d092:	4308      	orrs	r0, r1
 801d094:	f10c 0101 	add.w	r1, ip, #1
 801d098:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801d09c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d0a0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d0a4:	ea40 000c 	orr.w	r0, r0, ip
 801d0a8:	f8a8 0000 	strh.w	r0, [r8]
 801d0ac:	e7a1      	b.n	801cff2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 801d0ae:	b017      	add	sp, #92	; 0x5c
 801d0b0:	ecbd 8b08 	vpop	{d8-d11}
 801d0b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d0b8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801d0b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d0bc:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801d0c0:	2c00      	cmp	r4, #0
 801d0c2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801d0c6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801d0ca:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801d0ce:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801d0d2:	fb04 ce03 	mla	lr, r4, r3, ip
 801d0d6:	db60      	blt.n	801d19a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801d0d8:	45a1      	cmp	r9, r4
 801d0da:	dd5e      	ble.n	801d19a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801d0dc:	f1bc 0f00 	cmp.w	ip, #0
 801d0e0:	db59      	blt.n	801d196 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801d0e2:	45e0      	cmp	r8, ip
 801d0e4:	dd57      	ble.n	801d196 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801d0e6:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801d0ea:	f01e 0f01 	tst.w	lr, #1
 801d0ee:	5c16      	ldrb	r6, [r2, r0]
 801d0f0:	bf0c      	ite	eq
 801d0f2:	f006 060f 	andeq.w	r6, r6, #15
 801d0f6:	1136      	asrne	r6, r6, #4
 801d0f8:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801d0fc:	b2f6      	uxtb	r6, r6
 801d0fe:	f11c 0001 	adds.w	r0, ip, #1
 801d102:	d44d      	bmi.n	801d1a0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801d104:	4580      	cmp	r8, r0
 801d106:	dd4b      	ble.n	801d1a0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801d108:	2d00      	cmp	r5, #0
 801d10a:	d04b      	beq.n	801d1a4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801d10c:	f10e 0a01 	add.w	sl, lr, #1
 801d110:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801d114:	f01a 0f01 	tst.w	sl, #1
 801d118:	5c10      	ldrb	r0, [r2, r0]
 801d11a:	bf0c      	ite	eq
 801d11c:	f000 000f 	andeq.w	r0, r0, #15
 801d120:	1100      	asrne	r0, r0, #4
 801d122:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801d126:	b2c0      	uxtb	r0, r0
 801d128:	3401      	adds	r4, #1
 801d12a:	d43f      	bmi.n	801d1ac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801d12c:	45a1      	cmp	r9, r4
 801d12e:	dd3d      	ble.n	801d1ac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801d130:	2f00      	cmp	r7, #0
 801d132:	f000 8093 	beq.w	801d25c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801d136:	f1bc 0f00 	cmp.w	ip, #0
 801d13a:	db35      	blt.n	801d1a8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801d13c:	45e0      	cmp	r8, ip
 801d13e:	dd33      	ble.n	801d1a8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801d140:	eb03 090e 	add.w	r9, r3, lr
 801d144:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801d148:	f019 0f01 	tst.w	r9, #1
 801d14c:	5d14      	ldrb	r4, [r2, r4]
 801d14e:	bf0c      	ite	eq
 801d150:	f004 040f 	andeq.w	r4, r4, #15
 801d154:	1124      	asrne	r4, r4, #4
 801d156:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801d15a:	b2e4      	uxtb	r4, r4
 801d15c:	f11c 0c01 	adds.w	ip, ip, #1
 801d160:	d427      	bmi.n	801d1b2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801d162:	45e0      	cmp	r8, ip
 801d164:	dd25      	ble.n	801d1b2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801d166:	b335      	cbz	r5, 801d1b6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801d168:	3301      	adds	r3, #1
 801d16a:	449e      	add	lr, r3
 801d16c:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801d170:	f01e 0f01 	tst.w	lr, #1
 801d174:	5cd2      	ldrb	r2, [r2, r3]
 801d176:	bf0c      	ite	eq
 801d178:	f002 020f 	andeq.w	r2, r2, #15
 801d17c:	1112      	asrne	r2, r2, #4
 801d17e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801d182:	b2d3      	uxtb	r3, r2
 801d184:	2d0f      	cmp	r5, #15
 801d186:	d917      	bls.n	801d1b8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801d188:	4b37      	ldr	r3, [pc, #220]	; (801d268 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>)
 801d18a:	4a38      	ldr	r2, [pc, #224]	; (801d26c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b4>)
 801d18c:	4838      	ldr	r0, [pc, #224]	; (801d270 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 801d18e:	f240 11f9 	movw	r1, #505	; 0x1f9
 801d192:	f000 fc4b 	bl	801da2c <__assert_func>
 801d196:	2600      	movs	r6, #0
 801d198:	e7b1      	b.n	801d0fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801d19a:	2000      	movs	r0, #0
 801d19c:	4606      	mov	r6, r0
 801d19e:	e7c3      	b.n	801d128 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801d1a0:	2000      	movs	r0, #0
 801d1a2:	e7c1      	b.n	801d128 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801d1a4:	4628      	mov	r0, r5
 801d1a6:	e7bf      	b.n	801d128 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801d1a8:	2400      	movs	r4, #0
 801d1aa:	e7d7      	b.n	801d15c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801d1ac:	2300      	movs	r3, #0
 801d1ae:	461c      	mov	r4, r3
 801d1b0:	e7e8      	b.n	801d184 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801d1b2:	2300      	movs	r3, #0
 801d1b4:	e7e6      	b.n	801d184 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801d1b6:	462b      	mov	r3, r5
 801d1b8:	2f0f      	cmp	r7, #15
 801d1ba:	d8e5      	bhi.n	801d188 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801d1bc:	b2ad      	uxth	r5, r5
 801d1be:	b2bf      	uxth	r7, r7
 801d1c0:	fb05 fc07 	mul.w	ip, r5, r7
 801d1c4:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801d1c8:	012d      	lsls	r5, r5, #4
 801d1ca:	b2bf      	uxth	r7, r7
 801d1cc:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801d1d0:	eba5 050c 	sub.w	r5, r5, ip
 801d1d4:	1bd2      	subs	r2, r2, r7
 801d1d6:	b2ad      	uxth	r5, r5
 801d1d8:	b292      	uxth	r2, r2
 801d1da:	4368      	muls	r0, r5
 801d1dc:	fb06 0002 	mla	r0, r6, r2, r0
 801d1e0:	fb07 0404 	mla	r4, r7, r4, r0
 801d1e4:	fb0c 4303 	mla	r3, ip, r3, r4
 801d1e8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d1ec:	b3a3      	cbz	r3, 801d258 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801d1ee:	4a21      	ldr	r2, [pc, #132]	; (801d274 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801d1f0:	880e      	ldrh	r6, [r1, #0]
 801d1f2:	6815      	ldr	r5, [r2, #0]
 801d1f4:	1234      	asrs	r4, r6, #8
 801d1f6:	b29a      	uxth	r2, r3
 801d1f8:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801d1fc:	43db      	mvns	r3, r3
 801d1fe:	b2db      	uxtb	r3, r3
 801d200:	fb10 f002 	smulbb	r0, r0, r2
 801d204:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801d208:	fb04 0403 	mla	r4, r4, r3, r0
 801d20c:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801d210:	10f0      	asrs	r0, r6, #3
 801d212:	b2ed      	uxtb	r5, r5
 801d214:	00f6      	lsls	r6, r6, #3
 801d216:	fb17 f702 	smulbb	r7, r7, r2
 801d21a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801d21e:	fb15 f202 	smulbb	r2, r5, r2
 801d222:	b2f6      	uxtb	r6, r6
 801d224:	b2a4      	uxth	r4, r4
 801d226:	fb00 7003 	mla	r0, r0, r3, r7
 801d22a:	fb06 2303 	mla	r3, r6, r3, r2
 801d22e:	b29a      	uxth	r2, r3
 801d230:	1c63      	adds	r3, r4, #1
 801d232:	b280      	uxth	r0, r0
 801d234:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801d238:	1c53      	adds	r3, r2, #1
 801d23a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d23e:	1c42      	adds	r2, r0, #1
 801d240:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d244:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801d248:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d24c:	0940      	lsrs	r0, r0, #5
 801d24e:	4323      	orrs	r3, r4
 801d250:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d254:	4303      	orrs	r3, r0
 801d256:	800b      	strh	r3, [r1, #0]
 801d258:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d25c:	2d0f      	cmp	r5, #15
 801d25e:	d893      	bhi.n	801d188 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801d260:	463b      	mov	r3, r7
 801d262:	463c      	mov	r4, r7
 801d264:	e7aa      	b.n	801d1bc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801d266:	bf00      	nop
 801d268:	08021c76 	.word	0x08021c76
 801d26c:	080221a6 	.word	0x080221a6
 801d270:	08021c43 	.word	0x08021c43
 801d274:	20026f08 	.word	0x20026f08

0801d278 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d278:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d27c:	ed2d 8b08 	vpush	{d8-d11}
 801d280:	b093      	sub	sp, #76	; 0x4c
 801d282:	461d      	mov	r5, r3
 801d284:	920c      	str	r2, [sp, #48]	; 0x30
 801d286:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801d288:	9107      	str	r1, [sp, #28]
 801d28a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801d28e:	9011      	str	r0, [sp, #68]	; 0x44
 801d290:	6850      	ldr	r0, [r2, #4]
 801d292:	6812      	ldr	r2, [r2, #0]
 801d294:	fb00 1303 	mla	r3, r0, r3, r1
 801d298:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801d29c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d29e:	689b      	ldr	r3, [r3, #8]
 801d2a0:	3301      	adds	r3, #1
 801d2a2:	f023 0301 	bic.w	r3, r3, #1
 801d2a6:	9306      	str	r3, [sp, #24]
 801d2a8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d2aa:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801d2ae:	681f      	ldr	r7, [r3, #0]
 801d2b0:	eeb0 aa40 	vmov.f32	s20, s0
 801d2b4:	eef0 9a60 	vmov.f32	s19, s1
 801d2b8:	eeb0 9a41 	vmov.f32	s18, s2
 801d2bc:	eeb0 8a62 	vmov.f32	s16, s5
 801d2c0:	eef0 8a43 	vmov.f32	s17, s6
 801d2c4:	eef0 ba44 	vmov.f32	s23, s8
 801d2c8:	eeb0 ba64 	vmov.f32	s22, s9
 801d2cc:	eef0 aa45 	vmov.f32	s21, s10
 801d2d0:	9b07      	ldr	r3, [sp, #28]
 801d2d2:	2b00      	cmp	r3, #0
 801d2d4:	dc03      	bgt.n	801d2de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d2d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d2d8:	2b00      	cmp	r3, #0
 801d2da:	f340 8267 	ble.w	801d7ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801d2de:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d2e0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d2e4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d2e8:	1e48      	subs	r0, r1, #1
 801d2ea:	f102 3cff 	add.w	ip, r2, #4294967295
 801d2ee:	2d00      	cmp	r5, #0
 801d2f0:	f340 80b8 	ble.w	801d464 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801d2f4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d2f8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d2fc:	d406      	bmi.n	801d30c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d2fe:	4586      	cmp	lr, r0
 801d300:	da04      	bge.n	801d30c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d302:	2b00      	cmp	r3, #0
 801d304:	db02      	blt.n	801d30c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d306:	4563      	cmp	r3, ip
 801d308:	f2c0 80ad 	blt.w	801d466 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d30c:	f11e 0e01 	adds.w	lr, lr, #1
 801d310:	f100 80a0 	bmi.w	801d454 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801d314:	4571      	cmp	r1, lr
 801d316:	f2c0 809d 	blt.w	801d454 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801d31a:	3301      	adds	r3, #1
 801d31c:	f100 809a 	bmi.w	801d454 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801d320:	429a      	cmp	r2, r3
 801d322:	f2c0 8097 	blt.w	801d454 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801d326:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801d32a:	9509      	str	r5, [sp, #36]	; 0x24
 801d32c:	46c8      	mov	r8, r9
 801d32e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d330:	2b00      	cmp	r3, #0
 801d332:	f340 80b6 	ble.w	801d4a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801d336:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801d33a:	9308      	str	r3, [sp, #32]
 801d33c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d33e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801d342:	1423      	asrs	r3, r4, #16
 801d344:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d348:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801d34c:	f100 813e 	bmi.w	801d5cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801d350:	f10c 3bff 	add.w	fp, ip, #4294967295
 801d354:	455b      	cmp	r3, fp
 801d356:	f280 8139 	bge.w	801d5cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801d35a:	2800      	cmp	r0, #0
 801d35c:	f2c0 8136 	blt.w	801d5cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801d360:	f10e 3bff 	add.w	fp, lr, #4294967295
 801d364:	4558      	cmp	r0, fp
 801d366:	f280 8131 	bge.w	801d5cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801d36a:	9a06      	ldr	r2, [sp, #24]
 801d36c:	fb00 3302 	mla	r3, r0, r2, r3
 801d370:	0858      	lsrs	r0, r3, #1
 801d372:	07da      	lsls	r2, r3, #31
 801d374:	f817 c000 	ldrb.w	ip, [r7, r0]
 801d378:	9a08      	ldr	r2, [sp, #32]
 801d37a:	bf54      	ite	pl
 801d37c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801d380:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801d384:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801d388:	fa5f fc8c 	uxtb.w	ip, ip
 801d38c:	2a00      	cmp	r2, #0
 801d38e:	f000 80cb 	beq.w	801d528 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801d392:	1c58      	adds	r0, r3, #1
 801d394:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801d398:	07c0      	lsls	r0, r0, #31
 801d39a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d39e:	bf54      	ite	pl
 801d3a0:	f00e 0e0f 	andpl.w	lr, lr, #15
 801d3a4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801d3a8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801d3ac:	fa5f fe8e 	uxtb.w	lr, lr
 801d3b0:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801d3b4:	b1b9      	cbz	r1, 801d3e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801d3b6:	4453      	add	r3, sl
 801d3b8:	0858      	lsrs	r0, r3, #1
 801d3ba:	07da      	lsls	r2, r3, #31
 801d3bc:	5c38      	ldrb	r0, [r7, r0]
 801d3be:	bf54      	ite	pl
 801d3c0:	f000 000f 	andpl.w	r0, r0, #15
 801d3c4:	1100      	asrmi	r0, r0, #4
 801d3c6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801d3ca:	b2c0      	uxtb	r0, r0
 801d3cc:	900a      	str	r0, [sp, #40]	; 0x28
 801d3ce:	1c58      	adds	r0, r3, #1
 801d3d0:	0843      	lsrs	r3, r0, #1
 801d3d2:	07c2      	lsls	r2, r0, #31
 801d3d4:	5cfb      	ldrb	r3, [r7, r3]
 801d3d6:	bf54      	ite	pl
 801d3d8:	f003 030f 	andpl.w	r3, r3, #15
 801d3dc:	111b      	asrmi	r3, r3, #4
 801d3de:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801d3e2:	b2db      	uxtb	r3, r3
 801d3e4:	930e      	str	r3, [sp, #56]	; 0x38
 801d3e6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801d3ea:	b289      	uxth	r1, r1
 801d3ec:	fb02 f301 	mul.w	r3, r2, r1
 801d3f0:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801d3f4:	0112      	lsls	r2, r2, #4
 801d3f6:	b289      	uxth	r1, r1
 801d3f8:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801d3fc:	1a40      	subs	r0, r0, r1
 801d3fe:	fa1f fe80 	uxth.w	lr, r0
 801d402:	1ad2      	subs	r2, r2, r3
 801d404:	980d      	ldr	r0, [sp, #52]	; 0x34
 801d406:	b292      	uxth	r2, r2
 801d408:	4342      	muls	r2, r0
 801d40a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801d40e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d410:	fb01 c102 	mla	r1, r1, r2, ip
 801d414:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d416:	fb03 1302 	mla	r3, r3, r2, r1
 801d41a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d41e:	2bff      	cmp	r3, #255	; 0xff
 801d420:	f040 8093 	bne.w	801d54a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 801d424:	4bbe      	ldr	r3, [pc, #760]	; (801d720 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801d426:	681a      	ldr	r2, [r3, #0]
 801d428:	4bbe      	ldr	r3, [pc, #760]	; (801d724 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801d42a:	0951      	lsrs	r1, r2, #5
 801d42c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801d430:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d434:	430b      	orrs	r3, r1
 801d436:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d43a:	4313      	orrs	r3, r2
 801d43c:	f8a8 3000 	strh.w	r3, [r8]
 801d440:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801d442:	441c      	add	r4, r3
 801d444:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d446:	441e      	add	r6, r3
 801d448:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d44a:	3b01      	subs	r3, #1
 801d44c:	f108 0802 	add.w	r8, r8, #2
 801d450:	9309      	str	r3, [sp, #36]	; 0x24
 801d452:	e76c      	b.n	801d32e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801d454:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801d456:	441c      	add	r4, r3
 801d458:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d45a:	3d01      	subs	r5, #1
 801d45c:	441e      	add	r6, r3
 801d45e:	f109 0902 	add.w	r9, r9, #2
 801d462:	e744      	b.n	801d2ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d464:	d021      	beq.n	801d4aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801d466:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801d468:	1e6b      	subs	r3, r5, #1
 801d46a:	fb00 4003 	mla	r0, r0, r3, r4
 801d46e:	1400      	asrs	r0, r0, #16
 801d470:	f53f af59 	bmi.w	801d326 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801d474:	3901      	subs	r1, #1
 801d476:	4288      	cmp	r0, r1
 801d478:	f6bf af55 	bge.w	801d326 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801d47c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801d47e:	fb01 6303 	mla	r3, r1, r3, r6
 801d482:	141b      	asrs	r3, r3, #16
 801d484:	f53f af4f 	bmi.w	801d326 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801d488:	3a01      	subs	r2, #1
 801d48a:	4293      	cmp	r3, r2
 801d48c:	f6bf af4b 	bge.w	801d326 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801d490:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801d494:	9308      	str	r3, [sp, #32]
 801d496:	46a8      	mov	r8, r5
 801d498:	46ce      	mov	lr, r9
 801d49a:	f1b8 0f00 	cmp.w	r8, #0
 801d49e:	f300 80b5 	bgt.w	801d60c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801d4a2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801d4a6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801d4aa:	9b07      	ldr	r3, [sp, #28]
 801d4ac:	2b00      	cmp	r3, #0
 801d4ae:	f340 817d 	ble.w	801d7ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801d4b2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801d4b6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d4ba:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801d4be:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d4c0:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801d4c4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801d4c8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801d4cc:	eef0 6a48 	vmov.f32	s13, s16
 801d4d0:	ee69 7a27 	vmul.f32	s15, s18, s15
 801d4d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d4d8:	ee37 8a48 	vsub.f32	s16, s14, s16
 801d4dc:	ee16 4a90 	vmov	r4, s13
 801d4e0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801d4e4:	eef0 6a68 	vmov.f32	s13, s17
 801d4e8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801d4ec:	ee18 2a10 	vmov	r2, s16
 801d4f0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801d4f4:	fb92 f3f3 	sdiv	r3, r2, r3
 801d4f8:	ee18 2a90 	vmov	r2, s17
 801d4fc:	9327      	str	r3, [sp, #156]	; 0x9c
 801d4fe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d500:	fb92 f3f3 	sdiv	r3, r2, r3
 801d504:	9328      	str	r3, [sp, #160]	; 0xa0
 801d506:	9b07      	ldr	r3, [sp, #28]
 801d508:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d50a:	3b01      	subs	r3, #1
 801d50c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d510:	9307      	str	r3, [sp, #28]
 801d512:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d514:	ee16 6a90 	vmov	r6, s13
 801d518:	bf14      	ite	ne
 801d51a:	461d      	movne	r5, r3
 801d51c:	4615      	moveq	r5, r2
 801d51e:	eef0 8a67 	vmov.f32	s17, s15
 801d522:	eeb0 8a47 	vmov.f32	s16, s14
 801d526:	e6d3      	b.n	801d2d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d528:	2900      	cmp	r1, #0
 801d52a:	f43f af5c 	beq.w	801d3e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801d52e:	eb0a 0003 	add.w	r0, sl, r3
 801d532:	0843      	lsrs	r3, r0, #1
 801d534:	07c0      	lsls	r0, r0, #31
 801d536:	5cfb      	ldrb	r3, [r7, r3]
 801d538:	bf54      	ite	pl
 801d53a:	f003 030f 	andpl.w	r3, r3, #15
 801d53e:	111b      	asrmi	r3, r3, #4
 801d540:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801d544:	b2db      	uxtb	r3, r3
 801d546:	930a      	str	r3, [sp, #40]	; 0x28
 801d548:	e74d      	b.n	801d3e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801d54a:	2b00      	cmp	r3, #0
 801d54c:	f43f af78 	beq.w	801d440 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d550:	4a73      	ldr	r2, [pc, #460]	; (801d720 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801d552:	f8b8 c000 	ldrh.w	ip, [r8]
 801d556:	6810      	ldr	r0, [r2, #0]
 801d558:	fa1f fe83 	uxth.w	lr, r3
 801d55c:	ea4f 212c 	mov.w	r1, ip, asr #8
 801d560:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801d564:	43db      	mvns	r3, r3
 801d566:	b2db      	uxtb	r3, r3
 801d568:	fb12 f20e 	smulbb	r2, r2, lr
 801d56c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d570:	fb01 2103 	mla	r1, r1, r3, r2
 801d574:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801d578:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801d57c:	b2c0      	uxtb	r0, r0
 801d57e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d582:	fb1b fb0e 	smulbb	fp, fp, lr
 801d586:	b289      	uxth	r1, r1
 801d588:	fb10 fe0e 	smulbb	lr, r0, lr
 801d58c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d590:	fa5f fc8c 	uxtb.w	ip, ip
 801d594:	fb02 b203 	mla	r2, r2, r3, fp
 801d598:	1c48      	adds	r0, r1, #1
 801d59a:	fb0c e303 	mla	r3, ip, r3, lr
 801d59e:	b292      	uxth	r2, r2
 801d5a0:	b29b      	uxth	r3, r3
 801d5a2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801d5a6:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801d5aa:	f102 0b01 	add.w	fp, r2, #1
 801d5ae:	1c59      	adds	r1, r3, #1
 801d5b0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801d5b4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801d5b8:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801d5bc:	0952      	lsrs	r2, r2, #5
 801d5be:	4301      	orrs	r1, r0
 801d5c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d5c4:	4311      	orrs	r1, r2
 801d5c6:	f8a8 1000 	strh.w	r1, [r8]
 801d5ca:	e739      	b.n	801d440 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d5cc:	f113 0b01 	adds.w	fp, r3, #1
 801d5d0:	f53f af36 	bmi.w	801d440 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d5d4:	45dc      	cmp	ip, fp
 801d5d6:	f6ff af33 	blt.w	801d440 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d5da:	f110 0b01 	adds.w	fp, r0, #1
 801d5de:	f53f af2f 	bmi.w	801d440 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d5e2:	45de      	cmp	lr, fp
 801d5e4:	f6ff af2c 	blt.w	801d440 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d5e8:	9a08      	ldr	r2, [sp, #32]
 801d5ea:	9302      	str	r3, [sp, #8]
 801d5ec:	fa0f f38e 	sxth.w	r3, lr
 801d5f0:	9301      	str	r3, [sp, #4]
 801d5f2:	fa0f f38c 	sxth.w	r3, ip
 801d5f6:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801d5fa:	9105      	str	r1, [sp, #20]
 801d5fc:	9300      	str	r3, [sp, #0]
 801d5fe:	463a      	mov	r2, r7
 801d600:	4653      	mov	r3, sl
 801d602:	4641      	mov	r1, r8
 801d604:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d606:	f7ff fd57 	bl	801d0b8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801d60a:	e719      	b.n	801d440 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801d60c:	9906      	ldr	r1, [sp, #24]
 801d60e:	1422      	asrs	r2, r4, #16
 801d610:	1433      	asrs	r3, r6, #16
 801d612:	fb01 2303 	mla	r3, r1, r3, r2
 801d616:	085a      	lsrs	r2, r3, #1
 801d618:	07d9      	lsls	r1, r3, #31
 801d61a:	5cba      	ldrb	r2, [r7, r2]
 801d61c:	bf54      	ite	pl
 801d61e:	f002 020f 	andpl.w	r2, r2, #15
 801d622:	1112      	asrmi	r2, r2, #4
 801d624:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801d628:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801d62c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d630:	b2d2      	uxtb	r2, r2
 801d632:	2800      	cmp	r0, #0
 801d634:	d062      	beq.n	801d6fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801d636:	f103 0a01 	add.w	sl, r3, #1
 801d63a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801d63e:	f01a 0f01 	tst.w	sl, #1
 801d642:	5c79      	ldrb	r1, [r7, r1]
 801d644:	bf0c      	ite	eq
 801d646:	f001 010f 	andeq.w	r1, r1, #15
 801d64a:	1109      	asrne	r1, r1, #4
 801d64c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801d650:	b2c9      	uxtb	r1, r1
 801d652:	910f      	str	r1, [sp, #60]	; 0x3c
 801d654:	f1bc 0f00 	cmp.w	ip, #0
 801d658:	d019      	beq.n	801d68e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801d65a:	9908      	ldr	r1, [sp, #32]
 801d65c:	440b      	add	r3, r1
 801d65e:	0859      	lsrs	r1, r3, #1
 801d660:	f013 0f01 	tst.w	r3, #1
 801d664:	5c79      	ldrb	r1, [r7, r1]
 801d666:	bf0c      	ite	eq
 801d668:	f001 010f 	andeq.w	r1, r1, #15
 801d66c:	1109      	asrne	r1, r1, #4
 801d66e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801d672:	b2c9      	uxtb	r1, r1
 801d674:	3301      	adds	r3, #1
 801d676:	910b      	str	r1, [sp, #44]	; 0x2c
 801d678:	0859      	lsrs	r1, r3, #1
 801d67a:	07db      	lsls	r3, r3, #31
 801d67c:	5c79      	ldrb	r1, [r7, r1]
 801d67e:	bf54      	ite	pl
 801d680:	f001 010f 	andpl.w	r1, r1, #15
 801d684:	1109      	asrmi	r1, r1, #4
 801d686:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801d68a:	b2c9      	uxtb	r1, r1
 801d68c:	9110      	str	r1, [sp, #64]	; 0x40
 801d68e:	b280      	uxth	r0, r0
 801d690:	fa1f fc8c 	uxth.w	ip, ip
 801d694:	fb00 f30c 	mul.w	r3, r0, ip
 801d698:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801d69c:	0100      	lsls	r0, r0, #4
 801d69e:	fa1f fc8c 	uxth.w	ip, ip
 801d6a2:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801d6a6:	eba1 010c 	sub.w	r1, r1, ip
 801d6aa:	fa1f fa81 	uxth.w	sl, r1
 801d6ae:	1ac0      	subs	r0, r0, r3
 801d6b0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d6b2:	b280      	uxth	r0, r0
 801d6b4:	4348      	muls	r0, r1
 801d6b6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801d6b8:	fb02 020a 	mla	r2, r2, sl, r0
 801d6bc:	fb0c 2c01 	mla	ip, ip, r1, r2
 801d6c0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d6c2:	fb03 c302 	mla	r3, r3, r2, ip
 801d6c6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d6ca:	2bff      	cmp	r3, #255	; 0xff
 801d6cc:	d12c      	bne.n	801d728 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801d6ce:	4b14      	ldr	r3, [pc, #80]	; (801d720 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801d6d0:	681a      	ldr	r2, [r3, #0]
 801d6d2:	4b14      	ldr	r3, [pc, #80]	; (801d724 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801d6d4:	0951      	lsrs	r1, r2, #5
 801d6d6:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801d6da:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d6de:	430b      	orrs	r3, r1
 801d6e0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d6e4:	4313      	orrs	r3, r2
 801d6e6:	f8ae 3000 	strh.w	r3, [lr]
 801d6ea:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801d6ec:	441c      	add	r4, r3
 801d6ee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d6f0:	f10e 0e02 	add.w	lr, lr, #2
 801d6f4:	441e      	add	r6, r3
 801d6f6:	f108 38ff 	add.w	r8, r8, #4294967295
 801d6fa:	e6ce      	b.n	801d49a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801d6fc:	f1bc 0f00 	cmp.w	ip, #0
 801d700:	d0c5      	beq.n	801d68e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801d702:	9908      	ldr	r1, [sp, #32]
 801d704:	440b      	add	r3, r1
 801d706:	0859      	lsrs	r1, r3, #1
 801d708:	07db      	lsls	r3, r3, #31
 801d70a:	5c79      	ldrb	r1, [r7, r1]
 801d70c:	bf54      	ite	pl
 801d70e:	f001 010f 	andpl.w	r1, r1, #15
 801d712:	1109      	asrmi	r1, r1, #4
 801d714:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801d718:	b2c9      	uxtb	r1, r1
 801d71a:	910b      	str	r1, [sp, #44]	; 0x2c
 801d71c:	e7b7      	b.n	801d68e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801d71e:	bf00      	nop
 801d720:	20026f08 	.word	0x20026f08
 801d724:	fffff800 	.word	0xfffff800
 801d728:	2b00      	cmp	r3, #0
 801d72a:	d0de      	beq.n	801d6ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801d72c:	4a22      	ldr	r2, [pc, #136]	; (801d7b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>)
 801d72e:	f8be c000 	ldrh.w	ip, [lr]
 801d732:	6810      	ldr	r0, [r2, #0]
 801d734:	fa1f fa83 	uxth.w	sl, r3
 801d738:	ea4f 212c 	mov.w	r1, ip, asr #8
 801d73c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801d740:	43db      	mvns	r3, r3
 801d742:	b2db      	uxtb	r3, r3
 801d744:	fb12 f20a 	smulbb	r2, r2, sl
 801d748:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d74c:	fb01 2103 	mla	r1, r1, r3, r2
 801d750:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801d754:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801d758:	b2c0      	uxtb	r0, r0
 801d75a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d75e:	fa5f fc8c 	uxtb.w	ip, ip
 801d762:	fb10 f00a 	smulbb	r0, r0, sl
 801d766:	fb0c 0003 	mla	r0, ip, r3, r0
 801d76a:	b289      	uxth	r1, r1
 801d76c:	fb1b fb0a 	smulbb	fp, fp, sl
 801d770:	b280      	uxth	r0, r0
 801d772:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d776:	fb02 b203 	mla	r2, r2, r3, fp
 801d77a:	1c4b      	adds	r3, r1, #1
 801d77c:	f100 0b01 	add.w	fp, r0, #1
 801d780:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801d784:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801d788:	b292      	uxth	r2, r2
 801d78a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801d78e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801d792:	ea4b 0101 	orr.w	r1, fp, r1
 801d796:	f102 0b01 	add.w	fp, r2, #1
 801d79a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801d79e:	0952      	lsrs	r2, r2, #5
 801d7a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d7a4:	4311      	orrs	r1, r2
 801d7a6:	f8ae 1000 	strh.w	r1, [lr]
 801d7aa:	e79e      	b.n	801d6ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801d7ac:	b013      	add	sp, #76	; 0x4c
 801d7ae:	ecbd 8b08 	vpop	{d8-d11}
 801d7b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d7b6:	bf00      	nop
 801d7b8:	20026f08 	.word	0x20026f08

0801d7bc <CRC_Lock>:
 801d7bc:	b530      	push	{r4, r5, lr}
 801d7be:	4a20      	ldr	r2, [pc, #128]	; (801d840 <CRC_Lock+0x84>)
 801d7c0:	6813      	ldr	r3, [r2, #0]
 801d7c2:	f023 0301 	bic.w	r3, r3, #1
 801d7c6:	6013      	str	r3, [r2, #0]
 801d7c8:	4b1e      	ldr	r3, [pc, #120]	; (801d844 <CRC_Lock+0x88>)
 801d7ca:	681a      	ldr	r2, [r3, #0]
 801d7cc:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801d7d0:	4022      	ands	r2, r4
 801d7d2:	f24c 2540 	movw	r5, #49728	; 0xc240
 801d7d6:	42aa      	cmp	r2, r5
 801d7d8:	d005      	beq.n	801d7e6 <CRC_Lock+0x2a>
 801d7da:	681b      	ldr	r3, [r3, #0]
 801d7dc:	f24c 2270 	movw	r2, #49776	; 0xc270
 801d7e0:	4023      	ands	r3, r4
 801d7e2:	4293      	cmp	r3, r2
 801d7e4:	d124      	bne.n	801d830 <CRC_Lock+0x74>
 801d7e6:	4b18      	ldr	r3, [pc, #96]	; (801d848 <CRC_Lock+0x8c>)
 801d7e8:	681b      	ldr	r3, [r3, #0]
 801d7ea:	bb0b      	cbnz	r3, 801d830 <CRC_Lock+0x74>
 801d7ec:	4b17      	ldr	r3, [pc, #92]	; (801d84c <CRC_Lock+0x90>)
 801d7ee:	681a      	ldr	r2, [r3, #0]
 801d7f0:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801d7f4:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801d7f8:	d00d      	beq.n	801d816 <CRC_Lock+0x5a>
 801d7fa:	681a      	ldr	r2, [r3, #0]
 801d7fc:	f240 4483 	movw	r4, #1155	; 0x483
 801d800:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801d804:	42a2      	cmp	r2, r4
 801d806:	d006      	beq.n	801d816 <CRC_Lock+0x5a>
 801d808:	681b      	ldr	r3, [r3, #0]
 801d80a:	f240 4285 	movw	r2, #1157	; 0x485
 801d80e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801d812:	4293      	cmp	r3, r2
 801d814:	d10c      	bne.n	801d830 <CRC_Lock+0x74>
 801d816:	4b0e      	ldr	r3, [pc, #56]	; (801d850 <CRC_Lock+0x94>)
 801d818:	2201      	movs	r2, #1
 801d81a:	601a      	str	r2, [r3, #0]
 801d81c:	681a      	ldr	r2, [r3, #0]
 801d81e:	2a00      	cmp	r2, #0
 801d820:	d1fc      	bne.n	801d81c <CRC_Lock+0x60>
 801d822:	4b0c      	ldr	r3, [pc, #48]	; (801d854 <CRC_Lock+0x98>)
 801d824:	6018      	str	r0, [r3, #0]
 801d826:	6818      	ldr	r0, [r3, #0]
 801d828:	1a43      	subs	r3, r0, r1
 801d82a:	4258      	negs	r0, r3
 801d82c:	4158      	adcs	r0, r3
 801d82e:	bd30      	pop	{r4, r5, pc}
 801d830:	4b09      	ldr	r3, [pc, #36]	; (801d858 <CRC_Lock+0x9c>)
 801d832:	2201      	movs	r2, #1
 801d834:	601a      	str	r2, [r3, #0]
 801d836:	681a      	ldr	r2, [r3, #0]
 801d838:	2a00      	cmp	r2, #0
 801d83a:	d1fc      	bne.n	801d836 <CRC_Lock+0x7a>
 801d83c:	4b07      	ldr	r3, [pc, #28]	; (801d85c <CRC_Lock+0xa0>)
 801d83e:	e7f1      	b.n	801d824 <CRC_Lock+0x68>
 801d840:	e0002000 	.word	0xe0002000
 801d844:	e000ed00 	.word	0xe000ed00
 801d848:	e0042000 	.word	0xe0042000
 801d84c:	5c001000 	.word	0x5c001000
 801d850:	58024c08 	.word	0x58024c08
 801d854:	58024c00 	.word	0x58024c00
 801d858:	40023008 	.word	0x40023008
 801d85c:	40023000 	.word	0x40023000

0801d860 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801d860:	6101      	str	r1, [r0, #16]
 801d862:	4770      	bx	lr

0801d864 <_ZN8touchgfx8Gestures4tickEv>:
 801d864:	7b83      	ldrb	r3, [r0, #14]
 801d866:	b14b      	cbz	r3, 801d87c <_ZN8touchgfx8Gestures4tickEv+0x18>
 801d868:	8903      	ldrh	r3, [r0, #8]
 801d86a:	3301      	adds	r3, #1
 801d86c:	b29b      	uxth	r3, r3
 801d86e:	2b07      	cmp	r3, #7
 801d870:	8103      	strh	r3, [r0, #8]
 801d872:	bf81      	itttt	hi
 801d874:	2300      	movhi	r3, #0
 801d876:	8143      	strhhi	r3, [r0, #10]
 801d878:	8183      	strhhi	r3, [r0, #12]
 801d87a:	7383      	strbhi	r3, [r0, #14]
 801d87c:	4770      	bx	lr
	...

0801d880 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801d880:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801d884:	4698      	mov	r8, r3
 801d886:	8883      	ldrh	r3, [r0, #4]
 801d888:	f8ad 3006 	strh.w	r3, [sp, #6]
 801d88c:	eba8 0303 	sub.w	r3, r8, r3
 801d890:	b21b      	sxth	r3, r3
 801d892:	4604      	mov	r4, r0
 801d894:	2b00      	cmp	r3, #0
 801d896:	4617      	mov	r7, r2
 801d898:	4a18      	ldr	r2, [pc, #96]	; (801d8fc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801d89a:	9200      	str	r2, [sp, #0]
 801d89c:	bfb8      	it	lt
 801d89e:	425b      	neglt	r3, r3
 801d8a0:	8aa2      	ldrh	r2, [r4, #20]
 801d8a2:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801d8a6:	f8ad 800a 	strh.w	r8, [sp, #10]
 801d8aa:	b21b      	sxth	r3, r3
 801d8ac:	460e      	mov	r6, r1
 801d8ae:	4293      	cmp	r3, r2
 801d8b0:	88c1      	ldrh	r1, [r0, #6]
 801d8b2:	f8ad 1008 	strh.w	r1, [sp, #8]
 801d8b6:	f04f 0000 	mov.w	r0, #0
 801d8ba:	f88d 0004 	strb.w	r0, [sp, #4]
 801d8be:	f8ad 500c 	strh.w	r5, [sp, #12]
 801d8c2:	dc07      	bgt.n	801d8d4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 801d8c4:	1a69      	subs	r1, r5, r1
 801d8c6:	b209      	sxth	r1, r1
 801d8c8:	2900      	cmp	r1, #0
 801d8ca:	bfb8      	it	lt
 801d8cc:	4249      	neglt	r1, r1
 801d8ce:	b209      	sxth	r1, r1
 801d8d0:	428a      	cmp	r2, r1
 801d8d2:	da10      	bge.n	801d8f6 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 801d8d4:	6920      	ldr	r0, [r4, #16]
 801d8d6:	6803      	ldr	r3, [r0, #0]
 801d8d8:	4669      	mov	r1, sp
 801d8da:	685b      	ldr	r3, [r3, #4]
 801d8dc:	4798      	blx	r3
 801d8de:	eba8 0606 	sub.w	r6, r8, r6
 801d8e2:	2300      	movs	r3, #0
 801d8e4:	1bef      	subs	r7, r5, r7
 801d8e6:	2001      	movs	r0, #1
 801d8e8:	8123      	strh	r3, [r4, #8]
 801d8ea:	8166      	strh	r6, [r4, #10]
 801d8ec:	81a7      	strh	r7, [r4, #12]
 801d8ee:	f8a4 8004 	strh.w	r8, [r4, #4]
 801d8f2:	80e5      	strh	r5, [r4, #6]
 801d8f4:	73a0      	strb	r0, [r4, #14]
 801d8f6:	b004      	add	sp, #16
 801d8f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d8fc:	08021060 	.word	0x08021060

0801d900 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801d900:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d902:	461e      	mov	r6, r3
 801d904:	1e4b      	subs	r3, r1, #1
 801d906:	2b01      	cmp	r3, #1
 801d908:	b085      	sub	sp, #20
 801d90a:	4604      	mov	r4, r0
 801d90c:	460d      	mov	r5, r1
 801d90e:	4617      	mov	r7, r2
 801d910:	d84b      	bhi.n	801d9aa <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801d912:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801d916:	1cd3      	adds	r3, r2, #3
 801d918:	b29b      	uxth	r3, r3
 801d91a:	2b06      	cmp	r3, #6
 801d91c:	d916      	bls.n	801d94c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801d91e:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801d9c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801d922:	f8cd c004 	str.w	ip, [sp, #4]
 801d926:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d92a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801d92e:	6900      	ldr	r0, [r0, #16]
 801d930:	f8ad 100c 	strh.w	r1, [sp, #12]
 801d934:	f04f 0c00 	mov.w	ip, #0
 801d938:	f88d c008 	strb.w	ip, [sp, #8]
 801d93c:	f8ad 200a 	strh.w	r2, [sp, #10]
 801d940:	f8ad 300e 	strh.w	r3, [sp, #14]
 801d944:	6803      	ldr	r3, [r0, #0]
 801d946:	a901      	add	r1, sp, #4
 801d948:	689b      	ldr	r3, [r3, #8]
 801d94a:	4798      	blx	r3
 801d94c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801d950:	1cd3      	adds	r3, r2, #3
 801d952:	b29b      	uxth	r3, r3
 801d954:	2b06      	cmp	r3, #6
 801d956:	d916      	bls.n	801d986 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801d958:	f8df c064 	ldr.w	ip, [pc, #100]	; 801d9c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801d95c:	f8cd c004 	str.w	ip, [sp, #4]
 801d960:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d964:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801d968:	6920      	ldr	r0, [r4, #16]
 801d96a:	f8ad 100c 	strh.w	r1, [sp, #12]
 801d96e:	f04f 0c01 	mov.w	ip, #1
 801d972:	f88d c008 	strb.w	ip, [sp, #8]
 801d976:	f8ad 200a 	strh.w	r2, [sp, #10]
 801d97a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801d97e:	6803      	ldr	r3, [r0, #0]
 801d980:	a901      	add	r1, sp, #4
 801d982:	689b      	ldr	r3, [r3, #8]
 801d984:	4798      	blx	r3
 801d986:	4b0d      	ldr	r3, [pc, #52]	; (801d9bc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801d988:	9301      	str	r3, [sp, #4]
 801d98a:	6920      	ldr	r0, [r4, #16]
 801d98c:	f88d 5008 	strb.w	r5, [sp, #8]
 801d990:	2300      	movs	r3, #0
 801d992:	f8ad 700a 	strh.w	r7, [sp, #10]
 801d996:	f8ad 600c 	strh.w	r6, [sp, #12]
 801d99a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801d99e:	6803      	ldr	r3, [r0, #0]
 801d9a0:	a901      	add	r1, sp, #4
 801d9a2:	681b      	ldr	r3, [r3, #0]
 801d9a4:	4798      	blx	r3
 801d9a6:	b005      	add	sp, #20
 801d9a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801d9aa:	2900      	cmp	r1, #0
 801d9ac:	d1eb      	bne.n	801d986 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801d9ae:	80a2      	strh	r2, [r4, #4]
 801d9b0:	80c6      	strh	r6, [r0, #6]
 801d9b2:	60a1      	str	r1, [r4, #8]
 801d9b4:	81a1      	strh	r1, [r4, #12]
 801d9b6:	73a1      	strb	r1, [r4, #14]
 801d9b8:	e7e5      	b.n	801d986 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801d9ba:	bf00      	nop
 801d9bc:	0802104c 	.word	0x0802104c
 801d9c0:	08021074 	.word	0x08021074

0801d9c4 <__aeabi_atexit>:
 801d9c4:	460b      	mov	r3, r1
 801d9c6:	4601      	mov	r1, r0
 801d9c8:	4618      	mov	r0, r3
 801d9ca:	f000 b853 	b.w	801da74 <__cxa_atexit>

0801d9ce <_ZdlPvj>:
 801d9ce:	f000 b812 	b.w	801d9f6 <_ZdlPv>

0801d9d2 <__cxa_guard_acquire>:
 801d9d2:	6803      	ldr	r3, [r0, #0]
 801d9d4:	07db      	lsls	r3, r3, #31
 801d9d6:	d406      	bmi.n	801d9e6 <__cxa_guard_acquire+0x14>
 801d9d8:	7843      	ldrb	r3, [r0, #1]
 801d9da:	b103      	cbz	r3, 801d9de <__cxa_guard_acquire+0xc>
 801d9dc:	deff      	udf	#255	; 0xff
 801d9de:	2301      	movs	r3, #1
 801d9e0:	7043      	strb	r3, [r0, #1]
 801d9e2:	4618      	mov	r0, r3
 801d9e4:	4770      	bx	lr
 801d9e6:	2000      	movs	r0, #0
 801d9e8:	4770      	bx	lr

0801d9ea <__cxa_guard_release>:
 801d9ea:	2301      	movs	r3, #1
 801d9ec:	6003      	str	r3, [r0, #0]
 801d9ee:	4770      	bx	lr

0801d9f0 <__cxa_pure_virtual>:
 801d9f0:	b508      	push	{r3, lr}
 801d9f2:	f000 f80f 	bl	801da14 <_ZSt9terminatev>

0801d9f6 <_ZdlPv>:
 801d9f6:	f000 b88f 	b.w	801db18 <free>

0801d9fa <_ZN10__cxxabiv111__terminateEPFvvE>:
 801d9fa:	b508      	push	{r3, lr}
 801d9fc:	4780      	blx	r0
 801d9fe:	f000 f80e 	bl	801da1e <abort>
	...

0801da04 <_ZSt13get_terminatev>:
 801da04:	4b02      	ldr	r3, [pc, #8]	; (801da10 <_ZSt13get_terminatev+0xc>)
 801da06:	6818      	ldr	r0, [r3, #0]
 801da08:	f3bf 8f5b 	dmb	ish
 801da0c:	4770      	bx	lr
 801da0e:	bf00      	nop
 801da10:	200000f0 	.word	0x200000f0

0801da14 <_ZSt9terminatev>:
 801da14:	b508      	push	{r3, lr}
 801da16:	f7ff fff5 	bl	801da04 <_ZSt13get_terminatev>
 801da1a:	f7ff ffee 	bl	801d9fa <_ZN10__cxxabiv111__terminateEPFvvE>

0801da1e <abort>:
 801da1e:	b508      	push	{r3, lr}
 801da20:	2006      	movs	r0, #6
 801da22:	f000 fc9d 	bl	801e360 <raise>
 801da26:	2001      	movs	r0, #1
 801da28:	f7e3 fde8 	bl	80015fc <_exit>

0801da2c <__assert_func>:
 801da2c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801da2e:	4614      	mov	r4, r2
 801da30:	461a      	mov	r2, r3
 801da32:	4b09      	ldr	r3, [pc, #36]	; (801da58 <__assert_func+0x2c>)
 801da34:	681b      	ldr	r3, [r3, #0]
 801da36:	4605      	mov	r5, r0
 801da38:	68d8      	ldr	r0, [r3, #12]
 801da3a:	b14c      	cbz	r4, 801da50 <__assert_func+0x24>
 801da3c:	4b07      	ldr	r3, [pc, #28]	; (801da5c <__assert_func+0x30>)
 801da3e:	9100      	str	r1, [sp, #0]
 801da40:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801da44:	4906      	ldr	r1, [pc, #24]	; (801da60 <__assert_func+0x34>)
 801da46:	462b      	mov	r3, r5
 801da48:	f000 f828 	bl	801da9c <fiprintf>
 801da4c:	f7ff ffe7 	bl	801da1e <abort>
 801da50:	4b04      	ldr	r3, [pc, #16]	; (801da64 <__assert_func+0x38>)
 801da52:	461c      	mov	r4, r3
 801da54:	e7f3      	b.n	801da3e <__assert_func+0x12>
 801da56:	bf00      	nop
 801da58:	200000f4 	.word	0x200000f4
 801da5c:	08022474 	.word	0x08022474
 801da60:	08022481 	.word	0x08022481
 801da64:	080224af 	.word	0x080224af

0801da68 <atexit>:
 801da68:	2300      	movs	r3, #0
 801da6a:	4601      	mov	r1, r0
 801da6c:	461a      	mov	r2, r3
 801da6e:	4618      	mov	r0, r3
 801da70:	f000 bd52 	b.w	801e518 <__register_exitproc>

0801da74 <__cxa_atexit>:
 801da74:	b510      	push	{r4, lr}
 801da76:	4c05      	ldr	r4, [pc, #20]	; (801da8c <__cxa_atexit+0x18>)
 801da78:	4613      	mov	r3, r2
 801da7a:	b12c      	cbz	r4, 801da88 <__cxa_atexit+0x14>
 801da7c:	460a      	mov	r2, r1
 801da7e:	4601      	mov	r1, r0
 801da80:	2002      	movs	r0, #2
 801da82:	f000 fd49 	bl	801e518 <__register_exitproc>
 801da86:	bd10      	pop	{r4, pc}
 801da88:	4620      	mov	r0, r4
 801da8a:	e7fc      	b.n	801da86 <__cxa_atexit+0x12>
 801da8c:	0801e519 	.word	0x0801e519

0801da90 <__errno>:
 801da90:	4b01      	ldr	r3, [pc, #4]	; (801da98 <__errno+0x8>)
 801da92:	6818      	ldr	r0, [r3, #0]
 801da94:	4770      	bx	lr
 801da96:	bf00      	nop
 801da98:	200000f4 	.word	0x200000f4

0801da9c <fiprintf>:
 801da9c:	b40e      	push	{r1, r2, r3}
 801da9e:	b503      	push	{r0, r1, lr}
 801daa0:	4601      	mov	r1, r0
 801daa2:	ab03      	add	r3, sp, #12
 801daa4:	4805      	ldr	r0, [pc, #20]	; (801dabc <fiprintf+0x20>)
 801daa6:	f853 2b04 	ldr.w	r2, [r3], #4
 801daaa:	6800      	ldr	r0, [r0, #0]
 801daac:	9301      	str	r3, [sp, #4]
 801daae:	f000 f95b 	bl	801dd68 <_vfiprintf_r>
 801dab2:	b002      	add	sp, #8
 801dab4:	f85d eb04 	ldr.w	lr, [sp], #4
 801dab8:	b003      	add	sp, #12
 801daba:	4770      	bx	lr
 801dabc:	200000f4 	.word	0x200000f4

0801dac0 <__libc_init_array>:
 801dac0:	b570      	push	{r4, r5, r6, lr}
 801dac2:	4d0d      	ldr	r5, [pc, #52]	; (801daf8 <__libc_init_array+0x38>)
 801dac4:	4c0d      	ldr	r4, [pc, #52]	; (801dafc <__libc_init_array+0x3c>)
 801dac6:	1b64      	subs	r4, r4, r5
 801dac8:	10a4      	asrs	r4, r4, #2
 801daca:	2600      	movs	r6, #0
 801dacc:	42a6      	cmp	r6, r4
 801dace:	d109      	bne.n	801dae4 <__libc_init_array+0x24>
 801dad0:	4d0b      	ldr	r5, [pc, #44]	; (801db00 <__libc_init_array+0x40>)
 801dad2:	4c0c      	ldr	r4, [pc, #48]	; (801db04 <__libc_init_array+0x44>)
 801dad4:	f001 f85a 	bl	801eb8c <_init>
 801dad8:	1b64      	subs	r4, r4, r5
 801dada:	10a4      	asrs	r4, r4, #2
 801dadc:	2600      	movs	r6, #0
 801dade:	42a6      	cmp	r6, r4
 801dae0:	d105      	bne.n	801daee <__libc_init_array+0x2e>
 801dae2:	bd70      	pop	{r4, r5, r6, pc}
 801dae4:	f855 3b04 	ldr.w	r3, [r5], #4
 801dae8:	4798      	blx	r3
 801daea:	3601      	adds	r6, #1
 801daec:	e7ee      	b.n	801dacc <__libc_init_array+0xc>
 801daee:	f855 3b04 	ldr.w	r3, [r5], #4
 801daf2:	4798      	blx	r3
 801daf4:	3601      	adds	r6, #1
 801daf6:	e7f2      	b.n	801dade <__libc_init_array+0x1e>
 801daf8:	08036828 	.word	0x08036828
 801dafc:	08036828 	.word	0x08036828
 801db00:	08036828 	.word	0x08036828
 801db04:	0803683c 	.word	0x0803683c

0801db08 <malloc>:
 801db08:	4b02      	ldr	r3, [pc, #8]	; (801db14 <malloc+0xc>)
 801db0a:	4601      	mov	r1, r0
 801db0c:	6818      	ldr	r0, [r3, #0]
 801db0e:	f000 b88d 	b.w	801dc2c <_malloc_r>
 801db12:	bf00      	nop
 801db14:	200000f4 	.word	0x200000f4

0801db18 <free>:
 801db18:	4b02      	ldr	r3, [pc, #8]	; (801db24 <free+0xc>)
 801db1a:	4601      	mov	r1, r0
 801db1c:	6818      	ldr	r0, [r3, #0]
 801db1e:	f000 b819 	b.w	801db54 <_free_r>
 801db22:	bf00      	nop
 801db24:	200000f4 	.word	0x200000f4

0801db28 <memcpy>:
 801db28:	440a      	add	r2, r1
 801db2a:	4291      	cmp	r1, r2
 801db2c:	f100 33ff 	add.w	r3, r0, #4294967295
 801db30:	d100      	bne.n	801db34 <memcpy+0xc>
 801db32:	4770      	bx	lr
 801db34:	b510      	push	{r4, lr}
 801db36:	f811 4b01 	ldrb.w	r4, [r1], #1
 801db3a:	f803 4f01 	strb.w	r4, [r3, #1]!
 801db3e:	4291      	cmp	r1, r2
 801db40:	d1f9      	bne.n	801db36 <memcpy+0xe>
 801db42:	bd10      	pop	{r4, pc}

0801db44 <memset>:
 801db44:	4402      	add	r2, r0
 801db46:	4603      	mov	r3, r0
 801db48:	4293      	cmp	r3, r2
 801db4a:	d100      	bne.n	801db4e <memset+0xa>
 801db4c:	4770      	bx	lr
 801db4e:	f803 1b01 	strb.w	r1, [r3], #1
 801db52:	e7f9      	b.n	801db48 <memset+0x4>

0801db54 <_free_r>:
 801db54:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801db56:	2900      	cmp	r1, #0
 801db58:	d044      	beq.n	801dbe4 <_free_r+0x90>
 801db5a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801db5e:	9001      	str	r0, [sp, #4]
 801db60:	2b00      	cmp	r3, #0
 801db62:	f1a1 0404 	sub.w	r4, r1, #4
 801db66:	bfb8      	it	lt
 801db68:	18e4      	addlt	r4, r4, r3
 801db6a:	f000 ff57 	bl	801ea1c <__malloc_lock>
 801db6e:	4a1e      	ldr	r2, [pc, #120]	; (801dbe8 <_free_r+0x94>)
 801db70:	9801      	ldr	r0, [sp, #4]
 801db72:	6813      	ldr	r3, [r2, #0]
 801db74:	b933      	cbnz	r3, 801db84 <_free_r+0x30>
 801db76:	6063      	str	r3, [r4, #4]
 801db78:	6014      	str	r4, [r2, #0]
 801db7a:	b003      	add	sp, #12
 801db7c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801db80:	f000 bf52 	b.w	801ea28 <__malloc_unlock>
 801db84:	42a3      	cmp	r3, r4
 801db86:	d908      	bls.n	801db9a <_free_r+0x46>
 801db88:	6825      	ldr	r5, [r4, #0]
 801db8a:	1961      	adds	r1, r4, r5
 801db8c:	428b      	cmp	r3, r1
 801db8e:	bf01      	itttt	eq
 801db90:	6819      	ldreq	r1, [r3, #0]
 801db92:	685b      	ldreq	r3, [r3, #4]
 801db94:	1949      	addeq	r1, r1, r5
 801db96:	6021      	streq	r1, [r4, #0]
 801db98:	e7ed      	b.n	801db76 <_free_r+0x22>
 801db9a:	461a      	mov	r2, r3
 801db9c:	685b      	ldr	r3, [r3, #4]
 801db9e:	b10b      	cbz	r3, 801dba4 <_free_r+0x50>
 801dba0:	42a3      	cmp	r3, r4
 801dba2:	d9fa      	bls.n	801db9a <_free_r+0x46>
 801dba4:	6811      	ldr	r1, [r2, #0]
 801dba6:	1855      	adds	r5, r2, r1
 801dba8:	42a5      	cmp	r5, r4
 801dbaa:	d10b      	bne.n	801dbc4 <_free_r+0x70>
 801dbac:	6824      	ldr	r4, [r4, #0]
 801dbae:	4421      	add	r1, r4
 801dbb0:	1854      	adds	r4, r2, r1
 801dbb2:	42a3      	cmp	r3, r4
 801dbb4:	6011      	str	r1, [r2, #0]
 801dbb6:	d1e0      	bne.n	801db7a <_free_r+0x26>
 801dbb8:	681c      	ldr	r4, [r3, #0]
 801dbba:	685b      	ldr	r3, [r3, #4]
 801dbbc:	6053      	str	r3, [r2, #4]
 801dbbe:	4421      	add	r1, r4
 801dbc0:	6011      	str	r1, [r2, #0]
 801dbc2:	e7da      	b.n	801db7a <_free_r+0x26>
 801dbc4:	d902      	bls.n	801dbcc <_free_r+0x78>
 801dbc6:	230c      	movs	r3, #12
 801dbc8:	6003      	str	r3, [r0, #0]
 801dbca:	e7d6      	b.n	801db7a <_free_r+0x26>
 801dbcc:	6825      	ldr	r5, [r4, #0]
 801dbce:	1961      	adds	r1, r4, r5
 801dbd0:	428b      	cmp	r3, r1
 801dbd2:	bf04      	itt	eq
 801dbd4:	6819      	ldreq	r1, [r3, #0]
 801dbd6:	685b      	ldreq	r3, [r3, #4]
 801dbd8:	6063      	str	r3, [r4, #4]
 801dbda:	bf04      	itt	eq
 801dbdc:	1949      	addeq	r1, r1, r5
 801dbde:	6021      	streq	r1, [r4, #0]
 801dbe0:	6054      	str	r4, [r2, #4]
 801dbe2:	e7ca      	b.n	801db7a <_free_r+0x26>
 801dbe4:	b003      	add	sp, #12
 801dbe6:	bd30      	pop	{r4, r5, pc}
 801dbe8:	20026ffc 	.word	0x20026ffc

0801dbec <sbrk_aligned>:
 801dbec:	b570      	push	{r4, r5, r6, lr}
 801dbee:	4e0e      	ldr	r6, [pc, #56]	; (801dc28 <sbrk_aligned+0x3c>)
 801dbf0:	460c      	mov	r4, r1
 801dbf2:	6831      	ldr	r1, [r6, #0]
 801dbf4:	4605      	mov	r5, r0
 801dbf6:	b911      	cbnz	r1, 801dbfe <sbrk_aligned+0x12>
 801dbf8:	f000 fb7a 	bl	801e2f0 <_sbrk_r>
 801dbfc:	6030      	str	r0, [r6, #0]
 801dbfe:	4621      	mov	r1, r4
 801dc00:	4628      	mov	r0, r5
 801dc02:	f000 fb75 	bl	801e2f0 <_sbrk_r>
 801dc06:	1c43      	adds	r3, r0, #1
 801dc08:	d00a      	beq.n	801dc20 <sbrk_aligned+0x34>
 801dc0a:	1cc4      	adds	r4, r0, #3
 801dc0c:	f024 0403 	bic.w	r4, r4, #3
 801dc10:	42a0      	cmp	r0, r4
 801dc12:	d007      	beq.n	801dc24 <sbrk_aligned+0x38>
 801dc14:	1a21      	subs	r1, r4, r0
 801dc16:	4628      	mov	r0, r5
 801dc18:	f000 fb6a 	bl	801e2f0 <_sbrk_r>
 801dc1c:	3001      	adds	r0, #1
 801dc1e:	d101      	bne.n	801dc24 <sbrk_aligned+0x38>
 801dc20:	f04f 34ff 	mov.w	r4, #4294967295
 801dc24:	4620      	mov	r0, r4
 801dc26:	bd70      	pop	{r4, r5, r6, pc}
 801dc28:	20027000 	.word	0x20027000

0801dc2c <_malloc_r>:
 801dc2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801dc30:	1ccd      	adds	r5, r1, #3
 801dc32:	f025 0503 	bic.w	r5, r5, #3
 801dc36:	3508      	adds	r5, #8
 801dc38:	2d0c      	cmp	r5, #12
 801dc3a:	bf38      	it	cc
 801dc3c:	250c      	movcc	r5, #12
 801dc3e:	2d00      	cmp	r5, #0
 801dc40:	4607      	mov	r7, r0
 801dc42:	db01      	blt.n	801dc48 <_malloc_r+0x1c>
 801dc44:	42a9      	cmp	r1, r5
 801dc46:	d905      	bls.n	801dc54 <_malloc_r+0x28>
 801dc48:	230c      	movs	r3, #12
 801dc4a:	603b      	str	r3, [r7, #0]
 801dc4c:	2600      	movs	r6, #0
 801dc4e:	4630      	mov	r0, r6
 801dc50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801dc54:	4e2e      	ldr	r6, [pc, #184]	; (801dd10 <_malloc_r+0xe4>)
 801dc56:	f000 fee1 	bl	801ea1c <__malloc_lock>
 801dc5a:	6833      	ldr	r3, [r6, #0]
 801dc5c:	461c      	mov	r4, r3
 801dc5e:	bb34      	cbnz	r4, 801dcae <_malloc_r+0x82>
 801dc60:	4629      	mov	r1, r5
 801dc62:	4638      	mov	r0, r7
 801dc64:	f7ff ffc2 	bl	801dbec <sbrk_aligned>
 801dc68:	1c43      	adds	r3, r0, #1
 801dc6a:	4604      	mov	r4, r0
 801dc6c:	d14d      	bne.n	801dd0a <_malloc_r+0xde>
 801dc6e:	6834      	ldr	r4, [r6, #0]
 801dc70:	4626      	mov	r6, r4
 801dc72:	2e00      	cmp	r6, #0
 801dc74:	d140      	bne.n	801dcf8 <_malloc_r+0xcc>
 801dc76:	6823      	ldr	r3, [r4, #0]
 801dc78:	4631      	mov	r1, r6
 801dc7a:	4638      	mov	r0, r7
 801dc7c:	eb04 0803 	add.w	r8, r4, r3
 801dc80:	f000 fb36 	bl	801e2f0 <_sbrk_r>
 801dc84:	4580      	cmp	r8, r0
 801dc86:	d13a      	bne.n	801dcfe <_malloc_r+0xd2>
 801dc88:	6821      	ldr	r1, [r4, #0]
 801dc8a:	3503      	adds	r5, #3
 801dc8c:	1a6d      	subs	r5, r5, r1
 801dc8e:	f025 0503 	bic.w	r5, r5, #3
 801dc92:	3508      	adds	r5, #8
 801dc94:	2d0c      	cmp	r5, #12
 801dc96:	bf38      	it	cc
 801dc98:	250c      	movcc	r5, #12
 801dc9a:	4629      	mov	r1, r5
 801dc9c:	4638      	mov	r0, r7
 801dc9e:	f7ff ffa5 	bl	801dbec <sbrk_aligned>
 801dca2:	3001      	adds	r0, #1
 801dca4:	d02b      	beq.n	801dcfe <_malloc_r+0xd2>
 801dca6:	6823      	ldr	r3, [r4, #0]
 801dca8:	442b      	add	r3, r5
 801dcaa:	6023      	str	r3, [r4, #0]
 801dcac:	e00e      	b.n	801dccc <_malloc_r+0xa0>
 801dcae:	6822      	ldr	r2, [r4, #0]
 801dcb0:	1b52      	subs	r2, r2, r5
 801dcb2:	d41e      	bmi.n	801dcf2 <_malloc_r+0xc6>
 801dcb4:	2a0b      	cmp	r2, #11
 801dcb6:	d916      	bls.n	801dce6 <_malloc_r+0xba>
 801dcb8:	1961      	adds	r1, r4, r5
 801dcba:	42a3      	cmp	r3, r4
 801dcbc:	6025      	str	r5, [r4, #0]
 801dcbe:	bf18      	it	ne
 801dcc0:	6059      	strne	r1, [r3, #4]
 801dcc2:	6863      	ldr	r3, [r4, #4]
 801dcc4:	bf08      	it	eq
 801dcc6:	6031      	streq	r1, [r6, #0]
 801dcc8:	5162      	str	r2, [r4, r5]
 801dcca:	604b      	str	r3, [r1, #4]
 801dccc:	4638      	mov	r0, r7
 801dcce:	f104 060b 	add.w	r6, r4, #11
 801dcd2:	f000 fea9 	bl	801ea28 <__malloc_unlock>
 801dcd6:	f026 0607 	bic.w	r6, r6, #7
 801dcda:	1d23      	adds	r3, r4, #4
 801dcdc:	1af2      	subs	r2, r6, r3
 801dcde:	d0b6      	beq.n	801dc4e <_malloc_r+0x22>
 801dce0:	1b9b      	subs	r3, r3, r6
 801dce2:	50a3      	str	r3, [r4, r2]
 801dce4:	e7b3      	b.n	801dc4e <_malloc_r+0x22>
 801dce6:	6862      	ldr	r2, [r4, #4]
 801dce8:	42a3      	cmp	r3, r4
 801dcea:	bf0c      	ite	eq
 801dcec:	6032      	streq	r2, [r6, #0]
 801dcee:	605a      	strne	r2, [r3, #4]
 801dcf0:	e7ec      	b.n	801dccc <_malloc_r+0xa0>
 801dcf2:	4623      	mov	r3, r4
 801dcf4:	6864      	ldr	r4, [r4, #4]
 801dcf6:	e7b2      	b.n	801dc5e <_malloc_r+0x32>
 801dcf8:	4634      	mov	r4, r6
 801dcfa:	6876      	ldr	r6, [r6, #4]
 801dcfc:	e7b9      	b.n	801dc72 <_malloc_r+0x46>
 801dcfe:	230c      	movs	r3, #12
 801dd00:	603b      	str	r3, [r7, #0]
 801dd02:	4638      	mov	r0, r7
 801dd04:	f000 fe90 	bl	801ea28 <__malloc_unlock>
 801dd08:	e7a1      	b.n	801dc4e <_malloc_r+0x22>
 801dd0a:	6025      	str	r5, [r4, #0]
 801dd0c:	e7de      	b.n	801dccc <_malloc_r+0xa0>
 801dd0e:	bf00      	nop
 801dd10:	20026ffc 	.word	0x20026ffc

0801dd14 <__sfputc_r>:
 801dd14:	6893      	ldr	r3, [r2, #8]
 801dd16:	3b01      	subs	r3, #1
 801dd18:	2b00      	cmp	r3, #0
 801dd1a:	b410      	push	{r4}
 801dd1c:	6093      	str	r3, [r2, #8]
 801dd1e:	da08      	bge.n	801dd32 <__sfputc_r+0x1e>
 801dd20:	6994      	ldr	r4, [r2, #24]
 801dd22:	42a3      	cmp	r3, r4
 801dd24:	db01      	blt.n	801dd2a <__sfputc_r+0x16>
 801dd26:	290a      	cmp	r1, #10
 801dd28:	d103      	bne.n	801dd32 <__sfputc_r+0x1e>
 801dd2a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801dd2e:	f000 bb33 	b.w	801e398 <__swbuf_r>
 801dd32:	6813      	ldr	r3, [r2, #0]
 801dd34:	1c58      	adds	r0, r3, #1
 801dd36:	6010      	str	r0, [r2, #0]
 801dd38:	7019      	strb	r1, [r3, #0]
 801dd3a:	4608      	mov	r0, r1
 801dd3c:	f85d 4b04 	ldr.w	r4, [sp], #4
 801dd40:	4770      	bx	lr

0801dd42 <__sfputs_r>:
 801dd42:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801dd44:	4606      	mov	r6, r0
 801dd46:	460f      	mov	r7, r1
 801dd48:	4614      	mov	r4, r2
 801dd4a:	18d5      	adds	r5, r2, r3
 801dd4c:	42ac      	cmp	r4, r5
 801dd4e:	d101      	bne.n	801dd54 <__sfputs_r+0x12>
 801dd50:	2000      	movs	r0, #0
 801dd52:	e007      	b.n	801dd64 <__sfputs_r+0x22>
 801dd54:	f814 1b01 	ldrb.w	r1, [r4], #1
 801dd58:	463a      	mov	r2, r7
 801dd5a:	4630      	mov	r0, r6
 801dd5c:	f7ff ffda 	bl	801dd14 <__sfputc_r>
 801dd60:	1c43      	adds	r3, r0, #1
 801dd62:	d1f3      	bne.n	801dd4c <__sfputs_r+0xa>
 801dd64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801dd68 <_vfiprintf_r>:
 801dd68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd6c:	460d      	mov	r5, r1
 801dd6e:	b09d      	sub	sp, #116	; 0x74
 801dd70:	4614      	mov	r4, r2
 801dd72:	4698      	mov	r8, r3
 801dd74:	4606      	mov	r6, r0
 801dd76:	b118      	cbz	r0, 801dd80 <_vfiprintf_r+0x18>
 801dd78:	6983      	ldr	r3, [r0, #24]
 801dd7a:	b90b      	cbnz	r3, 801dd80 <_vfiprintf_r+0x18>
 801dd7c:	f000 fd48 	bl	801e810 <__sinit>
 801dd80:	4b89      	ldr	r3, [pc, #548]	; (801dfa8 <_vfiprintf_r+0x240>)
 801dd82:	429d      	cmp	r5, r3
 801dd84:	d11b      	bne.n	801ddbe <_vfiprintf_r+0x56>
 801dd86:	6875      	ldr	r5, [r6, #4]
 801dd88:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801dd8a:	07d9      	lsls	r1, r3, #31
 801dd8c:	d405      	bmi.n	801dd9a <_vfiprintf_r+0x32>
 801dd8e:	89ab      	ldrh	r3, [r5, #12]
 801dd90:	059a      	lsls	r2, r3, #22
 801dd92:	d402      	bmi.n	801dd9a <_vfiprintf_r+0x32>
 801dd94:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801dd96:	f000 fdd9 	bl	801e94c <__retarget_lock_acquire_recursive>
 801dd9a:	89ab      	ldrh	r3, [r5, #12]
 801dd9c:	071b      	lsls	r3, r3, #28
 801dd9e:	d501      	bpl.n	801dda4 <_vfiprintf_r+0x3c>
 801dda0:	692b      	ldr	r3, [r5, #16]
 801dda2:	b9eb      	cbnz	r3, 801dde0 <_vfiprintf_r+0x78>
 801dda4:	4629      	mov	r1, r5
 801dda6:	4630      	mov	r0, r6
 801dda8:	f000 fb48 	bl	801e43c <__swsetup_r>
 801ddac:	b1c0      	cbz	r0, 801dde0 <_vfiprintf_r+0x78>
 801ddae:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801ddb0:	07dc      	lsls	r4, r3, #31
 801ddb2:	d50e      	bpl.n	801ddd2 <_vfiprintf_r+0x6a>
 801ddb4:	f04f 30ff 	mov.w	r0, #4294967295
 801ddb8:	b01d      	add	sp, #116	; 0x74
 801ddba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ddbe:	4b7b      	ldr	r3, [pc, #492]	; (801dfac <_vfiprintf_r+0x244>)
 801ddc0:	429d      	cmp	r5, r3
 801ddc2:	d101      	bne.n	801ddc8 <_vfiprintf_r+0x60>
 801ddc4:	68b5      	ldr	r5, [r6, #8]
 801ddc6:	e7df      	b.n	801dd88 <_vfiprintf_r+0x20>
 801ddc8:	4b79      	ldr	r3, [pc, #484]	; (801dfb0 <_vfiprintf_r+0x248>)
 801ddca:	429d      	cmp	r5, r3
 801ddcc:	bf08      	it	eq
 801ddce:	68f5      	ldreq	r5, [r6, #12]
 801ddd0:	e7da      	b.n	801dd88 <_vfiprintf_r+0x20>
 801ddd2:	89ab      	ldrh	r3, [r5, #12]
 801ddd4:	0598      	lsls	r0, r3, #22
 801ddd6:	d4ed      	bmi.n	801ddb4 <_vfiprintf_r+0x4c>
 801ddd8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801ddda:	f000 fdb9 	bl	801e950 <__retarget_lock_release_recursive>
 801ddde:	e7e9      	b.n	801ddb4 <_vfiprintf_r+0x4c>
 801dde0:	2300      	movs	r3, #0
 801dde2:	9309      	str	r3, [sp, #36]	; 0x24
 801dde4:	2320      	movs	r3, #32
 801dde6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801ddea:	f8cd 800c 	str.w	r8, [sp, #12]
 801ddee:	2330      	movs	r3, #48	; 0x30
 801ddf0:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801dfb4 <_vfiprintf_r+0x24c>
 801ddf4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801ddf8:	f04f 0901 	mov.w	r9, #1
 801ddfc:	4623      	mov	r3, r4
 801ddfe:	469a      	mov	sl, r3
 801de00:	f813 2b01 	ldrb.w	r2, [r3], #1
 801de04:	b10a      	cbz	r2, 801de0a <_vfiprintf_r+0xa2>
 801de06:	2a25      	cmp	r2, #37	; 0x25
 801de08:	d1f9      	bne.n	801ddfe <_vfiprintf_r+0x96>
 801de0a:	ebba 0b04 	subs.w	fp, sl, r4
 801de0e:	d00b      	beq.n	801de28 <_vfiprintf_r+0xc0>
 801de10:	465b      	mov	r3, fp
 801de12:	4622      	mov	r2, r4
 801de14:	4629      	mov	r1, r5
 801de16:	4630      	mov	r0, r6
 801de18:	f7ff ff93 	bl	801dd42 <__sfputs_r>
 801de1c:	3001      	adds	r0, #1
 801de1e:	f000 80aa 	beq.w	801df76 <_vfiprintf_r+0x20e>
 801de22:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801de24:	445a      	add	r2, fp
 801de26:	9209      	str	r2, [sp, #36]	; 0x24
 801de28:	f89a 3000 	ldrb.w	r3, [sl]
 801de2c:	2b00      	cmp	r3, #0
 801de2e:	f000 80a2 	beq.w	801df76 <_vfiprintf_r+0x20e>
 801de32:	2300      	movs	r3, #0
 801de34:	f04f 32ff 	mov.w	r2, #4294967295
 801de38:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801de3c:	f10a 0a01 	add.w	sl, sl, #1
 801de40:	9304      	str	r3, [sp, #16]
 801de42:	9307      	str	r3, [sp, #28]
 801de44:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801de48:	931a      	str	r3, [sp, #104]	; 0x68
 801de4a:	4654      	mov	r4, sl
 801de4c:	2205      	movs	r2, #5
 801de4e:	f814 1b01 	ldrb.w	r1, [r4], #1
 801de52:	4858      	ldr	r0, [pc, #352]	; (801dfb4 <_vfiprintf_r+0x24c>)
 801de54:	f7e2 f9cc 	bl	80001f0 <memchr>
 801de58:	9a04      	ldr	r2, [sp, #16]
 801de5a:	b9d8      	cbnz	r0, 801de94 <_vfiprintf_r+0x12c>
 801de5c:	06d1      	lsls	r1, r2, #27
 801de5e:	bf44      	itt	mi
 801de60:	2320      	movmi	r3, #32
 801de62:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801de66:	0713      	lsls	r3, r2, #28
 801de68:	bf44      	itt	mi
 801de6a:	232b      	movmi	r3, #43	; 0x2b
 801de6c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801de70:	f89a 3000 	ldrb.w	r3, [sl]
 801de74:	2b2a      	cmp	r3, #42	; 0x2a
 801de76:	d015      	beq.n	801dea4 <_vfiprintf_r+0x13c>
 801de78:	9a07      	ldr	r2, [sp, #28]
 801de7a:	4654      	mov	r4, sl
 801de7c:	2000      	movs	r0, #0
 801de7e:	f04f 0c0a 	mov.w	ip, #10
 801de82:	4621      	mov	r1, r4
 801de84:	f811 3b01 	ldrb.w	r3, [r1], #1
 801de88:	3b30      	subs	r3, #48	; 0x30
 801de8a:	2b09      	cmp	r3, #9
 801de8c:	d94e      	bls.n	801df2c <_vfiprintf_r+0x1c4>
 801de8e:	b1b0      	cbz	r0, 801debe <_vfiprintf_r+0x156>
 801de90:	9207      	str	r2, [sp, #28]
 801de92:	e014      	b.n	801debe <_vfiprintf_r+0x156>
 801de94:	eba0 0308 	sub.w	r3, r0, r8
 801de98:	fa09 f303 	lsl.w	r3, r9, r3
 801de9c:	4313      	orrs	r3, r2
 801de9e:	9304      	str	r3, [sp, #16]
 801dea0:	46a2      	mov	sl, r4
 801dea2:	e7d2      	b.n	801de4a <_vfiprintf_r+0xe2>
 801dea4:	9b03      	ldr	r3, [sp, #12]
 801dea6:	1d19      	adds	r1, r3, #4
 801dea8:	681b      	ldr	r3, [r3, #0]
 801deaa:	9103      	str	r1, [sp, #12]
 801deac:	2b00      	cmp	r3, #0
 801deae:	bfbb      	ittet	lt
 801deb0:	425b      	neglt	r3, r3
 801deb2:	f042 0202 	orrlt.w	r2, r2, #2
 801deb6:	9307      	strge	r3, [sp, #28]
 801deb8:	9307      	strlt	r3, [sp, #28]
 801deba:	bfb8      	it	lt
 801debc:	9204      	strlt	r2, [sp, #16]
 801debe:	7823      	ldrb	r3, [r4, #0]
 801dec0:	2b2e      	cmp	r3, #46	; 0x2e
 801dec2:	d10c      	bne.n	801dede <_vfiprintf_r+0x176>
 801dec4:	7863      	ldrb	r3, [r4, #1]
 801dec6:	2b2a      	cmp	r3, #42	; 0x2a
 801dec8:	d135      	bne.n	801df36 <_vfiprintf_r+0x1ce>
 801deca:	9b03      	ldr	r3, [sp, #12]
 801decc:	1d1a      	adds	r2, r3, #4
 801dece:	681b      	ldr	r3, [r3, #0]
 801ded0:	9203      	str	r2, [sp, #12]
 801ded2:	2b00      	cmp	r3, #0
 801ded4:	bfb8      	it	lt
 801ded6:	f04f 33ff 	movlt.w	r3, #4294967295
 801deda:	3402      	adds	r4, #2
 801dedc:	9305      	str	r3, [sp, #20]
 801dede:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801dfc4 <_vfiprintf_r+0x25c>
 801dee2:	7821      	ldrb	r1, [r4, #0]
 801dee4:	2203      	movs	r2, #3
 801dee6:	4650      	mov	r0, sl
 801dee8:	f7e2 f982 	bl	80001f0 <memchr>
 801deec:	b140      	cbz	r0, 801df00 <_vfiprintf_r+0x198>
 801deee:	2340      	movs	r3, #64	; 0x40
 801def0:	eba0 000a 	sub.w	r0, r0, sl
 801def4:	fa03 f000 	lsl.w	r0, r3, r0
 801def8:	9b04      	ldr	r3, [sp, #16]
 801defa:	4303      	orrs	r3, r0
 801defc:	3401      	adds	r4, #1
 801defe:	9304      	str	r3, [sp, #16]
 801df00:	f814 1b01 	ldrb.w	r1, [r4], #1
 801df04:	482c      	ldr	r0, [pc, #176]	; (801dfb8 <_vfiprintf_r+0x250>)
 801df06:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801df0a:	2206      	movs	r2, #6
 801df0c:	f7e2 f970 	bl	80001f0 <memchr>
 801df10:	2800      	cmp	r0, #0
 801df12:	d03f      	beq.n	801df94 <_vfiprintf_r+0x22c>
 801df14:	4b29      	ldr	r3, [pc, #164]	; (801dfbc <_vfiprintf_r+0x254>)
 801df16:	bb1b      	cbnz	r3, 801df60 <_vfiprintf_r+0x1f8>
 801df18:	9b03      	ldr	r3, [sp, #12]
 801df1a:	3307      	adds	r3, #7
 801df1c:	f023 0307 	bic.w	r3, r3, #7
 801df20:	3308      	adds	r3, #8
 801df22:	9303      	str	r3, [sp, #12]
 801df24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801df26:	443b      	add	r3, r7
 801df28:	9309      	str	r3, [sp, #36]	; 0x24
 801df2a:	e767      	b.n	801ddfc <_vfiprintf_r+0x94>
 801df2c:	fb0c 3202 	mla	r2, ip, r2, r3
 801df30:	460c      	mov	r4, r1
 801df32:	2001      	movs	r0, #1
 801df34:	e7a5      	b.n	801de82 <_vfiprintf_r+0x11a>
 801df36:	2300      	movs	r3, #0
 801df38:	3401      	adds	r4, #1
 801df3a:	9305      	str	r3, [sp, #20]
 801df3c:	4619      	mov	r1, r3
 801df3e:	f04f 0c0a 	mov.w	ip, #10
 801df42:	4620      	mov	r0, r4
 801df44:	f810 2b01 	ldrb.w	r2, [r0], #1
 801df48:	3a30      	subs	r2, #48	; 0x30
 801df4a:	2a09      	cmp	r2, #9
 801df4c:	d903      	bls.n	801df56 <_vfiprintf_r+0x1ee>
 801df4e:	2b00      	cmp	r3, #0
 801df50:	d0c5      	beq.n	801dede <_vfiprintf_r+0x176>
 801df52:	9105      	str	r1, [sp, #20]
 801df54:	e7c3      	b.n	801dede <_vfiprintf_r+0x176>
 801df56:	fb0c 2101 	mla	r1, ip, r1, r2
 801df5a:	4604      	mov	r4, r0
 801df5c:	2301      	movs	r3, #1
 801df5e:	e7f0      	b.n	801df42 <_vfiprintf_r+0x1da>
 801df60:	ab03      	add	r3, sp, #12
 801df62:	9300      	str	r3, [sp, #0]
 801df64:	462a      	mov	r2, r5
 801df66:	4b16      	ldr	r3, [pc, #88]	; (801dfc0 <_vfiprintf_r+0x258>)
 801df68:	a904      	add	r1, sp, #16
 801df6a:	4630      	mov	r0, r6
 801df6c:	f3af 8000 	nop.w
 801df70:	4607      	mov	r7, r0
 801df72:	1c78      	adds	r0, r7, #1
 801df74:	d1d6      	bne.n	801df24 <_vfiprintf_r+0x1bc>
 801df76:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801df78:	07d9      	lsls	r1, r3, #31
 801df7a:	d405      	bmi.n	801df88 <_vfiprintf_r+0x220>
 801df7c:	89ab      	ldrh	r3, [r5, #12]
 801df7e:	059a      	lsls	r2, r3, #22
 801df80:	d402      	bmi.n	801df88 <_vfiprintf_r+0x220>
 801df82:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801df84:	f000 fce4 	bl	801e950 <__retarget_lock_release_recursive>
 801df88:	89ab      	ldrh	r3, [r5, #12]
 801df8a:	065b      	lsls	r3, r3, #25
 801df8c:	f53f af12 	bmi.w	801ddb4 <_vfiprintf_r+0x4c>
 801df90:	9809      	ldr	r0, [sp, #36]	; 0x24
 801df92:	e711      	b.n	801ddb8 <_vfiprintf_r+0x50>
 801df94:	ab03      	add	r3, sp, #12
 801df96:	9300      	str	r3, [sp, #0]
 801df98:	462a      	mov	r2, r5
 801df9a:	4b09      	ldr	r3, [pc, #36]	; (801dfc0 <_vfiprintf_r+0x258>)
 801df9c:	a904      	add	r1, sp, #16
 801df9e:	4630      	mov	r0, r6
 801dfa0:	f000 f880 	bl	801e0a4 <_printf_i>
 801dfa4:	e7e4      	b.n	801df70 <_vfiprintf_r+0x208>
 801dfa6:	bf00      	nop
 801dfa8:	0802250c 	.word	0x0802250c
 801dfac:	0802252c 	.word	0x0802252c
 801dfb0:	080224ec 	.word	0x080224ec
 801dfb4:	080224b4 	.word	0x080224b4
 801dfb8:	080224be 	.word	0x080224be
 801dfbc:	00000000 	.word	0x00000000
 801dfc0:	0801dd43 	.word	0x0801dd43
 801dfc4:	080224ba 	.word	0x080224ba

0801dfc8 <_printf_common>:
 801dfc8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801dfcc:	4616      	mov	r6, r2
 801dfce:	4699      	mov	r9, r3
 801dfd0:	688a      	ldr	r2, [r1, #8]
 801dfd2:	690b      	ldr	r3, [r1, #16]
 801dfd4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801dfd8:	4293      	cmp	r3, r2
 801dfda:	bfb8      	it	lt
 801dfdc:	4613      	movlt	r3, r2
 801dfde:	6033      	str	r3, [r6, #0]
 801dfe0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801dfe4:	4607      	mov	r7, r0
 801dfe6:	460c      	mov	r4, r1
 801dfe8:	b10a      	cbz	r2, 801dfee <_printf_common+0x26>
 801dfea:	3301      	adds	r3, #1
 801dfec:	6033      	str	r3, [r6, #0]
 801dfee:	6823      	ldr	r3, [r4, #0]
 801dff0:	0699      	lsls	r1, r3, #26
 801dff2:	bf42      	ittt	mi
 801dff4:	6833      	ldrmi	r3, [r6, #0]
 801dff6:	3302      	addmi	r3, #2
 801dff8:	6033      	strmi	r3, [r6, #0]
 801dffa:	6825      	ldr	r5, [r4, #0]
 801dffc:	f015 0506 	ands.w	r5, r5, #6
 801e000:	d106      	bne.n	801e010 <_printf_common+0x48>
 801e002:	f104 0a19 	add.w	sl, r4, #25
 801e006:	68e3      	ldr	r3, [r4, #12]
 801e008:	6832      	ldr	r2, [r6, #0]
 801e00a:	1a9b      	subs	r3, r3, r2
 801e00c:	42ab      	cmp	r3, r5
 801e00e:	dc26      	bgt.n	801e05e <_printf_common+0x96>
 801e010:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801e014:	1e13      	subs	r3, r2, #0
 801e016:	6822      	ldr	r2, [r4, #0]
 801e018:	bf18      	it	ne
 801e01a:	2301      	movne	r3, #1
 801e01c:	0692      	lsls	r2, r2, #26
 801e01e:	d42b      	bmi.n	801e078 <_printf_common+0xb0>
 801e020:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801e024:	4649      	mov	r1, r9
 801e026:	4638      	mov	r0, r7
 801e028:	47c0      	blx	r8
 801e02a:	3001      	adds	r0, #1
 801e02c:	d01e      	beq.n	801e06c <_printf_common+0xa4>
 801e02e:	6823      	ldr	r3, [r4, #0]
 801e030:	68e5      	ldr	r5, [r4, #12]
 801e032:	6832      	ldr	r2, [r6, #0]
 801e034:	f003 0306 	and.w	r3, r3, #6
 801e038:	2b04      	cmp	r3, #4
 801e03a:	bf08      	it	eq
 801e03c:	1aad      	subeq	r5, r5, r2
 801e03e:	68a3      	ldr	r3, [r4, #8]
 801e040:	6922      	ldr	r2, [r4, #16]
 801e042:	bf0c      	ite	eq
 801e044:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801e048:	2500      	movne	r5, #0
 801e04a:	4293      	cmp	r3, r2
 801e04c:	bfc4      	itt	gt
 801e04e:	1a9b      	subgt	r3, r3, r2
 801e050:	18ed      	addgt	r5, r5, r3
 801e052:	2600      	movs	r6, #0
 801e054:	341a      	adds	r4, #26
 801e056:	42b5      	cmp	r5, r6
 801e058:	d11a      	bne.n	801e090 <_printf_common+0xc8>
 801e05a:	2000      	movs	r0, #0
 801e05c:	e008      	b.n	801e070 <_printf_common+0xa8>
 801e05e:	2301      	movs	r3, #1
 801e060:	4652      	mov	r2, sl
 801e062:	4649      	mov	r1, r9
 801e064:	4638      	mov	r0, r7
 801e066:	47c0      	blx	r8
 801e068:	3001      	adds	r0, #1
 801e06a:	d103      	bne.n	801e074 <_printf_common+0xac>
 801e06c:	f04f 30ff 	mov.w	r0, #4294967295
 801e070:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e074:	3501      	adds	r5, #1
 801e076:	e7c6      	b.n	801e006 <_printf_common+0x3e>
 801e078:	18e1      	adds	r1, r4, r3
 801e07a:	1c5a      	adds	r2, r3, #1
 801e07c:	2030      	movs	r0, #48	; 0x30
 801e07e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801e082:	4422      	add	r2, r4
 801e084:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801e088:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801e08c:	3302      	adds	r3, #2
 801e08e:	e7c7      	b.n	801e020 <_printf_common+0x58>
 801e090:	2301      	movs	r3, #1
 801e092:	4622      	mov	r2, r4
 801e094:	4649      	mov	r1, r9
 801e096:	4638      	mov	r0, r7
 801e098:	47c0      	blx	r8
 801e09a:	3001      	adds	r0, #1
 801e09c:	d0e6      	beq.n	801e06c <_printf_common+0xa4>
 801e09e:	3601      	adds	r6, #1
 801e0a0:	e7d9      	b.n	801e056 <_printf_common+0x8e>
	...

0801e0a4 <_printf_i>:
 801e0a4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801e0a8:	7e0f      	ldrb	r7, [r1, #24]
 801e0aa:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e0ac:	2f78      	cmp	r7, #120	; 0x78
 801e0ae:	4691      	mov	r9, r2
 801e0b0:	4680      	mov	r8, r0
 801e0b2:	460c      	mov	r4, r1
 801e0b4:	469a      	mov	sl, r3
 801e0b6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801e0ba:	d807      	bhi.n	801e0cc <_printf_i+0x28>
 801e0bc:	2f62      	cmp	r7, #98	; 0x62
 801e0be:	d80a      	bhi.n	801e0d6 <_printf_i+0x32>
 801e0c0:	2f00      	cmp	r7, #0
 801e0c2:	f000 80d8 	beq.w	801e276 <_printf_i+0x1d2>
 801e0c6:	2f58      	cmp	r7, #88	; 0x58
 801e0c8:	f000 80a3 	beq.w	801e212 <_printf_i+0x16e>
 801e0cc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801e0d0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801e0d4:	e03a      	b.n	801e14c <_printf_i+0xa8>
 801e0d6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801e0da:	2b15      	cmp	r3, #21
 801e0dc:	d8f6      	bhi.n	801e0cc <_printf_i+0x28>
 801e0de:	a101      	add	r1, pc, #4	; (adr r1, 801e0e4 <_printf_i+0x40>)
 801e0e0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801e0e4:	0801e13d 	.word	0x0801e13d
 801e0e8:	0801e151 	.word	0x0801e151
 801e0ec:	0801e0cd 	.word	0x0801e0cd
 801e0f0:	0801e0cd 	.word	0x0801e0cd
 801e0f4:	0801e0cd 	.word	0x0801e0cd
 801e0f8:	0801e0cd 	.word	0x0801e0cd
 801e0fc:	0801e151 	.word	0x0801e151
 801e100:	0801e0cd 	.word	0x0801e0cd
 801e104:	0801e0cd 	.word	0x0801e0cd
 801e108:	0801e0cd 	.word	0x0801e0cd
 801e10c:	0801e0cd 	.word	0x0801e0cd
 801e110:	0801e25d 	.word	0x0801e25d
 801e114:	0801e181 	.word	0x0801e181
 801e118:	0801e23f 	.word	0x0801e23f
 801e11c:	0801e0cd 	.word	0x0801e0cd
 801e120:	0801e0cd 	.word	0x0801e0cd
 801e124:	0801e27f 	.word	0x0801e27f
 801e128:	0801e0cd 	.word	0x0801e0cd
 801e12c:	0801e181 	.word	0x0801e181
 801e130:	0801e0cd 	.word	0x0801e0cd
 801e134:	0801e0cd 	.word	0x0801e0cd
 801e138:	0801e247 	.word	0x0801e247
 801e13c:	682b      	ldr	r3, [r5, #0]
 801e13e:	1d1a      	adds	r2, r3, #4
 801e140:	681b      	ldr	r3, [r3, #0]
 801e142:	602a      	str	r2, [r5, #0]
 801e144:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801e148:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801e14c:	2301      	movs	r3, #1
 801e14e:	e0a3      	b.n	801e298 <_printf_i+0x1f4>
 801e150:	6820      	ldr	r0, [r4, #0]
 801e152:	6829      	ldr	r1, [r5, #0]
 801e154:	0606      	lsls	r6, r0, #24
 801e156:	f101 0304 	add.w	r3, r1, #4
 801e15a:	d50a      	bpl.n	801e172 <_printf_i+0xce>
 801e15c:	680e      	ldr	r6, [r1, #0]
 801e15e:	602b      	str	r3, [r5, #0]
 801e160:	2e00      	cmp	r6, #0
 801e162:	da03      	bge.n	801e16c <_printf_i+0xc8>
 801e164:	232d      	movs	r3, #45	; 0x2d
 801e166:	4276      	negs	r6, r6
 801e168:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801e16c:	485e      	ldr	r0, [pc, #376]	; (801e2e8 <_printf_i+0x244>)
 801e16e:	230a      	movs	r3, #10
 801e170:	e019      	b.n	801e1a6 <_printf_i+0x102>
 801e172:	680e      	ldr	r6, [r1, #0]
 801e174:	602b      	str	r3, [r5, #0]
 801e176:	f010 0f40 	tst.w	r0, #64	; 0x40
 801e17a:	bf18      	it	ne
 801e17c:	b236      	sxthne	r6, r6
 801e17e:	e7ef      	b.n	801e160 <_printf_i+0xbc>
 801e180:	682b      	ldr	r3, [r5, #0]
 801e182:	6820      	ldr	r0, [r4, #0]
 801e184:	1d19      	adds	r1, r3, #4
 801e186:	6029      	str	r1, [r5, #0]
 801e188:	0601      	lsls	r1, r0, #24
 801e18a:	d501      	bpl.n	801e190 <_printf_i+0xec>
 801e18c:	681e      	ldr	r6, [r3, #0]
 801e18e:	e002      	b.n	801e196 <_printf_i+0xf2>
 801e190:	0646      	lsls	r6, r0, #25
 801e192:	d5fb      	bpl.n	801e18c <_printf_i+0xe8>
 801e194:	881e      	ldrh	r6, [r3, #0]
 801e196:	4854      	ldr	r0, [pc, #336]	; (801e2e8 <_printf_i+0x244>)
 801e198:	2f6f      	cmp	r7, #111	; 0x6f
 801e19a:	bf0c      	ite	eq
 801e19c:	2308      	moveq	r3, #8
 801e19e:	230a      	movne	r3, #10
 801e1a0:	2100      	movs	r1, #0
 801e1a2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801e1a6:	6865      	ldr	r5, [r4, #4]
 801e1a8:	60a5      	str	r5, [r4, #8]
 801e1aa:	2d00      	cmp	r5, #0
 801e1ac:	bfa2      	ittt	ge
 801e1ae:	6821      	ldrge	r1, [r4, #0]
 801e1b0:	f021 0104 	bicge.w	r1, r1, #4
 801e1b4:	6021      	strge	r1, [r4, #0]
 801e1b6:	b90e      	cbnz	r6, 801e1bc <_printf_i+0x118>
 801e1b8:	2d00      	cmp	r5, #0
 801e1ba:	d04d      	beq.n	801e258 <_printf_i+0x1b4>
 801e1bc:	4615      	mov	r5, r2
 801e1be:	fbb6 f1f3 	udiv	r1, r6, r3
 801e1c2:	fb03 6711 	mls	r7, r3, r1, r6
 801e1c6:	5dc7      	ldrb	r7, [r0, r7]
 801e1c8:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801e1cc:	4637      	mov	r7, r6
 801e1ce:	42bb      	cmp	r3, r7
 801e1d0:	460e      	mov	r6, r1
 801e1d2:	d9f4      	bls.n	801e1be <_printf_i+0x11a>
 801e1d4:	2b08      	cmp	r3, #8
 801e1d6:	d10b      	bne.n	801e1f0 <_printf_i+0x14c>
 801e1d8:	6823      	ldr	r3, [r4, #0]
 801e1da:	07de      	lsls	r6, r3, #31
 801e1dc:	d508      	bpl.n	801e1f0 <_printf_i+0x14c>
 801e1de:	6923      	ldr	r3, [r4, #16]
 801e1e0:	6861      	ldr	r1, [r4, #4]
 801e1e2:	4299      	cmp	r1, r3
 801e1e4:	bfde      	ittt	le
 801e1e6:	2330      	movle	r3, #48	; 0x30
 801e1e8:	f805 3c01 	strble.w	r3, [r5, #-1]
 801e1ec:	f105 35ff 	addle.w	r5, r5, #4294967295
 801e1f0:	1b52      	subs	r2, r2, r5
 801e1f2:	6122      	str	r2, [r4, #16]
 801e1f4:	f8cd a000 	str.w	sl, [sp]
 801e1f8:	464b      	mov	r3, r9
 801e1fa:	aa03      	add	r2, sp, #12
 801e1fc:	4621      	mov	r1, r4
 801e1fe:	4640      	mov	r0, r8
 801e200:	f7ff fee2 	bl	801dfc8 <_printf_common>
 801e204:	3001      	adds	r0, #1
 801e206:	d14c      	bne.n	801e2a2 <_printf_i+0x1fe>
 801e208:	f04f 30ff 	mov.w	r0, #4294967295
 801e20c:	b004      	add	sp, #16
 801e20e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e212:	4835      	ldr	r0, [pc, #212]	; (801e2e8 <_printf_i+0x244>)
 801e214:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 801e218:	6829      	ldr	r1, [r5, #0]
 801e21a:	6823      	ldr	r3, [r4, #0]
 801e21c:	f851 6b04 	ldr.w	r6, [r1], #4
 801e220:	6029      	str	r1, [r5, #0]
 801e222:	061d      	lsls	r5, r3, #24
 801e224:	d514      	bpl.n	801e250 <_printf_i+0x1ac>
 801e226:	07df      	lsls	r7, r3, #31
 801e228:	bf44      	itt	mi
 801e22a:	f043 0320 	orrmi.w	r3, r3, #32
 801e22e:	6023      	strmi	r3, [r4, #0]
 801e230:	b91e      	cbnz	r6, 801e23a <_printf_i+0x196>
 801e232:	6823      	ldr	r3, [r4, #0]
 801e234:	f023 0320 	bic.w	r3, r3, #32
 801e238:	6023      	str	r3, [r4, #0]
 801e23a:	2310      	movs	r3, #16
 801e23c:	e7b0      	b.n	801e1a0 <_printf_i+0xfc>
 801e23e:	6823      	ldr	r3, [r4, #0]
 801e240:	f043 0320 	orr.w	r3, r3, #32
 801e244:	6023      	str	r3, [r4, #0]
 801e246:	2378      	movs	r3, #120	; 0x78
 801e248:	4828      	ldr	r0, [pc, #160]	; (801e2ec <_printf_i+0x248>)
 801e24a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801e24e:	e7e3      	b.n	801e218 <_printf_i+0x174>
 801e250:	0659      	lsls	r1, r3, #25
 801e252:	bf48      	it	mi
 801e254:	b2b6      	uxthmi	r6, r6
 801e256:	e7e6      	b.n	801e226 <_printf_i+0x182>
 801e258:	4615      	mov	r5, r2
 801e25a:	e7bb      	b.n	801e1d4 <_printf_i+0x130>
 801e25c:	682b      	ldr	r3, [r5, #0]
 801e25e:	6826      	ldr	r6, [r4, #0]
 801e260:	6961      	ldr	r1, [r4, #20]
 801e262:	1d18      	adds	r0, r3, #4
 801e264:	6028      	str	r0, [r5, #0]
 801e266:	0635      	lsls	r5, r6, #24
 801e268:	681b      	ldr	r3, [r3, #0]
 801e26a:	d501      	bpl.n	801e270 <_printf_i+0x1cc>
 801e26c:	6019      	str	r1, [r3, #0]
 801e26e:	e002      	b.n	801e276 <_printf_i+0x1d2>
 801e270:	0670      	lsls	r0, r6, #25
 801e272:	d5fb      	bpl.n	801e26c <_printf_i+0x1c8>
 801e274:	8019      	strh	r1, [r3, #0]
 801e276:	2300      	movs	r3, #0
 801e278:	6123      	str	r3, [r4, #16]
 801e27a:	4615      	mov	r5, r2
 801e27c:	e7ba      	b.n	801e1f4 <_printf_i+0x150>
 801e27e:	682b      	ldr	r3, [r5, #0]
 801e280:	1d1a      	adds	r2, r3, #4
 801e282:	602a      	str	r2, [r5, #0]
 801e284:	681d      	ldr	r5, [r3, #0]
 801e286:	6862      	ldr	r2, [r4, #4]
 801e288:	2100      	movs	r1, #0
 801e28a:	4628      	mov	r0, r5
 801e28c:	f7e1 ffb0 	bl	80001f0 <memchr>
 801e290:	b108      	cbz	r0, 801e296 <_printf_i+0x1f2>
 801e292:	1b40      	subs	r0, r0, r5
 801e294:	6060      	str	r0, [r4, #4]
 801e296:	6863      	ldr	r3, [r4, #4]
 801e298:	6123      	str	r3, [r4, #16]
 801e29a:	2300      	movs	r3, #0
 801e29c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801e2a0:	e7a8      	b.n	801e1f4 <_printf_i+0x150>
 801e2a2:	6923      	ldr	r3, [r4, #16]
 801e2a4:	462a      	mov	r2, r5
 801e2a6:	4649      	mov	r1, r9
 801e2a8:	4640      	mov	r0, r8
 801e2aa:	47d0      	blx	sl
 801e2ac:	3001      	adds	r0, #1
 801e2ae:	d0ab      	beq.n	801e208 <_printf_i+0x164>
 801e2b0:	6823      	ldr	r3, [r4, #0]
 801e2b2:	079b      	lsls	r3, r3, #30
 801e2b4:	d413      	bmi.n	801e2de <_printf_i+0x23a>
 801e2b6:	68e0      	ldr	r0, [r4, #12]
 801e2b8:	9b03      	ldr	r3, [sp, #12]
 801e2ba:	4298      	cmp	r0, r3
 801e2bc:	bfb8      	it	lt
 801e2be:	4618      	movlt	r0, r3
 801e2c0:	e7a4      	b.n	801e20c <_printf_i+0x168>
 801e2c2:	2301      	movs	r3, #1
 801e2c4:	4632      	mov	r2, r6
 801e2c6:	4649      	mov	r1, r9
 801e2c8:	4640      	mov	r0, r8
 801e2ca:	47d0      	blx	sl
 801e2cc:	3001      	adds	r0, #1
 801e2ce:	d09b      	beq.n	801e208 <_printf_i+0x164>
 801e2d0:	3501      	adds	r5, #1
 801e2d2:	68e3      	ldr	r3, [r4, #12]
 801e2d4:	9903      	ldr	r1, [sp, #12]
 801e2d6:	1a5b      	subs	r3, r3, r1
 801e2d8:	42ab      	cmp	r3, r5
 801e2da:	dcf2      	bgt.n	801e2c2 <_printf_i+0x21e>
 801e2dc:	e7eb      	b.n	801e2b6 <_printf_i+0x212>
 801e2de:	2500      	movs	r5, #0
 801e2e0:	f104 0619 	add.w	r6, r4, #25
 801e2e4:	e7f5      	b.n	801e2d2 <_printf_i+0x22e>
 801e2e6:	bf00      	nop
 801e2e8:	080224c5 	.word	0x080224c5
 801e2ec:	080224d6 	.word	0x080224d6

0801e2f0 <_sbrk_r>:
 801e2f0:	b538      	push	{r3, r4, r5, lr}
 801e2f2:	4d06      	ldr	r5, [pc, #24]	; (801e30c <_sbrk_r+0x1c>)
 801e2f4:	2300      	movs	r3, #0
 801e2f6:	4604      	mov	r4, r0
 801e2f8:	4608      	mov	r0, r1
 801e2fa:	602b      	str	r3, [r5, #0]
 801e2fc:	f7e3 f9f6 	bl	80016ec <_sbrk>
 801e300:	1c43      	adds	r3, r0, #1
 801e302:	d102      	bne.n	801e30a <_sbrk_r+0x1a>
 801e304:	682b      	ldr	r3, [r5, #0]
 801e306:	b103      	cbz	r3, 801e30a <_sbrk_r+0x1a>
 801e308:	6023      	str	r3, [r4, #0]
 801e30a:	bd38      	pop	{r3, r4, r5, pc}
 801e30c:	200271a0 	.word	0x200271a0

0801e310 <_raise_r>:
 801e310:	291f      	cmp	r1, #31
 801e312:	b538      	push	{r3, r4, r5, lr}
 801e314:	4604      	mov	r4, r0
 801e316:	460d      	mov	r5, r1
 801e318:	d904      	bls.n	801e324 <_raise_r+0x14>
 801e31a:	2316      	movs	r3, #22
 801e31c:	6003      	str	r3, [r0, #0]
 801e31e:	f04f 30ff 	mov.w	r0, #4294967295
 801e322:	bd38      	pop	{r3, r4, r5, pc}
 801e324:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801e326:	b112      	cbz	r2, 801e32e <_raise_r+0x1e>
 801e328:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801e32c:	b94b      	cbnz	r3, 801e342 <_raise_r+0x32>
 801e32e:	4620      	mov	r0, r4
 801e330:	f000 f830 	bl	801e394 <_getpid_r>
 801e334:	462a      	mov	r2, r5
 801e336:	4601      	mov	r1, r0
 801e338:	4620      	mov	r0, r4
 801e33a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801e33e:	f000 b817 	b.w	801e370 <_kill_r>
 801e342:	2b01      	cmp	r3, #1
 801e344:	d00a      	beq.n	801e35c <_raise_r+0x4c>
 801e346:	1c59      	adds	r1, r3, #1
 801e348:	d103      	bne.n	801e352 <_raise_r+0x42>
 801e34a:	2316      	movs	r3, #22
 801e34c:	6003      	str	r3, [r0, #0]
 801e34e:	2001      	movs	r0, #1
 801e350:	e7e7      	b.n	801e322 <_raise_r+0x12>
 801e352:	2400      	movs	r4, #0
 801e354:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801e358:	4628      	mov	r0, r5
 801e35a:	4798      	blx	r3
 801e35c:	2000      	movs	r0, #0
 801e35e:	e7e0      	b.n	801e322 <_raise_r+0x12>

0801e360 <raise>:
 801e360:	4b02      	ldr	r3, [pc, #8]	; (801e36c <raise+0xc>)
 801e362:	4601      	mov	r1, r0
 801e364:	6818      	ldr	r0, [r3, #0]
 801e366:	f7ff bfd3 	b.w	801e310 <_raise_r>
 801e36a:	bf00      	nop
 801e36c:	200000f4 	.word	0x200000f4

0801e370 <_kill_r>:
 801e370:	b538      	push	{r3, r4, r5, lr}
 801e372:	4d07      	ldr	r5, [pc, #28]	; (801e390 <_kill_r+0x20>)
 801e374:	2300      	movs	r3, #0
 801e376:	4604      	mov	r4, r0
 801e378:	4608      	mov	r0, r1
 801e37a:	4611      	mov	r1, r2
 801e37c:	602b      	str	r3, [r5, #0]
 801e37e:	f7e3 f92d 	bl	80015dc <_kill>
 801e382:	1c43      	adds	r3, r0, #1
 801e384:	d102      	bne.n	801e38c <_kill_r+0x1c>
 801e386:	682b      	ldr	r3, [r5, #0]
 801e388:	b103      	cbz	r3, 801e38c <_kill_r+0x1c>
 801e38a:	6023      	str	r3, [r4, #0]
 801e38c:	bd38      	pop	{r3, r4, r5, pc}
 801e38e:	bf00      	nop
 801e390:	200271a0 	.word	0x200271a0

0801e394 <_getpid_r>:
 801e394:	f7e3 b91a 	b.w	80015cc <_getpid>

0801e398 <__swbuf_r>:
 801e398:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e39a:	460e      	mov	r6, r1
 801e39c:	4614      	mov	r4, r2
 801e39e:	4605      	mov	r5, r0
 801e3a0:	b118      	cbz	r0, 801e3aa <__swbuf_r+0x12>
 801e3a2:	6983      	ldr	r3, [r0, #24]
 801e3a4:	b90b      	cbnz	r3, 801e3aa <__swbuf_r+0x12>
 801e3a6:	f000 fa33 	bl	801e810 <__sinit>
 801e3aa:	4b21      	ldr	r3, [pc, #132]	; (801e430 <__swbuf_r+0x98>)
 801e3ac:	429c      	cmp	r4, r3
 801e3ae:	d12b      	bne.n	801e408 <__swbuf_r+0x70>
 801e3b0:	686c      	ldr	r4, [r5, #4]
 801e3b2:	69a3      	ldr	r3, [r4, #24]
 801e3b4:	60a3      	str	r3, [r4, #8]
 801e3b6:	89a3      	ldrh	r3, [r4, #12]
 801e3b8:	071a      	lsls	r2, r3, #28
 801e3ba:	d52f      	bpl.n	801e41c <__swbuf_r+0x84>
 801e3bc:	6923      	ldr	r3, [r4, #16]
 801e3be:	b36b      	cbz	r3, 801e41c <__swbuf_r+0x84>
 801e3c0:	6923      	ldr	r3, [r4, #16]
 801e3c2:	6820      	ldr	r0, [r4, #0]
 801e3c4:	1ac0      	subs	r0, r0, r3
 801e3c6:	6963      	ldr	r3, [r4, #20]
 801e3c8:	b2f6      	uxtb	r6, r6
 801e3ca:	4283      	cmp	r3, r0
 801e3cc:	4637      	mov	r7, r6
 801e3ce:	dc04      	bgt.n	801e3da <__swbuf_r+0x42>
 801e3d0:	4621      	mov	r1, r4
 801e3d2:	4628      	mov	r0, r5
 801e3d4:	f000 f988 	bl	801e6e8 <_fflush_r>
 801e3d8:	bb30      	cbnz	r0, 801e428 <__swbuf_r+0x90>
 801e3da:	68a3      	ldr	r3, [r4, #8]
 801e3dc:	3b01      	subs	r3, #1
 801e3de:	60a3      	str	r3, [r4, #8]
 801e3e0:	6823      	ldr	r3, [r4, #0]
 801e3e2:	1c5a      	adds	r2, r3, #1
 801e3e4:	6022      	str	r2, [r4, #0]
 801e3e6:	701e      	strb	r6, [r3, #0]
 801e3e8:	6963      	ldr	r3, [r4, #20]
 801e3ea:	3001      	adds	r0, #1
 801e3ec:	4283      	cmp	r3, r0
 801e3ee:	d004      	beq.n	801e3fa <__swbuf_r+0x62>
 801e3f0:	89a3      	ldrh	r3, [r4, #12]
 801e3f2:	07db      	lsls	r3, r3, #31
 801e3f4:	d506      	bpl.n	801e404 <__swbuf_r+0x6c>
 801e3f6:	2e0a      	cmp	r6, #10
 801e3f8:	d104      	bne.n	801e404 <__swbuf_r+0x6c>
 801e3fa:	4621      	mov	r1, r4
 801e3fc:	4628      	mov	r0, r5
 801e3fe:	f000 f973 	bl	801e6e8 <_fflush_r>
 801e402:	b988      	cbnz	r0, 801e428 <__swbuf_r+0x90>
 801e404:	4638      	mov	r0, r7
 801e406:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801e408:	4b0a      	ldr	r3, [pc, #40]	; (801e434 <__swbuf_r+0x9c>)
 801e40a:	429c      	cmp	r4, r3
 801e40c:	d101      	bne.n	801e412 <__swbuf_r+0x7a>
 801e40e:	68ac      	ldr	r4, [r5, #8]
 801e410:	e7cf      	b.n	801e3b2 <__swbuf_r+0x1a>
 801e412:	4b09      	ldr	r3, [pc, #36]	; (801e438 <__swbuf_r+0xa0>)
 801e414:	429c      	cmp	r4, r3
 801e416:	bf08      	it	eq
 801e418:	68ec      	ldreq	r4, [r5, #12]
 801e41a:	e7ca      	b.n	801e3b2 <__swbuf_r+0x1a>
 801e41c:	4621      	mov	r1, r4
 801e41e:	4628      	mov	r0, r5
 801e420:	f000 f80c 	bl	801e43c <__swsetup_r>
 801e424:	2800      	cmp	r0, #0
 801e426:	d0cb      	beq.n	801e3c0 <__swbuf_r+0x28>
 801e428:	f04f 37ff 	mov.w	r7, #4294967295
 801e42c:	e7ea      	b.n	801e404 <__swbuf_r+0x6c>
 801e42e:	bf00      	nop
 801e430:	0802250c 	.word	0x0802250c
 801e434:	0802252c 	.word	0x0802252c
 801e438:	080224ec 	.word	0x080224ec

0801e43c <__swsetup_r>:
 801e43c:	4b32      	ldr	r3, [pc, #200]	; (801e508 <__swsetup_r+0xcc>)
 801e43e:	b570      	push	{r4, r5, r6, lr}
 801e440:	681d      	ldr	r5, [r3, #0]
 801e442:	4606      	mov	r6, r0
 801e444:	460c      	mov	r4, r1
 801e446:	b125      	cbz	r5, 801e452 <__swsetup_r+0x16>
 801e448:	69ab      	ldr	r3, [r5, #24]
 801e44a:	b913      	cbnz	r3, 801e452 <__swsetup_r+0x16>
 801e44c:	4628      	mov	r0, r5
 801e44e:	f000 f9df 	bl	801e810 <__sinit>
 801e452:	4b2e      	ldr	r3, [pc, #184]	; (801e50c <__swsetup_r+0xd0>)
 801e454:	429c      	cmp	r4, r3
 801e456:	d10f      	bne.n	801e478 <__swsetup_r+0x3c>
 801e458:	686c      	ldr	r4, [r5, #4]
 801e45a:	89a3      	ldrh	r3, [r4, #12]
 801e45c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801e460:	0719      	lsls	r1, r3, #28
 801e462:	d42c      	bmi.n	801e4be <__swsetup_r+0x82>
 801e464:	06dd      	lsls	r5, r3, #27
 801e466:	d411      	bmi.n	801e48c <__swsetup_r+0x50>
 801e468:	2309      	movs	r3, #9
 801e46a:	6033      	str	r3, [r6, #0]
 801e46c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801e470:	81a3      	strh	r3, [r4, #12]
 801e472:	f04f 30ff 	mov.w	r0, #4294967295
 801e476:	e03e      	b.n	801e4f6 <__swsetup_r+0xba>
 801e478:	4b25      	ldr	r3, [pc, #148]	; (801e510 <__swsetup_r+0xd4>)
 801e47a:	429c      	cmp	r4, r3
 801e47c:	d101      	bne.n	801e482 <__swsetup_r+0x46>
 801e47e:	68ac      	ldr	r4, [r5, #8]
 801e480:	e7eb      	b.n	801e45a <__swsetup_r+0x1e>
 801e482:	4b24      	ldr	r3, [pc, #144]	; (801e514 <__swsetup_r+0xd8>)
 801e484:	429c      	cmp	r4, r3
 801e486:	bf08      	it	eq
 801e488:	68ec      	ldreq	r4, [r5, #12]
 801e48a:	e7e6      	b.n	801e45a <__swsetup_r+0x1e>
 801e48c:	0758      	lsls	r0, r3, #29
 801e48e:	d512      	bpl.n	801e4b6 <__swsetup_r+0x7a>
 801e490:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801e492:	b141      	cbz	r1, 801e4a6 <__swsetup_r+0x6a>
 801e494:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801e498:	4299      	cmp	r1, r3
 801e49a:	d002      	beq.n	801e4a2 <__swsetup_r+0x66>
 801e49c:	4630      	mov	r0, r6
 801e49e:	f7ff fb59 	bl	801db54 <_free_r>
 801e4a2:	2300      	movs	r3, #0
 801e4a4:	6363      	str	r3, [r4, #52]	; 0x34
 801e4a6:	89a3      	ldrh	r3, [r4, #12]
 801e4a8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801e4ac:	81a3      	strh	r3, [r4, #12]
 801e4ae:	2300      	movs	r3, #0
 801e4b0:	6063      	str	r3, [r4, #4]
 801e4b2:	6923      	ldr	r3, [r4, #16]
 801e4b4:	6023      	str	r3, [r4, #0]
 801e4b6:	89a3      	ldrh	r3, [r4, #12]
 801e4b8:	f043 0308 	orr.w	r3, r3, #8
 801e4bc:	81a3      	strh	r3, [r4, #12]
 801e4be:	6923      	ldr	r3, [r4, #16]
 801e4c0:	b94b      	cbnz	r3, 801e4d6 <__swsetup_r+0x9a>
 801e4c2:	89a3      	ldrh	r3, [r4, #12]
 801e4c4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801e4c8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801e4cc:	d003      	beq.n	801e4d6 <__swsetup_r+0x9a>
 801e4ce:	4621      	mov	r1, r4
 801e4d0:	4630      	mov	r0, r6
 801e4d2:	f000 fa63 	bl	801e99c <__smakebuf_r>
 801e4d6:	89a0      	ldrh	r0, [r4, #12]
 801e4d8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801e4dc:	f010 0301 	ands.w	r3, r0, #1
 801e4e0:	d00a      	beq.n	801e4f8 <__swsetup_r+0xbc>
 801e4e2:	2300      	movs	r3, #0
 801e4e4:	60a3      	str	r3, [r4, #8]
 801e4e6:	6963      	ldr	r3, [r4, #20]
 801e4e8:	425b      	negs	r3, r3
 801e4ea:	61a3      	str	r3, [r4, #24]
 801e4ec:	6923      	ldr	r3, [r4, #16]
 801e4ee:	b943      	cbnz	r3, 801e502 <__swsetup_r+0xc6>
 801e4f0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801e4f4:	d1ba      	bne.n	801e46c <__swsetup_r+0x30>
 801e4f6:	bd70      	pop	{r4, r5, r6, pc}
 801e4f8:	0781      	lsls	r1, r0, #30
 801e4fa:	bf58      	it	pl
 801e4fc:	6963      	ldrpl	r3, [r4, #20]
 801e4fe:	60a3      	str	r3, [r4, #8]
 801e500:	e7f4      	b.n	801e4ec <__swsetup_r+0xb0>
 801e502:	2000      	movs	r0, #0
 801e504:	e7f7      	b.n	801e4f6 <__swsetup_r+0xba>
 801e506:	bf00      	nop
 801e508:	200000f4 	.word	0x200000f4
 801e50c:	0802250c 	.word	0x0802250c
 801e510:	0802252c 	.word	0x0802252c
 801e514:	080224ec 	.word	0x080224ec

0801e518 <__register_exitproc>:
 801e518:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801e51c:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801e5d8 <__register_exitproc+0xc0>
 801e520:	4606      	mov	r6, r0
 801e522:	f8d8 0000 	ldr.w	r0, [r8]
 801e526:	461f      	mov	r7, r3
 801e528:	460d      	mov	r5, r1
 801e52a:	4691      	mov	r9, r2
 801e52c:	f000 fa0e 	bl	801e94c <__retarget_lock_acquire_recursive>
 801e530:	4b25      	ldr	r3, [pc, #148]	; (801e5c8 <__register_exitproc+0xb0>)
 801e532:	681c      	ldr	r4, [r3, #0]
 801e534:	b934      	cbnz	r4, 801e544 <__register_exitproc+0x2c>
 801e536:	4c25      	ldr	r4, [pc, #148]	; (801e5cc <__register_exitproc+0xb4>)
 801e538:	601c      	str	r4, [r3, #0]
 801e53a:	4b25      	ldr	r3, [pc, #148]	; (801e5d0 <__register_exitproc+0xb8>)
 801e53c:	b113      	cbz	r3, 801e544 <__register_exitproc+0x2c>
 801e53e:	681b      	ldr	r3, [r3, #0]
 801e540:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801e544:	6863      	ldr	r3, [r4, #4]
 801e546:	2b1f      	cmp	r3, #31
 801e548:	dd07      	ble.n	801e55a <__register_exitproc+0x42>
 801e54a:	f8d8 0000 	ldr.w	r0, [r8]
 801e54e:	f000 f9ff 	bl	801e950 <__retarget_lock_release_recursive>
 801e552:	f04f 30ff 	mov.w	r0, #4294967295
 801e556:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801e55a:	b34e      	cbz	r6, 801e5b0 <__register_exitproc+0x98>
 801e55c:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801e560:	b988      	cbnz	r0, 801e586 <__register_exitproc+0x6e>
 801e562:	4b1c      	ldr	r3, [pc, #112]	; (801e5d4 <__register_exitproc+0xbc>)
 801e564:	b923      	cbnz	r3, 801e570 <__register_exitproc+0x58>
 801e566:	f8d8 0000 	ldr.w	r0, [r8]
 801e56a:	f000 f9f0 	bl	801e94e <__retarget_lock_release>
 801e56e:	e7f0      	b.n	801e552 <__register_exitproc+0x3a>
 801e570:	f44f 7084 	mov.w	r0, #264	; 0x108
 801e574:	f7ff fac8 	bl	801db08 <malloc>
 801e578:	2800      	cmp	r0, #0
 801e57a:	d0f4      	beq.n	801e566 <__register_exitproc+0x4e>
 801e57c:	2300      	movs	r3, #0
 801e57e:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801e582:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801e586:	6863      	ldr	r3, [r4, #4]
 801e588:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801e58c:	2201      	movs	r2, #1
 801e58e:	409a      	lsls	r2, r3
 801e590:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801e594:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801e598:	4313      	orrs	r3, r2
 801e59a:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801e59e:	2e02      	cmp	r6, #2
 801e5a0:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801e5a4:	bf02      	ittt	eq
 801e5a6:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801e5aa:	4313      	orreq	r3, r2
 801e5ac:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801e5b0:	6863      	ldr	r3, [r4, #4]
 801e5b2:	f8d8 0000 	ldr.w	r0, [r8]
 801e5b6:	1c5a      	adds	r2, r3, #1
 801e5b8:	3302      	adds	r3, #2
 801e5ba:	6062      	str	r2, [r4, #4]
 801e5bc:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801e5c0:	f000 f9c6 	bl	801e950 <__retarget_lock_release_recursive>
 801e5c4:	2000      	movs	r0, #0
 801e5c6:	e7c6      	b.n	801e556 <__register_exitproc+0x3e>
 801e5c8:	20027198 	.word	0x20027198
 801e5cc:	2002710c 	.word	0x2002710c
 801e5d0:	080224e8 	.word	0x080224e8
 801e5d4:	0801db09 	.word	0x0801db09
 801e5d8:	20000158 	.word	0x20000158

0801e5dc <__sflush_r>:
 801e5dc:	898a      	ldrh	r2, [r1, #12]
 801e5de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801e5e2:	4605      	mov	r5, r0
 801e5e4:	0710      	lsls	r0, r2, #28
 801e5e6:	460c      	mov	r4, r1
 801e5e8:	d458      	bmi.n	801e69c <__sflush_r+0xc0>
 801e5ea:	684b      	ldr	r3, [r1, #4]
 801e5ec:	2b00      	cmp	r3, #0
 801e5ee:	dc05      	bgt.n	801e5fc <__sflush_r+0x20>
 801e5f0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801e5f2:	2b00      	cmp	r3, #0
 801e5f4:	dc02      	bgt.n	801e5fc <__sflush_r+0x20>
 801e5f6:	2000      	movs	r0, #0
 801e5f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801e5fc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801e5fe:	2e00      	cmp	r6, #0
 801e600:	d0f9      	beq.n	801e5f6 <__sflush_r+0x1a>
 801e602:	2300      	movs	r3, #0
 801e604:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801e608:	682f      	ldr	r7, [r5, #0]
 801e60a:	602b      	str	r3, [r5, #0]
 801e60c:	d032      	beq.n	801e674 <__sflush_r+0x98>
 801e60e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801e610:	89a3      	ldrh	r3, [r4, #12]
 801e612:	075a      	lsls	r2, r3, #29
 801e614:	d505      	bpl.n	801e622 <__sflush_r+0x46>
 801e616:	6863      	ldr	r3, [r4, #4]
 801e618:	1ac0      	subs	r0, r0, r3
 801e61a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801e61c:	b10b      	cbz	r3, 801e622 <__sflush_r+0x46>
 801e61e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801e620:	1ac0      	subs	r0, r0, r3
 801e622:	2300      	movs	r3, #0
 801e624:	4602      	mov	r2, r0
 801e626:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801e628:	6a21      	ldr	r1, [r4, #32]
 801e62a:	4628      	mov	r0, r5
 801e62c:	47b0      	blx	r6
 801e62e:	1c43      	adds	r3, r0, #1
 801e630:	89a3      	ldrh	r3, [r4, #12]
 801e632:	d106      	bne.n	801e642 <__sflush_r+0x66>
 801e634:	6829      	ldr	r1, [r5, #0]
 801e636:	291d      	cmp	r1, #29
 801e638:	d82c      	bhi.n	801e694 <__sflush_r+0xb8>
 801e63a:	4a2a      	ldr	r2, [pc, #168]	; (801e6e4 <__sflush_r+0x108>)
 801e63c:	40ca      	lsrs	r2, r1
 801e63e:	07d6      	lsls	r6, r2, #31
 801e640:	d528      	bpl.n	801e694 <__sflush_r+0xb8>
 801e642:	2200      	movs	r2, #0
 801e644:	6062      	str	r2, [r4, #4]
 801e646:	04d9      	lsls	r1, r3, #19
 801e648:	6922      	ldr	r2, [r4, #16]
 801e64a:	6022      	str	r2, [r4, #0]
 801e64c:	d504      	bpl.n	801e658 <__sflush_r+0x7c>
 801e64e:	1c42      	adds	r2, r0, #1
 801e650:	d101      	bne.n	801e656 <__sflush_r+0x7a>
 801e652:	682b      	ldr	r3, [r5, #0]
 801e654:	b903      	cbnz	r3, 801e658 <__sflush_r+0x7c>
 801e656:	6560      	str	r0, [r4, #84]	; 0x54
 801e658:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801e65a:	602f      	str	r7, [r5, #0]
 801e65c:	2900      	cmp	r1, #0
 801e65e:	d0ca      	beq.n	801e5f6 <__sflush_r+0x1a>
 801e660:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801e664:	4299      	cmp	r1, r3
 801e666:	d002      	beq.n	801e66e <__sflush_r+0x92>
 801e668:	4628      	mov	r0, r5
 801e66a:	f7ff fa73 	bl	801db54 <_free_r>
 801e66e:	2000      	movs	r0, #0
 801e670:	6360      	str	r0, [r4, #52]	; 0x34
 801e672:	e7c1      	b.n	801e5f8 <__sflush_r+0x1c>
 801e674:	6a21      	ldr	r1, [r4, #32]
 801e676:	2301      	movs	r3, #1
 801e678:	4628      	mov	r0, r5
 801e67a:	47b0      	blx	r6
 801e67c:	1c41      	adds	r1, r0, #1
 801e67e:	d1c7      	bne.n	801e610 <__sflush_r+0x34>
 801e680:	682b      	ldr	r3, [r5, #0]
 801e682:	2b00      	cmp	r3, #0
 801e684:	d0c4      	beq.n	801e610 <__sflush_r+0x34>
 801e686:	2b1d      	cmp	r3, #29
 801e688:	d001      	beq.n	801e68e <__sflush_r+0xb2>
 801e68a:	2b16      	cmp	r3, #22
 801e68c:	d101      	bne.n	801e692 <__sflush_r+0xb6>
 801e68e:	602f      	str	r7, [r5, #0]
 801e690:	e7b1      	b.n	801e5f6 <__sflush_r+0x1a>
 801e692:	89a3      	ldrh	r3, [r4, #12]
 801e694:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801e698:	81a3      	strh	r3, [r4, #12]
 801e69a:	e7ad      	b.n	801e5f8 <__sflush_r+0x1c>
 801e69c:	690f      	ldr	r7, [r1, #16]
 801e69e:	2f00      	cmp	r7, #0
 801e6a0:	d0a9      	beq.n	801e5f6 <__sflush_r+0x1a>
 801e6a2:	0793      	lsls	r3, r2, #30
 801e6a4:	680e      	ldr	r6, [r1, #0]
 801e6a6:	bf08      	it	eq
 801e6a8:	694b      	ldreq	r3, [r1, #20]
 801e6aa:	600f      	str	r7, [r1, #0]
 801e6ac:	bf18      	it	ne
 801e6ae:	2300      	movne	r3, #0
 801e6b0:	eba6 0807 	sub.w	r8, r6, r7
 801e6b4:	608b      	str	r3, [r1, #8]
 801e6b6:	f1b8 0f00 	cmp.w	r8, #0
 801e6ba:	dd9c      	ble.n	801e5f6 <__sflush_r+0x1a>
 801e6bc:	6a21      	ldr	r1, [r4, #32]
 801e6be:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801e6c0:	4643      	mov	r3, r8
 801e6c2:	463a      	mov	r2, r7
 801e6c4:	4628      	mov	r0, r5
 801e6c6:	47b0      	blx	r6
 801e6c8:	2800      	cmp	r0, #0
 801e6ca:	dc06      	bgt.n	801e6da <__sflush_r+0xfe>
 801e6cc:	89a3      	ldrh	r3, [r4, #12]
 801e6ce:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801e6d2:	81a3      	strh	r3, [r4, #12]
 801e6d4:	f04f 30ff 	mov.w	r0, #4294967295
 801e6d8:	e78e      	b.n	801e5f8 <__sflush_r+0x1c>
 801e6da:	4407      	add	r7, r0
 801e6dc:	eba8 0800 	sub.w	r8, r8, r0
 801e6e0:	e7e9      	b.n	801e6b6 <__sflush_r+0xda>
 801e6e2:	bf00      	nop
 801e6e4:	20400001 	.word	0x20400001

0801e6e8 <_fflush_r>:
 801e6e8:	b538      	push	{r3, r4, r5, lr}
 801e6ea:	690b      	ldr	r3, [r1, #16]
 801e6ec:	4605      	mov	r5, r0
 801e6ee:	460c      	mov	r4, r1
 801e6f0:	b913      	cbnz	r3, 801e6f8 <_fflush_r+0x10>
 801e6f2:	2500      	movs	r5, #0
 801e6f4:	4628      	mov	r0, r5
 801e6f6:	bd38      	pop	{r3, r4, r5, pc}
 801e6f8:	b118      	cbz	r0, 801e702 <_fflush_r+0x1a>
 801e6fa:	6983      	ldr	r3, [r0, #24]
 801e6fc:	b90b      	cbnz	r3, 801e702 <_fflush_r+0x1a>
 801e6fe:	f000 f887 	bl	801e810 <__sinit>
 801e702:	4b14      	ldr	r3, [pc, #80]	; (801e754 <_fflush_r+0x6c>)
 801e704:	429c      	cmp	r4, r3
 801e706:	d11b      	bne.n	801e740 <_fflush_r+0x58>
 801e708:	686c      	ldr	r4, [r5, #4]
 801e70a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801e70e:	2b00      	cmp	r3, #0
 801e710:	d0ef      	beq.n	801e6f2 <_fflush_r+0xa>
 801e712:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801e714:	07d0      	lsls	r0, r2, #31
 801e716:	d404      	bmi.n	801e722 <_fflush_r+0x3a>
 801e718:	0599      	lsls	r1, r3, #22
 801e71a:	d402      	bmi.n	801e722 <_fflush_r+0x3a>
 801e71c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801e71e:	f000 f915 	bl	801e94c <__retarget_lock_acquire_recursive>
 801e722:	4628      	mov	r0, r5
 801e724:	4621      	mov	r1, r4
 801e726:	f7ff ff59 	bl	801e5dc <__sflush_r>
 801e72a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801e72c:	07da      	lsls	r2, r3, #31
 801e72e:	4605      	mov	r5, r0
 801e730:	d4e0      	bmi.n	801e6f4 <_fflush_r+0xc>
 801e732:	89a3      	ldrh	r3, [r4, #12]
 801e734:	059b      	lsls	r3, r3, #22
 801e736:	d4dd      	bmi.n	801e6f4 <_fflush_r+0xc>
 801e738:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801e73a:	f000 f909 	bl	801e950 <__retarget_lock_release_recursive>
 801e73e:	e7d9      	b.n	801e6f4 <_fflush_r+0xc>
 801e740:	4b05      	ldr	r3, [pc, #20]	; (801e758 <_fflush_r+0x70>)
 801e742:	429c      	cmp	r4, r3
 801e744:	d101      	bne.n	801e74a <_fflush_r+0x62>
 801e746:	68ac      	ldr	r4, [r5, #8]
 801e748:	e7df      	b.n	801e70a <_fflush_r+0x22>
 801e74a:	4b04      	ldr	r3, [pc, #16]	; (801e75c <_fflush_r+0x74>)
 801e74c:	429c      	cmp	r4, r3
 801e74e:	bf08      	it	eq
 801e750:	68ec      	ldreq	r4, [r5, #12]
 801e752:	e7da      	b.n	801e70a <_fflush_r+0x22>
 801e754:	0802250c 	.word	0x0802250c
 801e758:	0802252c 	.word	0x0802252c
 801e75c:	080224ec 	.word	0x080224ec

0801e760 <std>:
 801e760:	2300      	movs	r3, #0
 801e762:	b510      	push	{r4, lr}
 801e764:	4604      	mov	r4, r0
 801e766:	e9c0 3300 	strd	r3, r3, [r0]
 801e76a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801e76e:	6083      	str	r3, [r0, #8]
 801e770:	8181      	strh	r1, [r0, #12]
 801e772:	6643      	str	r3, [r0, #100]	; 0x64
 801e774:	81c2      	strh	r2, [r0, #14]
 801e776:	6183      	str	r3, [r0, #24]
 801e778:	4619      	mov	r1, r3
 801e77a:	2208      	movs	r2, #8
 801e77c:	305c      	adds	r0, #92	; 0x5c
 801e77e:	f7ff f9e1 	bl	801db44 <memset>
 801e782:	4b05      	ldr	r3, [pc, #20]	; (801e798 <std+0x38>)
 801e784:	6263      	str	r3, [r4, #36]	; 0x24
 801e786:	4b05      	ldr	r3, [pc, #20]	; (801e79c <std+0x3c>)
 801e788:	62a3      	str	r3, [r4, #40]	; 0x28
 801e78a:	4b05      	ldr	r3, [pc, #20]	; (801e7a0 <std+0x40>)
 801e78c:	62e3      	str	r3, [r4, #44]	; 0x2c
 801e78e:	4b05      	ldr	r3, [pc, #20]	; (801e7a4 <std+0x44>)
 801e790:	6224      	str	r4, [r4, #32]
 801e792:	6323      	str	r3, [r4, #48]	; 0x30
 801e794:	bd10      	pop	{r4, pc}
 801e796:	bf00      	nop
 801e798:	0801ea35 	.word	0x0801ea35
 801e79c:	0801ea57 	.word	0x0801ea57
 801e7a0:	0801ea8f 	.word	0x0801ea8f
 801e7a4:	0801eab3 	.word	0x0801eab3

0801e7a8 <_cleanup_r>:
 801e7a8:	4901      	ldr	r1, [pc, #4]	; (801e7b0 <_cleanup_r+0x8>)
 801e7aa:	f000 b8af 	b.w	801e90c <_fwalk_reent>
 801e7ae:	bf00      	nop
 801e7b0:	0801e6e9 	.word	0x0801e6e9

0801e7b4 <__sfmoreglue>:
 801e7b4:	b570      	push	{r4, r5, r6, lr}
 801e7b6:	2268      	movs	r2, #104	; 0x68
 801e7b8:	1e4d      	subs	r5, r1, #1
 801e7ba:	4355      	muls	r5, r2
 801e7bc:	460e      	mov	r6, r1
 801e7be:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801e7c2:	f7ff fa33 	bl	801dc2c <_malloc_r>
 801e7c6:	4604      	mov	r4, r0
 801e7c8:	b140      	cbz	r0, 801e7dc <__sfmoreglue+0x28>
 801e7ca:	2100      	movs	r1, #0
 801e7cc:	e9c0 1600 	strd	r1, r6, [r0]
 801e7d0:	300c      	adds	r0, #12
 801e7d2:	60a0      	str	r0, [r4, #8]
 801e7d4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801e7d8:	f7ff f9b4 	bl	801db44 <memset>
 801e7dc:	4620      	mov	r0, r4
 801e7de:	bd70      	pop	{r4, r5, r6, pc}

0801e7e0 <__sfp_lock_acquire>:
 801e7e0:	4801      	ldr	r0, [pc, #4]	; (801e7e8 <__sfp_lock_acquire+0x8>)
 801e7e2:	f000 b8b3 	b.w	801e94c <__retarget_lock_acquire_recursive>
 801e7e6:	bf00      	nop
 801e7e8:	2002719e 	.word	0x2002719e

0801e7ec <__sfp_lock_release>:
 801e7ec:	4801      	ldr	r0, [pc, #4]	; (801e7f4 <__sfp_lock_release+0x8>)
 801e7ee:	f000 b8af 	b.w	801e950 <__retarget_lock_release_recursive>
 801e7f2:	bf00      	nop
 801e7f4:	2002719e 	.word	0x2002719e

0801e7f8 <__sinit_lock_acquire>:
 801e7f8:	4801      	ldr	r0, [pc, #4]	; (801e800 <__sinit_lock_acquire+0x8>)
 801e7fa:	f000 b8a7 	b.w	801e94c <__retarget_lock_acquire_recursive>
 801e7fe:	bf00      	nop
 801e800:	2002719f 	.word	0x2002719f

0801e804 <__sinit_lock_release>:
 801e804:	4801      	ldr	r0, [pc, #4]	; (801e80c <__sinit_lock_release+0x8>)
 801e806:	f000 b8a3 	b.w	801e950 <__retarget_lock_release_recursive>
 801e80a:	bf00      	nop
 801e80c:	2002719f 	.word	0x2002719f

0801e810 <__sinit>:
 801e810:	b510      	push	{r4, lr}
 801e812:	4604      	mov	r4, r0
 801e814:	f7ff fff0 	bl	801e7f8 <__sinit_lock_acquire>
 801e818:	69a3      	ldr	r3, [r4, #24]
 801e81a:	b11b      	cbz	r3, 801e824 <__sinit+0x14>
 801e81c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e820:	f7ff bff0 	b.w	801e804 <__sinit_lock_release>
 801e824:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801e828:	6523      	str	r3, [r4, #80]	; 0x50
 801e82a:	4b13      	ldr	r3, [pc, #76]	; (801e878 <__sinit+0x68>)
 801e82c:	4a13      	ldr	r2, [pc, #76]	; (801e87c <__sinit+0x6c>)
 801e82e:	681b      	ldr	r3, [r3, #0]
 801e830:	62a2      	str	r2, [r4, #40]	; 0x28
 801e832:	42a3      	cmp	r3, r4
 801e834:	bf04      	itt	eq
 801e836:	2301      	moveq	r3, #1
 801e838:	61a3      	streq	r3, [r4, #24]
 801e83a:	4620      	mov	r0, r4
 801e83c:	f000 f820 	bl	801e880 <__sfp>
 801e840:	6060      	str	r0, [r4, #4]
 801e842:	4620      	mov	r0, r4
 801e844:	f000 f81c 	bl	801e880 <__sfp>
 801e848:	60a0      	str	r0, [r4, #8]
 801e84a:	4620      	mov	r0, r4
 801e84c:	f000 f818 	bl	801e880 <__sfp>
 801e850:	2200      	movs	r2, #0
 801e852:	60e0      	str	r0, [r4, #12]
 801e854:	2104      	movs	r1, #4
 801e856:	6860      	ldr	r0, [r4, #4]
 801e858:	f7ff ff82 	bl	801e760 <std>
 801e85c:	68a0      	ldr	r0, [r4, #8]
 801e85e:	2201      	movs	r2, #1
 801e860:	2109      	movs	r1, #9
 801e862:	f7ff ff7d 	bl	801e760 <std>
 801e866:	68e0      	ldr	r0, [r4, #12]
 801e868:	2202      	movs	r2, #2
 801e86a:	2112      	movs	r1, #18
 801e86c:	f7ff ff78 	bl	801e760 <std>
 801e870:	2301      	movs	r3, #1
 801e872:	61a3      	str	r3, [r4, #24]
 801e874:	e7d2      	b.n	801e81c <__sinit+0xc>
 801e876:	bf00      	nop
 801e878:	080224b0 	.word	0x080224b0
 801e87c:	0801e7a9 	.word	0x0801e7a9

0801e880 <__sfp>:
 801e880:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e882:	4607      	mov	r7, r0
 801e884:	f7ff ffac 	bl	801e7e0 <__sfp_lock_acquire>
 801e888:	4b1e      	ldr	r3, [pc, #120]	; (801e904 <__sfp+0x84>)
 801e88a:	681e      	ldr	r6, [r3, #0]
 801e88c:	69b3      	ldr	r3, [r6, #24]
 801e88e:	b913      	cbnz	r3, 801e896 <__sfp+0x16>
 801e890:	4630      	mov	r0, r6
 801e892:	f7ff ffbd 	bl	801e810 <__sinit>
 801e896:	3648      	adds	r6, #72	; 0x48
 801e898:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801e89c:	3b01      	subs	r3, #1
 801e89e:	d503      	bpl.n	801e8a8 <__sfp+0x28>
 801e8a0:	6833      	ldr	r3, [r6, #0]
 801e8a2:	b30b      	cbz	r3, 801e8e8 <__sfp+0x68>
 801e8a4:	6836      	ldr	r6, [r6, #0]
 801e8a6:	e7f7      	b.n	801e898 <__sfp+0x18>
 801e8a8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801e8ac:	b9d5      	cbnz	r5, 801e8e4 <__sfp+0x64>
 801e8ae:	4b16      	ldr	r3, [pc, #88]	; (801e908 <__sfp+0x88>)
 801e8b0:	60e3      	str	r3, [r4, #12]
 801e8b2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801e8b6:	6665      	str	r5, [r4, #100]	; 0x64
 801e8b8:	f000 f847 	bl	801e94a <__retarget_lock_init_recursive>
 801e8bc:	f7ff ff96 	bl	801e7ec <__sfp_lock_release>
 801e8c0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801e8c4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801e8c8:	6025      	str	r5, [r4, #0]
 801e8ca:	61a5      	str	r5, [r4, #24]
 801e8cc:	2208      	movs	r2, #8
 801e8ce:	4629      	mov	r1, r5
 801e8d0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801e8d4:	f7ff f936 	bl	801db44 <memset>
 801e8d8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801e8dc:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801e8e0:	4620      	mov	r0, r4
 801e8e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801e8e4:	3468      	adds	r4, #104	; 0x68
 801e8e6:	e7d9      	b.n	801e89c <__sfp+0x1c>
 801e8e8:	2104      	movs	r1, #4
 801e8ea:	4638      	mov	r0, r7
 801e8ec:	f7ff ff62 	bl	801e7b4 <__sfmoreglue>
 801e8f0:	4604      	mov	r4, r0
 801e8f2:	6030      	str	r0, [r6, #0]
 801e8f4:	2800      	cmp	r0, #0
 801e8f6:	d1d5      	bne.n	801e8a4 <__sfp+0x24>
 801e8f8:	f7ff ff78 	bl	801e7ec <__sfp_lock_release>
 801e8fc:	230c      	movs	r3, #12
 801e8fe:	603b      	str	r3, [r7, #0]
 801e900:	e7ee      	b.n	801e8e0 <__sfp+0x60>
 801e902:	bf00      	nop
 801e904:	080224b0 	.word	0x080224b0
 801e908:	ffff0001 	.word	0xffff0001

0801e90c <_fwalk_reent>:
 801e90c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801e910:	4606      	mov	r6, r0
 801e912:	4688      	mov	r8, r1
 801e914:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801e918:	2700      	movs	r7, #0
 801e91a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801e91e:	f1b9 0901 	subs.w	r9, r9, #1
 801e922:	d505      	bpl.n	801e930 <_fwalk_reent+0x24>
 801e924:	6824      	ldr	r4, [r4, #0]
 801e926:	2c00      	cmp	r4, #0
 801e928:	d1f7      	bne.n	801e91a <_fwalk_reent+0xe>
 801e92a:	4638      	mov	r0, r7
 801e92c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801e930:	89ab      	ldrh	r3, [r5, #12]
 801e932:	2b01      	cmp	r3, #1
 801e934:	d907      	bls.n	801e946 <_fwalk_reent+0x3a>
 801e936:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801e93a:	3301      	adds	r3, #1
 801e93c:	d003      	beq.n	801e946 <_fwalk_reent+0x3a>
 801e93e:	4629      	mov	r1, r5
 801e940:	4630      	mov	r0, r6
 801e942:	47c0      	blx	r8
 801e944:	4307      	orrs	r7, r0
 801e946:	3568      	adds	r5, #104	; 0x68
 801e948:	e7e9      	b.n	801e91e <_fwalk_reent+0x12>

0801e94a <__retarget_lock_init_recursive>:
 801e94a:	4770      	bx	lr

0801e94c <__retarget_lock_acquire_recursive>:
 801e94c:	4770      	bx	lr

0801e94e <__retarget_lock_release>:
 801e94e:	4770      	bx	lr

0801e950 <__retarget_lock_release_recursive>:
 801e950:	4770      	bx	lr

0801e952 <__swhatbuf_r>:
 801e952:	b570      	push	{r4, r5, r6, lr}
 801e954:	460e      	mov	r6, r1
 801e956:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801e95a:	2900      	cmp	r1, #0
 801e95c:	b096      	sub	sp, #88	; 0x58
 801e95e:	4614      	mov	r4, r2
 801e960:	461d      	mov	r5, r3
 801e962:	da08      	bge.n	801e976 <__swhatbuf_r+0x24>
 801e964:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 801e968:	2200      	movs	r2, #0
 801e96a:	602a      	str	r2, [r5, #0]
 801e96c:	061a      	lsls	r2, r3, #24
 801e96e:	d410      	bmi.n	801e992 <__swhatbuf_r+0x40>
 801e970:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801e974:	e00e      	b.n	801e994 <__swhatbuf_r+0x42>
 801e976:	466a      	mov	r2, sp
 801e978:	f000 f8c2 	bl	801eb00 <_fstat_r>
 801e97c:	2800      	cmp	r0, #0
 801e97e:	dbf1      	blt.n	801e964 <__swhatbuf_r+0x12>
 801e980:	9a01      	ldr	r2, [sp, #4]
 801e982:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801e986:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801e98a:	425a      	negs	r2, r3
 801e98c:	415a      	adcs	r2, r3
 801e98e:	602a      	str	r2, [r5, #0]
 801e990:	e7ee      	b.n	801e970 <__swhatbuf_r+0x1e>
 801e992:	2340      	movs	r3, #64	; 0x40
 801e994:	2000      	movs	r0, #0
 801e996:	6023      	str	r3, [r4, #0]
 801e998:	b016      	add	sp, #88	; 0x58
 801e99a:	bd70      	pop	{r4, r5, r6, pc}

0801e99c <__smakebuf_r>:
 801e99c:	898b      	ldrh	r3, [r1, #12]
 801e99e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801e9a0:	079d      	lsls	r5, r3, #30
 801e9a2:	4606      	mov	r6, r0
 801e9a4:	460c      	mov	r4, r1
 801e9a6:	d507      	bpl.n	801e9b8 <__smakebuf_r+0x1c>
 801e9a8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801e9ac:	6023      	str	r3, [r4, #0]
 801e9ae:	6123      	str	r3, [r4, #16]
 801e9b0:	2301      	movs	r3, #1
 801e9b2:	6163      	str	r3, [r4, #20]
 801e9b4:	b002      	add	sp, #8
 801e9b6:	bd70      	pop	{r4, r5, r6, pc}
 801e9b8:	ab01      	add	r3, sp, #4
 801e9ba:	466a      	mov	r2, sp
 801e9bc:	f7ff ffc9 	bl	801e952 <__swhatbuf_r>
 801e9c0:	9900      	ldr	r1, [sp, #0]
 801e9c2:	4605      	mov	r5, r0
 801e9c4:	4630      	mov	r0, r6
 801e9c6:	f7ff f931 	bl	801dc2c <_malloc_r>
 801e9ca:	b948      	cbnz	r0, 801e9e0 <__smakebuf_r+0x44>
 801e9cc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801e9d0:	059a      	lsls	r2, r3, #22
 801e9d2:	d4ef      	bmi.n	801e9b4 <__smakebuf_r+0x18>
 801e9d4:	f023 0303 	bic.w	r3, r3, #3
 801e9d8:	f043 0302 	orr.w	r3, r3, #2
 801e9dc:	81a3      	strh	r3, [r4, #12]
 801e9de:	e7e3      	b.n	801e9a8 <__smakebuf_r+0xc>
 801e9e0:	4b0d      	ldr	r3, [pc, #52]	; (801ea18 <__smakebuf_r+0x7c>)
 801e9e2:	62b3      	str	r3, [r6, #40]	; 0x28
 801e9e4:	89a3      	ldrh	r3, [r4, #12]
 801e9e6:	6020      	str	r0, [r4, #0]
 801e9e8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801e9ec:	81a3      	strh	r3, [r4, #12]
 801e9ee:	9b00      	ldr	r3, [sp, #0]
 801e9f0:	6163      	str	r3, [r4, #20]
 801e9f2:	9b01      	ldr	r3, [sp, #4]
 801e9f4:	6120      	str	r0, [r4, #16]
 801e9f6:	b15b      	cbz	r3, 801ea10 <__smakebuf_r+0x74>
 801e9f8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801e9fc:	4630      	mov	r0, r6
 801e9fe:	f000 f891 	bl	801eb24 <_isatty_r>
 801ea02:	b128      	cbz	r0, 801ea10 <__smakebuf_r+0x74>
 801ea04:	89a3      	ldrh	r3, [r4, #12]
 801ea06:	f023 0303 	bic.w	r3, r3, #3
 801ea0a:	f043 0301 	orr.w	r3, r3, #1
 801ea0e:	81a3      	strh	r3, [r4, #12]
 801ea10:	89a0      	ldrh	r0, [r4, #12]
 801ea12:	4305      	orrs	r5, r0
 801ea14:	81a5      	strh	r5, [r4, #12]
 801ea16:	e7cd      	b.n	801e9b4 <__smakebuf_r+0x18>
 801ea18:	0801e7a9 	.word	0x0801e7a9

0801ea1c <__malloc_lock>:
 801ea1c:	4801      	ldr	r0, [pc, #4]	; (801ea24 <__malloc_lock+0x8>)
 801ea1e:	f7ff bf95 	b.w	801e94c <__retarget_lock_acquire_recursive>
 801ea22:	bf00      	nop
 801ea24:	2002719d 	.word	0x2002719d

0801ea28 <__malloc_unlock>:
 801ea28:	4801      	ldr	r0, [pc, #4]	; (801ea30 <__malloc_unlock+0x8>)
 801ea2a:	f7ff bf91 	b.w	801e950 <__retarget_lock_release_recursive>
 801ea2e:	bf00      	nop
 801ea30:	2002719d 	.word	0x2002719d

0801ea34 <__sread>:
 801ea34:	b510      	push	{r4, lr}
 801ea36:	460c      	mov	r4, r1
 801ea38:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ea3c:	f000 f894 	bl	801eb68 <_read_r>
 801ea40:	2800      	cmp	r0, #0
 801ea42:	bfab      	itete	ge
 801ea44:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801ea46:	89a3      	ldrhlt	r3, [r4, #12]
 801ea48:	181b      	addge	r3, r3, r0
 801ea4a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801ea4e:	bfac      	ite	ge
 801ea50:	6563      	strge	r3, [r4, #84]	; 0x54
 801ea52:	81a3      	strhlt	r3, [r4, #12]
 801ea54:	bd10      	pop	{r4, pc}

0801ea56 <__swrite>:
 801ea56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ea5a:	461f      	mov	r7, r3
 801ea5c:	898b      	ldrh	r3, [r1, #12]
 801ea5e:	05db      	lsls	r3, r3, #23
 801ea60:	4605      	mov	r5, r0
 801ea62:	460c      	mov	r4, r1
 801ea64:	4616      	mov	r6, r2
 801ea66:	d505      	bpl.n	801ea74 <__swrite+0x1e>
 801ea68:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ea6c:	2302      	movs	r3, #2
 801ea6e:	2200      	movs	r2, #0
 801ea70:	f000 f868 	bl	801eb44 <_lseek_r>
 801ea74:	89a3      	ldrh	r3, [r4, #12]
 801ea76:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801ea7a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801ea7e:	81a3      	strh	r3, [r4, #12]
 801ea80:	4632      	mov	r2, r6
 801ea82:	463b      	mov	r3, r7
 801ea84:	4628      	mov	r0, r5
 801ea86:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ea8a:	f000 b817 	b.w	801eabc <_write_r>

0801ea8e <__sseek>:
 801ea8e:	b510      	push	{r4, lr}
 801ea90:	460c      	mov	r4, r1
 801ea92:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ea96:	f000 f855 	bl	801eb44 <_lseek_r>
 801ea9a:	1c43      	adds	r3, r0, #1
 801ea9c:	89a3      	ldrh	r3, [r4, #12]
 801ea9e:	bf15      	itete	ne
 801eaa0:	6560      	strne	r0, [r4, #84]	; 0x54
 801eaa2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801eaa6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801eaaa:	81a3      	strheq	r3, [r4, #12]
 801eaac:	bf18      	it	ne
 801eaae:	81a3      	strhne	r3, [r4, #12]
 801eab0:	bd10      	pop	{r4, pc}

0801eab2 <__sclose>:
 801eab2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801eab6:	f000 b813 	b.w	801eae0 <_close_r>
	...

0801eabc <_write_r>:
 801eabc:	b538      	push	{r3, r4, r5, lr}
 801eabe:	4d07      	ldr	r5, [pc, #28]	; (801eadc <_write_r+0x20>)
 801eac0:	4604      	mov	r4, r0
 801eac2:	4608      	mov	r0, r1
 801eac4:	4611      	mov	r1, r2
 801eac6:	2200      	movs	r2, #0
 801eac8:	602a      	str	r2, [r5, #0]
 801eaca:	461a      	mov	r2, r3
 801eacc:	f7e2 fdbd 	bl	800164a <_write>
 801ead0:	1c43      	adds	r3, r0, #1
 801ead2:	d102      	bne.n	801eada <_write_r+0x1e>
 801ead4:	682b      	ldr	r3, [r5, #0]
 801ead6:	b103      	cbz	r3, 801eada <_write_r+0x1e>
 801ead8:	6023      	str	r3, [r4, #0]
 801eada:	bd38      	pop	{r3, r4, r5, pc}
 801eadc:	200271a0 	.word	0x200271a0

0801eae0 <_close_r>:
 801eae0:	b538      	push	{r3, r4, r5, lr}
 801eae2:	4d06      	ldr	r5, [pc, #24]	; (801eafc <_close_r+0x1c>)
 801eae4:	2300      	movs	r3, #0
 801eae6:	4604      	mov	r4, r0
 801eae8:	4608      	mov	r0, r1
 801eaea:	602b      	str	r3, [r5, #0]
 801eaec:	f7e2 fdc9 	bl	8001682 <_close>
 801eaf0:	1c43      	adds	r3, r0, #1
 801eaf2:	d102      	bne.n	801eafa <_close_r+0x1a>
 801eaf4:	682b      	ldr	r3, [r5, #0]
 801eaf6:	b103      	cbz	r3, 801eafa <_close_r+0x1a>
 801eaf8:	6023      	str	r3, [r4, #0]
 801eafa:	bd38      	pop	{r3, r4, r5, pc}
 801eafc:	200271a0 	.word	0x200271a0

0801eb00 <_fstat_r>:
 801eb00:	b538      	push	{r3, r4, r5, lr}
 801eb02:	4d07      	ldr	r5, [pc, #28]	; (801eb20 <_fstat_r+0x20>)
 801eb04:	2300      	movs	r3, #0
 801eb06:	4604      	mov	r4, r0
 801eb08:	4608      	mov	r0, r1
 801eb0a:	4611      	mov	r1, r2
 801eb0c:	602b      	str	r3, [r5, #0]
 801eb0e:	f7e2 fdc4 	bl	800169a <_fstat>
 801eb12:	1c43      	adds	r3, r0, #1
 801eb14:	d102      	bne.n	801eb1c <_fstat_r+0x1c>
 801eb16:	682b      	ldr	r3, [r5, #0]
 801eb18:	b103      	cbz	r3, 801eb1c <_fstat_r+0x1c>
 801eb1a:	6023      	str	r3, [r4, #0]
 801eb1c:	bd38      	pop	{r3, r4, r5, pc}
 801eb1e:	bf00      	nop
 801eb20:	200271a0 	.word	0x200271a0

0801eb24 <_isatty_r>:
 801eb24:	b538      	push	{r3, r4, r5, lr}
 801eb26:	4d06      	ldr	r5, [pc, #24]	; (801eb40 <_isatty_r+0x1c>)
 801eb28:	2300      	movs	r3, #0
 801eb2a:	4604      	mov	r4, r0
 801eb2c:	4608      	mov	r0, r1
 801eb2e:	602b      	str	r3, [r5, #0]
 801eb30:	f7e2 fdc3 	bl	80016ba <_isatty>
 801eb34:	1c43      	adds	r3, r0, #1
 801eb36:	d102      	bne.n	801eb3e <_isatty_r+0x1a>
 801eb38:	682b      	ldr	r3, [r5, #0]
 801eb3a:	b103      	cbz	r3, 801eb3e <_isatty_r+0x1a>
 801eb3c:	6023      	str	r3, [r4, #0]
 801eb3e:	bd38      	pop	{r3, r4, r5, pc}
 801eb40:	200271a0 	.word	0x200271a0

0801eb44 <_lseek_r>:
 801eb44:	b538      	push	{r3, r4, r5, lr}
 801eb46:	4d07      	ldr	r5, [pc, #28]	; (801eb64 <_lseek_r+0x20>)
 801eb48:	4604      	mov	r4, r0
 801eb4a:	4608      	mov	r0, r1
 801eb4c:	4611      	mov	r1, r2
 801eb4e:	2200      	movs	r2, #0
 801eb50:	602a      	str	r2, [r5, #0]
 801eb52:	461a      	mov	r2, r3
 801eb54:	f7e2 fdbc 	bl	80016d0 <_lseek>
 801eb58:	1c43      	adds	r3, r0, #1
 801eb5a:	d102      	bne.n	801eb62 <_lseek_r+0x1e>
 801eb5c:	682b      	ldr	r3, [r5, #0]
 801eb5e:	b103      	cbz	r3, 801eb62 <_lseek_r+0x1e>
 801eb60:	6023      	str	r3, [r4, #0]
 801eb62:	bd38      	pop	{r3, r4, r5, pc}
 801eb64:	200271a0 	.word	0x200271a0

0801eb68 <_read_r>:
 801eb68:	b538      	push	{r3, r4, r5, lr}
 801eb6a:	4d07      	ldr	r5, [pc, #28]	; (801eb88 <_read_r+0x20>)
 801eb6c:	4604      	mov	r4, r0
 801eb6e:	4608      	mov	r0, r1
 801eb70:	4611      	mov	r1, r2
 801eb72:	2200      	movs	r2, #0
 801eb74:	602a      	str	r2, [r5, #0]
 801eb76:	461a      	mov	r2, r3
 801eb78:	f7e2 fd4a 	bl	8001610 <_read>
 801eb7c:	1c43      	adds	r3, r0, #1
 801eb7e:	d102      	bne.n	801eb86 <_read_r+0x1e>
 801eb80:	682b      	ldr	r3, [r5, #0]
 801eb82:	b103      	cbz	r3, 801eb86 <_read_r+0x1e>
 801eb84:	6023      	str	r3, [r4, #0]
 801eb86:	bd38      	pop	{r3, r4, r5, pc}
 801eb88:	200271a0 	.word	0x200271a0

0801eb8c <_init>:
 801eb8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801eb8e:	bf00      	nop
 801eb90:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801eb92:	bc08      	pop	{r3}
 801eb94:	469e      	mov	lr, r3
 801eb96:	4770      	bx	lr

0801eb98 <_fini>:
 801eb98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801eb9a:	bf00      	nop
 801eb9c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801eb9e:	bc08      	pop	{r3}
 801eba0:	469e      	mov	lr, r3
 801eba2:	4770      	bx	lr
