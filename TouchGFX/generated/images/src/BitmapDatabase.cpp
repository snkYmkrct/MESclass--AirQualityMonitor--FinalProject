// 4.19.1 0xc45949d0
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_air_pollution_1_mic[]; // BITMAP_AIR_POLLUTION_1_MIC_ID = 0, Size: 50x50 pixels
extern const unsigned char image_background[]; // BITMAP_BACKGROUND_ID = 1, Size: 346x240 pixels
extern const unsigned char image_background_gray[]; // BITMAP_BACKGROUND_GRAY_ID = 2, Size: 360x240 pixels
extern const unsigned char image_battery_3q_mic[]; // BITMAP_BATTERY_3Q_MIC_ID = 3, Size: 40x40 pixels
extern const unsigned char image_battery_full_mic[]; // BITMAP_BATTERY_FULL_MIC_ID = 4, Size: 40x40 pixels
extern const unsigned char image_battery_half_mic[]; // BITMAP_BATTERY_HALF_MIC_ID = 5, Size: 40x40 pixels
extern const unsigned char image_battery_low_mic[]; // BITMAP_BATTERY_LOW_MIC_ID = 6, Size: 40x40 pixels
extern const unsigned char image_co2_mic[]; // BITMAP_CO2_MIC_ID = 7, Size: 50x35 pixels
extern const unsigned char image_dark_buttons_round_small[]; // BITMAP_DARK_BUTTONS_ROUND_SMALL_ID = 8, Size: 170x60 pixels
extern const unsigned char image_dark_buttons_round_small_pressed[]; // BITMAP_DARK_BUTTONS_ROUND_SMALL_PRESSED_ID = 9, Size: 170x60 pixels
extern const unsigned char image_humidity_2_mic[]; // BITMAP_HUMIDITY_2_MIC_ID = 10, Size: 40x40 pixels
extern const unsigned char image_thermometer_2_mic[]; // BITMAP_THERMOMETER_2_MIC_ID = 11, Size: 40x40 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_air_pollution_1_mic, 0, 50, 50, 17, 40, 16, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 5, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_background, 0, 346, 240, 0, 0, 346, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 240, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_background_gray, 0, 360, 240, 0, 0, 360, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 240, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_battery_3q_mic, 0, 40, 40, 34, 11, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 18, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_full_mic, 0, 40, 40, 27, 15, 3, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 10, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_half_mic, 0, 40, 40, 13, 15, 3, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 10, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_low_mic, 0, 40, 40, 6, 15, 3, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 10, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_co2_mic, 0, 50, 35, 35, 7, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_buttons_round_small, 0, 170, 60, 23, 5, 124, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 48, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_dark_buttons_round_small_pressed, 0, 170, 60, 23, 5, 124, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 48, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_humidity_2_mic, 0, 40, 40, 28, 11, 6, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 10, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_thermometer_2_mic, 0, 40, 40, 10, 2, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 36, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
